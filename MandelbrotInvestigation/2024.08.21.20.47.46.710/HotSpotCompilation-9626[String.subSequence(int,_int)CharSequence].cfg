begin_compilation
  name " HotSpotCompilation-9626[java.lang.String.subSequence(int, int)]"
  method "HotSpotCompilation-9626[java.lang.String.subSequence(int, int)]"
  date 1724269759693
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a438 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a438  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.lang.String
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 a105 v449 ?22 v447 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a438 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a438 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.String.substring(String.java:2833) [bci: 1]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v447 
lastLocationAccess: - 
=== Succesors ===
next: i439 
=== Usages ===
a117 v448 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v447 lastLocationAccess: - #next: i439  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v100 v10 v152 i23 v169 v41 v43 ?77 j382 i82 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v100 v14 ?22 i23 v43 v45 v65 ?77 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<String.subSequence(int, int)>
localsSize: 3
locksSize: 0
sourceFile: String.java
sourceLine: 2872
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 i3 
=== Succesors ===
=== Usages ===
v225 i439 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 i3  <|@  <|@
f <@~|@floating>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a438 
=== Succesors ===
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a438  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i439 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-30475|0xffffffffffff88f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.substring(String.java:2833) [bci: 1]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v448 
lastLocationAccess: - 
=== Succesors ===
next: v191 
=== Usages ===
i39 v65 i82 v289 j307 i151 a259 
=== Predecessor ===
a438 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v448 lastLocationAccess: - #next: v191  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.substring(String.java:2835) [bci: 12]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v10 v41 v48 v423 v148 ?22 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 1]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.substring(String.java:2834) [bci: 8]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i9 
=== Succesors ===
=== Usages ===
v191 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 1]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.substring(String.java:2834) [bci: 8]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v41 
=== Succesors ===
trueSuccessor: v189 
falseSuccessor: v190 
=== Usages ===
=== Predecessor ===
i439 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v41 #trueSuccessor: v189 #falseSuccessor: v190  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 1]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.substring(String.java:2834) [bci: 8]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v226 
=== Usages ===
=== Predecessor ===
v191 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v226  <|@  <|@
f <@~|@floating>@ <|@
tid i227 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.substring(String.java:2833) [bci: 1]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
rawvalue: -48147
stableDimension: 0
stamp: i32 [-48147]
stampKind: i32
value: int[-48147|0xffffffffffff43ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i223 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.substring(String.java:2833) [bci: 1]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v219 
=== Predecessor ===
v189 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 4]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.substring(String.java:2834) [bci: 8]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v195 
=== Usages ===
=== Predecessor ===
v191 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v195  <|@  <|@
f <@~|@floating>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 6]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.substring(String.java:2834) [bci: 8]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i2 
=== Succesors ===
=== Usages ===
v195 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 6]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.substring(String.java:2834) [bci: 8]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v43 
=== Succesors ===
trueSuccessor: v193 
falseSuccessor: v194 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v43 #trueSuccessor: v193 #falseSuccessor: v194  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 6]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.substring(String.java:2834) [bci: 8]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v228 
=== Usages ===
=== Predecessor ===
v195 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v228  <|@  <|@
f <@~|@floating>@ <|@
tid i229 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.substring(String.java:2833) [bci: 1]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
rawvalue: -49171
stableDimension: 0
stamp: i32 [-49171]
stampKind: i32
value: int[-49171|0xffffffffffff3fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i223 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.substring(String.java:2833) [bci: 1]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v219 
=== Predecessor ===
v193 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 9]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.substring(String.java:2834) [bci: 8]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: i440 
=== Usages ===
=== Predecessor ===
v195 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i440  <|@  <|@
f <@~|@floating>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i440 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i440 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.String.substring(String.java:2833) [bci: 1]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v449 
lastLocationAccess: - 
=== Succesors ===
next: v199 
=== Usages ===
i127 
=== Predecessor ===
v194 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v449 lastLocationAccess: - #next: v199  <|@  <|@
f <@~|@floating>@ <|@
tid i127 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.String.substring(String.java:2833) [bci: 1]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i440 
=== Succesors ===
=== Usages ===
i39 v48 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i440  <|@  <|@
f <@~|@floating>@ <|@
tid i39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 9]
at java.lang.String.substring(String.java:2833) [bci: 1]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i439 
y: i127 
=== Succesors ===
=== Usages ===
v14 v45 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i439 y: i127  <|@  <|@
f <@~|@floating>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 11]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.substring(String.java:2834) [bci: 8]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i39 
y: i3 
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i39 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 11]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.substring(String.java:2834) [bci: 8]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v45 
=== Succesors ===
trueSuccessor: v197 
falseSuccessor: v198 
=== Usages ===
=== Predecessor ===
i440 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v45 #trueSuccessor: v197 #falseSuccessor: v198  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 11]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.substring(String.java:2834) [bci: 8]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v230 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v230  <|@  <|@
f <@~|@floating>@ <|@
tid i231 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.substring(String.java:2833) [bci: 1]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
rawvalue: -50195
stableDimension: 0
stamp: i32 [-50195]
stampKind: i32
value: int[-50195|0xffffffffffff3bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i223 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.substring(String.java:2833) [bci: 1]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v219 
=== Predecessor ===
v197 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.substring(String.java:2833) [bci: 1]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: i32 [-50195 - -48147] bits:1...10xxxxx1111101101
valueDescription: i32
=== Inputs ===
merge: v219 
values: i227 i229 i231 
=== Succesors ===
=== Usages ===
v225 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v219 values: i227 i229 i231  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.substring(String.java:2833) [bci: 1]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v226 v228 v230 
=== Succesors ===
next: v225 
=== Usages ===
i223 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v226 v228 v230 #next: v225  <|@  <|@
f <@~|@floating>@ <|@
tid j114 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.String.substring(String.java:2833) [bci: 1]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
v225 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.substring(String.java:2833) [bci: 1]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i223 
speculation: j114 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v219 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i223 speculation: j114  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:350) [bci: 22]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.substring(String.java:2834) [bci: 8]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v13 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v13  <|@  <|@
f <@~|@floating>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.substring(String.java:2835) [bci: 12]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i9 
=== Succesors ===
=== Usages ===
v13 v63 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i2 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:2835) [bci: 12]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
profileData: PROFILED designatedSuccessorProbability: 0.6018906262441794
stamp: void
=== Inputs ===
condition: v10 
=== Succesors ===
trueSuccessor: v12 
falseSuccessor: v11 
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v10 #trueSuccessor: v12 #falseSuccessor: v11  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4603596568345418578
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.substring(String.java:2835) [bci: 15]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v20 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v20  <|@  <|@
f <@~|@floating>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.substring(String.java:2835) [bci: 17]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i39 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i3 y: i39  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:2835) [bci: 17]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
profileData: PROFILED designatedSuccessorProbability: 0.9663721533267153
stamp: void
=== Inputs ===
condition: v14 
=== Succesors ===
trueSuccessor: v18 
falseSuccessor: v19 
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v14 #trueSuccessor: v18 #falseSuccessor: v19  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603414260059205002
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.substring(String.java:2836) [bci: 20]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v104 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v104  <|@  <|@
f <@*|@fixed>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v103 
=== Predecessor ===
v18 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4581491086567258382
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.substring(String.java:2838) [bci: 22]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v17 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v17  <|@  <|@
f <@*|@fixed>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:2838) [bci: 22]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
v19 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600843320827103580
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.substring(String.java:2838) [bci: 22]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v15 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v15  <|@  <|@
f <@*|@fixed>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:2838) [bci: 22]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
v11 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B44" 
    xhandlers
    flags 
    probability 4601207937399530733
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.substring(String.java:2838) [bci: 22]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v15 v17 
=== Succesors ===
next: v26 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v15 v17 #next: v26  <|@  <|@
f <@~|@floating>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 10]
at java.lang.String.substring(String.java:2839) [bci: 28]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i127 
y: i9 
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i127 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid a117 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.String.substring(String.java:2833) [bci: 1]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a438 
=== Succesors ===
=== Usages ===
j301 v169 ?77 j381 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a438  <|@  <|@
f <@~|@floating>@ <|@
tid i23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:2838) [bci: 24]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: i32
=== Inputs ===
x: i3 
y: i2 
=== Succesors ===
=== Usages ===
v169 v368 v91 i92 v175 j312 a341 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i3 y: i2  <|@  <|@
tid ?102 <|@
d <@d|@=== Debug Properties ===
bci: 3
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<String.subSequence(int, int)>
localsSize: 3
locksSize: 0
sourceFile: String.java
sourceLine: 2872
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
?22 ?218 ?99 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:2839) [bci: 31]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
profileData: PROFILED designatedSuccessorProbability: 0.9999787285234901
stamp: void
=== Inputs ===
condition: v48 
=== Succesors ===
trueSuccessor: v24 
falseSuccessor: v25 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v48 #trueSuccessor: v24 #falseSuccessor: v25  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601207777090930452
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.substring(String.java:2839) [bci: 34]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v51 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v51  <|@  <|@
f <@~|@floating>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.StringLatin1.newString(StringLatin1.java:749) [bci: 1]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i3 
=== Succesors ===
=== Usages ===
v51 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i2 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.newString(StringLatin1.java:749) [bci: 1]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
profileData: PROFILED designatedSuccessorProbability: 0.00977198389730849
stamp: void
=== Inputs ===
condition: v100 
=== Succesors ===
trueSuccessor: v50 
falseSuccessor: v49 
=== Usages ===
=== Predecessor ===
v24 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v100 #trueSuccessor: v50 #falseSuccessor: v49  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B45" 
    xhandlers
    flags 
    probability 4571363187372395366
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.newString(StringLatin1.java:750) [bci: 4]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v106 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v106  <|@  <|@
f <@~|@floating>@ <|@
tid a52 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.newString(StringLatin1.java:750) [bci: 4]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
rawvalue: ""
stableDimension: 0
stamp: a!# java.lang.String
stampKind: a java.lang.Object
value: Object[String:""]
=== Inputs ===
=== Succesors ===
=== Usages ===
a105 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v103 
=== Predecessor ===
v50 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B22" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v63 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v63  <|@  <|@
f <@~|@floating>@ <|@
tid j222 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.substring(String.java:2833) [bci: 1]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v424 v237 v369 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?99 <|@
d <@d|@=== Debug Properties ===
bci: 41
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<String.substring(int, int)>
localsSize: 5
locksSize: 0
sourceFile: String.java
sourceLine: 2839
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?102 
=== Succesors ===
=== Usages ===
?54 ?93 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?102  <|@  <|@
tid a110 <|@
d <@d|@=== Debug Properties ===
fields: [HotSpotResolvedJavaFieldImpl<java.lang.String.hash int:12>, HotSpotResolvedJavaFieldImpl<java.lang.String.coder byte:16>, HotSpotResolvedJavaFieldImpl<java.lang.String.hashIsZero boolean:17>, HotSpotResolvedJavaFieldImpl<java.lang.String.flags byte:18>, HotSpotResolvedJavaFieldImpl<java.lang.String.value byte[]:20>]
hasIdentity: true
nodeSourcePosition: at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
objectId: 0
stamp: a!# java.lang.String
type: HotSpotType<Ljava/lang/String;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?93 ?93 ?111 ?54 ?54 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@jdk.graal.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?111 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a110 
values: - - - - - 
=== Succesors ===
=== Usages ===
?54 ?77 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@jdk.graal.compiler.nodes.virtual.VirtualObjectState>@ object: a110 values: - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
rawvalue: meta{HotSpotType<[B, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<[B, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v288 v367 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j254 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.defaultPrototypeMarkWord(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:421) [bci: 9]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v284 v364 v419 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
rawvalue: meta{HotSpotType<[B, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[B, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a259 a341 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j268 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
rawvalue: 23
stableDimension: 0
stamp: i64 [23]
stampKind: i64
value: long[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
j269 j348 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j247 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:132) [bci: 23]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j248 j313 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3853) [bci: 1]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
profileData: PROFILED designatedSuccessorProbability: 0.7183170795883598
stamp: void
=== Inputs ===
condition: v10 
=== Succesors ===
trueSuccessor: v62 
falseSuccessor: v61 
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v10 #trueSuccessor: v62 #falseSuccessor: v61  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B21" 
    xhandlers
    flags 
    probability 4599032071156696725
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3853) [bci: 4]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v71 
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v71  <|@  <|@
f <@~|@floating>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3853) [bci: 7]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i439 
=== Succesors ===
=== Usages ===
v71 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i3 y: i439  <|@  <|@
f <@*|@fixed>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3853) [bci: 7]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
profileData: PROFILED designatedSuccessorProbability: 0.24957691254844944
stamp: void
=== Inputs ===
condition: v65 
=== Succesors ===
trueSuccessor: v69 
falseSuccessor: v70 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v65 #trueSuccessor: v69 #falseSuccessor: v70  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4590015800143340609
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 17]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v299 
=== Usages ===
=== Predecessor ===
v71 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v299  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: j243 
=== Usages ===
=== Predecessor ===
v69 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j243  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j243 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j281 
=== Usages ===
v451 v452 
=== Predecessor ===
v299 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j281  <|@  <|@
f <@~|@floating>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j243 
index: - 
=== Succesors ===
=== Usages ===
j281 v283 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j243 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j281 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v451 
lastLocationAccess: - 
=== Succesors ===
next: j282 
=== Usages ===
j249 v453 v454 a258 v458 v455 v456 v457 
=== Predecessor ===
j243 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v451 lastLocationAccess: - #next: j282  <|@  <|@
f <@~|@floating>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j243 
index: - 
=== Succesors ===
=== Usages ===
j282 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j243 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j282 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v452 
lastLocationAccess: - 
=== Succesors ===
next: v253 
=== Usages ===
v250 
=== Predecessor ===
j281 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v452 lastLocationAccess: - #next: v253  <|@  <|@
f <@~|@floating>@ <|@
tid j307 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i439 
=== Succesors ===
=== Usages ===
v308 j269 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i439  <|@  <|@
f <@~|@floating>@ <|@
tid j269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: i64 [23 - 2147483670] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j307 
y: j268 
=== Succesors ===
=== Usages ===
j248 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j307 y: j268  <|@  <|@
f <@~|@floating>@ <|@
tid j248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: i64 [0 - 2147483664] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j269 
y: j247 
=== Succesors ===
=== Usages ===
j249 v455 v456 v457 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j269 y: j247  <|@  <|@
f <@~|@floating>@ <|@
tid j249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: i64
=== Inputs ===
x: j248 
y: j281 
=== Succesors ===
=== Usages ===
v250 v283 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j248 y: j281  <|@  <|@
f <@~|@floating>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j282 
y: j249 
=== Succesors ===
=== Usages ===
v253 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j282 y: j249  <|@  <|@
f <@*|@fixed>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v250 
=== Succesors ===
trueSuccessor: v252 
falseSuccessor: v251 
=== Usages ===
=== Predecessor ===
j282 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v250 #trueSuccessor: v252 #falseSuccessor: v251  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4559988989006196334
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: a259 
=== Usages ===
=== Predecessor ===
v253 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a259  <|@  <|@
tid ?22 <|@
d <@d|@=== Debug Properties ===
bci: 22
bytecode: iload_2
code: ResolvedJavaMethodBytecode<String.substring(int, int)>
localsSize: 5
locksSize: 0
sourceFile: String.java
sourceLine: 2838
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?102 
values: a1 i9 i3 
=== Succesors ===
=== Usages ===
v442 a259 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?102 values: a1 i9 i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a259 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?22 
arguments: v242 i439 
=== Succesors ===
next: v442 
=== Usages ===
v442 a279 
=== Predecessor ===
v252 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?22 arguments: v242 i439 #next: v442  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-75633|0xfffffffffffed88f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?22 
object: a259 
=== Succesors ===
next: v263 
=== Usages ===
=== Predecessor ===
a259 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?22 object: a259 #next: v263  <|@  <|@
f <@*|@fixed>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v262 
=== Predecessor ===
v442 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589962286348538852
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v283 
=== Usages ===
=== Predecessor ===
v253 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v283  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v451 
lastLocationAccess: - 
value: j249 
stateAfter: - 
=== Succesors ===
next: v271 
=== Usages ===
=== Predecessor ===
v251 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v451 lastLocationAccess: - value: j249 stateAfter: - #next: v271  <|@  <|@
f <@~|@floating>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j248 
index: j281 
=== Succesors ===
=== Usages ===
v271 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j248 index: j281  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
address: v455 
=== Succesors ===
next: v274 
=== Usages ===
=== Predecessor ===
v283 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v455 #next: v274  <|@  <|@
f <@~|@floating>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j248 
index: j281 
=== Succesors ===
=== Usages ===
v274 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j248 index: j281  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
address: v456 
=== Succesors ===
next: v277 
=== Usages ===
=== Predecessor ===
v271 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v456 #next: v277  <|@  <|@
f <@~|@floating>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j248 
index: j281 
=== Succesors ===
=== Usages ===
v277 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j248 index: j281  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
address: v457 
=== Succesors ===
next: v284 
=== Usages ===
=== Predecessor ===
v274 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v457 #next: v284  <|@  <|@
f <@~|@floating>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j281 
index: - 
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j281 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v453 
lastLocationAccess: - 
value: j254 
stateAfter: - 
=== Succesors ===
next: v288 
=== Usages ===
=== Predecessor ===
v277 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v453 lastLocationAccess: - value: j254 stateAfter: - #next: v288  <|@  <|@
f <@~|@floating>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j281 
index: - 
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j281 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v458 
lastLocationAccess: - 
value: v436 
stateAfter: - 
=== Succesors ===
next: v289 
=== Usages ===
=== Predecessor ===
v284 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v458 lastLocationAccess: - value: v436 stateAfter: - #next: v289  <|@  <|@
f <@~|@floating>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j281 
index: - 
=== Succesors ===
=== Usages ===
v289 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j281 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v454 
lastLocationAccess: - 
value: i439 
stateAfter: - 
=== Succesors ===
next: v257 
=== Usages ===
=== Predecessor ===
v288 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v454 lastLocationAccess: - value: i439 stateAfter: - #next: v257  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: a258 
=== Usages ===
=== Predecessor ===
v289 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a258  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a258 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j281 
=== Succesors ===
next: v261 
=== Usages ===
a279 
=== Predecessor ===
v257 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j281 #next: v261  <|@  <|@
f <@*|@fixed>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v262 
=== Predecessor ===
a258 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B40" 
    xhandlers
    flags 
    probability 4590015800143340609
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v262 
values: a258 a259 
=== Succesors ===
=== Usages ===
j305 a135 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v262 values: a258 a259  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v261 v263 
=== Succesors ===
next: j301 
=== Usages ===
a279 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v261 v263 #next: j301  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j301 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: i64
=== Inputs ===
object: a117 
=== Succesors ===
next: j305 
=== Usages ===
v459 
=== Predecessor ===
v262 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a117 #next: j305  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j305 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: i64
=== Inputs ===
object: a279 
=== Succesors ===
next: v308 
=== Usages ===
v460 
=== Predecessor ===
j301 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a279 #next: v308  <|@  <|@
f <@~|@floating>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j301 
index: - 
=== Succesors ===
=== Usages ===
v308 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j301 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j305 
index: - 
=== Succesors ===
=== Usages ===
v308 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j305 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}
descriptorName: byteDisjointArraycopyKillInit
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v459 v460 j307 
=== Succesors ===
next: v134 
=== Usages ===
=== Predecessor ===
j305 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v459 v460 j307 #next: v134  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:80) [bci: 39] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: a135 
=== Usages ===
=== Predecessor ===
v308 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a135  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:81) [bci: 43] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: a!# byte[]
=== Inputs ===
object: a279 
=== Succesors ===
next: v96 
=== Usages ===
a97 
=== Predecessor ===
v134 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a279 #next: v96  <|@  <|@
f <@*|@fixed>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v95 
=== Predecessor ===
a135 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597213233028029193
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v68 
=== Usages ===
=== Predecessor ===
v71 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v68  <|@  <|@
f <@*|@fixed>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v67 
=== Predecessor ===
v70 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593072671573930308
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v66 
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v66  <|@  <|@
f <@*|@fixed>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v67 
=== Predecessor ===
v61 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v66 v68 
=== Succesors ===
next: v379 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v66 v68 #next: v379  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: j309 
=== Usages ===
=== Predecessor ===
v67 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j309  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j309 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j361 
=== Usages ===
v461 v462 
=== Predecessor ===
v379 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j361  <|@  <|@
f <@~|@floating>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j309 
index: - 
=== Succesors ===
=== Usages ===
j361 v363 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j309 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j361 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v461 
lastLocationAccess: - 
=== Succesors ===
next: j362 
=== Usages ===
j314 v463 v464 v465 a340 v466 v470 v467 v468 v469 
=== Predecessor ===
j309 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v461 lastLocationAccess: - #next: j362  <|@  <|@
f <@~|@floating>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j309 
index: - 
=== Succesors ===
=== Usages ===
j362 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j309 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j362 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v462 
lastLocationAccess: - 
=== Succesors ===
next: v318 
=== Usages ===
v315 
=== Predecessor ===
j361 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v462 lastLocationAccess: - #next: v318  <|@  <|@
f <@~|@floating>@ <|@
tid j312 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i23 
=== Succesors ===
=== Usages ===
j348 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i23  <|@  <|@
f <@~|@floating>@ <|@
tid j348 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: i64 [23 - 4294967318] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j312 
y: j268 
=== Succesors ===
=== Usages ===
j313 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j312 y: j268  <|@  <|@
f <@~|@floating>@ <|@
tid j313 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: i64 [0 - 4294967312] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j348 
y: j247 
=== Succesors ===
=== Usages ===
j314 v329 j350 v467 v468 v469 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j348 y: j247  <|@  <|@
f <@~|@floating>@ <|@
tid j314 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: i64
=== Inputs ===
x: j313 
y: j361 
=== Succesors ===
=== Usages ===
v315 v363 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j313 y: j361  <|@  <|@
f <@~|@floating>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j362 
y: j314 
=== Succesors ===
=== Usages ===
v318 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j362 y: j314  <|@  <|@
tid ?93 <|@
d <@d|@=== Debug Properties ===
bci: 16
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<StringLatin1.newString(byte[], int, int)>
localsSize: 3
locksSize: 0
sourceFile: StringLatin1.java
sourceLine: 752
stackSize: 2
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?99 
values: a110 a110 
=== Succesors ===
=== Usages ===
?77 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?99 values: a110 a110  <|@  <|@
tid ?77 <|@
d <@d|@=== Debug Properties ===
bci: 10
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Arrays.copyOfRange(byte[], int, int)>
localsSize: 3
locksSize: 0
sourceFile: Arrays.java
sourceLine: 3854
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?93 
values: a117 i2 i3 
virtualObjectMappings: ?111 
=== Succesors ===
=== Usages ===
v444 v237 a341 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?93 values: a117 i2 i3 virtualObjectMappings: ?111  <|@  <|@
f <@*|@fixed>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v315 
=== Succesors ===
trueSuccessor: v317 
falseSuccessor: v316 
=== Usages ===
=== Predecessor ===
j362 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v315 #trueSuccessor: v317 #falseSuccessor: v316  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B32" 
    xhandlers
    flags 
    probability 4569985998969753389
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: a341 
=== Usages ===
=== Predecessor ===
v318 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a341  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a341 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?77 
arguments: v242 i23 
=== Succesors ===
next: v444 
=== Usages ===
v444 a359 
=== Predecessor ===
v317 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?77 arguments: v242 i23 #next: v444  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-96113|0xfffffffffffe888f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?77 
object: a341 
=== Succesors ===
next: v345 
=== Usages ===
=== Predecessor ===
a341 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?77 object: a341 #next: v345  <|@  <|@
f <@*|@fixed>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v344 
=== Predecessor ===
v444 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4599735042323379768
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v363 
=== Usages ===
=== Predecessor ===
v318 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v363  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v461 
lastLocationAccess: - 
value: j314 
stateAfter: - 
=== Succesors ===
next: v354 
=== Usages ===
=== Predecessor ===
v316 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v461 lastLocationAccess: - value: j314 stateAfter: - #next: v354  <|@  <|@
f <@~|@floating>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j313 
index: j361 
=== Succesors ===
=== Usages ===
v354 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j313 index: j361  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
address: v467 
=== Succesors ===
next: v356 
=== Usages ===
=== Predecessor ===
v363 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v467 #next: v356  <|@  <|@
f <@~|@floating>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j313 
index: j361 
=== Succesors ===
=== Usages ===
v356 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j313 index: j361  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
address: v468 
=== Succesors ===
next: v358 
=== Usages ===
=== Predecessor ===
v354 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v468 #next: v358  <|@  <|@
f <@~|@floating>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j313 
index: j361 
=== Succesors ===
=== Usages ===
v358 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j313 index: j361  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
address: v469 
=== Succesors ===
next: v364 
=== Usages ===
=== Predecessor ===
v356 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v469 #next: v364  <|@  <|@
f <@~|@floating>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j361 
index: - 
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j361 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v463 
lastLocationAccess: - 
value: j254 
stateAfter: - 
=== Succesors ===
next: v367 
=== Usages ===
=== Predecessor ===
v358 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v463 lastLocationAccess: - value: j254 stateAfter: - #next: v367  <|@  <|@
f <@~|@floating>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j361 
index: - 
=== Succesors ===
=== Usages ===
v367 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j361 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v367 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v470 
lastLocationAccess: - 
value: v436 
stateAfter: - 
=== Succesors ===
next: v368 
=== Usages ===
=== Predecessor ===
v364 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v470 lastLocationAccess: - value: v436 stateAfter: - #next: v368  <|@  <|@
f <@~|@floating>@ <|@
tid v464 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j361 
index: - 
=== Succesors ===
=== Usages ===
v368 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j361 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v464 
lastLocationAccess: - 
value: i23 
stateAfter: - 
=== Succesors ===
next: v324 
=== Usages ===
=== Predecessor ===
v367 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v464 lastLocationAccess: - value: i23 stateAfter: - #next: v324  <|@  <|@
f <@~|@floating>@ <|@
tid j349 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
rawvalue: -16
stableDimension: 0
stamp: i64 [-16]
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j350 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j350 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: i64 [-16 - 4294967296] bits:x...x000
=== Inputs ===
x: j313 
y: j349 
=== Succesors ===
=== Usages ===
v321 v325 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j313 y: j349  <|@  <|@
f <@~|@floating>@ <|@
tid j351 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
rawvalue: 2048
stableDimension: 0
stamp: i64 [2048]
stampKind: i64
value: long[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j350 
y: j351 
=== Succesors ===
=== Usages ===
v324 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j350 y: j351  <|@  <|@
f <@*|@fixed>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 28]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v321 
=== Succesors ===
trueSuccessor: v323 
falseSuccessor: v322 
=== Usages ===
=== Predecessor ===
v368 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v321 #trueSuccessor: v323 #falseSuccessor: v322  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4599674408099325029
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:228) [bci: 62]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v326 
=== Usages ===
=== Predecessor ===
v324 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v326  <|@  <|@
f <@~|@floating>@ <|@
tid j286 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
rawvalue: 8
stableDimension: 0
stamp: i64 [8]
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j337 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j124 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.String.substring(String.java:2833) [bci: 1]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j328 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v327 
=== Predecessor ===
v323 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4629886495576233067
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v327 
values: j124 j337 
=== Succesors ===
=== Usages ===
v329 v465 j337 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v327 values: j124 j337  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 56
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v326 
=== Succesors ===
next: v335 
=== Usages ===
j328 v334 v338 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v326 #next: v335  <|@  <|@
f <@~|@floating>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 119]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j328 
y: j313 
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j328 y: j313  <|@  <|@
f <@*|@fixed>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 127]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v329 
=== Succesors ===
trueSuccessor: v330 
falseSuccessor: v334 
=== Usages ===
=== Predecessor ===
v327 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v329 #trueSuccessor: v330 #falseSuccessor: v334  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4629839598793565730
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 130]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v369 
=== Usages ===
=== Predecessor ===
v335 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v369  <|@  <|@
f <@~|@floating>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j361 
index: j328 
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j361 index: j328  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v465 
lastLocationAccess: - 
value: j222 
stateAfter: - 
=== Succesors ===
next: v338 
=== Usages ===
=== Predecessor ===
v330 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v465 lastLocationAccess: - value: j222 stateAfter: - #next: v338  <|@  <|@
f <@~|@floating>@ <|@
tid j337 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 144]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: i64
=== Inputs ===
x: j328 
y: j286 
=== Succesors ===
=== Usages ===
j328 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j328 y: j286  <|@  <|@
f <@*|@fixed>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
loopBegin: v327 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v369 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v327  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4599674408099325029
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v327 
=== Succesors ===
next: v333 
=== Usages ===
=== Predecessor ===
v335 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v327 #next: v333  <|@  <|@
f <@*|@fixed>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v332 
=== Predecessor ===
v334 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569907603205318980
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:225) [bci: 31]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v325 
=== Usages ===
=== Predecessor ===
v324 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v325  <|@  <|@
f <@~|@floating>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j361 
index: - 
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j361 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
isAligned: true
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ZeroMemoryNode.zero(Word, long, boolean, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:226) [bci: 56]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v466 
lastLocationAccess: - 
length: j350 
=== Succesors ===
next: v331 
=== Usages ===
=== Predecessor ===
v322 >@ <|@
instruction <@ZeroMemory|@jdk.graal.compiler.replacements.nodes.ZeroMemoryNode>@ stateBefore: - guard: - address: v466 lastLocationAccess: - length: j350 #next: v331  <|@  <|@
f <@*|@fixed>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v332 
=== Predecessor ===
v325 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599735042323379768
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v331 v333 
=== Succesors ===
next: v339 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v331 v333 #next: v339  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: a340 
=== Usages ===
=== Predecessor ===
v332 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a340  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j361 
=== Succesors ===
next: v343 
=== Usages ===
a359 
=== Predecessor ===
v339 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j361 #next: v343  <|@  <|@
f <@*|@fixed>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v344 
=== Predecessor ===
a340 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B24" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a359 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v344 
values: a340 a341 
=== Succesors ===
=== Usages ===
j386 a97 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v344 values: a340 a341  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v343 v345 
=== Succesors ===
next: v209 
=== Usages ===
a359 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v343 v345 #next: v209  <|@  <|@
f <@~|@floating>@ <|@
tid i82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 22]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: i32
=== Inputs ===
x: i439 
y: i2 
=== Succesors ===
=== Usages ===
v91 i92 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i439 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3865) [bci: 24]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i23 
y: i82 
=== Succesors ===
=== Usages ===
i92 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i23 y: i82  <|@  <|@
f <@~|@floating>@ <|@
tid i92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3865) [bci: 24]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: i32
=== Inputs ===
condition: v91 
trueValue: i23 
falseValue: i82 
=== Succesors ===
=== Usages ===
j388 v148 i151 v175 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v91 trueValue: i23 falseValue: i82  <|@  <|@
f <@~|@floating>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 89]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i92 
y: i9 
=== Succesors ===
=== Usages ===
v209 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i92 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v148 
=== Succesors ===
trueSuccessor: v207 
falseSuccessor: v208 
=== Usages ===
=== Predecessor ===
v344 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v148 #trueSuccessor: v207 #falseSuccessor: v208  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v233 
=== Usages ===
=== Predecessor ===
v209 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v233  <|@  <|@
f <@~|@floating>@ <|@
tid i234 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
rawvalue: -52761
stableDimension: 0
stamp: i32 [-52761]
stampKind: i32
value: int[-52761|0xffffffffffff31e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i235 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
v207 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:409) [bci: 120]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v213 
=== Usages ===
=== Predecessor ===
v209 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v213  <|@  <|@
f <@~|@floating>@ <|@
tid i151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 139]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: i32
=== Inputs ===
x: i439 
y: i92 
=== Succesors ===
=== Usages ===
v152 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i439 y: i92  <|@  <|@
f <@~|@floating>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 140]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i151 
y: i2 
=== Succesors ===
=== Usages ===
v213 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i151 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v152 
=== Succesors ===
trueSuccessor: v211 
falseSuccessor: v212 
=== Usages ===
=== Predecessor ===
v208 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v152 #trueSuccessor: v211 #falseSuccessor: v212  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v238 
=== Usages ===
=== Predecessor ===
v213 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v238  <|@  <|@
f <@~|@floating>@ <|@
tid i239 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
rawvalue: -53785
stableDimension: 0
stamp: i32 [-53785]
stampKind: i32
value: int[-53785|0xffffffffffff2de7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i235 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
v211 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 171]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v217 
=== Usages ===
=== Predecessor ===
v213 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v217  <|@  <|@
f <@~|@floating>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 181]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i23 
y: i92 
=== Succesors ===
=== Usages ===
v217 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i23 y: i92  <|@  <|@
f <@*|@fixed>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v175 
=== Succesors ===
trueSuccessor: v215 
falseSuccessor: v216 
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v175 #trueSuccessor: v215 #falseSuccessor: v216  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v240 
=== Usages ===
=== Predecessor ===
v217 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v240  <|@  <|@
f <@~|@floating>@ <|@
tid i241 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
rawvalue: -54809
stableDimension: 0
stamp: i32 [-54809]
stampKind: i32
value: int[-54809|0xffffffffffff29e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i235 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
v215 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i235 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: i32 [-54809 - -52761] bits:1...1001xxx0111100111
valueDescription: i32
=== Inputs ===
merge: v232 
values: i234 i239 i241 
=== Succesors ===
=== Usages ===
v237 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v232 values: i234 i239 i241  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v233 v238 v240 
=== Succesors ===
next: v237 
=== Usages ===
i235 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v233 v238 v240 #next: v237  <|@  <|@
f <@*|@fixed>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
stateBefore: ?77 
actionAndReason: i235 
speculation: j222 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v232 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?77 actionAndReason: i235 speculation: j222  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:418) [bci: 212]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: j381 
=== Usages ===
=== Predecessor ===
v217 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j381  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j381 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: i64
=== Inputs ===
object: a117 
=== Succesors ===
next: j386 
=== Usages ===
v471 
=== Predecessor ===
v216 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a117 #next: j386  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j386 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: i64
=== Inputs ===
object: a359 
=== Succesors ===
next: v389 
=== Usages ===
v472 
=== Predecessor ===
j381 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a359 #next: v389  <|@  <|@
f <@~|@floating>@ <|@
tid j382 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
v471 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i2  <|@  <|@
f <@~|@floating>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j381 
index: j382 
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j381 index: j382  <|@  <|@
f <@~|@floating>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j386 
index: - 
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j386 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j388 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i92 
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i92  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}
descriptorName: byteArraycopy
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v471 v472 j388 
=== Succesors ===
next: v98 
=== Usages ===
=== Predecessor ===
j386 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v471 v472 j388 #next: v98  <|@  <|@
f <@*|@fixed>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v95 
=== Predecessor ===
v389 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a97 <|@
d <@d|@=== Debug Properties ===
stamp: a!# byte[]
valueDescription: a java.lang.Object
=== Inputs ===
merge: v95 
values: a135 a359 
=== Succesors ===
=== Usages ===
?54 a202 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v95 values: a135 a359  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v96 v98 
=== Succesors ===
next: v434 
=== Usages ===
a97 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v96 v98 #next: v434  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: j392 
=== Usages ===
=== Predecessor ===
v95 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j392  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j392 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j416 
=== Usages ===
v473 v474 
=== Predecessor ===
v434 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j416  <|@  <|@
f <@~|@floating>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j392 
index: - 
=== Succesors ===
=== Usages ===
j416 v418 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j392 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j416 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v473 
lastLocationAccess: - 
=== Succesors ===
next: j417 
=== Usages ===
j395 v475 v476 a402 v477 v478 v479 
=== Predecessor ===
j392 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v473 lastLocationAccess: - #next: j417  <|@  <|@
f <@~|@floating>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j392 
index: - 
=== Succesors ===
=== Usages ===
j417 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j392 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j417 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v474 
lastLocationAccess: - 
=== Succesors ===
next: v399 
=== Usages ===
v396 
=== Predecessor ===
j416 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v474 lastLocationAccess: - #next: v399  <|@  <|@
f <@~|@floating>@ <|@
tid j391 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
rawvalue: 24
stableDimension: 0
stamp: i64 [24]
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j395 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 25]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: i64
=== Inputs ===
x: j416 
y: j391 
=== Succesors ===
=== Usages ===
v396 v418 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j416 y: j391  <|@  <|@
f <@~|@floating>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j417 
y: j395 
=== Succesors ===
=== Usages ===
v399 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j417 y: j395  <|@  <|@
f <@*|@fixed>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 69]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v396 
=== Succesors ===
trueSuccessor: v398 
falseSuccessor: v397 
=== Usages ===
=== Predecessor ===
j417 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v396 #trueSuccessor: v398 #falseSuccessor: v397  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4571426031092231524
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 111]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: a403 
=== Usages ===
=== Predecessor ===
v399 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a403  <|@  <|@
tid ?54 <|@
d <@d|@=== Debug Properties ===
bci: 19
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<StringLatin1.newString(byte[], int, int)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
sourceFile: StringLatin1.java
sourceLine: 752
stackSize: 3
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?99 
values: a110 a110 a97 
virtualObjectMappings: ?111 
=== Succesors ===
=== Usages ===
v446 a403 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?99 values: a110 a110 a97 virtualObjectMappings: ?111  <|@  <|@
f <@~|@floating>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/String;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a403 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a403 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newInstanceOrNull(ForeignCallDescriptor, KlassPointer) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewInstanceStub(HotSpotAllocationSnippets.java:340) [bci: 13]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:69) [bci: 126]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?54 
arguments: v390 
=== Succesors ===
next: v446 
=== Usages ===
v446 a414 
=== Predecessor ===
v398 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?54 arguments: v390 #next: v446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-110193|0xfffffffffffe518f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?54 
object: a403 
=== Succesors ===
next: v407 
=== Usages ===
=== Predecessor ===
a403 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?54 object: a403 #next: v407  <|@  <|@
f <@*|@fixed>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v406 
=== Predecessor ===
v446 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4601059508744723248
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v418 
=== Usages ===
=== Predecessor ===
v399 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v418  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 77]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v473 
lastLocationAccess: - 
value: j395 
stateAfter: - 
=== Succesors ===
next: v410 
=== Usages ===
=== Predecessor ===
v397 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v473 lastLocationAccess: - value: j395 stateAfter: - #next: v410  <|@  <|@
f <@~|@floating>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
displacement: 280
stamp: void*
stride: S1
=== Inputs ===
base: j416 
index: - 
=== Succesors ===
=== Usages ===
v410 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j416 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 84]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
address: v477 
=== Succesors ===
next: v419 
=== Usages ===
=== Predecessor ===
v418 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v477 #next: v419  <|@  <|@
f <@~|@floating>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j416 
index: - 
=== Succesors ===
=== Usages ===
v419 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j416 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v475 
lastLocationAccess: - 
value: j254 
stateAfter: - 
=== Succesors ===
next: v422 
=== Usages ===
=== Predecessor ===
v410 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v475 lastLocationAccess: - value: j254 stateAfter: - #next: v422  <|@  <|@
f <@~|@floating>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j416 
index: - 
=== Succesors ===
=== Usages ===
v422 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j416 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v422 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v479 
lastLocationAccess: - 
value: v437 
stateAfter: - 
=== Succesors ===
next: v423 
=== Usages ===
=== Predecessor ===
v419 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v479 lastLocationAccess: - value: v437 stateAfter: - #next: v423  <|@  <|@
f <@~|@floating>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j416 
index: - 
=== Succesors ===
=== Usages ===
v423 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j416 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:177) [bci: 59]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v476 
lastLocationAccess: - 
value: i9 
stateAfter: - 
=== Succesors ===
next: v424 
=== Usages ===
=== Predecessor ===
v422 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v476 lastLocationAccess: - value: i9 stateAfter: - #next: v424  <|@  <|@
f <@~|@floating>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j416 
index: - 
=== Succesors ===
=== Usages ===
v424 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j416 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v478 
lastLocationAccess: - 
value: j222 
stateAfter: - 
=== Succesors ===
next: a402 
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v478 lastLocationAccess: - value: j222 stateAfter: - #next: a402  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:278) [bci: 37]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j416 
=== Succesors ===
next: v405 
=== Usages ===
a414 
=== Predecessor ===
v424 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j416 #next: v405  <|@  <|@
f <@*|@fixed>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v406 
=== Predecessor ===
a402 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a414 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v406 
values: a402 a403 
=== Succesors ===
=== Usages ===
v450 a204 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v406 values: a402 a403  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v405 v407 
=== Succesors ===
next: v203 
=== Usages ===
a414 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v405 v407 #next: v203  <|@  <|@
f <@~|@floating>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a414 
index: - 
=== Succesors ===
=== Usages ===
v203 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a414 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a202 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
op: Compress
stamp: n!# byte[]
=== Inputs ===
value: a97 
=== Succesors ===
=== Usages ===
v203 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a97  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v450 
lastLocationAccess: - 
value: a202 
stateAfter: - 
=== Succesors ===
next: v205 
=== Usages ===
=== Predecessor ===
v406 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v450 lastLocationAccess: - value: a202 stateAfter: - #next: v205  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: INIT_LOCATION
nodeSourcePosition: at java.lang.String.subSequence(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a204 
=== Usages ===
=== Predecessor ===
v203 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a204  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a204 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.subSequence(int, int) [bci: -6] Placeholder
stamp: a!# java.lang.String
=== Inputs ===
object: a414 
=== Succesors ===
next: v107 
=== Usages ===
a105 
=== Predecessor ===
v205 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a414 #next: v107  <|@  <|@
f <@*|@fixed>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:2839) [bci: 57]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v103 
=== Predecessor ===
a204 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B45" 
    xhandlers
    flags 
    probability 4531370617721367879
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.substring(String.java:2840) [bci: 47]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: a29 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a29  <|@  <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.lang.String.substring(String.java:2840) [bci: 54]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
referencedType: [null]
returnStamp: a# java.lang.String
signature: [UnresolvedJavaType<[B>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<StringUTF16.newString(byte[], int, int)>
=== Inputs ===
arguments: a117 i2 i23 
=== Succesors ===
=== Usages ===
a29 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a117 i2 i23  <|@  <|@
tid ?218 <|@
d <@d|@=== Debug Properties ===
bci: 54
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<String.substring(int, int)>
localsSize: 5
locksSize: 0
sourceFile: String.java
sourceLine: 2840
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?102 
=== Succesors ===
=== Usages ===
a29 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?102  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a29 <|@
d <@d|@=== Debug Properties ===
bci: 54
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.lang.String.substring(String.java:2840) [bci: 54]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
polymorphic: false
stamp: a# java.lang.String
targetMethod: Direct#StringUTF16.newString
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v169 
stateDuring: ?218 
=== Succesors ===
next: v108 
=== Usages ===
a105 
=== Predecessor ===
v25 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v169 stateDuring: ?218 #next: v108  <|@  <|@
f <@*|@fixed>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:2839) [bci: 57]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v103 
=== Predecessor ===
a29 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" "B14" "B43" "B44" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a105 <|@
d <@d|@=== Debug Properties ===
stamp: a# java.lang.String
valueDescription: a java.lang.Object
=== Inputs ===
merge: v103 
values: a1 a52 a204 a29 
=== Succesors ===
=== Usages ===
v8 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v103 values: a1 a52 a204 a29  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v104 v106 v107 v108 
=== Succesors ===
next: v8 
=== Usages ===
a105 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v104 v106 v107 v108 #next: v8  <|@  <|@
f <@*|@fixed>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.subSequence(String.java:2872) [bci: 6]
stamp: void
=== Inputs ===
memoryMap: - 
result: a105 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a105  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6fe89784 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.subSequence(String.java:2872) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.6018906262441794 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4603596568345418578
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v2|DWORD) trueDestinationProbability: 0.9663721533267153 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603414260059205002
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v0|QWORD[.]] destination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600843320827103580
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B44" 
    xhandlers
    flags 
    probability 4601207937399530733
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1801e864 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SUB (x: v2|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.9999787285234901 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601207777090930452
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v1|DWORD) trueDestinationProbability: 0.00977198389730849 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B22" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.7183170795883598 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B21" 
    xhandlers
    flags 
    probability 4599032071156696725
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 0.24957691254844944 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597213233028029193
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593072671573930308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA address: [v25|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = AND x: v26|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = ADD (x: v27|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v28|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4599735042323379768
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA address: [v27|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v30|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4599674408099325029
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4629886495576233067
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v27|QWORD, y: v31|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4629839598793565730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD + v31|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA address: [v31|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v32|QWORD] destination: B28 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4599674408099325029
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599735042323379768
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE input: v24|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|QWORD[.]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B24" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = SUB (x: v4|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v36|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = CMOVE (falseValue: v36|DWORD, ~trueValue: v9|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v37|DWORD, y: v37|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = SUB (x: v4|DWORD, ~y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v38|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v37|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[*] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVE input: v37|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v40|QWORD[*] + v42|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v41|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v43|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4590015800143340609
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = AND x: v15|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = ADD (x: v16|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v17|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589962286348538852
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v13|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v13|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v20|QWORD[.]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B40" 
    xhandlers
    flags 
    probability 4590015800143340609
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[*] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[*] = MOVE input: v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v22|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v23|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.]] destination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA address: [v45|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v46|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4601059508744723248
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v45|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v50|QWORD[.]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v52|DWORD[_] = COMPRESSPOINTER (input: v44|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1801e864 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v51|QWORD[.] + 20], y: v52|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" "B14" "B43" "B44" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4581491086567258382
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4571426031092231524
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v47|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} v44|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:19, 41, 3] <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} v44|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [v48|QWORD[.]] state [bci:19, 41, 3] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v48|QWORD[.]] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B45" 
    xhandlers
    flags 
    probability 4571363187372395366
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:""] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B14 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B32" 
    xhandlers
    flags 
    probability 4569985998969753389
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v1|DWORD v2|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10, 16, 41, 3] <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v1|DWORD v2|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [v29|QWORD[.]] state [bci:10, 16, 41, 3] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|QWORD[.]] destination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569907603205318980
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v24|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4559988989006196334
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:2838) [bci: 22]
locals: v0|QWORD[.] int[0|0x0] v2|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:22, 3] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:2838) [bci: 22]
locals: v0|QWORD[.] int[0|0x0] v2|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction NULLCHECK address: [v18|QWORD[.]] state [bci:22, 3] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|QWORD[.]] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B45" 
    xhandlers
    flags 
    probability 4531370617721367879
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:2840) [bci: 54]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.newString(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:54, 3] <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v53|QWORD[.]] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-54809|0xffffffffffff29e7]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-50195|0xffffffffffff3bed]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-52761|0xffffffffffff31e7]] destination: B33 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-48147|0xffffffffffff43ed]] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-49171|0xffffffffffff3fed]] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.subSequence(String.java:2872) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-53785|0xffffffffffff2de7]] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v1|DWORD v2|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction DEOPT info [bci:10, 16, 41, 3] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: iload_2       
     3: invokevirtual #189        // substring:(int, int)java.lang.String
     6: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a438 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a438  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.lang.String
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 a105 v449 ?22 v447 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v447 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a438 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a438 <|@
result v3|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.String.substring(String.java:2833) [bci: 1]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v447 
lastLocationAccess: - 
=== Succesors ===
next: i439 
=== Usages ===
a117 v448 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v447 lastLocationAccess: - #next: i439  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v100 v10 v152 i23 v169 v41 v43 ?77 j382 i82 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v100 v14 ?22 i23 v43 v45 v65 ?77 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<String.subSequence(int, int)>
localsSize: 3
locksSize: 0
sourceFile: String.java
sourceLine: 2872
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 i3 
=== Succesors ===
=== Usages ===
v225 i439 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 i3  <|@  <|@
f <@~|@floating>@ <|@
tid v448 <|@
result [v3|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a438 
=== Succesors ===
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a438  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i439 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-30475|0xffffffffffff88f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.substring(String.java:2833) [bci: 1]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v448 
lastLocationAccess: - 
=== Succesors ===
next: v191 
=== Usages ===
i39 v65 i82 v289 j307 i151 a259 
=== Predecessor ===
a438 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v448 lastLocationAccess: - #next: v191  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.substring(String.java:2835) [bci: 12]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v10 v41 v48 v423 v148 ?22 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 1]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.substring(String.java:2834) [bci: 8]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i9 
=== Succesors ===
=== Usages ===
v191 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 1]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.substring(String.java:2834) [bci: 8]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v41 
=== Succesors ===
trueSuccessor: v189 
falseSuccessor: v190 
=== Usages ===
=== Predecessor ===
i439 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v41 #trueSuccessor: v189 #falseSuccessor: v190  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6fe89784 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.subSequence(String.java:2872) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 1]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.substring(String.java:2834) [bci: 8]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v226 
=== Usages ===
=== Predecessor ===
v191 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v226  <|@  <|@
f <@~|@floating>@ <|@
tid i227 <|@
result int[-48147|0xffffffffffff43ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.substring(String.java:2833) [bci: 1]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
rawvalue: -48147
stableDimension: 0
stamp: i32 [-48147]
stampKind: i32
value: int[-48147|0xffffffffffff43ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i223 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.substring(String.java:2833) [bci: 1]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v219 
=== Predecessor ===
v189 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-48147|0xffffffffffff43ed]] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 4]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.substring(String.java:2834) [bci: 8]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v195 
=== Usages ===
=== Predecessor ===
v191 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v195  <|@  <|@
f <@~|@floating>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 6]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.substring(String.java:2834) [bci: 8]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i2 
=== Succesors ===
=== Usages ===
v195 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 6]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.substring(String.java:2834) [bci: 8]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v43 
=== Succesors ===
trueSuccessor: v193 
falseSuccessor: v194 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v43 #trueSuccessor: v193 #falseSuccessor: v194  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 6]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.substring(String.java:2834) [bci: 8]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v228 
=== Usages ===
=== Predecessor ===
v195 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v228  <|@  <|@
f <@~|@floating>@ <|@
tid i229 <|@
result int[-49171|0xffffffffffff3fed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.substring(String.java:2833) [bci: 1]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
rawvalue: -49171
stableDimension: 0
stamp: i32 [-49171]
stampKind: i32
value: int[-49171|0xffffffffffff3fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i223 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.substring(String.java:2833) [bci: 1]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v219 
=== Predecessor ===
v193 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-49171|0xffffffffffff3fed]] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 9]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.substring(String.java:2834) [bci: 8]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: i440 
=== Usages ===
=== Predecessor ===
v195 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i440  <|@  <|@
f <@~|@floating>@ <|@
tid v449 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i440 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i440 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.String.substring(String.java:2833) [bci: 1]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v449 
lastLocationAccess: - 
=== Succesors ===
next: v199 
=== Usages ===
i127 
=== Predecessor ===
v194 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v449 lastLocationAccess: - #next: v199  <|@  <|@
f <@~|@floating>@ <|@
tid i127 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.String.substring(String.java:2833) [bci: 1]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i440 
=== Succesors ===
=== Usages ===
i39 v48 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i440  <|@  <|@
f <@~|@floating>@ <|@
tid i39 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 9]
at java.lang.String.substring(String.java:2833) [bci: 1]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i439 
y: i127 
=== Succesors ===
=== Usages ===
v14 v45 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i439 y: i127  <|@  <|@
f <@~|@floating>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 11]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.substring(String.java:2834) [bci: 8]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i39 
y: i3 
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i39 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 11]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.substring(String.java:2834) [bci: 8]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v45 
=== Succesors ===
trueSuccessor: v197 
falseSuccessor: v198 
=== Usages ===
=== Predecessor ===
i440 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v45 #trueSuccessor: v197 #falseSuccessor: v198  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 11]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.substring(String.java:2834) [bci: 8]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v230 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v230  <|@  <|@
f <@~|@floating>@ <|@
tid i231 <|@
result int[-50195|0xffffffffffff3bed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.substring(String.java:2833) [bci: 1]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
rawvalue: -50195
stableDimension: 0
stamp: i32 [-50195]
stampKind: i32
value: int[-50195|0xffffffffffff3bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i223 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.substring(String.java:2833) [bci: 1]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v219 
=== Predecessor ===
v197 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-50195|0xffffffffffff3bed]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i223 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.substring(String.java:2833) [bci: 1]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: i32 [-50195 - -48147] bits:1...10xxxxx1111101101
valueDescription: i32
=== Inputs ===
merge: v219 
values: i227 i229 i231 
=== Succesors ===
=== Usages ===
v225 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v219 values: i227 i229 i231  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.substring(String.java:2833) [bci: 1]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v226 v228 v230 
=== Succesors ===
next: v225 
=== Usages ===
i223 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v226 v228 v230 #next: v225  <|@  <|@
f <@~|@floating>@ <|@
tid j114 <|@
result long[20|0x14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.String.substring(String.java:2833) [bci: 1]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
v225 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.substring(String.java:2833) [bci: 1]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i223 
speculation: j114 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v219 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i223 speculation: j114  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.subSequence(String.java:2872) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:350) [bci: 22]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.substring(String.java:2834) [bci: 8]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v13 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v13  <|@  <|@
f <@~|@floating>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.substring(String.java:2835) [bci: 12]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i9 
=== Succesors ===
=== Usages ===
v13 v63 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i2 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:2835) [bci: 12]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
profileData: PROFILED designatedSuccessorProbability: 0.6018906262441794
stamp: void
=== Inputs ===
condition: v10 
=== Succesors ===
trueSuccessor: v12 
falseSuccessor: v11 
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v10 #trueSuccessor: v12 #falseSuccessor: v11  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.6018906262441794 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4603596568345418578
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.substring(String.java:2835) [bci: 15]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v20 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v20  <|@  <|@
f <@~|@floating>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.substring(String.java:2835) [bci: 17]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i39 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i3 y: i39  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:2835) [bci: 17]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
profileData: PROFILED designatedSuccessorProbability: 0.9663721533267153
stamp: void
=== Inputs ===
condition: v14 
=== Succesors ===
trueSuccessor: v18 
falseSuccessor: v19 
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v14 #trueSuccessor: v18 #falseSuccessor: v19  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v2|DWORD) trueDestinationProbability: 0.9663721533267153 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603414260059205002
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.substring(String.java:2836) [bci: 20]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v104 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v104  <|@  <|@
f <@*|@fixed>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v103 
=== Predecessor ===
v18 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v0|QWORD[.]] destination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4581491086567258382
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.substring(String.java:2838) [bci: 22]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v17 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v17  <|@  <|@
f <@*|@fixed>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:2838) [bci: 22]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
v19 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600843320827103580
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.substring(String.java:2838) [bci: 22]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v15 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v15  <|@  <|@
f <@*|@fixed>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:2838) [bci: 22]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
v11 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B44" 
    xhandlers
    flags 
    probability 4601207937399530733
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.substring(String.java:2838) [bci: 22]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v15 v17 
=== Succesors ===
next: v26 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v15 v17 #next: v26  <|@  <|@
f <@~|@floating>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 10]
at java.lang.String.substring(String.java:2839) [bci: 28]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i127 
y: i9 
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i127 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid a117 <|@
result v8|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.String.substring(String.java:2833) [bci: 1]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a438 
=== Succesors ===
=== Usages ===
j301 v169 ?77 j381 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a438  <|@  <|@
f <@~|@floating>@ <|@
tid i23 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:2838) [bci: 24]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: i32
=== Inputs ===
x: i3 
y: i2 
=== Succesors ===
=== Usages ===
v169 v368 v91 i92 v175 j312 a341 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i3 y: i2  <|@  <|@
tid ?102 <|@
d <@d|@=== Debug Properties ===
bci: 3
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<String.subSequence(int, int)>
localsSize: 3
locksSize: 0
sourceFile: String.java
sourceLine: 2872
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
?22 ?218 ?99 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:2839) [bci: 31]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
profileData: PROFILED designatedSuccessorProbability: 0.9999787285234901
stamp: void
=== Inputs ===
condition: v48 
=== Succesors ===
trueSuccessor: v24 
falseSuccessor: v25 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v48 #trueSuccessor: v24 #falseSuccessor: v25  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1801e864 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SUB (x: v2|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.9999787285234901 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601207777090930452
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.substring(String.java:2839) [bci: 34]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v51 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v51  <|@  <|@
f <@~|@floating>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.StringLatin1.newString(StringLatin1.java:749) [bci: 1]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i3 
=== Succesors ===
=== Usages ===
v51 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i2 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.newString(StringLatin1.java:749) [bci: 1]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
profileData: PROFILED designatedSuccessorProbability: 0.00977198389730849
stamp: void
=== Inputs ===
condition: v100 
=== Succesors ===
trueSuccessor: v50 
falseSuccessor: v49 
=== Usages ===
=== Predecessor ===
v24 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v100 #trueSuccessor: v50 #falseSuccessor: v49  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v1|DWORD) trueDestinationProbability: 0.00977198389730849 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B45" 
    xhandlers
    flags 
    probability 4571363187372395366
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.newString(StringLatin1.java:750) [bci: 4]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v106 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v106  <|@  <|@
f <@~|@floating>@ <|@
tid a52 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.newString(StringLatin1.java:750) [bci: 4]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
rawvalue: ""
stableDimension: 0
stamp: a!# java.lang.String
stampKind: a java.lang.Object
value: Object[String:""]
=== Inputs ===
=== Succesors ===
=== Usages ===
a105 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v103 
=== Predecessor ===
v50 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:""] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B14 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B22" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v63 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v63  <|@  <|@
f <@~|@floating>@ <|@
tid j222 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.substring(String.java:2833) [bci: 1]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v424 v237 v369 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?99 <|@
d <@d|@=== Debug Properties ===
bci: 41
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<String.substring(int, int)>
localsSize: 5
locksSize: 0
sourceFile: String.java
sourceLine: 2839
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?102 
=== Succesors ===
=== Usages ===
?54 ?93 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?102  <|@  <|@
tid a110 <|@
d <@d|@=== Debug Properties ===
fields: [HotSpotResolvedJavaFieldImpl<java.lang.String.hash int:12>, HotSpotResolvedJavaFieldImpl<java.lang.String.coder byte:16>, HotSpotResolvedJavaFieldImpl<java.lang.String.hashIsZero boolean:17>, HotSpotResolvedJavaFieldImpl<java.lang.String.flags byte:18>, HotSpotResolvedJavaFieldImpl<java.lang.String.value byte[]:20>]
hasIdentity: true
nodeSourcePosition: at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
objectId: 0
stamp: a!# java.lang.String
type: HotSpotType<Ljava/lang/String;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?93 ?93 ?111 ?54 ?54 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@jdk.graal.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?111 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a110 
values: - - - - - 
=== Succesors ===
=== Usages ===
?54 ?77 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@jdk.graal.compiler.nodes.virtual.VirtualObjectState>@ object: a110 values: - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v436 <|@
result meta{HotSpotType<[B, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
rawvalue: meta{HotSpotType<[B, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<[B, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v288 v367 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j254 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.defaultPrototypeMarkWord(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:421) [bci: 9]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v284 v364 v419 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v242 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
rawvalue: meta{HotSpotType<[B, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[B, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a259 a341 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j268 <|@
result long[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
rawvalue: 23
stableDimension: 0
stamp: i64 [23]
stampKind: i64
value: long[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
j269 j348 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j247 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:132) [bci: 23]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j248 j313 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3853) [bci: 1]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
profileData: PROFILED designatedSuccessorProbability: 0.7183170795883598
stamp: void
=== Inputs ===
condition: v10 
=== Succesors ===
trueSuccessor: v62 
falseSuccessor: v61 
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v10 #trueSuccessor: v62 #falseSuccessor: v61  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.7183170795883598 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B21" 
    xhandlers
    flags 
    probability 4599032071156696725
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3853) [bci: 4]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v71 
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v71  <|@  <|@
f <@~|@floating>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3853) [bci: 7]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i439 
=== Succesors ===
=== Usages ===
v71 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i3 y: i439  <|@  <|@
f <@*|@fixed>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3853) [bci: 7]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
profileData: PROFILED designatedSuccessorProbability: 0.24957691254844944
stamp: void
=== Inputs ===
condition: v65 
=== Succesors ===
trueSuccessor: v69 
falseSuccessor: v70 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v65 #trueSuccessor: v69 #falseSuccessor: v70  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 0.24957691254844944 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4590015800143340609
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 17]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v299 
=== Usages ===
=== Predecessor ===
v71 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v299  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: j243 
=== Usages ===
=== Predecessor ===
v69 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j243  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j243 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j281 
=== Usages ===
v451 v452 
=== Predecessor ===
v299 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j281  <|@  <|@
f <@~|@floating>@ <|@
tid v451 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j243 
index: - 
=== Succesors ===
=== Usages ===
j281 v283 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j243 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j281 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v451 
lastLocationAccess: - 
=== Succesors ===
next: j282 
=== Usages ===
j249 v453 v454 a258 v458 v455 v456 v457 
=== Predecessor ===
j243 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v451 lastLocationAccess: - #next: j282  <|@  <|@
f <@~|@floating>@ <|@
tid v452 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j243 
index: - 
=== Succesors ===
=== Usages ===
j282 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j243 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j282 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v452 
lastLocationAccess: - 
=== Succesors ===
next: v253 
=== Usages ===
v250 
=== Predecessor ===
j281 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v452 lastLocationAccess: - #next: v253  <|@  <|@
f <@~|@floating>@ <|@
tid j307 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i439 
=== Succesors ===
=== Usages ===
v308 j269 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i439  <|@  <|@
f <@~|@floating>@ <|@
tid j269 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: i64 [23 - 2147483670] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j307 
y: j268 
=== Succesors ===
=== Usages ===
j248 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j307 y: j268  <|@  <|@
f <@~|@floating>@ <|@
tid j248 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: i64 [0 - 2147483664] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j269 
y: j247 
=== Succesors ===
=== Usages ===
j249 v455 v456 v457 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j269 y: j247  <|@  <|@
f <@~|@floating>@ <|@
tid j249 <|@
result v17|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: i64
=== Inputs ===
x: j248 
y: j281 
=== Succesors ===
=== Usages ===
v250 v283 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j248 y: j281  <|@  <|@
f <@~|@floating>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j282 
y: j249 
=== Succesors ===
=== Usages ===
v253 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j282 y: j249  <|@  <|@
f <@*|@fixed>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v250 
=== Succesors ===
trueSuccessor: v252 
falseSuccessor: v251 
=== Usages ===
=== Predecessor ===
j282 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v250 #trueSuccessor: v252 #falseSuccessor: v251  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = AND x: v15|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = ADD (x: v16|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v17|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4559988989006196334
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: a259 
=== Usages ===
=== Predecessor ===
v253 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a259  <|@  <|@
tid ?22 <|@
d <@d|@=== Debug Properties ===
bci: 22
bytecode: iload_2
code: ResolvedJavaMethodBytecode<String.substring(int, int)>
localsSize: 5
locksSize: 0
sourceFile: String.java
sourceLine: 2838
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?102 
values: a1 i9 i3 
=== Succesors ===
=== Usages ===
v442 a259 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?102 values: a1 i9 i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a259 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?22 
arguments: v242 i439 
=== Succesors ===
next: v442 
=== Usages ===
v442 a279 
=== Predecessor ===
v252 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?22 arguments: v242 i439 #next: v442  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-75633|0xfffffffffffed88f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?22 
object: a259 
=== Succesors ===
next: v263 
=== Usages ===
=== Predecessor ===
a259 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?22 object: a259 #next: v263  <|@  <|@
f <@*|@fixed>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v262 
=== Predecessor ===
v442 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:2838) [bci: 22]
locals: v0|QWORD[.] int[0|0x0] v2|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:22, 3] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:2838) [bci: 22]
locals: v0|QWORD[.] int[0|0x0] v2|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction NULLCHECK address: [v18|QWORD[.]] state [bci:22, 3] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|QWORD[.]] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589962286348538852
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v283 
=== Usages ===
=== Predecessor ===
v253 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v283  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v451 
lastLocationAccess: - 
value: j249 
stateAfter: - 
=== Succesors ===
next: v271 
=== Usages ===
=== Predecessor ===
v251 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v451 lastLocationAccess: - value: j249 stateAfter: - #next: v271  <|@  <|@
f <@~|@floating>@ <|@
tid v455 <|@
result [v16|QWORD + v13|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j248 
index: j281 
=== Succesors ===
=== Usages ===
v271 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j248 index: j281  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
address: v455 
=== Succesors ===
next: v274 
=== Usages ===
=== Predecessor ===
v283 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v455 #next: v274  <|@  <|@
f <@~|@floating>@ <|@
tid v456 <|@
result [v16|QWORD + v13|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j248 
index: j281 
=== Succesors ===
=== Usages ===
v274 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j248 index: j281  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
address: v456 
=== Succesors ===
next: v277 
=== Usages ===
=== Predecessor ===
v271 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v456 #next: v277  <|@  <|@
f <@~|@floating>@ <|@
tid v457 <|@
result [v16|QWORD + v13|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j248 
index: j281 
=== Succesors ===
=== Usages ===
v277 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j248 index: j281  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
address: v457 
=== Succesors ===
next: v284 
=== Usages ===
=== Predecessor ===
v274 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v457 #next: v284  <|@  <|@
f <@~|@floating>@ <|@
tid v453 <|@
result [v13|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j281 
index: - 
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j281 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v453 
lastLocationAccess: - 
value: j254 
stateAfter: - 
=== Succesors ===
next: v288 
=== Usages ===
=== Predecessor ===
v277 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v453 lastLocationAccess: - value: j254 stateAfter: - #next: v288  <|@  <|@
f <@~|@floating>@ <|@
tid v458 <|@
result [v13|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j281 
index: - 
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j281 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v458 
lastLocationAccess: - 
value: v436 
stateAfter: - 
=== Succesors ===
next: v289 
=== Usages ===
=== Predecessor ===
v284 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v458 lastLocationAccess: - value: v436 stateAfter: - #next: v289  <|@  <|@
f <@~|@floating>@ <|@
tid v454 <|@
result [v13|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j281 
index: - 
=== Succesors ===
=== Usages ===
v289 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j281 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v454 
lastLocationAccess: - 
value: i439 
stateAfter: - 
=== Succesors ===
next: v257 
=== Usages ===
=== Predecessor ===
v288 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v454 lastLocationAccess: - value: i439 stateAfter: - #next: v257  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: a258 
=== Usages ===
=== Predecessor ===
v289 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a258  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a258 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j281 
=== Succesors ===
next: v261 
=== Usages ===
a279 
=== Predecessor ===
v257 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j281 #next: v261  <|@  <|@
f <@*|@fixed>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v262 
=== Predecessor ===
a258 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v13|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v13|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v20|QWORD[.]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B40" 
    xhandlers
    flags 
    probability 4590015800143340609
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a279 <|@
result v21|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v262 
values: a258 a259 
=== Succesors ===
=== Usages ===
j305 a135 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v262 values: a258 a259  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v261 v263 
=== Succesors ===
next: j301 
=== Usages ===
a279 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v261 v263 #next: j301  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j301 <|@
result v22|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: i64
=== Inputs ===
object: a117 
=== Succesors ===
next: j305 
=== Usages ===
v459 
=== Predecessor ===
v262 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a117 #next: j305  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j305 <|@
result v23|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: i64
=== Inputs ===
object: a279 
=== Succesors ===
next: v308 
=== Usages ===
v460 
=== Predecessor ===
j301 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a279 #next: v308  <|@  <|@
f <@~|@floating>@ <|@
tid v459 <|@
result [v22|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j301 
index: - 
=== Succesors ===
=== Usages ===
v308 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j301 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v460 <|@
result [v23|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j305 
index: - 
=== Succesors ===
=== Usages ===
v308 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j305 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}
descriptorName: byteDisjointArraycopyKillInit
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v459 v460 j307 
=== Succesors ===
next: v134 
=== Usages ===
=== Predecessor ===
j305 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v459 v460 j307 #next: v134  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:80) [bci: 39] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: a135 
=== Usages ===
=== Predecessor ===
v308 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a135  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a135 <|@
result v21|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:81) [bci: 43] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: a!# byte[]
=== Inputs ===
object: a279 
=== Succesors ===
next: v96 
=== Usages ===
a97 
=== Predecessor ===
v134 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a279 #next: v96  <|@  <|@
f <@*|@fixed>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v95 
=== Predecessor ===
a135 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[*] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[*] = MOVE input: v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v22|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v23|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.]] destination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597213233028029193
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v68 
=== Usages ===
=== Predecessor ===
v71 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v68  <|@  <|@
f <@*|@fixed>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v67 
=== Predecessor ===
v70 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593072671573930308
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v66 
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v66  <|@  <|@
f <@*|@fixed>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v67 
=== Predecessor ===
v61 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v66 v68 
=== Succesors ===
next: v379 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v66 v68 #next: v379  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: j309 
=== Usages ===
=== Predecessor ===
v67 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j309  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j309 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j361 
=== Usages ===
v461 v462 
=== Predecessor ===
v379 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j361  <|@  <|@
f <@~|@floating>@ <|@
tid v461 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j309 
index: - 
=== Succesors ===
=== Usages ===
j361 v363 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j309 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j361 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v461 
lastLocationAccess: - 
=== Succesors ===
next: j362 
=== Usages ===
j314 v463 v464 v465 a340 v466 v470 v467 v468 v469 
=== Predecessor ===
j309 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v461 lastLocationAccess: - #next: j362  <|@  <|@
f <@~|@floating>@ <|@
tid v462 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j309 
index: - 
=== Succesors ===
=== Usages ===
j362 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j309 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j362 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v462 
lastLocationAccess: - 
=== Succesors ===
next: v318 
=== Usages ===
v315 
=== Predecessor ===
j361 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v462 lastLocationAccess: - #next: v318  <|@  <|@
f <@~|@floating>@ <|@
tid j312 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i23 
=== Succesors ===
=== Usages ===
j348 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i23  <|@  <|@
f <@~|@floating>@ <|@
tid j348 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: i64 [23 - 4294967318] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j312 
y: j268 
=== Succesors ===
=== Usages ===
j313 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j312 y: j268  <|@  <|@
f <@~|@floating>@ <|@
tid j313 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: i64 [0 - 4294967312] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j348 
y: j247 
=== Succesors ===
=== Usages ===
j314 v329 j350 v467 v468 v469 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j348 y: j247  <|@  <|@
f <@~|@floating>@ <|@
tid j314 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: i64
=== Inputs ===
x: j313 
y: j361 
=== Succesors ===
=== Usages ===
v315 v363 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j313 y: j361  <|@  <|@
f <@~|@floating>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j362 
y: j314 
=== Succesors ===
=== Usages ===
v318 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j362 y: j314  <|@  <|@
tid ?93 <|@
d <@d|@=== Debug Properties ===
bci: 16
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<StringLatin1.newString(byte[], int, int)>
localsSize: 3
locksSize: 0
sourceFile: StringLatin1.java
sourceLine: 752
stackSize: 2
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?99 
values: a110 a110 
=== Succesors ===
=== Usages ===
?77 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?99 values: a110 a110  <|@  <|@
tid ?77 <|@
d <@d|@=== Debug Properties ===
bci: 10
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Arrays.copyOfRange(byte[], int, int)>
localsSize: 3
locksSize: 0
sourceFile: Arrays.java
sourceLine: 3854
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?93 
values: a117 i2 i3 
virtualObjectMappings: ?111 
=== Succesors ===
=== Usages ===
v444 v237 a341 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?93 values: a117 i2 i3 virtualObjectMappings: ?111  <|@  <|@
f <@*|@fixed>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v315 
=== Succesors ===
trueSuccessor: v317 
falseSuccessor: v316 
=== Usages ===
=== Predecessor ===
j362 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v315 #trueSuccessor: v317 #falseSuccessor: v316  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA address: [v25|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = AND x: v26|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = ADD (x: v27|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v28|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B32" 
    xhandlers
    flags 
    probability 4569985998969753389
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: a341 
=== Usages ===
=== Predecessor ===
v318 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a341  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a341 <|@
result v29|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?77 
arguments: v242 i23 
=== Succesors ===
next: v444 
=== Usages ===
v444 a359 
=== Predecessor ===
v317 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?77 arguments: v242 i23 #next: v444  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-96113|0xfffffffffffe888f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?77 
object: a341 
=== Succesors ===
next: v345 
=== Usages ===
=== Predecessor ===
a341 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?77 object: a341 #next: v345  <|@  <|@
f <@*|@fixed>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v344 
=== Predecessor ===
v444 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v1|DWORD v2|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10, 16, 41, 3] <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v1|DWORD v2|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [v29|QWORD[.]] state [bci:10, 16, 41, 3] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|QWORD[.]] destination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4599735042323379768
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v363 
=== Usages ===
=== Predecessor ===
v318 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v363  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v461 
lastLocationAccess: - 
value: j314 
stateAfter: - 
=== Succesors ===
next: v354 
=== Usages ===
=== Predecessor ===
v316 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v461 lastLocationAccess: - value: j314 stateAfter: - #next: v354  <|@  <|@
f <@~|@floating>@ <|@
tid v467 <|@
result [v27|QWORD + v24|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j313 
index: j361 
=== Succesors ===
=== Usages ===
v354 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j313 index: j361  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
address: v467 
=== Succesors ===
next: v356 
=== Usages ===
=== Predecessor ===
v363 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v467 #next: v356  <|@  <|@
f <@~|@floating>@ <|@
tid v468 <|@
result [v27|QWORD + v24|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j313 
index: j361 
=== Succesors ===
=== Usages ===
v356 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j313 index: j361  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
address: v468 
=== Succesors ===
next: v358 
=== Usages ===
=== Predecessor ===
v354 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v468 #next: v358  <|@  <|@
f <@~|@floating>@ <|@
tid v469 <|@
result [v27|QWORD + v24|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j313 
index: j361 
=== Succesors ===
=== Usages ===
v358 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j313 index: j361  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
address: v469 
=== Succesors ===
next: v364 
=== Usages ===
=== Predecessor ===
v356 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v469 #next: v364  <|@  <|@
f <@~|@floating>@ <|@
tid v463 <|@
result [v24|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j361 
index: - 
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j361 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v463 
lastLocationAccess: - 
value: j254 
stateAfter: - 
=== Succesors ===
next: v367 
=== Usages ===
=== Predecessor ===
v358 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v463 lastLocationAccess: - value: j254 stateAfter: - #next: v367  <|@  <|@
f <@~|@floating>@ <|@
tid v470 <|@
result [v24|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j361 
index: - 
=== Succesors ===
=== Usages ===
v367 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j361 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v367 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v470 
lastLocationAccess: - 
value: v436 
stateAfter: - 
=== Succesors ===
next: v368 
=== Usages ===
=== Predecessor ===
v364 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v470 lastLocationAccess: - value: v436 stateAfter: - #next: v368  <|@  <|@
f <@~|@floating>@ <|@
tid v464 <|@
result [v24|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j361 
index: - 
=== Succesors ===
=== Usages ===
v368 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j361 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v464 
lastLocationAccess: - 
value: i23 
stateAfter: - 
=== Succesors ===
next: v324 
=== Usages ===
=== Predecessor ===
v367 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v464 lastLocationAccess: - value: i23 stateAfter: - #next: v324  <|@  <|@
f <@~|@floating>@ <|@
tid j349 <|@
result long[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
rawvalue: -16
stableDimension: 0
stamp: i64 [-16]
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j350 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j350 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: i64 [-16 - 4294967296] bits:x...x000
=== Inputs ===
x: j313 
y: j349 
=== Succesors ===
=== Usages ===
v321 v325 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j313 y: j349  <|@  <|@
f <@~|@floating>@ <|@
tid j351 <|@
result long[2048|0x800] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
rawvalue: 2048
stableDimension: 0
stamp: i64 [2048]
stampKind: i64
value: long[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j350 
y: j351 
=== Succesors ===
=== Usages ===
v324 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j350 y: j351  <|@  <|@
f <@*|@fixed>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 28]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v321 
=== Succesors ===
trueSuccessor: v323 
falseSuccessor: v322 
=== Usages ===
=== Predecessor ===
v368 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v321 #trueSuccessor: v323 #falseSuccessor: v322  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA address: [v27|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v30|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4599674408099325029
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:228) [bci: 62]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v326 
=== Usages ===
=== Predecessor ===
v324 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v326  <|@  <|@
f <@~|@floating>@ <|@
tid j286 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
rawvalue: 8
stableDimension: 0
stamp: i64 [8]
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j337 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j124 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.String.substring(String.java:2833) [bci: 1]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j328 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v327 
=== Predecessor ===
v323 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4629886495576233067
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j328 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v327 
values: j124 j337 
=== Succesors ===
=== Usages ===
v329 v465 j337 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v327 values: j124 j337  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 56
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v326 
=== Succesors ===
next: v335 
=== Usages ===
j328 v334 v338 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v326 #next: v335  <|@  <|@
f <@~|@floating>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 119]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j328 
y: j313 
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j328 y: j313  <|@  <|@
f <@*|@fixed>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 127]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v329 
=== Succesors ===
trueSuccessor: v330 
falseSuccessor: v334 
=== Usages ===
=== Predecessor ===
v327 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v329 #trueSuccessor: v330 #falseSuccessor: v334  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v27|QWORD, y: v31|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4629839598793565730
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 130]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v369 
=== Usages ===
=== Predecessor ===
v335 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v369  <|@  <|@
f <@~|@floating>@ <|@
tid v465 <|@
result [v24|QWORD + v31|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j361 
index: j328 
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j361 index: j328  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v465 
lastLocationAccess: - 
value: j222 
stateAfter: - 
=== Succesors ===
next: v338 
=== Usages ===
=== Predecessor ===
v330 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v465 lastLocationAccess: - value: j222 stateAfter: - #next: v338  <|@  <|@
f <@~|@floating>@ <|@
tid j337 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 144]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: i64
=== Inputs ===
x: j328 
y: j286 
=== Succesors ===
=== Usages ===
j328 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j328 y: j286  <|@  <|@
f <@*|@fixed>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
loopBegin: v327 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v369 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v327  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD + v31|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA address: [v31|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v32|QWORD] destination: B28 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4599674408099325029
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v327 
=== Succesors ===
next: v333 
=== Usages ===
=== Predecessor ===
v335 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v327 #next: v333  <|@  <|@
f <@*|@fixed>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v332 
=== Predecessor ===
v334 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569907603205318980
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:225) [bci: 31]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v325 
=== Usages ===
=== Predecessor ===
v324 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v325  <|@  <|@
f <@~|@floating>@ <|@
tid v466 <|@
result [v24|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j361 
index: - 
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j361 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
isAligned: true
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ZeroMemoryNode.zero(Word, long, boolean, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:226) [bci: 56]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v466 
lastLocationAccess: - 
length: j350 
=== Succesors ===
next: v331 
=== Usages ===
=== Predecessor ===
v322 >@ <|@
instruction <@ZeroMemory|@jdk.graal.compiler.replacements.nodes.ZeroMemoryNode>@ stateBefore: - guard: - address: v466 lastLocationAccess: - length: j350 #next: v331  <|@  <|@
f <@*|@fixed>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v332 
=== Predecessor ===
v325 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v24|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599735042323379768
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v331 v333 
=== Succesors ===
next: v339 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v331 v333 #next: v339  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: a340 
=== Usages ===
=== Predecessor ===
v332 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a340  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a340 <|@
result v34|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j361 
=== Succesors ===
next: v343 
=== Usages ===
a359 
=== Predecessor ===
v339 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j361 #next: v343  <|@  <|@
f <@*|@fixed>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v344 
=== Predecessor ===
a340 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE input: v24|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|QWORD[.]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B24" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a359 <|@
result v35|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v344 
values: a340 a341 
=== Succesors ===
=== Usages ===
j386 a97 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v344 values: a340 a341  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v343 v345 
=== Succesors ===
next: v209 
=== Usages ===
a359 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v343 v345 #next: v209  <|@  <|@
f <@~|@floating>@ <|@
tid i82 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 22]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: i32
=== Inputs ===
x: i439 
y: i2 
=== Succesors ===
=== Usages ===
v91 i92 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i439 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3865) [bci: 24]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i23 
y: i82 
=== Succesors ===
=== Usages ===
i92 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i23 y: i82  <|@  <|@
f <@~|@floating>@ <|@
tid i92 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3865) [bci: 24]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: i32
=== Inputs ===
condition: v91 
trueValue: i23 
falseValue: i82 
=== Succesors ===
=== Usages ===
j388 v148 i151 v175 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v91 trueValue: i23 falseValue: i82  <|@  <|@
f <@~|@floating>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 89]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i92 
y: i9 
=== Succesors ===
=== Usages ===
v209 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i92 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v148 
=== Succesors ===
trueSuccessor: v207 
falseSuccessor: v208 
=== Usages ===
=== Predecessor ===
v344 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v148 #trueSuccessor: v207 #falseSuccessor: v208  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = SUB (x: v4|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v36|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = CMOVE (falseValue: v36|DWORD, ~trueValue: v9|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v37|DWORD, y: v37|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v233 
=== Usages ===
=== Predecessor ===
v209 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v233  <|@  <|@
f <@~|@floating>@ <|@
tid i234 <|@
result int[-52761|0xffffffffffff31e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
rawvalue: -52761
stableDimension: 0
stamp: i32 [-52761]
stampKind: i32
value: int[-52761|0xffffffffffff31e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i235 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
v207 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-52761|0xffffffffffff31e7]] destination: B33 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:409) [bci: 120]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v213 
=== Usages ===
=== Predecessor ===
v209 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v213  <|@  <|@
f <@~|@floating>@ <|@
tid i151 <|@
result v38|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 139]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: i32
=== Inputs ===
x: i439 
y: i92 
=== Succesors ===
=== Usages ===
v152 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i439 y: i92  <|@  <|@
f <@~|@floating>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 140]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i151 
y: i2 
=== Succesors ===
=== Usages ===
v213 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i151 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v152 
=== Succesors ===
trueSuccessor: v211 
falseSuccessor: v212 
=== Usages ===
=== Predecessor ===
v208 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v152 #trueSuccessor: v211 #falseSuccessor: v212  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = SUB (x: v4|DWORD, ~y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v38|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v238 
=== Usages ===
=== Predecessor ===
v213 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v238  <|@  <|@
f <@~|@floating>@ <|@
tid i239 <|@
result int[-53785|0xffffffffffff2de7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
rawvalue: -53785
stableDimension: 0
stamp: i32 [-53785]
stampKind: i32
value: int[-53785|0xffffffffffff2de7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i235 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
v211 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-53785|0xffffffffffff2de7]] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 171]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v217 
=== Usages ===
=== Predecessor ===
v213 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v217  <|@  <|@
f <@~|@floating>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 181]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i23 
y: i92 
=== Succesors ===
=== Usages ===
v217 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i23 y: i92  <|@  <|@
f <@*|@fixed>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v175 
=== Succesors ===
trueSuccessor: v215 
falseSuccessor: v216 
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v175 #trueSuccessor: v215 #falseSuccessor: v216  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v37|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v240 
=== Usages ===
=== Predecessor ===
v217 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v240  <|@  <|@
f <@~|@floating>@ <|@
tid i241 <|@
result int[-54809|0xffffffffffff29e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
rawvalue: -54809
stableDimension: 0
stamp: i32 [-54809]
stampKind: i32
value: int[-54809|0xffffffffffff29e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i235 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
v215 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-54809|0xffffffffffff29e7]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i235 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: i32 [-54809 - -52761] bits:1...1001xxx0111100111
valueDescription: i32
=== Inputs ===
merge: v232 
values: i234 i239 i241 
=== Succesors ===
=== Usages ===
v237 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v232 values: i234 i239 i241  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v233 v238 v240 
=== Succesors ===
next: v237 
=== Usages ===
i235 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v233 v238 v240 #next: v237  <|@  <|@
f <@*|@fixed>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
stateBefore: ?77 
actionAndReason: i235 
speculation: j222 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v232 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?77 actionAndReason: i235 speculation: j222  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v1|DWORD v2|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction DEOPT info [bci:10, 16, 41, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:418) [bci: 212]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: j381 
=== Usages ===
=== Predecessor ===
v217 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j381  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j381 <|@
result v40|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: i64
=== Inputs ===
object: a117 
=== Succesors ===
next: j386 
=== Usages ===
v471 
=== Predecessor ===
v216 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a117 #next: j386  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j386 <|@
result v41|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: i64
=== Inputs ===
object: a359 
=== Succesors ===
next: v389 
=== Usages ===
v472 
=== Predecessor ===
j381 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a359 #next: v389  <|@  <|@
f <@~|@floating>@ <|@
tid j382 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
v471 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i2  <|@  <|@
f <@~|@floating>@ <|@
tid v471 <|@
result [v40|QWORD[*] + v42|QWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j381 
index: j382 
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j381 index: j382  <|@  <|@
f <@~|@floating>@ <|@
tid v472 <|@
result [v41|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j386 
index: - 
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j386 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j388 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i92 
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i92  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}
descriptorName: byteArraycopy
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v471 v472 j388 
=== Succesors ===
next: v98 
=== Usages ===
=== Predecessor ===
j386 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v471 v472 j388 #next: v98  <|@  <|@
f <@*|@fixed>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v95 
=== Predecessor ===
v389 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[*] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVE input: v37|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v40|QWORD[*] + v42|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v41|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v43|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a97 <|@
result v44|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# byte[]
valueDescription: a java.lang.Object
=== Inputs ===
merge: v95 
values: a135 a359 
=== Succesors ===
=== Usages ===
?54 a202 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v95 values: a135 a359  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v96 v98 
=== Succesors ===
next: v434 
=== Usages ===
a97 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v96 v98 #next: v434  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: j392 
=== Usages ===
=== Predecessor ===
v95 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j392  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j392 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j416 
=== Usages ===
v473 v474 
=== Predecessor ===
v434 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j416  <|@  <|@
f <@~|@floating>@ <|@
tid v473 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j392 
index: - 
=== Succesors ===
=== Usages ===
j416 v418 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j392 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j416 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v473 
lastLocationAccess: - 
=== Succesors ===
next: j417 
=== Usages ===
j395 v475 v476 a402 v477 v478 v479 
=== Predecessor ===
j392 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v473 lastLocationAccess: - #next: j417  <|@  <|@
f <@~|@floating>@ <|@
tid v474 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j392 
index: - 
=== Succesors ===
=== Usages ===
j417 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j392 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j417 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v474 
lastLocationAccess: - 
=== Succesors ===
next: v399 
=== Usages ===
v396 
=== Predecessor ===
j416 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v474 lastLocationAccess: - #next: v399  <|@  <|@
f <@~|@floating>@ <|@
tid j391 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
rawvalue: 24
stableDimension: 0
stamp: i64 [24]
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j395 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j395 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 25]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: i64
=== Inputs ===
x: j416 
y: j391 
=== Succesors ===
=== Usages ===
v396 v418 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j416 y: j391  <|@  <|@
f <@~|@floating>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j417 
y: j395 
=== Succesors ===
=== Usages ===
v399 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j417 y: j395  <|@  <|@
f <@*|@fixed>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 69]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v396 
=== Succesors ===
trueSuccessor: v398 
falseSuccessor: v397 
=== Usages ===
=== Predecessor ===
j417 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v396 #trueSuccessor: v398 #falseSuccessor: v397  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA address: [v45|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v46|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4571426031092231524
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 111]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: a403 
=== Usages ===
=== Predecessor ===
v399 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a403  <|@  <|@
tid ?54 <|@
d <@d|@=== Debug Properties ===
bci: 19
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<StringLatin1.newString(byte[], int, int)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
sourceFile: StringLatin1.java
sourceLine: 752
stackSize: 3
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?99 
values: a110 a110 a97 
virtualObjectMappings: ?111 
=== Succesors ===
=== Usages ===
v446 a403 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?99 values: a110 a110 a97 virtualObjectMappings: ?111  <|@  <|@
f <@~|@floating>@ <|@
tid v390 <|@
result v47|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/String;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a403 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a403 <|@
result v48|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newInstanceOrNull(ForeignCallDescriptor, KlassPointer) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewInstanceStub(HotSpotAllocationSnippets.java:340) [bci: 13]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:69) [bci: 126]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?54 
arguments: v390 
=== Succesors ===
next: v446 
=== Usages ===
v446 a414 
=== Predecessor ===
v398 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?54 arguments: v390 #next: v446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-110193|0xfffffffffffe518f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?54 
object: a403 
=== Succesors ===
next: v407 
=== Usages ===
=== Predecessor ===
a403 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?54 object: a403 #next: v407  <|@  <|@
f <@*|@fixed>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v406 
=== Predecessor ===
v446 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v47|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} v44|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:19, 41, 3] <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} v44|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [v48|QWORD[.]] state [bci:19, 41, 3] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v48|QWORD[.]] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4601059508744723248
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v418 
=== Usages ===
=== Predecessor ===
v399 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v418  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 77]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v473 
lastLocationAccess: - 
value: j395 
stateAfter: - 
=== Succesors ===
next: v410 
=== Usages ===
=== Predecessor ===
v397 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v473 lastLocationAccess: - value: j395 stateAfter: - #next: v410  <|@  <|@
f <@~|@floating>@ <|@
tid v477 <|@
result [v45|QWORD + 280] <|@
d <@d|@=== Debug Properties ===
displacement: 280
stamp: void*
stride: S1
=== Inputs ===
base: j416 
index: - 
=== Succesors ===
=== Usages ===
v410 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j416 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 84]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
address: v477 
=== Succesors ===
next: v419 
=== Usages ===
=== Predecessor ===
v418 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v477 #next: v419  <|@  <|@
f <@~|@floating>@ <|@
tid v475 <|@
result [v45|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j416 
index: - 
=== Succesors ===
=== Usages ===
v419 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j416 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v475 
lastLocationAccess: - 
value: j254 
stateAfter: - 
=== Succesors ===
next: v422 
=== Usages ===
=== Predecessor ===
v410 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v475 lastLocationAccess: - value: j254 stateAfter: - #next: v422  <|@  <|@
f <@~|@floating>@ <|@
tid v479 <|@
result [v45|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j416 
index: - 
=== Succesors ===
=== Usages ===
v422 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j416 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v437 <|@
result meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v422 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v479 
lastLocationAccess: - 
value: v437 
stateAfter: - 
=== Succesors ===
next: v423 
=== Usages ===
=== Predecessor ===
v419 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v479 lastLocationAccess: - value: v437 stateAfter: - #next: v423  <|@  <|@
f <@~|@floating>@ <|@
tid v476 <|@
result [v45|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j416 
index: - 
=== Succesors ===
=== Usages ===
v423 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j416 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:177) [bci: 59]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v476 
lastLocationAccess: - 
value: i9 
stateAfter: - 
=== Succesors ===
next: v424 
=== Usages ===
=== Predecessor ===
v422 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v476 lastLocationAccess: - value: i9 stateAfter: - #next: v424  <|@  <|@
f <@~|@floating>@ <|@
tid v478 <|@
result [v45|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j416 
index: - 
=== Succesors ===
=== Usages ===
v424 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j416 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v478 
lastLocationAccess: - 
value: j222 
stateAfter: - 
=== Succesors ===
next: a402 
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v478 lastLocationAccess: - value: j222 stateAfter: - #next: a402  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a402 <|@
result v50|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:278) [bci: 37]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j416 
=== Succesors ===
next: v405 
=== Usages ===
a414 
=== Predecessor ===
v424 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j416 #next: v405  <|@  <|@
f <@*|@fixed>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v406 
=== Predecessor ===
a402 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v45|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v50|QWORD[.]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a414 <|@
result v51|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v406 
values: a402 a403 
=== Succesors ===
=== Usages ===
v450 a204 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v406 values: a402 a403  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v405 v407 
=== Succesors ===
next: v203 
=== Usages ===
a414 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v405 v407 #next: v203  <|@  <|@
f <@~|@floating>@ <|@
tid v450 <|@
result [v51|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a414 
index: - 
=== Succesors ===
=== Usages ===
v203 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a414 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a202 <|@
result v52|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
op: Compress
stamp: n!# byte[]
=== Inputs ===
value: a97 
=== Succesors ===
=== Usages ===
v203 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a97  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v450 
lastLocationAccess: - 
value: a202 
stateAfter: - 
=== Succesors ===
next: v205 
=== Usages ===
=== Predecessor ===
v406 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v450 lastLocationAccess: - value: a202 stateAfter: - #next: v205  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: INIT_LOCATION
nodeSourcePosition: at java.lang.String.subSequence(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a204 
=== Usages ===
=== Predecessor ===
v203 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a204  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a204 <|@
result v51|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.subSequence(int, int) [bci: -6] Placeholder
stamp: a!# java.lang.String
=== Inputs ===
object: a414 
=== Succesors ===
next: v107 
=== Usages ===
a105 
=== Predecessor ===
v205 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a414 #next: v107  <|@  <|@
f <@*|@fixed>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:2839) [bci: 57]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v103 
=== Predecessor ===
a204 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v52|DWORD[_] = COMPRESSPOINTER (input: v44|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1801e864 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v51|QWORD[.] + 20], y: v52|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B45" 
    xhandlers
    flags 
    probability 4531370617721367879
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.substring(String.java:2840) [bci: 47]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: a29 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a29  <|@  <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.lang.String.substring(String.java:2840) [bci: 54]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
referencedType: [null]
returnStamp: a# java.lang.String
signature: [UnresolvedJavaType<[B>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<StringUTF16.newString(byte[], int, int)>
=== Inputs ===
arguments: a117 i2 i23 
=== Succesors ===
=== Usages ===
a29 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a117 i2 i23  <|@  <|@
tid ?218 <|@
d <@d|@=== Debug Properties ===
bci: 54
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<String.substring(int, int)>
localsSize: 5
locksSize: 0
sourceFile: String.java
sourceLine: 2840
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?102 
=== Succesors ===
=== Usages ===
a29 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?102  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a29 <|@
result v53|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 54
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.lang.String.substring(String.java:2840) [bci: 54]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
polymorphic: false
stamp: a# java.lang.String
targetMethod: Direct#StringUTF16.newString
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v169 
stateDuring: ?218 
=== Succesors ===
next: v108 
=== Usages ===
a105 
=== Predecessor ===
v25 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v169 stateDuring: ?218 #next: v108  <|@  <|@
f <@*|@fixed>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:2839) [bci: 57]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v103 
=== Predecessor ===
a29 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:2840) [bci: 54]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.newString(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:54, 3] <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v53|QWORD[.]] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" "B14" "B43" "B44" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a105 <|@
result v54|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# java.lang.String
valueDescription: a java.lang.Object
=== Inputs ===
merge: v103 
values: a1 a52 a204 a29 
=== Succesors ===
=== Usages ===
v8 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v103 values: a1 a52 a204 a29  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v104 v106 v107 v108 
=== Succesors ===
next: v8 
=== Usages ===
a105 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v104 v106 v107 v108 #next: v8  <|@  <|@
f <@*|@fixed>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.subSequence(String.java:2872) [bci: 6]
stamp: void
=== Inputs ===
memoryMap: - 
result: a105 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a105  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6fe89784 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.subSequence(String.java:2872) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.6018906262441794 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4603596568345418578
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v2|DWORD) trueDestinationProbability: 0.9663721533267153 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603414260059205002
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v0|QWORD[.]] destination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600843320827103580
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B44" 
    xhandlers
    flags 
    probability 4601207937399530733
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1801e864 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SUB (x: v2|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.9999787285234901 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601207777090930452
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v1|DWORD) trueDestinationProbability: 0.00977198389730849 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B22" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.7183170795883598 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B21" 
    xhandlers
    flags 
    probability 4599032071156696725
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 0.24957691254844944 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597213233028029193
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593072671573930308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA address: [v25|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = AND x: v26|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = ADD (x: v27|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v28|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4599735042323379768
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA address: [v27|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v30|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4599674408099325029
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4629886495576233067
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v27|QWORD, y: v31|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4629839598793565730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD + v31|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA address: [v31|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v32|QWORD] destination: B28 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4599674408099325029
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599735042323379768
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE input: v24|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|QWORD[.]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B24" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = SUB (x: v4|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v36|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = CMOVE (falseValue: v36|DWORD, ~trueValue: v9|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v37|DWORD, y: v37|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = SUB (x: v4|DWORD, ~y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v38|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v37|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[*] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVE input: v37|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v40|QWORD[*] + v42|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v41|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v43|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4590015800143340609
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = AND x: v15|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = ADD (x: v16|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v17|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589962286348538852
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v13|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v13|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v20|QWORD[.]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B40" 
    xhandlers
    flags 
    probability 4590015800143340609
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[*] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[*] = MOVE input: v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v22|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v23|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.]] destination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA address: [v45|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v46|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4601059508744723248
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v45|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v50|QWORD[.]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v52|DWORD[_] = COMPRESSPOINTER (input: v44|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1801e864 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v51|QWORD[.] + 20], y: v52|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" "B14" "B43" "B44" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4581491086567258382
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4571426031092231524
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v47|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} v44|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:19, 41, 3] <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} v44|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [v48|QWORD[.]] state [bci:19, 41, 3] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v48|QWORD[.]] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B45" 
    xhandlers
    flags 
    probability 4571363187372395366
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:""] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B14 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B32" 
    xhandlers
    flags 
    probability 4569985998969753389
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v1|DWORD v2|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10, 16, 41, 3] <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v1|DWORD v2|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [v29|QWORD[.]] state [bci:10, 16, 41, 3] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|QWORD[.]] destination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569907603205318980
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v24|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4559988989006196334
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:2838) [bci: 22]
locals: v0|QWORD[.] int[0|0x0] v2|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:22, 3] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:2838) [bci: 22]
locals: v0|QWORD[.] int[0|0x0] v2|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction NULLCHECK address: [v18|QWORD[.]] state [bci:22, 3] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|QWORD[.]] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B45" 
    xhandlers
    flags 
    probability 4531370617721367879
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:2840) [bci: 54]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.newString(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:54, 3] <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v53|QWORD[.]] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-54809|0xffffffffffff29e7]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-50195|0xffffffffffff3bed]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-52761|0xffffffffffff31e7]] destination: B33 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-48147|0xffffffffffff43ed]] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-49171|0xffffffffffff3fed]] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.subSequence(String.java:2872) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-53785|0xffffffffffff2de7]] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v1|DWORD v2|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction DEOPT info [bci:10, 16, 41, 3] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: iload_2       
     3: invokevirtual #189        // substring:(int, int)java.lang.String
     6: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6fe89784 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.subSequence(String.java:2872) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.6018906262441794 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4603596568345418578
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v2|DWORD) trueDestinationProbability: 0.9663721533267153 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603414260059205002
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v0|QWORD[.]] destination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600843320827103580
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B44" 
    xhandlers
    flags 
    probability 4601207937399530733
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1801e864 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SUB (x: v2|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.9999787285234901 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601207777090930452
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v1|DWORD) trueDestinationProbability: 0.00977198389730849 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B22" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.7183170795883598 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B21" 
    xhandlers
    flags 
    probability 4599032071156696725
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 0.24957691254844944 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597213233028029193
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593072671573930308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA address: [v25|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = AND x: v26|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = ADD (x: v27|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v28|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4599735042323379768
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA address: [v27|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v30|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4599674408099325029
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4629886495576233067
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v27|QWORD, y: v31|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4629839598793565730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD + v31|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA address: [v31|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v32|QWORD] destination: B28 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4599674408099325029
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599735042323379768
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE input: v24|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|QWORD[.]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B24" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = SUB (x: v4|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v36|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = CMOVE (falseValue: v36|DWORD, ~trueValue: v9|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v37|DWORD, y: v37|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = SUB (x: v4|DWORD, ~y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v38|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v37|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[*] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVE input: v37|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v40|QWORD[*] + v42|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v41|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v43|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4590015800143340609
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = AND x: v15|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = ADD (x: v16|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v17|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589962286348538852
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v13|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v13|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v20|QWORD[.]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B40" 
    xhandlers
    flags 
    probability 4590015800143340609
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[*] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[*] = MOVE input: v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v22|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v23|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.]] destination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA address: [v45|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v46|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4601059508744723248
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v45|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v50|QWORD[.]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v52|DWORD[_] = COMPRESSPOINTER (input: v44|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1801e864 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v51|QWORD[.] + 20], y: v52|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" "B14" "B43" "B44" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4581491086567258382
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4571426031092231524
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v47|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} v44|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:19, 41, 3] <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} v44|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [v48|QWORD[.]] state [bci:19, 41, 3] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v48|QWORD[.]] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B45" 
    xhandlers
    flags 
    probability 4571363187372395366
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:""] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B14 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B32" 
    xhandlers
    flags 
    probability 4569985998969753389
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v55|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v1|DWORD v2|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10, 16, 41, 3] <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v1|DWORD v2|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [v29|QWORD[.]] state [bci:10, 16, 41, 3] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|QWORD[.]] destination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569907603205318980
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v24|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4559988989006196334
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v56|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:2838) [bci: 22]
locals: v0|QWORD[.] int[0|0x0] v2|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:22, 3] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:2838) [bci: 22]
locals: v0|QWORD[.] int[0|0x0] v2|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction NULLCHECK address: [v18|QWORD[.]] state [bci:22, 3] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|QWORD[.]] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B45" 
    xhandlers
    flags 
    probability 4531370617721367879
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:2840) [bci: 54]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.newString(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:54, 3] <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v53|QWORD[.]] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-54809|0xffffffffffff29e7]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-50195|0xffffffffffff3bed]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-52761|0xffffffffffff31e7]] destination: B33 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-48147|0xffffffffffff43ed]] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-49171|0xffffffffffff3fed]] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.subSequence(String.java:2872) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-53785|0xffffffffffff2de7]] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v1|DWORD v2|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction DEOPT info [bci:10, 16, 41, 3] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: iload_2       
     3: invokevirtual #189        // substring:(int, int)java.lang.String
     6: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6fe89784 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.subSequence(String.java:2872) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.6018906262441794 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4603596568345418578
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v2|DWORD) trueDestinationProbability: 0.9663721533267153 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603414260059205002
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v0|QWORD[.]] destination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600843320827103580
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B44" 
    xhandlers
    flags 
    probability 4601207937399530733
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1801e864 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SUB (x: v2|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.9999787285234901 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601207777090930452
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v1|DWORD) trueDestinationProbability: 0.00977198389730849 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B22" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.7183170795883598 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B21" 
    xhandlers
    flags 
    probability 4599032071156696725
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 0.24957691254844944 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597213233028029193
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593072671573930308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA address: [v25|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = AND x: v26|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = ADD (x: v27|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v28|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4599735042323379768
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA address: [v27|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v30|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4599674408099325029
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4629886495576233067
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v27|QWORD, y: v31|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4629839598793565730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD + v31|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA address: [v31|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v32|QWORD] destination: B28 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4599674408099325029
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599735042323379768
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE input: v24|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|QWORD[.]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B24" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = SUB (x: v4|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v36|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = CMOVE (falseValue: v36|DWORD, ~trueValue: v9|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v37|DWORD, y: v37|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = SUB (x: v4|DWORD, ~y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v38|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v37|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[*] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVE input: v37|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v40|QWORD[*] + v42|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v41|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v43|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4590015800143340609
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = AND x: v15|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = ADD (x: v16|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v17|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589962286348538852
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v13|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v13|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v20|QWORD[.]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B40" 
    xhandlers
    flags 
    probability 4590015800143340609
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[*] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[*] = MOVE input: v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v22|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v23|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.]] destination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA address: [v45|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v46|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4601059508744723248
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v45|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v50|QWORD[.]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v52|DWORD[_] = COMPRESSPOINTER (input: v44|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1801e864 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v51|QWORD[.] + 20], y: v52|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" "B14" "B43" "B44" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4581491086567258382
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4571426031092231524
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v47|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} v44|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:19, 41, 3] <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} v44|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [v48|QWORD[.]] state [bci:19, 41, 3] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v48|QWORD[.]] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B45" 
    xhandlers
    flags 
    probability 4571363187372395366
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:""] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B14 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B32" 
    xhandlers
    flags 
    probability 4569985998969753389
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v55|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v1|DWORD v2|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10, 16, 41, 3] <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v1|DWORD v2|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [v29|QWORD[.]] state [bci:10, 16, 41, 3] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|QWORD[.]] destination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569907603205318980
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v24|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4559988989006196334
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v56|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:2838) [bci: 22]
locals: v0|QWORD[.] int[0|0x0] v2|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:22, 3] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:2838) [bci: 22]
locals: v0|QWORD[.] int[0|0x0] v2|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction NULLCHECK address: [v18|QWORD[.]] state [bci:22, 3] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|QWORD[.]] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B45" 
    xhandlers
    flags 
    probability 4531370617721367879
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:2840) [bci: 54]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.newString(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:54, 3] <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v53|QWORD[.]] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-54809|0xffffffffffff29e7]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-50195|0xffffffffffff3bed]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-52761|0xffffffffffff31e7]] destination: B33 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-48147|0xffffffffffff43ed]] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-49171|0xffffffffffff3fed]] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.subSequence(String.java:2872) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-53785|0xffffffffffff2de7]] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v1|DWORD v2|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction DEOPT info [bci:10, 16, 41, 3] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: iload_2       
     3: invokevirtual #189        // substring:(int, int)java.lang.String
     6: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6fe89784 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.subSequence(String.java:2872) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.6018906262441794 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4603596568345418578
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v2|DWORD) trueDestinationProbability: 0.9663721533267153 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603414260059205002
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v0|QWORD[.]] destination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600843320827103580
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B44" 
    xhandlers
    flags 
    probability 4601207937399530733
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1801e864 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SUB (x: v2|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.9999787285234901 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601207777090930452
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v1|DWORD) trueDestinationProbability: 0.00977198389730849 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B22" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.7183170795883598 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B21" 
    xhandlers
    flags 
    probability 4599032071156696725
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 0.24957691254844944 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597213233028029193
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593072671573930308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA address: [v25|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = AND x: v26|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = ADD (x: v27|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v28|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4599735042323379768
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA address: [v27|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v30|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4599674408099325029
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4629886495576233067
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v27|QWORD, y: v31|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4629839598793565730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD + v31|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA address: [v31|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v32|QWORD] destination: B28 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4599674408099325029
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599735042323379768
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE input: v24|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|QWORD[.]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B24" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = SUB (x: v4|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v36|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = CMOVE (falseValue: v36|DWORD, ~trueValue: v9|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v37|DWORD, y: v37|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = SUB (x: v4|DWORD, ~y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v38|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v37|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[*] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVE input: v37|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v40|QWORD[*] + v42|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v41|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v43|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4590015800143340609
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = AND x: v15|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = ADD (x: v16|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v17|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589962286348538852
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v13|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v13|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v20|QWORD[.]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B40" 
    xhandlers
    flags 
    probability 4590015800143340609
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[*] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[*] = MOVE input: v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v22|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v23|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.]] destination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA address: [v45|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v46|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4601059508744723248
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v45|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v50|QWORD[.]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v52|DWORD[_] = COMPRESSPOINTER (input: v44|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1801e864 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v51|QWORD[.] + 20], y: v52|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" "B14" "B43" "B44" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4581491086567258382
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4571426031092231524
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v47|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} v44|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:19, 41, 3] <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} v44|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [v48|QWORD[.]] state [bci:19, 41, 3] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v48|QWORD[.]] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B45" 
    xhandlers
    flags 
    probability 4571363187372395366
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:""] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B14 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B32" 
    xhandlers
    flags 
    probability 4569985998969753389
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v55|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v1|DWORD v2|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10, 16, 41, 3] <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v1|DWORD v2|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [v29|QWORD[.]] state [bci:10, 16, 41, 3] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|QWORD[.]] destination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569907603205318980
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v24|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4559988989006196334
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v56|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:2838) [bci: 22]
locals: v0|QWORD[.] int[0|0x0] v2|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:22, 3] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:2838) [bci: 22]
locals: v0|QWORD[.] int[0|0x0] v2|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction NULLCHECK address: [v18|QWORD[.]] state [bci:22, 3] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|QWORD[.]] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B45" 
    xhandlers
    flags 
    probability 4531370617721367879
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:2840) [bci: 54]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.newString(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:54, 3] <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v53|QWORD[.]] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-54809|0xffffffffffff29e7]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-50195|0xffffffffffff3bed]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-52761|0xffffffffffff31e7]] destination: B33 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-48147|0xffffffffffff43ed]] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-49171|0xffffffffffff3fed]] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.subSequence(String.java:2872) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-53785|0xffffffffffff2de7]] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v1|DWORD v2|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction DEOPT info [bci:10, 16, 41, 3] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: iload_2       
     3: invokevirtual #189        // substring:(int, int)java.lang.String
     6: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6fe89784 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.String.subSequence(String.java:2872) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.6018906262441794 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4603596568345418578
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v2|DWORD) trueDestinationProbability: 0.9663721533267153 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603414260059205002
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v0|QWORD[.]] destination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600843320827103580
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B44" 
    xhandlers
    flags 
    probability 4601207937399530733
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1801e864 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SUB (x: v2|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.9999787285234901 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601207777090930452
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v1|DWORD) trueDestinationProbability: 0.00977198389730849 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B22" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.7183170795883598 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B21" 
    xhandlers
    flags 
    probability 4599032071156696725
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 0.24957691254844944 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597213233028029193
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593072671573930308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA address: [v25|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = AND x: v26|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = ADD (x: v27|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v28|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4599735042323379768
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA address: [v27|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v30|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4599674408099325029
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4629886495576233067
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v27|QWORD, y: v31|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4629839598793565730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD + v31|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA address: [v31|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v32|QWORD] destination: B28 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4599674408099325029
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599735042323379768
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE input: v24|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|QWORD[.]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B24" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = SUB (x: v4|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v36|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = CMOVE (falseValue: v36|DWORD, ~trueValue: v9|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v37|DWORD, y: v37|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = SUB (x: v4|DWORD, ~y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v38|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v37|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[*] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVE input: v37|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v40|QWORD[*] + v42|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v41|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v43|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4590015800143340609
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = AND x: v15|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = ADD (x: v16|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v17|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589962286348538852
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v13|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v13|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v20|QWORD[.]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B40" 
    xhandlers
    flags 
    probability 4590015800143340609
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[*] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[*] = MOVE input: v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v22|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v23|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.]] destination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA address: [v45|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v46|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4601059508744723248
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v45|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v50|QWORD[.]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v52|DWORD[_] = COMPRESSPOINTER (input: v44|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1801e864 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v51|QWORD[.] + 20], y: v52|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" "B14" "B43" "B44" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4581491086567258382
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4571426031092231524
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v47|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} v44|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:19, 41, 3] <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} v44|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [v48|QWORD[.]] state [bci:19, 41, 3] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v48|QWORD[.]] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B45" 
    xhandlers
    flags 
    probability 4571363187372395366
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:""] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B14 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B32" 
    xhandlers
    flags 
    probability 4569985998969753389
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v55|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v1|DWORD v2|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10, 16, 41, 3] <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v1|DWORD v2|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [v29|QWORD[.]] state [bci:10, 16, 41, 3] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|QWORD[.]] destination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569907603205318980
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v24|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4559988989006196334
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v56|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: v0|QWORD[.] int[0|0x0] v2|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:22, 3] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: v0|QWORD[.] int[0|0x0] v2|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction NULLCHECK address: [v18|QWORD[.]] state [bci:22, 3] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|QWORD[.]] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B45" 
    xhandlers
    flags 
    probability 4531370617721367879
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2840) [bci: 54]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.newString(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:54, 3] <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v53|QWORD[.]] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-54809|0xffffffffffff29e7]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-50195|0xffffffffffff3bed]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-52761|0xffffffffffff31e7]] destination: B33 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-48147|0xffffffffffff43ed]] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-49171|0xffffffffffff3fed]] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.String.subSequence(String.java:2872) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-53785|0xffffffffffff2de7]] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v1|DWORD v2|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction DEOPT info [bci:10, 16, 41, 3] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: iload_2       
     3: invokevirtual #189        // substring:(int, int)java.lang.String
     6: areturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6fe89784 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.lang.String.subSequence(String.java:2872) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction v5|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   70  <|@ instruction rcx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction v6|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.6018906262441794 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4603596568345418578
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v2|DWORD) trueDestinationProbability: 0.9663721533267153 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603414260059205002
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction JUMP ~outgoingValues: [v0|QWORD[.]] destination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600843320827103580
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B44" 
    xhandlers
    flags 
    probability 4601207937399530733
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1801e864 encoding: base: 0 shift: 3 <|@ <|@
      nr  138  <|@ instruction v9|DWORD = SUB (x: v2|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.9999787285234901 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601207777090930452
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v1|DWORD) trueDestinationProbability: 0.00977198389730849 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B22" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.7183170795883598 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B21" 
    xhandlers
    flags 
    probability 4599032071156696725
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 0.24957691254844944 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597213233028029193
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593072671573930308
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction v24|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  226  <|@ instruction v25|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction v26|QWORD = LEA address: [v25|QWORD + 23] size: QWORD <|@ <|@
      nr  230  <|@ instruction v27|QWORD = AND x: v26|QWORD y: -8 size: QWORD <|@ <|@
      nr  232  <|@ instruction v28|QWORD = ADD (x: v27|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: v28|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4599735042323379768
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction MOV (x: [r15|QWORD + 440], y: v28|QWORD) size: QWORD <|@ <|@
      nr  268  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  270  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  272  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  274  <|@ instruction MOV x: [v24|QWORD] y: 1 size: QWORD <|@ <|@
      nr  276  <|@ instruction MOV x: [v24|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  278  <|@ instruction MOV (x: [v24|QWORD + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr  280  <|@ instruction v30|QWORD = LEA address: [v27|QWORD - 16] size: QWORD <|@ <|@
      nr  282  <|@ instruction CMPCONSTBRANCH x: v30|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4599674408099325029
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4629886495576233067
    begin_IR
      LIR
      nr  294  <|@ instruction [v31|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction CMPBRANCH (x: v27|QWORD, y: v31|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4629839598793565730
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction MOV x: [v24|QWORD + v31|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  324  <|@ instruction v32|QWORD = LEA address: [v31|QWORD + 8] size: QWORD <|@ <|@
      nr  326  <|@ instruction JUMP ~outgoingValues: [v32|QWORD] destination: B28 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4599674408099325029
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599735042323379768
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction v34|QWORD[.] = MOVE input: v24|QWORD moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction JUMP ~outgoingValues: [v34|QWORD[.]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B24" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  352  <|@ instruction [v35|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction v36|DWORD = SUB (x: v4|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr  370  <|@ instruction CMP (x: v36|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr  372  <|@ instruction v37|DWORD = CMOVE (falseValue: v36|DWORD, ~trueValue: v9|DWORD) condition: > <|@ <|@
      nr  374  <|@ instruction TESTBRANCH (x: v37|DWORD, y: v37|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction v38|DWORD = SUB (x: v4|DWORD, ~y: v37|DWORD) size: DWORD <|@ <|@
      nr  390  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v38|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction CMPBRANCH (x: v37|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction v40|QWORD[*] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction v41|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction v42|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr  444  <|@ instruction v43|QWORD = MOVE input: v37|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction rdi|QWORD = LEA address: [v40|QWORD[*] + v42|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  448  <|@ instruction rsi|QWORD = LEA address: [v41|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  450  <|@ instruction rdx|QWORD = MOVE input: v43|QWORD moveKind: QWORD <|@ <|@
      nr  452  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4590015800143340609
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction v13|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  482  <|@ instruction v14|QWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 23] size: QWORD <|@ <|@
      nr  486  <|@ instruction v16|QWORD = AND x: v15|QWORD y: -8 size: QWORD <|@ <|@
      nr  488  <|@ instruction v17|QWORD = ADD (x: v16|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr  490  <|@ instruction CMPBRANCH (x: v17|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589962286348538852
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction MOV (x: [r15|QWORD + 440], y: v17|QWORD) size: QWORD <|@ <|@
      nr  518  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  520  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  522  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  524  <|@ instruction MOV x: [v13|QWORD] y: 1 size: QWORD <|@ <|@
      nr  526  <|@ instruction MOV x: [v13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  528  <|@ instruction MOV (x: [v13|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr  530  <|@ instruction v20|QWORD[.] = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction JUMP ~outgoingValues: [v20|QWORD[.]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B40" 
    xhandlers
    flags 
    probability 4590015800143340609
    begin_IR
      LIR
      nr  534  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction v22|QWORD[*] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction v23|QWORD[*] = MOVE input: v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr  568  <|@ instruction rdi|QWORD = LEA address: [v22|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  570  <|@ instruction rsi|QWORD = LEA address: [v23|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  572  <|@ instruction rdx|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  576  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.]] destination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  578  <|@ instruction [v44|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction v45|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  598  <|@ instruction v46|QWORD = LEA address: [v45|QWORD + 24] size: QWORD <|@ <|@
      nr  600  <|@ instruction CMPBRANCH (x: v46|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4601059508744723248
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction MOV (x: [r15|QWORD + 440], y: v46|QWORD) size: QWORD <|@ <|@
      nr  626  <|@ instruction AMD64PREFETCH ~address: [v45|QWORD + 280] instr: 0 <|@ <|@
      nr  628  <|@ instruction MOV x: [v45|QWORD] y: 1 size: QWORD <|@ <|@
      nr  630  <|@ instruction MOV x: [v45|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  632  <|@ instruction MOV x: [v45|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  634  <|@ instruction MOV x: [v45|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  636  <|@ instruction v50|QWORD[.] = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [v50|QWORD[.]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  640  <|@ instruction [v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction v52|DWORD[_] = COMPRESSPOINTER (input: v44|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1801e864 encoding: base: 0 shift: 3 <|@ <|@
      nr  654  <|@ instruction MOV (x: [v51|QWORD[.] + 20], y: v52|DWORD[_]) size: DWORD <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" "B14" "B43" "B44" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  658  <|@ instruction [v54|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction rax|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr  678  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4581491086567258382
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4571426031092231524
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction v47|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  712  <|@ instruction rsi|QWORD = MOVE input: v47|QWORD moveKind: QWORD <|@ <|@
      nr  714  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} v44|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:19, 41, 3] <|@ <|@
      nr  716  <|@ instruction v48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} v44|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [v48|QWORD[.]] state [bci:19, 41, 3] <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [v48|QWORD[.]] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B45" 
    xhandlers
    flags 
    probability 4571363187372395366
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction v10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:""] <|@ <|@
      nr  736  <|@ instruction v11|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B14 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B32" 
    xhandlers
    flags 
    probability 4569985998969753389
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction v55|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction rsi|QWORD = MOVE input: v55|QWORD moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction rdx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr  766  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v1|DWORD v2|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10, 16, 41, 3] <|@ <|@
      nr  768  <|@ instruction v29|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  770  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v1|DWORD v2|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [v29|QWORD[.]] state [bci:10, 16, 41, 3] <|@ <|@
      nr  772  <|@ instruction JUMP ~outgoingValues: [v29|QWORD[.]] destination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569907603205318980
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction rcx|QWORD = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction ZERO_MEMORY (pointer: [v24|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  798  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4559988989006196334
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  802  <|@ instruction v56|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction rsi|QWORD = MOVE input: v56|QWORD moveKind: QWORD <|@ <|@
      nr  824  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr  826  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: v0|QWORD[.] int[0|0x0] v2|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:22, 3] <|@ <|@
      nr  828  <|@ instruction v18|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  830  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: v0|QWORD[.] int[0|0x0] v2|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction NULLCHECK address: [v18|QWORD[.]] state [bci:22, 3] <|@ <|@
      nr  832  <|@ instruction JUMP ~outgoingValues: [v18|QWORD[.]] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B45" 
    xhandlers
    flags 
    probability 4531370617721367879
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr  860  <|@ instruction rcx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2840) [bci: 54]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.newString(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:54, 3] <|@ <|@
      nr  864  <|@ instruction v53|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ instruction JUMP ~outgoingValues: [v53|QWORD[.]] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [int[-54809|0xffffffffffff29e7]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction JUMP ~outgoingValues: [int[-50195|0xffffffffffff3bed]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction JUMP ~outgoingValues: [int[-52761|0xffffffffffff31e7]] destination: B33 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [int[-48147|0xffffffffffff43ed]] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction JUMP ~outgoingValues: [int[-49171|0xffffffffffff3fed]] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  918  <|@ instruction [v7|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v7|DWORD) size: DWORD <|@ <|@
      nr  936  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  938  <|@ st <@st|@live-base-pointers: []
java.lang.String.subSequence(String.java:2872) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction JUMP ~outgoingValues: [int[-53785|0xffffffffffff2de7]] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  950  <|@ instruction [v39|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v39|DWORD) size: DWORD <|@ <|@
      nr  968  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  970  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v1|DWORD v2|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction DEOPT info [bci:10, 16, 41, 3] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: iload_2       
     3: invokevirtual #189        // substring:(int, int)java.lang.String
     6: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6fe89784 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.lang.String.subSequence(String.java:2872) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction v5|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   70  <|@ instruction rcx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction v6|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.6018906262441794 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4603596568345418578
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v2|DWORD) trueDestinationProbability: 0.9663721533267153 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603414260059205002
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction JUMP ~outgoingValues: [v0|QWORD[.]] destination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600843320827103580
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B44" 
    xhandlers
    flags 
    probability 4601207937399530733
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1801e864 encoding: base: 0 shift: 3 <|@ <|@
      nr  138  <|@ instruction v9|DWORD = SUB (x: v2|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.9999787285234901 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601207777090930452
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v1|DWORD) trueDestinationProbability: 0.00977198389730849 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B22" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.7183170795883598 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B21" 
    xhandlers
    flags 
    probability 4599032071156696725
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 0.24957691254844944 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597213233028029193
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593072671573930308
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction v24|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  226  <|@ instruction v25|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction v26|QWORD = LEA address: [v25|QWORD + 23] size: QWORD <|@ <|@
      nr  230  <|@ instruction v27|QWORD = AND x: v26|QWORD y: -8 size: QWORD <|@ <|@
      nr  232  <|@ instruction v28|QWORD = ADD (x: v27|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: v28|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4599735042323379768
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction MOV (x: [r15|QWORD + 440], y: v28|QWORD) size: QWORD <|@ <|@
      nr  268  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  270  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  272  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  274  <|@ instruction MOV x: [v24|QWORD] y: 1 size: QWORD <|@ <|@
      nr  276  <|@ instruction MOV x: [v24|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  278  <|@ instruction MOV (x: [v24|QWORD + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr  280  <|@ instruction v30|QWORD = LEA address: [v27|QWORD - 16] size: QWORD <|@ <|@
      nr  282  <|@ instruction CMPCONSTBRANCH x: v30|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4599674408099325029
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4629886495576233067
    begin_IR
      LIR
      nr  294  <|@ instruction [v31|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction CMPBRANCH (x: v27|QWORD, y: v31|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4629839598793565730
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction MOV x: [v24|QWORD + v31|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  324  <|@ instruction v32|QWORD = LEA address: [v31|QWORD + 8] size: QWORD <|@ <|@
      nr  326  <|@ instruction JUMP ~outgoingValues: [v32|QWORD] destination: B28 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4599674408099325029
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599735042323379768
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction v34|QWORD[.] = MOVE input: v24|QWORD moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction JUMP ~outgoingValues: [v34|QWORD[.]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B24" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  352  <|@ instruction [v35|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction v36|DWORD = SUB (x: v4|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr  370  <|@ instruction CMP (x: v36|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr  372  <|@ instruction v37|DWORD = CMOVE (falseValue: v36|DWORD, ~trueValue: v9|DWORD) condition: > <|@ <|@
      nr  374  <|@ instruction TESTBRANCH (x: v37|DWORD, y: v37|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction v38|DWORD = SUB (x: v4|DWORD, ~y: v37|DWORD) size: DWORD <|@ <|@
      nr  390  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v38|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction CMPBRANCH (x: v37|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction v40|QWORD[*] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction v41|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction v42|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr  444  <|@ instruction v43|QWORD = MOVE input: v37|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction rdi|QWORD = LEA address: [v40|QWORD[*] + v42|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  448  <|@ instruction rsi|QWORD = LEA address: [v41|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  450  <|@ instruction rdx|QWORD = MOVE input: v43|QWORD moveKind: QWORD <|@ <|@
      nr  452  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4590015800143340609
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction v13|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  482  <|@ instruction v14|QWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 23] size: QWORD <|@ <|@
      nr  486  <|@ instruction v16|QWORD = AND x: v15|QWORD y: -8 size: QWORD <|@ <|@
      nr  488  <|@ instruction v17|QWORD = ADD (x: v16|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr  490  <|@ instruction CMPBRANCH (x: v17|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589962286348538852
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction MOV (x: [r15|QWORD + 440], y: v17|QWORD) size: QWORD <|@ <|@
      nr  518  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  520  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  522  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  524  <|@ instruction MOV x: [v13|QWORD] y: 1 size: QWORD <|@ <|@
      nr  526  <|@ instruction MOV x: [v13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  528  <|@ instruction MOV (x: [v13|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr  530  <|@ instruction v20|QWORD[.] = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction JUMP ~outgoingValues: [v20|QWORD[.]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B40" 
    xhandlers
    flags 
    probability 4590015800143340609
    begin_IR
      LIR
      nr  534  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction v22|QWORD[*] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction v23|QWORD[*] = MOVE input: v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr  568  <|@ instruction rdi|QWORD = LEA address: [v22|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  570  <|@ instruction rsi|QWORD = LEA address: [v23|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  572  <|@ instruction rdx|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  576  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.]] destination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  578  <|@ instruction [v44|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction v45|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  598  <|@ instruction v46|QWORD = LEA address: [v45|QWORD + 24] size: QWORD <|@ <|@
      nr  600  <|@ instruction CMPBRANCH (x: v46|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4601059508744723248
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction MOV (x: [r15|QWORD + 440], y: v46|QWORD) size: QWORD <|@ <|@
      nr  626  <|@ instruction AMD64PREFETCH ~address: [v45|QWORD + 280] instr: 0 <|@ <|@
      nr  628  <|@ instruction MOV x: [v45|QWORD] y: 1 size: QWORD <|@ <|@
      nr  630  <|@ instruction MOV x: [v45|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  632  <|@ instruction MOV x: [v45|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  634  <|@ instruction MOV x: [v45|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  636  <|@ instruction v50|QWORD[.] = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [v50|QWORD[.]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  640  <|@ instruction [v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction v52|DWORD[_] = COMPRESSPOINTER (input: v44|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1801e864 encoding: base: 0 shift: 3 <|@ <|@
      nr  654  <|@ instruction MOV (x: [v51|QWORD[.] + 20], y: v52|DWORD[_]) size: DWORD <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" "B14" "B43" "B44" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  658  <|@ instruction [v54|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction rax|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr  678  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4581491086567258382
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4571426031092231524
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction v47|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  712  <|@ instruction rsi|QWORD = MOVE input: v47|QWORD moveKind: QWORD <|@ <|@
      nr  714  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} v44|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:19, 41, 3] <|@ <|@
      nr  716  <|@ instruction v48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} v44|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [v48|QWORD[.]] state [bci:19, 41, 3] <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [v48|QWORD[.]] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B45" 
    xhandlers
    flags 
    probability 4571363187372395366
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction v10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:""] <|@ <|@
      nr  736  <|@ instruction v11|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B14 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B32" 
    xhandlers
    flags 
    probability 4569985998969753389
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction v55|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction rsi|QWORD = MOVE input: v55|QWORD moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction rdx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr  766  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v1|DWORD v2|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10, 16, 41, 3] <|@ <|@
      nr  768  <|@ instruction v29|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  770  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v1|DWORD v2|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [v29|QWORD[.]] state [bci:10, 16, 41, 3] <|@ <|@
      nr  772  <|@ instruction JUMP ~outgoingValues: [v29|QWORD[.]] destination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569907603205318980
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction rcx|QWORD = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction ZERO_MEMORY (pointer: [v24|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  798  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4559988989006196334
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  802  <|@ instruction v56|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction rsi|QWORD = MOVE input: v56|QWORD moveKind: QWORD <|@ <|@
      nr  824  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr  826  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: v0|QWORD[.] int[0|0x0] v2|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:22, 3] <|@ <|@
      nr  828  <|@ instruction v18|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  830  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: v0|QWORD[.] int[0|0x0] v2|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction NULLCHECK address: [v18|QWORD[.]] state [bci:22, 3] <|@ <|@
      nr  832  <|@ instruction JUMP ~outgoingValues: [v18|QWORD[.]] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B45" 
    xhandlers
    flags 
    probability 4531370617721367879
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr  860  <|@ instruction rcx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2840) [bci: 54]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.newString(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:54, 3] <|@ <|@
      nr  864  <|@ instruction v53|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ instruction JUMP ~outgoingValues: [v53|QWORD[.]] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [int[-54809|0xffffffffffff29e7]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction JUMP ~outgoingValues: [int[-50195|0xffffffffffff3bed]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction JUMP ~outgoingValues: [int[-52761|0xffffffffffff31e7]] destination: B33 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [int[-48147|0xffffffffffff43ed]] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction JUMP ~outgoingValues: [int[-49171|0xffffffffffff3fed]] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  918  <|@ instruction [v7|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v7|DWORD) size: DWORD <|@ <|@
      nr  936  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  938  <|@ st <@st|@live-base-pointers: []
java.lang.String.subSequence(String.java:2872) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction JUMP ~outgoingValues: [int[-53785|0xffffffffffff2de7]] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  950  <|@ instruction [v39|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v39|DWORD) size: DWORD <|@ <|@
      nr  968  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  970  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v1|DWORD v2|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction DEOPT info [bci:10, 16, 41, 3] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: iload_2       
     3: invokevirtual #189        // substring:(int, int)java.lang.String
     6: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q v54|q [0, 1[[452, 453[[574, 575[[676, 678[[714, 716[[766, 768[[796, 797[[826, 828[[862, 864[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v5|d [0, 32[[70, 73[[452, 453[[574, 575[[794, 797[[860, 863[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v43|q [0, 30[[450, 453[[572, 575[[764, 766[[824, 826[[858, 863[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 24[[452, 453[[574, 575[[862, 863[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v47|q [0, 28[[448, 453[[570, 575[[712, 714[[762, 766[[822, 826[[856, 863[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[446, 453[[568, 575[[796, 797[[862, 863[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|- [28, 109[[110, 180[[456, 492[[680, 690[[800, 831[[878, 888[[898, 939[28 MustHaveRegister 34 MustHaveRegister 68 MustHaveRegister 108 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d rdx|- [30, 100[[110, 442[[680, 690[[740, 800[[834, 858[[868, 939[[940, 971[30 MustHaveRegister 38 MustHaveRegister 50 MustHaveRegister 86 MustHaveRegister 138 ShouldHaveRegister 152 ShouldHaveRegister 166 MustHaveRegister 368 ShouldHaveRegister 390 MustHaveRegister 442 ShouldHaveRegister 858 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d rcx|- [32, 100[[110, 404[[456, 492[[680, 690[[740, 831[[868, 939[[940, 971[32 MustHaveRegister 50 ShouldHaveRegister 74 MustHaveRegister 98 ShouldHaveRegister 138 MustHaveRegister 152 MustHaveRegister 178 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [34, 100[[110, 136[[680, 690[34 MustHaveRegister 36 MustHaveRegister 136 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [36, 100[[110, 388[[456, 528[[680, 690[[740, 824[36 MustHaveRegister 72 ShouldHaveRegister 178 MustHaveRegister 368 MustHaveRegister 388 MustHaveRegister 482 ShouldHaveRegister 528 MustHaveRegister 824 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [68, 100[[110, 140[[680, 690[68 MustHaveRegister 70 ShouldHaveRegister 140 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d v4|d [72, 98[72 MustHaveRegister 74 ShouldHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d -1 [918, 934[934 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q v3|d [136, 438[[456, 564[[740, 856[[868, 878[[888, 898[[940, 971[136 MustHaveRegister 438 ShouldHaveRegister 564 ShouldHaveRegister 856 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d v2|d [138, 402[[740, 800[[834, 860[138 MustHaveRegister 226 ShouldHaveRegister 278 MustHaveRegister 370 ShouldHaveRegister 372 MustHaveRegister 402 ShouldHaveRegister 764 ShouldHaveRegister 860 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[v10|q]" v10|q -1 [734, 736[734 MustHaveRegister 736 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[v11|q]" v11|q v10|q [736, 739[736 MustHaveRegister 738 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[v13|q]" v13|q -1 [480, 530[480 MustHaveRegister 488 ShouldHaveRegister 518 MustHaveRegister 520 MustHaveRegister 522 MustHaveRegister 524 MustHaveRegister 526 MustHaveRegister 528 MustHaveRegister 530 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[v14|q]" v14|q v4|d [482, 572[[800, 834[482 MustHaveRegister 484 MustHaveRegister 572 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[v15|q]" v15|q -1 [484, 486[484 MustHaveRegister 486 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[v16|q]" v16|q v15|q [486, 523[486 MustHaveRegister 488 ShouldHaveRegister 518 MustHaveRegister 520 MustHaveRegister 522 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[v17|q]" v17|q v16|q [488, 516[488 MustHaveRegister 490 MustHaveRegister 516 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[v18|q]" v18|q rax|q [828, 833[828 MustHaveRegister 830 MustHaveRegister 832 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[v20|q]" v20|q v13|q [530, 533[530 MustHaveRegister 532 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[v21|q]" v21|q v20|q [534, 577[566 ShouldHaveRegister 576 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[v22|q]" v22|q v8|q [564, 568[564 MustHaveRegister 568 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[v23|q]" v23|q v21|q [566, 570[566 MustHaveRegister 570 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[v24|q]" v24|q -1 [224, 348[[774, 800[224 MustHaveRegister 232 ShouldHaveRegister 268 MustHaveRegister 270 MustHaveRegister 272 MustHaveRegister 274 MustHaveRegister 276 MustHaveRegister 278 MustHaveRegister 322 MustHaveRegister 327 LiveAtLoopEnd 348 ShouldHaveRegister 796 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[v25|q]" v25|q v9|d [226, 228[226 MustHaveRegister 228 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[v26|q]" v26|q -1 [228, 230[228 MustHaveRegister 230 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[v27|q]" v27|q v26|q [230, 328[230 MustHaveRegister 232 ShouldHaveRegister 268 MustHaveRegister 270 MustHaveRegister 272 MustHaveRegister 280 MustHaveRegister 304 MustHaveRegister 327 LiveAtLoopEnd  "NoSpillStore"
  v28|q QWORD "[v28|q]" v28|q v27|q [232, 266[232 MustHaveRegister 234 MustHaveRegister 266 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[v29|q]" v29|q rax|q [768, 773[768 MustHaveRegister 770 MustHaveRegister 772 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[v30|q]" v30|q -1 [280, 284[[774, 794[280 MustHaveRegister 282 ShouldHaveRegister 794 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[v31|q]" v31|q v32|q [294, 324[304 ShouldHaveRegister 322 MustHaveRegister 324 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[v32|q]" v32|q v31|q [324, 327[324 MustHaveRegister 326 ShouldHaveRegister  "NoSpillStore"
  v34|q QWORD "[v34|q]" v34|q v24|q [348, 351[348 MustHaveRegister 350 ShouldHaveRegister  "NoSpillStore"
  v35|q QWORD "[v35|q]" v35|q v34|q [352, 455[440 ShouldHaveRegister 454 ShouldHaveRegister  "NoSpillStore"
  v36|d DWORD "[v36|d]" v36|d v4|d [368, 372[368 MustHaveRegister 370 MustHaveRegister 372 ShouldHaveRegister  "NoSpillStore"
  v37|d DWORD "[v37|d]" v37|d v36|d [372, 444[372 MustHaveRegister 374 MustHaveRegister 388 ShouldHaveRegister 402 MustHaveRegister 444 ShouldHaveRegister  "NoSpillStore"
  v38|d DWORD "[v38|d]" v38|d v4|d [388, 390[388 MustHaveRegister 390 ShouldHaveRegister  "NoSpillStore"
  v39|d DWORD "[v39|d]" v39|d -1 [950, 966[966 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[v40|q]" v40|q v8|q [438, 446[438 MustHaveRegister 446 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[v41|q]" v41|q v35|q [440, 448[440 MustHaveRegister 448 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[v42|q]" v42|q -1 [442, 446[442 MustHaveRegister 446 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[v43|q]" v43|q v37|d [444, 450[444 MustHaveRegister 450 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[v44|q]" v44|q v35|q [578, 652[[690, 722[652 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[v45|q]" v45|q -1 [596, 636[596 MustHaveRegister 598 MustHaveRegister 626 MustHaveRegister 628 MustHaveRegister 630 MustHaveRegister 632 MustHaveRegister 634 MustHaveRegister 636 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[v46|q]" v46|q -1 [598, 624[598 MustHaveRegister 600 MustHaveRegister 624 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[v47|q]" v47|q -1 [710, 712[710 MustHaveRegister 712 ShouldHaveRegister  "NoSpillStore"
  v48|q QWORD "[v48|q]" v48|q rax|q [716, 721[716 MustHaveRegister 718 MustHaveRegister 720 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[v50|q]" v50|q v45|q [636, 639[636 MustHaveRegister 638 ShouldHaveRegister  "NoSpillStore"
  v51|q QWORD "[v51|q]" v51|q v50|q [640, 657[654 MustHaveRegister 656 ShouldHaveRegister  "NoSpillStore"
  v52|d DWORD "[v52|d]" v52|d v44|q [652, 654[652 MustHaveRegister 654 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[v53|q]" v53|q rax|q [864, 867[864 MustHaveRegister 866 ShouldHaveRegister  "NoSpillStore"
  v54|q QWORD "[v54|q]" v54|q v0|q [658, 676[676 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[v55|q]" v55|q -1 [742, 762[742 MustHaveRegister 762 ShouldHaveRegister  "NoSpillStore"
  v56|q QWORD "[v56|q]" v56|q -1 [802, 822[802 MustHaveRegister 822 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q v54|q [0, 1[[452, 453[[574, 575[[676, 678[[714, 716[[766, 768[[796, 797[[826, 828[[862, 864[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v5|d [0, 32[[70, 73[[452, 453[[574, 575[[794, 797[[860, 863[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v43|q [0, 30[[450, 453[[572, 575[[764, 766[[824, 826[[858, 863[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 24[[452, 453[[574, 575[[862, 863[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v47|q [0, 28[[448, 453[[570, 575[[712, 714[[762, 766[[822, 826[[856, 863[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[446, 453[[568, 575[[796, 797[[862, 863[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  v0|q QWORD "[r10|q]" v0|q rsi|- [28, 109[[110, 180[[456, 492[[680, 690[[800, 831[[878, 888[[898, 939[28 MustHaveRegister 34 MustHaveRegister 68 MustHaveRegister 108 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[r11|d]" v1|d rdx|- [30, 100[[110, 442[[680, 690[[740, 800[[834, 858[[868, 939[[940, 971[30 MustHaveRegister 38 MustHaveRegister 50 MustHaveRegister 86 MustHaveRegister 138 ShouldHaveRegister 152 ShouldHaveRegister 166 MustHaveRegister 368 ShouldHaveRegister 390 MustHaveRegister 442 ShouldHaveRegister 858 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[r8|d]" v2|d rcx|- [32, 100[[110, 404[[456, 492[[680, 690[[740, 831[[868, 939[[940, 971[32 MustHaveRegister 50 ShouldHaveRegister 74 MustHaveRegister 98 ShouldHaveRegister 138 MustHaveRegister 152 MustHaveRegister 178 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[r9|d]" v3|d -1 [34, 100[[110, 136[[680, 690[34 MustHaveRegister 36 MustHaveRegister 136 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[rbx|d]" v4|d -1 [36, 100[[110, 388[[456, 528[[680, 690[[740, 824[36 MustHaveRegister 72 ShouldHaveRegister 178 MustHaveRegister 368 MustHaveRegister 388 MustHaveRegister 482 ShouldHaveRegister 528 MustHaveRegister 824 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[rdi|d]" v5|d -1 [68, 100[[110, 140[[680, 690[68 MustHaveRegister 70 ShouldHaveRegister 140 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[rsi|d]" v6|d v4|d [72, 98[72 MustHaveRegister 74 ShouldHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[r9|d]" v7|d -1 [918, 934[934 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[r9|q]" v8|q v3|d [136, 438[[456, 564[[740, 856[[868, 878[[888, 898[[940, 971[136 MustHaveRegister 438 ShouldHaveRegister 564 ShouldHaveRegister 856 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[rbp|d]" v9|d v2|d [138, 402[[740, 800[[834, 860[138 MustHaveRegister 226 ShouldHaveRegister 278 MustHaveRegister 370 ShouldHaveRegister 372 MustHaveRegister 402 ShouldHaveRegister 764 ShouldHaveRegister 860 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[rsi|q]" v10|q -1 [734, 736[734 MustHaveRegister 736 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rsi|q]" v11|q v10|q [736, 739[736 MustHaveRegister 738 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rdi|q]" v13|q -1 [480, 530[480 MustHaveRegister 488 ShouldHaveRegister 518 MustHaveRegister 520 MustHaveRegister 522 MustHaveRegister 524 MustHaveRegister 526 MustHaveRegister 528 MustHaveRegister 530 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[r11|q]" v14|q v4|d [482, 572[[800, 834[482 MustHaveRegister 484 MustHaveRegister 572 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[rsi|q]" v15|q -1 [484, 486[484 MustHaveRegister 486 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[rsi|q]" v16|q v15|q [486, 523[486 MustHaveRegister 488 ShouldHaveRegister 518 MustHaveRegister 520 MustHaveRegister 522 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[rdx|q]" v17|q v16|q [488, 516[488 MustHaveRegister 490 MustHaveRegister 516 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[rax|q]" v18|q rax|q [828, 833[828 MustHaveRegister 830 MustHaveRegister 832 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[rdi|q]" v20|q v13|q [530, 533[530 MustHaveRegister 532 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[rdi|q]" v21|q v20|q [534, 567[566 ShouldHaveRegister  "OneSpillStore"
  v22|q QWORD "[r9|q]" v22|q v8|q [564, 568[564 MustHaveRegister 568 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[rsi|q]" v23|q v21|q [566, 570[566 MustHaveRegister 570 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[r10|q]" v24|q -1 [224, 348[[774, 800[224 MustHaveRegister 232 ShouldHaveRegister 268 MustHaveRegister 270 MustHaveRegister 272 MustHaveRegister 274 MustHaveRegister 276 MustHaveRegister 278 MustHaveRegister 322 MustHaveRegister 327 LiveAtLoopEnd 348 ShouldHaveRegister 796 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rdi|q]" v25|q v9|d [226, 228[226 MustHaveRegister 228 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[rdi|q]" v26|q -1 [228, 230[228 MustHaveRegister 230 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[rdi|q]" v27|q v26|q [230, 328[230 MustHaveRegister 232 ShouldHaveRegister 268 MustHaveRegister 270 MustHaveRegister 272 MustHaveRegister 280 MustHaveRegister 304 MustHaveRegister 327 LiveAtLoopEnd  "NoSpillStore"
  v28|q QWORD "[rsi|q]" v28|q v27|q [232, 266[232 MustHaveRegister 234 MustHaveRegister 266 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[rax|q]" v29|q rax|q [768, 773[768 MustHaveRegister 770 MustHaveRegister 772 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[rcx|q]" v30|q -1 [280, 284[[774, 794[280 MustHaveRegister 282 ShouldHaveRegister 794 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[rsi|q]" v31|q v32|q [294, 324[304 ShouldHaveRegister 322 MustHaveRegister 324 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[rsi|q]" v32|q v31|q [324, 327[324 MustHaveRegister 326 ShouldHaveRegister  "NoSpillStore"
  v34|q QWORD "[r10|q]" v34|q v24|q [348, 351[348 MustHaveRegister 350 ShouldHaveRegister  "NoSpillStore"
  v35|q QWORD "[r10|q]" v35|q v34|q [352, 451[440 ShouldHaveRegister  "OneSpillStore"
  v36|d DWORD "[rdi|d]" v36|d v4|d [368, 372[368 MustHaveRegister 370 MustHaveRegister 372 ShouldHaveRegister  "NoSpillStore"
  v37|d DWORD "[rdi|d]" v37|d v36|d [372, 444[372 MustHaveRegister 374 MustHaveRegister 388 ShouldHaveRegister 402 MustHaveRegister 444 ShouldHaveRegister  "NoSpillStore"
  v38|d DWORD "[rbx|d]" v38|d v4|d [388, 390[388 MustHaveRegister 390 ShouldHaveRegister  "NoSpillStore"
  v39|d DWORD "[r10|d]" v39|d -1 [950, 966[966 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[r9|q]" v40|q v8|q [438, 446[438 MustHaveRegister 446 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rsi|q]" v41|q v35|q [440, 448[440 MustHaveRegister 448 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[rdx|q]" v42|q -1 [442, 446[442 MustHaveRegister 446 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[r11|q]" v43|q v37|d [444, 450[444 MustHaveRegister 450 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[r10|q]" v44|q v35|q [578, 652[[690, 722[652 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[rax|q]" v45|q -1 [596, 636[596 MustHaveRegister 598 MustHaveRegister 626 MustHaveRegister 628 MustHaveRegister 630 MustHaveRegister 632 MustHaveRegister 634 MustHaveRegister 636 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[rsi|q]" v46|q -1 [598, 624[598 MustHaveRegister 600 MustHaveRegister 624 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[rsi|q]" v47|q -1 [710, 712[710 MustHaveRegister 712 ShouldHaveRegister  "NoSpillStore"
  v48|q QWORD "[rax|q]" v48|q rax|q [716, 721[716 MustHaveRegister 718 MustHaveRegister 720 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[rax|q]" v50|q v45|q [636, 639[636 MustHaveRegister 638 ShouldHaveRegister  "NoSpillStore"
  v51|q QWORD "[rax|q]" v51|q v50|q [640, 657[654 MustHaveRegister 656 ShouldHaveRegister  "NoSpillStore"
  v52|d DWORD "[r10|d]" v52|d v44|q [652, 654[652 MustHaveRegister 654 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[rax|q]" v53|q rax|q [864, 867[864 MustHaveRegister 866 ShouldHaveRegister  "NoSpillStore"
  v54|q QWORD "[r10|q]" v54|q v0|q [658, 676[676 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[rsi|q]" v55|q -1 [742, 762[742 MustHaveRegister 762 ShouldHaveRegister  "NoSpillStore"
  v56|q QWORD "[rsi|q]" v56|q -1 [802, 822[802 MustHaveRegister 822 ShouldHaveRegister  "NoSpillStore"
  v57|q QWORD "[vstack:0|q]" v35|q v35|q [451, 455[454 ShouldHaveRegister  "OneSpillStore"
  v58|q QWORD "[vstack:1|q]" v21|q v21|q [567, 573[ "OneSpillStore"
  v59|q QWORD "[vstack:1|q]" v21|q v21|q [573, 577[576 ShouldHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6fe89784 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.lang.String.subSequence(String.java:2872) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction v5|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   70  <|@ instruction rcx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction v6|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.6018906262441794 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4603596568345418578
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v2|DWORD) trueDestinationProbability: 0.9663721533267153 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603414260059205002
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction JUMP ~outgoingValues: [v0|QWORD[.]] destination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600843320827103580
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B44" 
    xhandlers
    flags 
    probability 4601207937399530733
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1801e864 encoding: base: 0 shift: 3 <|@ <|@
      nr  138  <|@ instruction v9|DWORD = SUB (x: v2|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.9999787285234901 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601207777090930452
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v1|DWORD) trueDestinationProbability: 0.00977198389730849 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B22" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.7183170795883598 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B21" 
    xhandlers
    flags 
    probability 4599032071156696725
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 0.24957691254844944 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597213233028029193
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593072671573930308
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction v24|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  226  <|@ instruction v25|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction v26|QWORD = LEA address: [v25|QWORD + 23] size: QWORD <|@ <|@
      nr  230  <|@ instruction v27|QWORD = AND x: v26|QWORD y: -8 size: QWORD <|@ <|@
      nr  232  <|@ instruction v28|QWORD = ADD (x: v27|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: v28|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4599735042323379768
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction MOV (x: [r15|QWORD + 440], y: v28|QWORD) size: QWORD <|@ <|@
      nr  268  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  270  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  272  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  274  <|@ instruction MOV x: [v24|QWORD] y: 1 size: QWORD <|@ <|@
      nr  276  <|@ instruction MOV x: [v24|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  278  <|@ instruction MOV (x: [v24|QWORD + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr  280  <|@ instruction v30|QWORD = LEA address: [v27|QWORD - 16] size: QWORD <|@ <|@
      nr  282  <|@ instruction CMPCONSTBRANCH x: v30|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4599674408099325029
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4629886495576233067
    begin_IR
      LIR
      nr  294  <|@ instruction [v31|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction CMPBRANCH (x: v27|QWORD, y: v31|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4629839598793565730
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction MOV x: [v24|QWORD + v31|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  324  <|@ instruction v32|QWORD = LEA address: [v31|QWORD + 8] size: QWORD <|@ <|@
      nr  326  <|@ instruction JUMP ~outgoingValues: [v32|QWORD] destination: B28 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4599674408099325029
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599735042323379768
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction v34|QWORD[.] = MOVE input: v24|QWORD moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction JUMP ~outgoingValues: [v34|QWORD[.]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B24" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  352  <|@ instruction [v35|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction v36|DWORD = SUB (x: v4|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr  370  <|@ instruction CMP (x: v36|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr  372  <|@ instruction v37|DWORD = CMOVE (falseValue: v36|DWORD, ~trueValue: v9|DWORD) condition: > <|@ <|@
      nr  374  <|@ instruction TESTBRANCH (x: v37|DWORD, y: v37|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction v38|DWORD = SUB (x: v4|DWORD, ~y: v37|DWORD) size: DWORD <|@ <|@
      nr  390  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v38|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction CMPBRANCH (x: v37|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction v40|QWORD[*] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction v41|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction v42|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr  444  <|@ instruction v43|QWORD = MOVE input: v37|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction rdi|QWORD = LEA address: [v40|QWORD[*] + v42|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  448  <|@ instruction rsi|QWORD = LEA address: [v41|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  450  <|@ instruction rdx|QWORD = MOVE input: v43|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  452  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4590015800143340609
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction v13|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  482  <|@ instruction v14|QWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 23] size: QWORD <|@ <|@
      nr  486  <|@ instruction v16|QWORD = AND x: v15|QWORD y: -8 size: QWORD <|@ <|@
      nr  488  <|@ instruction v17|QWORD = ADD (x: v16|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr  490  <|@ instruction CMPBRANCH (x: v17|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589962286348538852
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction MOV (x: [r15|QWORD + 440], y: v17|QWORD) size: QWORD <|@ <|@
      nr  518  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  520  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  522  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  524  <|@ instruction MOV x: [v13|QWORD] y: 1 size: QWORD <|@ <|@
      nr  526  <|@ instruction MOV x: [v13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  528  <|@ instruction MOV (x: [v13|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr  530  <|@ instruction v20|QWORD[.] = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction JUMP ~outgoingValues: [v20|QWORD[.]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B40" 
    xhandlers
    flags 
    probability 4590015800143340609
    begin_IR
      LIR
      nr  534  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction v22|QWORD[*] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction v23|QWORD[*] = MOVE input: v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE input: v21|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  568  <|@ instruction rdi|QWORD = LEA address: [v22|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  570  <|@ instruction rsi|QWORD = LEA address: [v23|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  572  <|@ instruction rdx|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = STACKMOVE (input: v58|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  574  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  576  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.]] destination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  578  <|@ instruction [v44|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction v45|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  598  <|@ instruction v46|QWORD = LEA address: [v45|QWORD + 24] size: QWORD <|@ <|@
      nr  600  <|@ instruction CMPBRANCH (x: v46|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4601059508744723248
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction MOV (x: [r15|QWORD + 440], y: v46|QWORD) size: QWORD <|@ <|@
      nr  626  <|@ instruction AMD64PREFETCH ~address: [v45|QWORD + 280] instr: 0 <|@ <|@
      nr  628  <|@ instruction MOV x: [v45|QWORD] y: 1 size: QWORD <|@ <|@
      nr  630  <|@ instruction MOV x: [v45|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  632  <|@ instruction MOV x: [v45|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  634  <|@ instruction MOV x: [v45|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  636  <|@ instruction v50|QWORD[.] = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [v50|QWORD[.]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  640  <|@ instruction [v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction v52|DWORD[_] = COMPRESSPOINTER (input: v44|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1801e864 encoding: base: 0 shift: 3 <|@ <|@
      nr  654  <|@ instruction MOV (x: [v51|QWORD[.] + 20], y: v52|DWORD[_]) size: DWORD <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" "B14" "B43" "B44" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  658  <|@ instruction [v54|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction rax|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr  678  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4581491086567258382
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4571426031092231524
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction v47|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  712  <|@ instruction rsi|QWORD = MOVE input: v47|QWORD moveKind: QWORD <|@ <|@
      nr  714  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} v44|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:19, 41, 3] <|@ <|@
      nr  716  <|@ instruction v48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} v44|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [v48|QWORD[.]] state [bci:19, 41, 3] <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [v48|QWORD[.]] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B45" 
    xhandlers
    flags 
    probability 4571363187372395366
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction v10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:""] <|@ <|@
      nr  736  <|@ instruction v11|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B14 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B32" 
    xhandlers
    flags 
    probability 4569985998969753389
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction v55|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction rsi|QWORD = MOVE input: v55|QWORD moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction rdx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr  766  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v1|DWORD v2|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10, 16, 41, 3] <|@ <|@
      nr  768  <|@ instruction v29|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  770  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v1|DWORD v2|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [v29|QWORD[.]] state [bci:10, 16, 41, 3] <|@ <|@
      nr  772  <|@ instruction JUMP ~outgoingValues: [v29|QWORD[.]] destination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569907603205318980
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction rcx|QWORD = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction ZERO_MEMORY (pointer: [v24|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  798  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4559988989006196334
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  802  <|@ instruction v56|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction rsi|QWORD = MOVE input: v56|QWORD moveKind: QWORD <|@ <|@
      nr  824  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr  826  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: v0|QWORD[.] int[0|0x0] v2|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:22, 3] <|@ <|@
      nr  828  <|@ instruction v18|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  830  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: v0|QWORD[.] int[0|0x0] v2|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction NULLCHECK address: [v18|QWORD[.]] state [bci:22, 3] <|@ <|@
      nr  832  <|@ instruction JUMP ~outgoingValues: [v18|QWORD[.]] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B45" 
    xhandlers
    flags 
    probability 4531370617721367879
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr  860  <|@ instruction rcx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2840) [bci: 54]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.newString(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:54, 3] <|@ <|@
      nr  864  <|@ instruction v53|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ instruction JUMP ~outgoingValues: [v53|QWORD[.]] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [int[-54809|0xffffffffffff29e7]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction JUMP ~outgoingValues: [int[-50195|0xffffffffffff3bed]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction JUMP ~outgoingValues: [int[-52761|0xffffffffffff31e7]] destination: B33 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [int[-48147|0xffffffffffff43ed]] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction JUMP ~outgoingValues: [int[-49171|0xffffffffffff3fed]] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  918  <|@ instruction [v7|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v7|DWORD) size: DWORD <|@ <|@
      nr  936  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  938  <|@ st <@st|@live-base-pointers: []
java.lang.String.subSequence(String.java:2872) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction JUMP ~outgoingValues: [int[-53785|0xffffffffffff2de7]] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  950  <|@ instruction [v39|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v39|DWORD) size: DWORD <|@ <|@
      nr  968  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  970  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v1|DWORD v2|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction DEOPT info [bci:10, 16, 41, 3] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: iload_2       
     3: invokevirtual #189        // substring:(int, int)java.lang.String
     6: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q v54|q [0, 1[[452, 453[[574, 575[[676, 678[[714, 716[[766, 768[[796, 797[[826, 828[[862, 864[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v5|d [0, 32[[70, 73[[452, 453[[574, 575[[794, 797[[860, 863[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v43|q [0, 30[[450, 453[[572, 575[[764, 766[[824, 826[[858, 863[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 24[[452, 453[[574, 575[[862, 863[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v47|q [0, 28[[448, 453[[570, 575[[712, 714[[762, 766[[822, 826[[856, 863[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[446, 453[[568, 575[[796, 797[[862, 863[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  v0|q QWORD "[r10|q]" v0|q rsi|- [28, 109[[110, 180[[456, 492[[680, 690[[800, 831[[878, 888[[898, 939[28 MustHaveRegister 34 MustHaveRegister 68 MustHaveRegister 108 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[r11|d]" v1|d rdx|- [30, 100[[110, 442[[680, 690[[740, 800[[834, 858[[868, 939[[940, 971[30 MustHaveRegister 38 MustHaveRegister 50 MustHaveRegister 86 MustHaveRegister 138 ShouldHaveRegister 152 ShouldHaveRegister 166 MustHaveRegister 368 ShouldHaveRegister 390 MustHaveRegister 442 ShouldHaveRegister 858 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[r8|d]" v2|d rcx|- [32, 100[[110, 404[[456, 492[[680, 690[[740, 831[[868, 939[[940, 971[32 MustHaveRegister 50 ShouldHaveRegister 74 MustHaveRegister 98 ShouldHaveRegister 138 MustHaveRegister 152 MustHaveRegister 178 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[r9|d]" v3|d -1 [34, 100[[110, 136[[680, 690[34 MustHaveRegister 36 MustHaveRegister 136 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[rbx|d]" v4|d -1 [36, 100[[110, 388[[456, 528[[680, 690[[740, 824[36 MustHaveRegister 72 ShouldHaveRegister 178 MustHaveRegister 368 MustHaveRegister 388 MustHaveRegister 482 ShouldHaveRegister 528 MustHaveRegister 824 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[rdi|d]" v5|d -1 [68, 100[[110, 140[[680, 690[68 MustHaveRegister 70 ShouldHaveRegister 140 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[rsi|d]" v6|d v4|d [72, 98[72 MustHaveRegister 74 ShouldHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[r9|d]" v7|d -1 [918, 934[934 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[r9|q]" v8|q v3|d [136, 438[[456, 564[[740, 856[[868, 878[[888, 898[[940, 971[136 MustHaveRegister 438 ShouldHaveRegister 564 ShouldHaveRegister 856 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[rbp|d]" v9|d v2|d [138, 402[[740, 800[[834, 860[138 MustHaveRegister 226 ShouldHaveRegister 278 MustHaveRegister 370 ShouldHaveRegister 372 MustHaveRegister 402 ShouldHaveRegister 764 ShouldHaveRegister 860 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[rsi|q]" v10|q -1 [734, 736[734 MustHaveRegister 736 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rsi|q]" v11|q v10|q [736, 739[736 MustHaveRegister 738 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rdi|q]" v13|q -1 [480, 530[480 MustHaveRegister 488 ShouldHaveRegister 518 MustHaveRegister 520 MustHaveRegister 522 MustHaveRegister 524 MustHaveRegister 526 MustHaveRegister 528 MustHaveRegister 530 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[r11|q]" v14|q v4|d [482, 572[[800, 834[482 MustHaveRegister 484 MustHaveRegister 572 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[rsi|q]" v15|q -1 [484, 486[484 MustHaveRegister 486 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[rsi|q]" v16|q v15|q [486, 523[486 MustHaveRegister 488 ShouldHaveRegister 518 MustHaveRegister 520 MustHaveRegister 522 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[rdx|q]" v17|q v16|q [488, 516[488 MustHaveRegister 490 MustHaveRegister 516 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[rax|q]" v18|q rax|q [828, 833[828 MustHaveRegister 830 MustHaveRegister 832 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[rdi|q]" v20|q v13|q [530, 533[530 MustHaveRegister 532 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[rdi|q]" v21|q v20|q [534, 567[566 ShouldHaveRegister  "OneSpillStore"
  v22|q QWORD "[r9|q]" v22|q v8|q [564, 568[564 MustHaveRegister 568 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[rsi|q]" v23|q v21|q [566, 570[566 MustHaveRegister 570 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[r10|q]" v24|q -1 [224, 348[[774, 800[224 MustHaveRegister 232 ShouldHaveRegister 268 MustHaveRegister 270 MustHaveRegister 272 MustHaveRegister 274 MustHaveRegister 276 MustHaveRegister 278 MustHaveRegister 322 MustHaveRegister 327 LiveAtLoopEnd 348 ShouldHaveRegister 796 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rdi|q]" v25|q v9|d [226, 228[226 MustHaveRegister 228 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[rdi|q]" v26|q -1 [228, 230[228 MustHaveRegister 230 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[rdi|q]" v27|q v26|q [230, 328[230 MustHaveRegister 232 ShouldHaveRegister 268 MustHaveRegister 270 MustHaveRegister 272 MustHaveRegister 280 MustHaveRegister 304 MustHaveRegister 327 LiveAtLoopEnd  "NoSpillStore"
  v28|q QWORD "[rsi|q]" v28|q v27|q [232, 266[232 MustHaveRegister 234 MustHaveRegister 266 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[rax|q]" v29|q rax|q [768, 773[768 MustHaveRegister 770 MustHaveRegister 772 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[rcx|q]" v30|q -1 [280, 284[[774, 794[280 MustHaveRegister 282 ShouldHaveRegister 794 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[rsi|q]" v31|q v32|q [294, 324[304 ShouldHaveRegister 322 MustHaveRegister 324 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[rsi|q]" v32|q v31|q [324, 327[324 MustHaveRegister 326 ShouldHaveRegister  "NoSpillStore"
  v34|q QWORD "[r10|q]" v34|q v24|q [348, 351[348 MustHaveRegister 350 ShouldHaveRegister  "NoSpillStore"
  v35|q QWORD "[r10|q]" v35|q v34|q [352, 451[440 ShouldHaveRegister  "OneSpillStore"
  v36|d DWORD "[rdi|d]" v36|d v4|d [368, 372[368 MustHaveRegister 370 MustHaveRegister 372 ShouldHaveRegister  "NoSpillStore"
  v37|d DWORD "[rdi|d]" v37|d v36|d [372, 444[372 MustHaveRegister 374 MustHaveRegister 388 ShouldHaveRegister 402 MustHaveRegister 444 ShouldHaveRegister  "NoSpillStore"
  v38|d DWORD "[rbx|d]" v38|d v4|d [388, 390[388 MustHaveRegister 390 ShouldHaveRegister  "NoSpillStore"
  v39|d DWORD "[r10|d]" v39|d -1 [950, 966[966 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[r9|q]" v40|q v8|q [438, 446[438 MustHaveRegister 446 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rsi|q]" v41|q v35|q [440, 448[440 MustHaveRegister 448 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[rdx|q]" v42|q -1 [442, 446[442 MustHaveRegister 446 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[r11|q]" v43|q v37|d [444, 450[444 MustHaveRegister 450 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[r10|q]" v44|q v35|q [578, 652[[690, 722[652 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[rax|q]" v45|q -1 [596, 636[596 MustHaveRegister 598 MustHaveRegister 626 MustHaveRegister 628 MustHaveRegister 630 MustHaveRegister 632 MustHaveRegister 634 MustHaveRegister 636 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[rsi|q]" v46|q -1 [598, 624[598 MustHaveRegister 600 MustHaveRegister 624 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[rsi|q]" v47|q -1 [710, 712[710 MustHaveRegister 712 ShouldHaveRegister  "NoSpillStore"
  v48|q QWORD "[rax|q]" v48|q rax|q [716, 721[716 MustHaveRegister 718 MustHaveRegister 720 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[rax|q]" v50|q v45|q [636, 639[636 MustHaveRegister 638 ShouldHaveRegister  "NoSpillStore"
  v51|q QWORD "[rax|q]" v51|q v50|q [640, 657[654 MustHaveRegister 656 ShouldHaveRegister  "NoSpillStore"
  v52|d DWORD "[r10|d]" v52|d v44|q [652, 654[652 MustHaveRegister 654 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[rax|q]" v53|q rax|q [864, 867[864 MustHaveRegister 866 ShouldHaveRegister  "NoSpillStore"
  v54|q QWORD "[r10|q]" v54|q v0|q [658, 676[676 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[rsi|q]" v55|q -1 [742, 762[742 MustHaveRegister 762 ShouldHaveRegister  "NoSpillStore"
  v56|q QWORD "[rsi|q]" v56|q -1 [802, 822[802 MustHaveRegister 822 ShouldHaveRegister  "NoSpillStore"
  v57|q QWORD "[vstack:0|q]" v35|q v35|q [451, 455[454 ShouldHaveRegister  "OneSpillStore"
  v58|q QWORD "[vstack:1|q]" v21|q v21|q [567, 573[ "OneSpillStore"
  v59|q QWORD "[vstack:1|q]" v21|q v21|q [573, 577[576 ShouldHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6fe89784 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.lang.String.subSequence(String.java:2872) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction v5|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   70  <|@ instruction rcx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction v6|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.6018906262441794 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4603596568345418578
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v2|DWORD) trueDestinationProbability: 0.9663721533267153 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603414260059205002
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction JUMP ~outgoingValues: [v0|QWORD[.]] destination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600843320827103580
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B44" 
    xhandlers
    flags 
    probability 4601207937399530733
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1801e864 encoding: base: 0 shift: 3 <|@ <|@
      nr  138  <|@ instruction v9|DWORD = SUB (x: v2|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.9999787285234901 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601207777090930452
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v1|DWORD) trueDestinationProbability: 0.00977198389730849 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B22" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.7183170795883598 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B21" 
    xhandlers
    flags 
    probability 4599032071156696725
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 0.24957691254844944 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597213233028029193
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593072671573930308
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction v24|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  226  <|@ instruction v25|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction v26|QWORD = LEA address: [v25|QWORD + 23] size: QWORD <|@ <|@
      nr  230  <|@ instruction v27|QWORD = AND x: v26|QWORD y: -8 size: QWORD <|@ <|@
      nr  232  <|@ instruction v28|QWORD = ADD (x: v27|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: v28|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4599735042323379768
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction MOV (x: [r15|QWORD + 440], y: v28|QWORD) size: QWORD <|@ <|@
      nr  268  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  270  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  272  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  274  <|@ instruction MOV x: [v24|QWORD] y: 1 size: QWORD <|@ <|@
      nr  276  <|@ instruction MOV x: [v24|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  278  <|@ instruction MOV (x: [v24|QWORD + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr  280  <|@ instruction v30|QWORD = LEA address: [v27|QWORD - 16] size: QWORD <|@ <|@
      nr  282  <|@ instruction CMPCONSTBRANCH x: v30|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4599674408099325029
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4629886495576233067
    begin_IR
      LIR
      nr  294  <|@ instruction [v31|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction CMPBRANCH (x: v27|QWORD, y: v31|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4629839598793565730
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction MOV x: [v24|QWORD + v31|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  324  <|@ instruction v32|QWORD = LEA address: [v31|QWORD + 8] size: QWORD <|@ <|@
      nr  326  <|@ instruction JUMP ~outgoingValues: [v32|QWORD] destination: B28 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4599674408099325029
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599735042323379768
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction v34|QWORD[.] = MOVE input: v24|QWORD moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction JUMP ~outgoingValues: [v34|QWORD[.]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B24" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  352  <|@ instruction [v35|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction v36|DWORD = SUB (x: v4|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr  370  <|@ instruction CMP (x: v36|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr  372  <|@ instruction v37|DWORD = CMOVE (falseValue: v36|DWORD, ~trueValue: v9|DWORD) condition: > <|@ <|@
      nr  374  <|@ instruction TESTBRANCH (x: v37|DWORD, y: v37|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction v38|DWORD = SUB (x: v4|DWORD, ~y: v37|DWORD) size: DWORD <|@ <|@
      nr  390  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v38|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction CMPBRANCH (x: v37|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction v40|QWORD[*] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction v41|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction v42|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr  444  <|@ instruction v43|QWORD = MOVE input: v37|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction rdi|QWORD = LEA address: [v40|QWORD[*] + v42|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  448  <|@ instruction rsi|QWORD = LEA address: [v41|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  450  <|@ instruction rdx|QWORD = MOVE input: v43|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  452  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4590015800143340609
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction v13|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  482  <|@ instruction v14|QWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 23] size: QWORD <|@ <|@
      nr  486  <|@ instruction v16|QWORD = AND x: v15|QWORD y: -8 size: QWORD <|@ <|@
      nr  488  <|@ instruction v17|QWORD = ADD (x: v16|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr  490  <|@ instruction CMPBRANCH (x: v17|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589962286348538852
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction MOV (x: [r15|QWORD + 440], y: v17|QWORD) size: QWORD <|@ <|@
      nr  518  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  520  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  522  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  524  <|@ instruction MOV x: [v13|QWORD] y: 1 size: QWORD <|@ <|@
      nr  526  <|@ instruction MOV x: [v13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  528  <|@ instruction MOV (x: [v13|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr  530  <|@ instruction v20|QWORD[.] = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction JUMP ~outgoingValues: [v20|QWORD[.]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B40" 
    xhandlers
    flags 
    probability 4590015800143340609
    begin_IR
      LIR
      nr  534  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction v22|QWORD[*] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction v23|QWORD[*] = MOVE input: v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE input: v21|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  568  <|@ instruction rdi|QWORD = LEA address: [v22|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  570  <|@ instruction rsi|QWORD = LEA address: [v23|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  572  <|@ instruction rdx|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = STACKMOVE (input: v58|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  574  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  576  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.]] destination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  578  <|@ instruction [v44|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction v45|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  598  <|@ instruction v46|QWORD = LEA address: [v45|QWORD + 24] size: QWORD <|@ <|@
      nr  600  <|@ instruction CMPBRANCH (x: v46|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4601059508744723248
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction MOV (x: [r15|QWORD + 440], y: v46|QWORD) size: QWORD <|@ <|@
      nr  626  <|@ instruction AMD64PREFETCH ~address: [v45|QWORD + 280] instr: 0 <|@ <|@
      nr  628  <|@ instruction MOV x: [v45|QWORD] y: 1 size: QWORD <|@ <|@
      nr  630  <|@ instruction MOV x: [v45|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  632  <|@ instruction MOV x: [v45|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  634  <|@ instruction MOV x: [v45|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  636  <|@ instruction v50|QWORD[.] = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [v50|QWORD[.]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  640  <|@ instruction [v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction v52|DWORD[_] = COMPRESSPOINTER (input: v44|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1801e864 encoding: base: 0 shift: 3 <|@ <|@
      nr  654  <|@ instruction MOV (x: [v51|QWORD[.] + 20], y: v52|DWORD[_]) size: DWORD <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" "B14" "B43" "B44" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  658  <|@ instruction [v54|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction rax|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr  678  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4581491086567258382
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4571426031092231524
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction v47|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  712  <|@ instruction rsi|QWORD = MOVE input: v47|QWORD moveKind: QWORD <|@ <|@
      nr  714  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} v44|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:19, 41, 3] <|@ <|@
      nr  716  <|@ instruction v48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} v44|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [v48|QWORD[.]] state [bci:19, 41, 3] <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [v48|QWORD[.]] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B45" 
    xhandlers
    flags 
    probability 4571363187372395366
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction v10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:""] <|@ <|@
      nr  736  <|@ instruction v11|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B14 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B32" 
    xhandlers
    flags 
    probability 4569985998969753389
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction v55|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction rsi|QWORD = MOVE input: v55|QWORD moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction rdx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr  766  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v1|DWORD v2|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10, 16, 41, 3] <|@ <|@
      nr  768  <|@ instruction v29|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  770  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v1|DWORD v2|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [v29|QWORD[.]] state [bci:10, 16, 41, 3] <|@ <|@
      nr  772  <|@ instruction JUMP ~outgoingValues: [v29|QWORD[.]] destination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569907603205318980
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction rcx|QWORD = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction ZERO_MEMORY (pointer: [v24|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  798  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4559988989006196334
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  802  <|@ instruction v56|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction rsi|QWORD = MOVE input: v56|QWORD moveKind: QWORD <|@ <|@
      nr  824  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr  826  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: v0|QWORD[.] int[0|0x0] v2|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:22, 3] <|@ <|@
      nr  828  <|@ instruction v18|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  830  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: v0|QWORD[.] int[0|0x0] v2|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction NULLCHECK address: [v18|QWORD[.]] state [bci:22, 3] <|@ <|@
      nr  832  <|@ instruction JUMP ~outgoingValues: [v18|QWORD[.]] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B45" 
    xhandlers
    flags 
    probability 4531370617721367879
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr  860  <|@ instruction rcx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2840) [bci: 54]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.newString(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:54, 3] <|@ <|@
      nr  864  <|@ instruction v53|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ instruction JUMP ~outgoingValues: [v53|QWORD[.]] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [int[-54809|0xffffffffffff29e7]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction JUMP ~outgoingValues: [int[-50195|0xffffffffffff3bed]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction JUMP ~outgoingValues: [int[-52761|0xffffffffffff31e7]] destination: B33 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [int[-48147|0xffffffffffff43ed]] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction JUMP ~outgoingValues: [int[-49171|0xffffffffffff3fed]] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  918  <|@ instruction [v7|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v7|DWORD) size: DWORD <|@ <|@
      nr  936  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  938  <|@ st <@st|@live-base-pointers: []
java.lang.String.subSequence(String.java:2872) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction JUMP ~outgoingValues: [int[-53785|0xffffffffffff2de7]] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  950  <|@ instruction [v39|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v39|DWORD) size: DWORD <|@ <|@
      nr  968  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  970  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v1|DWORD v2|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction DEOPT info [bci:10, 16, 41, 3] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: iload_2       
     3: invokevirtual #189        // substring:(int, int)java.lang.String
     6: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q v54|q [0, 1[[452, 453[[574, 575[[676, 678[[714, 716[[766, 768[[796, 797[[826, 828[[862, 864[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v5|d [0, 32[[70, 73[[452, 453[[574, 575[[794, 797[[860, 863[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v43|q [0, 30[[450, 453[[572, 575[[764, 766[[824, 826[[858, 863[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 24[[452, 453[[574, 575[[862, 863[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v47|q [0, 28[[448, 453[[570, 575[[712, 714[[762, 766[[822, 826[[856, 863[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[446, 453[[568, 575[[796, 797[[862, 863[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[452, 453[[574, 575[[862, 863[ "NoDefinitionFound"
  v0|q QWORD "[r10|q]" v0|q rsi|- [28, 109[[110, 180[[456, 492[[680, 690[[800, 831[[878, 888[[898, 939[28 MustHaveRegister 34 MustHaveRegister 68 MustHaveRegister 108 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[r11|d]" v1|d rdx|- [30, 100[[110, 442[[680, 690[[740, 800[[834, 858[[868, 939[[940, 971[30 MustHaveRegister 38 MustHaveRegister 50 MustHaveRegister 86 MustHaveRegister 138 ShouldHaveRegister 152 ShouldHaveRegister 166 MustHaveRegister 368 ShouldHaveRegister 390 MustHaveRegister 442 ShouldHaveRegister 858 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[r8|d]" v2|d rcx|- [32, 100[[110, 404[[456, 492[[680, 690[[740, 831[[868, 939[[940, 971[32 MustHaveRegister 50 ShouldHaveRegister 74 MustHaveRegister 98 ShouldHaveRegister 138 MustHaveRegister 152 MustHaveRegister 178 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[r9|d]" v3|d -1 [34, 100[[110, 136[[680, 690[34 MustHaveRegister 36 MustHaveRegister 136 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[rbx|d]" v4|d -1 [36, 100[[110, 388[[456, 528[[680, 690[[740, 824[36 MustHaveRegister 72 ShouldHaveRegister 178 MustHaveRegister 368 MustHaveRegister 388 MustHaveRegister 482 ShouldHaveRegister 528 MustHaveRegister 824 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[rdi|d]" v5|d -1 [68, 100[[110, 140[[680, 690[68 MustHaveRegister 70 ShouldHaveRegister 140 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[rsi|d]" v6|d v4|d [72, 98[72 MustHaveRegister 74 ShouldHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[r9|d]" v7|d -1 [918, 934[934 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[r9|q]" v8|q v3|d [136, 438[[456, 564[[740, 856[[868, 878[[888, 898[[940, 971[136 MustHaveRegister 438 ShouldHaveRegister 564 ShouldHaveRegister 856 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[rbp|d]" v9|d v2|d [138, 402[[740, 800[[834, 860[138 MustHaveRegister 226 ShouldHaveRegister 278 MustHaveRegister 370 ShouldHaveRegister 372 MustHaveRegister 402 ShouldHaveRegister 764 ShouldHaveRegister 860 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[rsi|q]" v10|q -1 [734, 736[734 MustHaveRegister 736 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rsi|q]" v11|q v10|q [736, 739[736 MustHaveRegister 738 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rdi|q]" v13|q -1 [480, 530[480 MustHaveRegister 488 ShouldHaveRegister 518 MustHaveRegister 520 MustHaveRegister 522 MustHaveRegister 524 MustHaveRegister 526 MustHaveRegister 528 MustHaveRegister 530 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[r11|q]" v14|q v4|d [482, 572[[800, 834[482 MustHaveRegister 484 MustHaveRegister 572 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[rsi|q]" v15|q -1 [484, 486[484 MustHaveRegister 486 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[rsi|q]" v16|q v15|q [486, 523[486 MustHaveRegister 488 ShouldHaveRegister 518 MustHaveRegister 520 MustHaveRegister 522 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[rdx|q]" v17|q v16|q [488, 516[488 MustHaveRegister 490 MustHaveRegister 516 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[rax|q]" v18|q rax|q [828, 833[828 MustHaveRegister 830 MustHaveRegister 832 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[rdi|q]" v20|q v13|q [530, 533[530 MustHaveRegister 532 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[rdi|q]" v21|q v20|q [534, 567[566 ShouldHaveRegister  "OneSpillStore"
  v22|q QWORD "[r9|q]" v22|q v8|q [564, 568[564 MustHaveRegister 568 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[rsi|q]" v23|q v21|q [566, 570[566 MustHaveRegister 570 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[r10|q]" v24|q -1 [224, 348[[774, 800[224 MustHaveRegister 232 ShouldHaveRegister 268 MustHaveRegister 270 MustHaveRegister 272 MustHaveRegister 274 MustHaveRegister 276 MustHaveRegister 278 MustHaveRegister 322 MustHaveRegister 327 LiveAtLoopEnd 348 ShouldHaveRegister 796 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rdi|q]" v25|q v9|d [226, 228[226 MustHaveRegister 228 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[rdi|q]" v26|q -1 [228, 230[228 MustHaveRegister 230 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[rdi|q]" v27|q v26|q [230, 328[230 MustHaveRegister 232 ShouldHaveRegister 268 MustHaveRegister 270 MustHaveRegister 272 MustHaveRegister 280 MustHaveRegister 304 MustHaveRegister 327 LiveAtLoopEnd  "NoSpillStore"
  v28|q QWORD "[rsi|q]" v28|q v27|q [232, 266[232 MustHaveRegister 234 MustHaveRegister 266 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[rax|q]" v29|q rax|q [768, 773[768 MustHaveRegister 770 MustHaveRegister 772 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[rcx|q]" v30|q -1 [280, 284[[774, 794[280 MustHaveRegister 282 ShouldHaveRegister 794 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[rsi|q]" v31|q v32|q [294, 324[304 ShouldHaveRegister 322 MustHaveRegister 324 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[rsi|q]" v32|q v31|q [324, 327[324 MustHaveRegister 326 ShouldHaveRegister  "NoSpillStore"
  v34|q QWORD "[r10|q]" v34|q v24|q [348, 351[348 MustHaveRegister 350 ShouldHaveRegister  "NoSpillStore"
  v35|q QWORD "[r10|q]" v35|q v34|q [352, 451[440 ShouldHaveRegister  "OneSpillStore"
  v36|d DWORD "[rdi|d]" v36|d v4|d [368, 372[368 MustHaveRegister 370 MustHaveRegister 372 ShouldHaveRegister  "NoSpillStore"
  v37|d DWORD "[rdi|d]" v37|d v36|d [372, 444[372 MustHaveRegister 374 MustHaveRegister 388 ShouldHaveRegister 402 MustHaveRegister 444 ShouldHaveRegister  "NoSpillStore"
  v38|d DWORD "[rbx|d]" v38|d v4|d [388, 390[388 MustHaveRegister 390 ShouldHaveRegister  "NoSpillStore"
  v39|d DWORD "[r10|d]" v39|d -1 [950, 966[966 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[r9|q]" v40|q v8|q [438, 446[438 MustHaveRegister 446 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rsi|q]" v41|q v35|q [440, 448[440 MustHaveRegister 448 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[rdx|q]" v42|q -1 [442, 446[442 MustHaveRegister 446 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[r11|q]" v43|q v37|d [444, 450[444 MustHaveRegister 450 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[r10|q]" v44|q v35|q [578, 652[[690, 722[652 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[rax|q]" v45|q -1 [596, 636[596 MustHaveRegister 598 MustHaveRegister 626 MustHaveRegister 628 MustHaveRegister 630 MustHaveRegister 632 MustHaveRegister 634 MustHaveRegister 636 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[rsi|q]" v46|q -1 [598, 624[598 MustHaveRegister 600 MustHaveRegister 624 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[rsi|q]" v47|q -1 [710, 712[710 MustHaveRegister 712 ShouldHaveRegister  "NoSpillStore"
  v48|q QWORD "[rax|q]" v48|q rax|q [716, 721[716 MustHaveRegister 718 MustHaveRegister 720 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[rax|q]" v50|q v45|q [636, 639[636 MustHaveRegister 638 ShouldHaveRegister  "NoSpillStore"
  v51|q QWORD "[rax|q]" v51|q v50|q [640, 657[654 MustHaveRegister 656 ShouldHaveRegister  "NoSpillStore"
  v52|d DWORD "[r10|d]" v52|d v44|q [652, 654[652 MustHaveRegister 654 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[rax|q]" v53|q rax|q [864, 867[864 MustHaveRegister 866 ShouldHaveRegister  "NoSpillStore"
  v54|q QWORD "[r10|q]" v54|q v0|q [658, 676[676 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[rsi|q]" v55|q -1 [742, 762[742 MustHaveRegister 762 ShouldHaveRegister  "NoSpillStore"
  v56|q QWORD "[rsi|q]" v56|q -1 [802, 822[802 MustHaveRegister 822 ShouldHaveRegister  "NoSpillStore"
  v57|q QWORD "[vstack:0|q]" v35|q v35|q [451, 455[454 ShouldHaveRegister  "OneSpillStore"
  v58|q QWORD "[vstack:1|q]" v21|q v21|q [567, 573[ "OneSpillStore"
  v59|q QWORD "[vstack:1|q]" v21|q v21|q [573, 577[576 ShouldHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6fe89784 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.lang.String.subSequence(String.java:2872) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction v5|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   70  <|@ instruction rcx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction v6|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.6018906262441794 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4603596568345418578
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v2|DWORD) trueDestinationProbability: 0.9663721533267153 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603414260059205002
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600843320827103580
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B44" 
    xhandlers
    flags 
    probability 4601207937399530733
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1801e864 encoding: base: 0 shift: 3 <|@ <|@
      nr  138  <|@ instruction v9|DWORD = SUB (x: v2|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.9999787285234901 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601207777090930452
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v1|DWORD) trueDestinationProbability: 0.00977198389730849 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B22" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.7183170795883598 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B21" 
    xhandlers
    flags 
    probability 4599032071156696725
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 0.24957691254844944 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597213233028029193
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593072671573930308
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction v24|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  226  <|@ instruction v25|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction v26|QWORD = LEA address: [v25|QWORD + 23] size: QWORD <|@ <|@
      nr  230  <|@ instruction v27|QWORD = AND x: v26|QWORD y: -8 size: QWORD <|@ <|@
      nr  232  <|@ instruction v28|QWORD = ADD (x: v27|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: v28|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4599735042323379768
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction MOV (x: [r15|QWORD + 440], y: v28|QWORD) size: QWORD <|@ <|@
      nr  268  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  270  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  272  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  274  <|@ instruction MOV x: [v24|QWORD] y: 1 size: QWORD <|@ <|@
      nr  276  <|@ instruction MOV x: [v24|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  278  <|@ instruction MOV (x: [v24|QWORD + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr  280  <|@ instruction v30|QWORD = LEA address: [v27|QWORD - 16] size: QWORD <|@ <|@
      nr  282  <|@ instruction CMPCONSTBRANCH x: v30|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4599674408099325029
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  292  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4629886495576233067
    begin_IR
      LIR
      nr  294  <|@ instruction [v31|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction CMPBRANCH (x: v27|QWORD, y: v31|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4629839598793565730
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction MOV x: [v24|QWORD + v31|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  324  <|@ instruction v32|QWORD = LEA address: [v31|QWORD + 8] size: QWORD <|@ <|@
      nr  326  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4599674408099325029
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599735042323379768
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction v34|QWORD[.] = MOVE input: v24|QWORD moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B24" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  352  <|@ instruction [v35|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction v36|DWORD = SUB (x: v4|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr  370  <|@ instruction CMP (x: v36|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr  372  <|@ instruction v37|DWORD = CMOVE (falseValue: v36|DWORD, ~trueValue: v9|DWORD) condition: > <|@ <|@
      nr  374  <|@ instruction TESTBRANCH (x: v37|DWORD, y: v37|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction v38|DWORD = SUB (x: v4|DWORD, ~y: v37|DWORD) size: DWORD <|@ <|@
      nr  390  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v38|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction CMPBRANCH (x: v37|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction v40|QWORD[*] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction v41|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction v42|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr  444  <|@ instruction v43|QWORD = MOVE input: v37|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction rdi|QWORD = LEA address: [v40|QWORD[*] + v42|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  448  <|@ instruction rsi|QWORD = LEA address: [v41|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  450  <|@ instruction rdx|QWORD = MOVE input: v43|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  452  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: v57|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4590015800143340609
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction v13|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  482  <|@ instruction v14|QWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 23] size: QWORD <|@ <|@
      nr  486  <|@ instruction v16|QWORD = AND x: v15|QWORD y: -8 size: QWORD <|@ <|@
      nr  488  <|@ instruction v17|QWORD = ADD (x: v16|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr  490  <|@ instruction CMPBRANCH (x: v17|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589962286348538852
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction MOV (x: [r15|QWORD + 440], y: v17|QWORD) size: QWORD <|@ <|@
      nr  518  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  520  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  522  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  524  <|@ instruction MOV x: [v13|QWORD] y: 1 size: QWORD <|@ <|@
      nr  526  <|@ instruction MOV x: [v13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  528  <|@ instruction MOV (x: [v13|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr  530  <|@ instruction v20|QWORD[.] = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B40" 
    xhandlers
    flags 
    probability 4590015800143340609
    begin_IR
      LIR
      nr  534  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction v22|QWORD[*] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction v23|QWORD[*] = MOVE input: v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE input: v21|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  568  <|@ instruction rdi|QWORD = LEA address: [v22|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  570  <|@ instruction rsi|QWORD = LEA address: [v23|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  572  <|@ instruction rdx|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = STACKMOVE (input: v58|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  574  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: v59|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  576  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  578  <|@ instruction [v44|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction v45|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  598  <|@ instruction v46|QWORD = LEA address: [v45|QWORD + 24] size: QWORD <|@ <|@
      nr  600  <|@ instruction CMPBRANCH (x: v46|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4601059508744723248
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction MOV (x: [r15|QWORD + 440], y: v46|QWORD) size: QWORD <|@ <|@
      nr  626  <|@ instruction AMD64PREFETCH ~address: [v45|QWORD + 280] instr: 0 <|@ <|@
      nr  628  <|@ instruction MOV x: [v45|QWORD] y: 1 size: QWORD <|@ <|@
      nr  630  <|@ instruction MOV x: [v45|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  632  <|@ instruction MOV x: [v45|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  634  <|@ instruction MOV x: [v45|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  636  <|@ instruction v50|QWORD[.] = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  640  <|@ instruction [v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction v52|DWORD[_] = COMPRESSPOINTER (input: v44|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1801e864 encoding: base: 0 shift: 3 <|@ <|@
      nr  654  <|@ instruction MOV (x: [v51|QWORD[.] + 20], y: v52|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" "B14" "B43" "B44" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  658  <|@ instruction [v54|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction rax|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr  678  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4581491086567258382
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4571426031092231524
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction v47|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  712  <|@ instruction rsi|QWORD = MOVE input: v47|QWORD moveKind: QWORD <|@ <|@
      nr  714  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} v44|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:19, 41, 3] <|@ <|@
      nr  716  <|@ instruction v48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} v44|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [v48|QWORD[.]] state [bci:19, 41, 3] <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B45" 
    xhandlers
    flags 
    probability 4571363187372395366
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction v10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:""] <|@ <|@
      nr  736  <|@ instruction v11|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  738  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B32" 
    xhandlers
    flags 
    probability 4569985998969753389
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction v55|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction rsi|QWORD = MOVE input: v55|QWORD moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction rdx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr  766  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v1|DWORD v2|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10, 16, 41, 3] <|@ <|@
      nr  768  <|@ instruction v29|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  770  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v1|DWORD v2|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [v29|QWORD[.]] state [bci:10, 16, 41, 3] <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  772  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569907603205318980
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction rcx|QWORD = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction ZERO_MEMORY (pointer: [v24|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  798  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4559988989006196334
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  802  <|@ instruction v56|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction rsi|QWORD = MOVE input: v56|QWORD moveKind: QWORD <|@ <|@
      nr  824  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr  826  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: v0|QWORD[.] int[0|0x0] v2|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:22, 3] <|@ <|@
      nr  828  <|@ instruction v18|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  830  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: v0|QWORD[.] int[0|0x0] v2|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction NULLCHECK address: [v18|QWORD[.]] state [bci:22, 3] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  832  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B45" 
    xhandlers
    flags 
    probability 4531370617721367879
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr  860  <|@ instruction rcx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2840) [bci: 54]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.newString(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:54, 3] <|@ <|@
      nr  864  <|@ instruction v53|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = MOVE input: v53|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  866  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVE input: int[-54809|0xffffffffffff29e7] // MoveResolver resolve mapping <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVE input: int[-50195|0xffffffffffff3bed] // MoveResolver resolve mapping <|@ <|@
      nr  886  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVE input: int[-52761|0xffffffffffff31e7] // MoveResolver resolve mapping <|@ <|@
      nr  896  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVE input: int[-48147|0xffffffffffff43ed] // MoveResolver resolve mapping <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVE input: int[-49171|0xffffffffffff3fed] // MoveResolver resolve mapping <|@ <|@
      nr  916  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  918  <|@ instruction [v7|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v7|DWORD) size: DWORD <|@ <|@
      nr  936  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  938  <|@ st <@st|@live-base-pointers: []
java.lang.String.subSequence(String.java:2872) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVE input: int[-53785|0xffffffffffff2de7] // MoveResolver resolve mapping <|@ <|@
      nr  948  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  950  <|@ instruction [v39|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v39|DWORD) size: DWORD <|@ <|@
      nr  968  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  970  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v1|DWORD v2|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction DEOPT info [bci:10, 16, 41, 3] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: iload_2       
     3: invokevirtual #189        // substring:(int, int)java.lang.String
     6: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6fe89784 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.lang.String.subSequence(String.java:2872) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction v5|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   70  <|@ instruction rcx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction v6|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.6018906262441794 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4603596568345418578
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v2|DWORD) trueDestinationProbability: 0.9663721533267153 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603414260059205002
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600843320827103580
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B44" 
    xhandlers
    flags 
    probability 4601207937399530733
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1801e864 encoding: base: 0 shift: 3 <|@ <|@
      nr  138  <|@ instruction v9|DWORD = SUB (x: v2|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.9999787285234901 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601207777090930452
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v1|DWORD) trueDestinationProbability: 0.00977198389730849 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B22" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.7183170795883598 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B21" 
    xhandlers
    flags 
    probability 4599032071156696725
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 0.24957691254844944 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597213233028029193
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593072671573930308
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction v24|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  226  <|@ instruction v25|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction v26|QWORD = LEA address: [v25|QWORD + 23] size: QWORD <|@ <|@
      nr  230  <|@ instruction v27|QWORD = AND x: v26|QWORD y: -8 size: QWORD <|@ <|@
      nr  232  <|@ instruction v28|QWORD = ADD (x: v27|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: v28|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4599735042323379768
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction MOV (x: [r15|QWORD + 440], y: v28|QWORD) size: QWORD <|@ <|@
      nr  268  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  270  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  272  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  274  <|@ instruction MOV x: [v24|QWORD] y: 1 size: QWORD <|@ <|@
      nr  276  <|@ instruction MOV x: [v24|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  278  <|@ instruction MOV (x: [v24|QWORD + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr  280  <|@ instruction v30|QWORD = LEA address: [v27|QWORD - 16] size: QWORD <|@ <|@
      nr  282  <|@ instruction CMPCONSTBRANCH x: v30|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4599674408099325029
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  292  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4629886495576233067
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction CMPBRANCH (x: v27|QWORD, y: v31|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4629839598793565730
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction MOV x: [v24|QWORD + v31|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  324  <|@ instruction v32|QWORD = LEA address: [v31|QWORD + 8] size: QWORD <|@ <|@
      nr  326  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4599674408099325029
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599735042323379768
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction v34|QWORD[.] = MOVE input: v24|QWORD moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B24" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction v36|DWORD = SUB (x: v4|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr  370  <|@ instruction CMP (x: v36|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr  372  <|@ instruction v37|DWORD = CMOVE (falseValue: v36|DWORD, ~trueValue: v9|DWORD) condition: > <|@ <|@
      nr  374  <|@ instruction TESTBRANCH (x: v37|DWORD, y: v37|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction v38|DWORD = SUB (x: v4|DWORD, ~y: v37|DWORD) size: DWORD <|@ <|@
      nr  390  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v38|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction CMPBRANCH (x: v37|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction v40|QWORD[*] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction v41|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction v42|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr  444  <|@ instruction v43|QWORD = MOVE input: v37|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction rdi|QWORD = LEA address: [v40|QWORD[*] + v42|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  448  <|@ instruction rsi|QWORD = LEA address: [v41|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  450  <|@ instruction rdx|QWORD = MOVE input: v43|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  452  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: v57|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4590015800143340609
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction v13|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  482  <|@ instruction v14|QWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 23] size: QWORD <|@ <|@
      nr  486  <|@ instruction v16|QWORD = AND x: v15|QWORD y: -8 size: QWORD <|@ <|@
      nr  488  <|@ instruction v17|QWORD = ADD (x: v16|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr  490  <|@ instruction CMPBRANCH (x: v17|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589962286348538852
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction MOV (x: [r15|QWORD + 440], y: v17|QWORD) size: QWORD <|@ <|@
      nr  518  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  520  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  522  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  524  <|@ instruction MOV x: [v13|QWORD] y: 1 size: QWORD <|@ <|@
      nr  526  <|@ instruction MOV x: [v13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  528  <|@ instruction MOV (x: [v13|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr  530  <|@ instruction v20|QWORD[.] = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B40" 
    xhandlers
    flags 
    probability 4590015800143340609
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction v22|QWORD[*] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction v23|QWORD[*] = MOVE input: v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE input: v21|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  568  <|@ instruction rdi|QWORD = LEA address: [v22|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  570  <|@ instruction rsi|QWORD = LEA address: [v23|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  572  <|@ instruction rdx|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = STACKMOVE (input: v58|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  574  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: v59|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  576  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction v45|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  598  <|@ instruction v46|QWORD = LEA address: [v45|QWORD + 24] size: QWORD <|@ <|@
      nr  600  <|@ instruction CMPBRANCH (x: v46|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4601059508744723248
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction MOV (x: [r15|QWORD + 440], y: v46|QWORD) size: QWORD <|@ <|@
      nr  626  <|@ instruction AMD64PREFETCH ~address: [v45|QWORD + 280] instr: 0 <|@ <|@
      nr  628  <|@ instruction MOV x: [v45|QWORD] y: 1 size: QWORD <|@ <|@
      nr  630  <|@ instruction MOV x: [v45|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  632  <|@ instruction MOV x: [v45|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  634  <|@ instruction MOV x: [v45|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  636  <|@ instruction v50|QWORD[.] = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction v52|DWORD[_] = COMPRESSPOINTER (input: v44|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1801e864 encoding: base: 0 shift: 3 <|@ <|@
      nr  654  <|@ instruction MOV (x: [v51|QWORD[.] + 20], y: v52|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" "B14" "B43" "B44" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction rax|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr  678  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4581491086567258382
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4571426031092231524
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction v47|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  712  <|@ instruction rsi|QWORD = MOVE input: v47|QWORD moveKind: QWORD <|@ <|@
      nr  714  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} v44|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:19, 41, 3] <|@ <|@
      nr  716  <|@ instruction v48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} v44|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [v48|QWORD[.]] state [bci:19, 41, 3] <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B45" 
    xhandlers
    flags 
    probability 4571363187372395366
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction v10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:""] <|@ <|@
      nr  736  <|@ instruction v11|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  738  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B32" 
    xhandlers
    flags 
    probability 4569985998969753389
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction v55|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction rsi|QWORD = MOVE input: v55|QWORD moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction rdx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr  766  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v1|DWORD v2|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10, 16, 41, 3] <|@ <|@
      nr  768  <|@ instruction v29|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  770  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v1|DWORD v2|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [v29|QWORD[.]] state [bci:10, 16, 41, 3] <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  772  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569907603205318980
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction rcx|QWORD = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction ZERO_MEMORY (pointer: [v24|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  798  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4559988989006196334
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  802  <|@ instruction v56|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction rsi|QWORD = MOVE input: v56|QWORD moveKind: QWORD <|@ <|@
      nr  824  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr  826  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: v0|QWORD[.] int[0|0x0] v2|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:22, 3] <|@ <|@
      nr  828  <|@ instruction v18|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  830  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: v0|QWORD[.] int[0|0x0] v2|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction NULLCHECK address: [v18|QWORD[.]] state [bci:22, 3] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  832  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B45" 
    xhandlers
    flags 
    probability 4531370617721367879
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr  860  <|@ instruction rcx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2840) [bci: 54]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.newString(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:54, 3] <|@ <|@
      nr  864  <|@ instruction v53|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = MOVE input: v53|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  866  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVE input: int[-54809|0xffffffffffff29e7] // MoveResolver resolve mapping <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVE input: int[-50195|0xffffffffffff3bed] // MoveResolver resolve mapping <|@ <|@
      nr  886  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVE input: int[-52761|0xffffffffffff31e7] // MoveResolver resolve mapping <|@ <|@
      nr  896  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVE input: int[-48147|0xffffffffffff43ed] // MoveResolver resolve mapping <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVE input: int[-49171|0xffffffffffff3fed] // MoveResolver resolve mapping <|@ <|@
      nr  916  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v7|DWORD) size: DWORD <|@ <|@
      nr  936  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  938  <|@ st <@st|@live-base-pointers: []
java.lang.String.subSequence(String.java:2872) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVE input: int[-53785|0xffffffffffff2de7] // MoveResolver resolve mapping <|@ <|@
      nr  948  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  950  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v39|DWORD) size: DWORD <|@ <|@
      nr  968  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  970  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v1|DWORD v2|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction DEOPT info [bci:10, 16, 41, 3] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: iload_2       
     3: invokevirtual #189        // substring:(int, int)java.lang.String
     6: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6fe89784 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction r9|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.lang.String.subSequence(String.java:2872) [bci: 0]
locals: r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction rdi|DWORD = MOVSXB input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   70  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction rsi|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6018906262441794 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4603596568345418578
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9663721533267153 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603414260059205002
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600843320827103580
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B44" 
    xhandlers
    flags 
    probability 4601207937399530733
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1801e864 encoding: base: 0 shift: 3 <|@ <|@
      nr  138  <|@ instruction rbp|DWORD = SUB (x: r8|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.9999787285234901 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601207777090930452
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.00977198389730849 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B22" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.7183170795883598 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B21" 
    xhandlers
    flags 
    probability 4599032071156696725
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.24957691254844944 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597213233028029193
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593072671573930308
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  226  <|@ instruction rdi|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD <|@ <|@
      nr  230  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr  232  <|@ instruction rsi|QWORD = ADD (x: rdi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4599735042323379768
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  268  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  270  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  272  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  274  <|@ instruction MOV x: [r10|QWORD] y: 1 size: QWORD <|@ <|@
      nr  276  <|@ instruction MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  278  <|@ instruction MOV (x: [r10|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  280  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  282  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4599674408099325029
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  292  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4629886495576233067
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4629839598793565730
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction MOV x: [r10|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  324  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  326  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4599674408099325029
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599735042323379768
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B24" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction rdi|DWORD = SUB (x: rbx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  370  <|@ instruction CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  372  <|@ instruction rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  374  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  390  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction rsi|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction rdx|QWORD = MOV value: r11|DWORD size: DWORD <|@ <|@
      nr  444  <|@ instruction r11|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + rdx|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  448  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  450  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  452  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4590015800143340609
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  482  <|@ instruction r11|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  486  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  488  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  490  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589962286348538852
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  518  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  520  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  522  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  524  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  526  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  528  <|@ instruction MOV (x: [rdi|QWORD + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  530  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B40" 
    xhandlers
    flags 
    probability 4590015800143340609
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  568  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  570  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  572  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  576  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  598  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  600  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4601059508744723248
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  626  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr  628  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  630  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  632  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  634  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  636  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1801e864 encoding: base: 0 shift: 3 <|@ <|@
      nr  654  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" "B14" "B43" "B44" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  678  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4581491086567258382
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4571426031092231524
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  714  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} r10|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:19, 41, 3] <|@ <|@
      nr  718  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} r10|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:19, 41, 3] <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B45" 
    xhandlers
    flags 
    probability 4571363187372395366
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:""] <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  738  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B32" 
    xhandlers
    flags 
    probability 4569985998969753389
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  766  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10, 16, 41, 3] <|@ <|@
      nr  770  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:10, 16, 41, 3] <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  772  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569907603205318980
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction ZERO_MEMORY (pointer: [r10|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  798  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4559988989006196334
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  802  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  826  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: r10|QWORD[.] int[0|0x0] r8|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:22, 3] <|@ <|@
      nr  830  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: r10|QWORD[.] int[0|0x0] r8|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:22, 3] <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  832  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B45" 
    xhandlers
    flags 
    probability 4531370617721367879
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  860  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2840) [bci: 54]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.newString(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:54, 3] <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  866  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-54809|0xffffffffffff29e7] // MoveResolver resolve mapping <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-50195|0xffffffffffff3bed] // MoveResolver resolve mapping <|@ <|@
      nr  886  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-52761|0xffffffffffff31e7] // MoveResolver resolve mapping <|@ <|@
      nr  896  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-48147|0xffffffffffff43ed] // MoveResolver resolve mapping <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-49171|0xffffffffffff3fed] // MoveResolver resolve mapping <|@ <|@
      nr  916  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr  936  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  938  <|@ st <@st|@live-base-pointers: []
java.lang.String.subSequence(String.java:2872) [bci: 0]
locals: r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-53785|0xffffffffffff2de7] // MoveResolver resolve mapping <|@ <|@
      nr  948  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  950  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  968  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  970  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction DEOPT info [bci:10, 16, 41, 3] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: iload_2       
     3: invokevirtual #189        // substring:(int, int)java.lang.String
     6: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6fe89784 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction r9|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.lang.String.subSequence(String.java:2872) [bci: 0]
locals: r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction rdi|DWORD = MOVSXB input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   70  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction rsi|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6018906262441794 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4603596568345418578
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9663721533267153 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603414260059205002
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600843320827103580
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B44" 
    xhandlers
    flags 
    probability 4601207937399530733
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1801e864 encoding: base: 0 shift: 3 <|@ <|@
      nr  138  <|@ instruction rbp|DWORD = SUB (x: r8|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.9999787285234901 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601207777090930452
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.00977198389730849 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B22" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.7183170795883598 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B21" 
    xhandlers
    flags 
    probability 4599032071156696725
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.24957691254844944 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597213233028029193
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593072671573930308
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  226  <|@ instruction rdi|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD <|@ <|@
      nr  230  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr  232  <|@ instruction rsi|QWORD = ADD (x: rdi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4599735042323379768
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  268  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  270  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  272  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  274  <|@ instruction MOV x: [r10|QWORD] y: 1 size: QWORD <|@ <|@
      nr  276  <|@ instruction MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  278  <|@ instruction MOV (x: [r10|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  280  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  282  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4599674408099325029
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  292  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4629886495576233067
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4629839598793565730
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction MOV x: [r10|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  324  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  326  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4599674408099325029
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599735042323379768
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B24" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction rdi|DWORD = SUB (x: rbx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  370  <|@ instruction CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  372  <|@ instruction rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  374  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  390  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction rsi|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction rdx|QWORD = MOV value: r11|DWORD size: DWORD <|@ <|@
      nr  444  <|@ instruction r11|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + rdx|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  448  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  450  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  452  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4590015800143340609
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  482  <|@ instruction r11|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  486  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  488  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  490  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589962286348538852
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  518  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  520  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  522  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  524  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  526  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  528  <|@ instruction MOV (x: [rdi|QWORD + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  530  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B40" 
    xhandlers
    flags 
    probability 4590015800143340609
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  568  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  570  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  572  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  576  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  598  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  600  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4601059508744723248
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  626  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr  628  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  630  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  632  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  634  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  636  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1801e864 encoding: base: 0 shift: 3 <|@ <|@
      nr  654  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" "B14" "B43" "B44" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  678  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4581491086567258382
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4571426031092231524
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  714  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} r10|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:19, 41, 3] <|@ <|@
      nr  718  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} r10|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:19, 41, 3] <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B45" 
    xhandlers
    flags 
    probability 4571363187372395366
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:""] <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  738  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B32" 
    xhandlers
    flags 
    probability 4569985998969753389
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  766  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10, 16, 41, 3] <|@ <|@
      nr  770  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:10, 16, 41, 3] <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  772  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569907603205318980
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction ZERO_MEMORY (pointer: [r10|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  798  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4559988989006196334
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  802  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  826  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: r10|QWORD[.] int[0|0x0] r8|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:22, 3] <|@ <|@
      nr  830  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: r10|QWORD[.] int[0|0x0] r8|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:22, 3] <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  832  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B45" 
    xhandlers
    flags 
    probability 4531370617721367879
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  860  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2840) [bci: 54]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.newString(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:54, 3] <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  866  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-54809|0xffffffffffff29e7] // MoveResolver resolve mapping <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-50195|0xffffffffffff3bed] // MoveResolver resolve mapping <|@ <|@
      nr  886  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-52761|0xffffffffffff31e7] // MoveResolver resolve mapping <|@ <|@
      nr  896  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-48147|0xffffffffffff43ed] // MoveResolver resolve mapping <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-49171|0xffffffffffff3fed] // MoveResolver resolve mapping <|@ <|@
      nr  916  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr  936  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  938  <|@ st <@st|@live-base-pointers: []
java.lang.String.subSequence(String.java:2872) [bci: 0]
locals: r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-53785|0xffffffffffff2de7] // MoveResolver resolve mapping <|@ <|@
      nr  948  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  950  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  968  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  970  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction DEOPT info [bci:10, 16, 41, 3] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: iload_2       
     3: invokevirtual #189        // substring:(int, int)java.lang.String
     6: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6fe89784 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction r9|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.lang.String.subSequence(String.java:2872) [bci: 0]
locals: r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction rdi|DWORD = MOVSXB input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   94  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction rsi|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6018906262441794 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4603596568345418578
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9663721533267153 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603414260059205002
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600843320827103580
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B44" 
    xhandlers
    flags 
    probability 4601207937399530733
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1801e864 encoding: base: 0 shift: 3 <|@ <|@
      nr  206  <|@ instruction rbp|DWORD = SUB (x: r8|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  208  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.9999787285234901 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601207777090930452
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.00977198389730849 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B22" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.7183170795883598 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B21" 
    xhandlers
    flags 
    probability 4599032071156696725
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.24957691254844944 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597213233028029193
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593072671573930308
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  470  <|@ instruction rdi|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD <|@ <|@
      nr  474  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr  476  <|@ instruction rsi|QWORD = ADD (x: rdi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  478  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4599735042323379768
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  544  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  546  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  548  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  550  <|@ instruction MOV x: [r10|QWORD] y: 1 size: QWORD <|@ <|@
      nr  552  <|@ instruction MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  554  <|@ instruction MOV (x: [r10|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  556  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  558  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4599674408099325029
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4629886495576233067
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4629839598793565730
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction MOV x: [r10|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  602  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  604  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4599674408099325029
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599735042323379768
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B24" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction rdi|DWORD = SUB (x: rbx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  672  <|@ instruction CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  674  <|@ instruction rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  676  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  704  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction rsi|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  802  <|@ instruction rdx|QWORD = MOV value: r11|DWORD size: DWORD <|@ <|@
      nr  804  <|@ instruction r11|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  806  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + rdx|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  808  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  810  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  812  <|@ instruction vstack:0|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  816  <|@ instruction r10|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4590015800143340609
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  292  <|@ instruction r11|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  294  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  296  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  298  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  300  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589962286348538852
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  360  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  362  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  364  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  366  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  368  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  370  <|@ instruction MOV (x: [rdi|QWORD + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  372  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B40" 
    xhandlers
    flags 
    probability 4590015800143340609
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  420  <|@ instruction r10|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  840  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  842  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4601059508744723248
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  896  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr  898  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  900  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  902  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  904  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  906  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1801e864 encoding: base: 0 shift: 3 <|@ <|@
      nr  924  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  926  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" "B14" "B43" "B44" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4581491086567258382
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4571426031092231524
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  866  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} r10|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:19, 41, 3] <|@ <|@
      nr  868  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} r10|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:19, 41, 3] <|@ <|@
      nr  870  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B45" 
    xhandlers
    flags 
    probability 4571363187372395366
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:""] <|@ <|@
      nr  236  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B32" 
    xhandlers
    flags 
    probability 4569985998969753389
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10, 16, 41, 3] <|@ <|@
      nr  506  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:10, 16, 41, 3] <|@ <|@
      nr  508  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569907603205318980
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction ZERO_MEMORY (pointer: [r10|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4559988989006196334
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: r10|QWORD[.] int[0|0x0] r8|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:22, 3] <|@ <|@
      nr  328  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: r10|QWORD[.] int[0|0x0] r8|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:22, 3] <|@ <|@
      nr  330  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B45" 
    xhandlers
    flags 
    probability 4531370617721367879
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  956  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2840) [bci: 54]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.newString(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:54, 3] <|@ <|@
      nr  960  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction r10|DWORD = MOVE input: int[-54809|0xffffffffffff29e7] <|@ <|@
      nr  740  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction r9|DWORD = MOVE input: int[-50195|0xffffffffffff3bed] <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction r10|DWORD = MOVE input: int[-52761|0xffffffffffff31e7] <|@ <|@
      nr  688  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction r9|DWORD = MOVE input: int[-48147|0xffffffffffff43ed] <|@ <|@
      nr   50  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction r9|DWORD = MOVE input: int[-49171|0xffffffffffff3fed] <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  132  <|@ st <@st|@live-base-pointers: []
java.lang.String.subSequence(String.java:2872) [bci: 0]
locals: r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction r10|DWORD = MOVE input: int[-53785|0xffffffffffff2de7] <|@ <|@
      nr  716  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  760  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  762  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction DEOPT info [bci:10, 16, 41, 3] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: iload_2       
     3: invokevirtual #189        // substring:(int, int)java.lang.String
     6: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|q QWORD "[vstack:0|q]" vstack:0|q -1 [812, 816[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[vstack:1|q]" vstack:1|q -1 [410, 420[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|q QWORD "[stack:32|q]" vstack:0|q -1 [812, 816[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[stack:32|q]" vstack:1|q -1 [410, 420[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6fe89784 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction r9|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.lang.String.subSequence(String.java:2872) [bci: 0]
locals: r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction rdi|DWORD = MOVSXB input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   94  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction rsi|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6018906262441794 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4603596568345418578
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9663721533267153 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603414260059205002
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600843320827103580
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B44" 
    xhandlers
    flags 
    probability 4601207937399530733
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1801e864 encoding: base: 0 shift: 3 <|@ <|@
      nr  206  <|@ instruction rbp|DWORD = SUB (x: r8|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  208  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.9999787285234901 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601207777090930452
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.00977198389730849 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B22" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.7183170795883598 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B21" 
    xhandlers
    flags 
    probability 4599032071156696725
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.24957691254844944 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597213233028029193
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593072671573930308
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  470  <|@ instruction rdi|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD <|@ <|@
      nr  474  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr  476  <|@ instruction rsi|QWORD = ADD (x: rdi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  478  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4599735042323379768
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  544  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  546  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  548  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  550  <|@ instruction MOV x: [r10|QWORD] y: 1 size: QWORD <|@ <|@
      nr  552  <|@ instruction MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  554  <|@ instruction MOV (x: [r10|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  556  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  558  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4599674408099325029
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4629886495576233067
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4629839598793565730
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction MOV x: [r10|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  602  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  604  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4599674408099325029
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599735042323379768
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B24" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction rdi|DWORD = SUB (x: rbx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  672  <|@ instruction CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  674  <|@ instruction rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  676  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  704  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction rsi|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  802  <|@ instruction rdx|QWORD = MOV value: r11|DWORD size: DWORD <|@ <|@
      nr  804  <|@ instruction r11|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  806  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + rdx|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  808  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  810  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  812  <|@ instruction stack:32|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  816  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4590015800143340609
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  292  <|@ instruction r11|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  294  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  296  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  298  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  300  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589962286348538852
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  360  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  362  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  364  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  366  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  368  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  370  <|@ instruction MOV (x: [rdi|QWORD + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  372  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B40" 
    xhandlers
    flags 
    probability 4590015800143340609
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction stack:32|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  420  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  840  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  842  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4601059508744723248
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  896  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr  898  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  900  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  902  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  904  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  906  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1801e864 encoding: base: 0 shift: 3 <|@ <|@
      nr  924  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  926  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" "B14" "B43" "B44" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4581491086567258382
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4571426031092231524
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  866  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} r10|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:19, 41, 3] <|@ <|@
      nr  868  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} r10|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:19, 41, 3] <|@ <|@
      nr  870  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B45" 
    xhandlers
    flags 
    probability 4571363187372395366
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:""] <|@ <|@
      nr  236  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B32" 
    xhandlers
    flags 
    probability 4569985998969753389
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10, 16, 41, 3] <|@ <|@
      nr  506  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:10, 16, 41, 3] <|@ <|@
      nr  508  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569907603205318980
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction ZERO_MEMORY (pointer: [r10|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4559988989006196334
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: r10|QWORD[.] int[0|0x0] r8|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:22, 3] <|@ <|@
      nr  328  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: r10|QWORD[.] int[0|0x0] r8|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:22, 3] <|@ <|@
      nr  330  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B45" 
    xhandlers
    flags 
    probability 4531370617721367879
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  956  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2840) [bci: 54]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.newString(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:54, 3] <|@ <|@
      nr  960  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction r10|DWORD = MOVE input: int[-54809|0xffffffffffff29e7] <|@ <|@
      nr  740  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction r9|DWORD = MOVE input: int[-50195|0xffffffffffff3bed] <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction r10|DWORD = MOVE input: int[-52761|0xffffffffffff31e7] <|@ <|@
      nr  688  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction r9|DWORD = MOVE input: int[-48147|0xffffffffffff43ed] <|@ <|@
      nr   50  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction r9|DWORD = MOVE input: int[-49171|0xffffffffffff3fed] <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  132  <|@ st <@st|@live-base-pointers: []
java.lang.String.subSequence(String.java:2872) [bci: 0]
locals: r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction r10|DWORD = MOVE input: int[-53785|0xffffffffffff2de7] <|@ <|@
      nr  716  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  760  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  762  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction DEOPT info [bci:10, 16, 41, 3] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: iload_2       
     3: invokevirtual #189        // substring:(int, int)java.lang.String
     6: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6fe89784 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction r9|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.lang.String.subSequence(String.java:2872) [bci: 0]
locals: r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction rdi|DWORD = MOVSXB input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   94  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction rsi|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6018906262441794 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4603596568345418578
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9663721533267153 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603414260059205002
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600843320827103580
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B44" 
    xhandlers
    flags 
    probability 4601207937399530733
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1801e864 encoding: base: 0 shift: 3 <|@ <|@
      nr  206  <|@ instruction rbp|DWORD = SUB (x: r8|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  208  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.9999787285234901 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601207777090930452
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.00977198389730849 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B22" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.7183170795883598 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B21" 
    xhandlers
    flags 
    probability 4599032071156696725
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.24957691254844944 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597213233028029193
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593072671573930308
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  470  <|@ instruction rdi|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD <|@ <|@
      nr  474  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr  476  <|@ instruction rsi|QWORD = ADD (x: rdi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  478  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4599735042323379768
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  544  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  546  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  548  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  550  <|@ instruction MOV x: [r10|QWORD] y: 1 size: QWORD <|@ <|@
      nr  552  <|@ instruction MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  554  <|@ instruction MOV (x: [r10|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  556  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  558  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4599674408099325029
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4629886495576233067
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4629839598793565730
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction MOV x: [r10|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  602  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  604  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4599674408099325029
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599735042323379768
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B24" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction rdi|DWORD = SUB (x: rbx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  672  <|@ instruction CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  674  <|@ instruction rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  676  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  704  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction rsi|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  802  <|@ instruction rdx|QWORD = MOV value: r11|DWORD size: DWORD <|@ <|@
      nr  804  <|@ instruction r11|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  806  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + rdx|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  808  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  810  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  812  <|@ instruction stack:32|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  816  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4590015800143340609
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  292  <|@ instruction r11|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  294  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  296  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  298  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  300  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589962286348538852
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  360  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  362  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  364  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  366  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  368  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  370  <|@ instruction MOV (x: [rdi|QWORD + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  372  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B40" 
    xhandlers
    flags 
    probability 4590015800143340609
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction stack:32|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  420  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  840  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  842  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4601059508744723248
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  896  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr  898  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  900  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  902  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  904  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  906  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1801e864 encoding: base: 0 shift: 3 <|@ <|@
      nr  924  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  926  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" "B14" "B43" "B44" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4581491086567258382
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4571426031092231524
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  866  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} r10|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:19, 41, 3] <|@ <|@
      nr  868  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} r10|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:19, 41, 3] <|@ <|@
      nr  870  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B45" 
    xhandlers
    flags 
    probability 4571363187372395366
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:""] <|@ <|@
      nr  236  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B32" 
    xhandlers
    flags 
    probability 4569985998969753389
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10, 16, 41, 3] <|@ <|@
      nr  506  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:10, 16, 41, 3] <|@ <|@
      nr  508  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569907603205318980
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction ZERO_MEMORY (pointer: [r10|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4559988989006196334
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: r10|QWORD[.] int[0|0x0] r8|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:22, 3] <|@ <|@
      nr  328  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: r10|QWORD[.] int[0|0x0] r8|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:22, 3] <|@ <|@
      nr  330  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B45" 
    xhandlers
    flags 
    probability 4531370617721367879
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  956  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2840) [bci: 54]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.newString(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:54, 3] <|@ <|@
      nr  960  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction r10|DWORD = MOVE input: int[-54809|0xffffffffffff29e7] <|@ <|@
      nr  740  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction r9|DWORD = MOVE input: int[-50195|0xffffffffffff3bed] <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction r10|DWORD = MOVE input: int[-52761|0xffffffffffff31e7] <|@ <|@
      nr  688  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction r9|DWORD = MOVE input: int[-48147|0xffffffffffff43ed] <|@ <|@
      nr   50  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction r9|DWORD = MOVE input: int[-49171|0xffffffffffff3fed] <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  132  <|@ st <@st|@live-base-pointers: []
java.lang.String.subSequence(String.java:2872) [bci: 0]
locals: r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction r10|DWORD = MOVE input: int[-53785|0xffffffffffff2de7] <|@ <|@
      nr  716  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  760  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  762  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction DEOPT info [bci:10, 16, 41, 3] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: iload_2       
     3: invokevirtual #189        // substring:(int, int)java.lang.String
     6: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6fe89784 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction r9|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.lang.String.subSequence(String.java:2872) [bci: 0]
locals: r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction rdi|DWORD = MOVSXB input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   94  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction rsi|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6018906262441794 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4603596568345418578
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9663721533267153 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603414260059205002
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600843320827103580
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B44" 
    xhandlers
    flags 
    probability 4601207937399530733
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1801e864 encoding: base: 0 shift: 3 <|@ <|@
      nr  206  <|@ instruction rbp|DWORD = SUB (x: r8|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  208  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.9999787285234901 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601207777090930452
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.00977198389730849 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B22" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.7183170795883598 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B21" 
    xhandlers
    flags 
    probability 4599032071156696725
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.24957691254844944 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597213233028029193
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593072671573930308
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  470  <|@ instruction rdi|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD <|@ <|@
      nr  474  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr  476  <|@ instruction rsi|QWORD = ADD (x: rdi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  478  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4599735042323379768
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  544  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  546  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  548  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  550  <|@ instruction MOV x: [r10|QWORD] y: 1 size: QWORD <|@ <|@
      nr  552  <|@ instruction MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  554  <|@ instruction MOV (x: [r10|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  556  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  558  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4599674408099325029
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4629886495576233067
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4629839598793565730
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction MOV x: [r10|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  602  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  604  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4599674408099325029
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599735042323379768
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B24" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction rdi|DWORD = SUB (x: rbx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  672  <|@ instruction CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  674  <|@ instruction rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  676  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  704  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction rsi|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  802  <|@ instruction rdx|QWORD = MOV value: r11|DWORD size: DWORD <|@ <|@
      nr  804  <|@ instruction r11|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  806  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + rdx|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  808  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  810  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  812  <|@ instruction stack:32|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4590015800143340609
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  292  <|@ instruction r11|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  294  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  296  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  298  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  300  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589962286348538852
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  360  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  362  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  364  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  366  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  368  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  370  <|@ instruction MOV (x: [rdi|QWORD + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  372  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B40" 
    xhandlers
    flags 
    probability 4590015800143340609
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction stack:32|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  422  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  420  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  840  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  842  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4601059508744723248
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  896  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr  898  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  900  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  902  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  904  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  906  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1801e864 encoding: base: 0 shift: 3 <|@ <|@
      nr  924  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  926  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" "B14" "B43" "B44" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4581491086567258382
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4571426031092231524
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  866  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} r10|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:19, 41, 3] <|@ <|@
      nr  868  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} r10|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:19, 41, 3] <|@ <|@
      nr  870  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B45" 
    xhandlers
    flags 
    probability 4571363187372395366
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:""] <|@ <|@
      nr  236  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B32" 
    xhandlers
    flags 
    probability 4569985998969753389
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10, 16, 41, 3] <|@ <|@
      nr  506  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:10, 16, 41, 3] <|@ <|@
      nr  508  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569907603205318980
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction ZERO_MEMORY (pointer: [r10|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4559988989006196334
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: r10|QWORD[.] int[0|0x0] r8|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:22, 3] <|@ <|@
      nr  328  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: r10|QWORD[.] int[0|0x0] r8|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:22, 3] <|@ <|@
      nr  330  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B45" 
    xhandlers
    flags 
    probability 4531370617721367879
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  956  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2840) [bci: 54]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.newString(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:54, 3] <|@ <|@
      nr  960  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction r10|DWORD = MOVE input: int[-54809|0xffffffffffff29e7] <|@ <|@
      nr  740  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction r9|DWORD = MOVE input: int[-50195|0xffffffffffff3bed] <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction r10|DWORD = MOVE input: int[-52761|0xffffffffffff31e7] <|@ <|@
      nr  688  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction r9|DWORD = MOVE input: int[-48147|0xffffffffffff43ed] <|@ <|@
      nr   50  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction r9|DWORD = MOVE input: int[-49171|0xffffffffffff3fed] <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  132  <|@ st <@st|@live-base-pointers: []
java.lang.String.subSequence(String.java:2872) [bci: 0]
locals: r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction r10|DWORD = MOVE input: int[-53785|0xffffffffffff2de7] <|@ <|@
      nr  716  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  760  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  762  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction DEOPT info [bci:10, 16, 41, 3] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: iload_2       
     3: invokevirtual #189        // substring:(int, int)java.lang.String
     6: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6fe89784 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction r9|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.lang.String.subSequence(String.java:2872) [bci: 0]
locals: r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction rdi|DWORD = MOVSXB input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   94  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction rsi|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6018906262441794 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4603596568345418578
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9663721533267153 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603414260059205002
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600843320827103580
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B44" 
    xhandlers
    flags 
    probability 4601207937399530733
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1801e864 encoding: base: 0 shift: 3 <|@ <|@
      nr  206  <|@ instruction rbp|DWORD = SUB (x: r8|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  208  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.9999787285234901 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601207777090930452
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.00977198389730849 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B22" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.7183170795883598 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B21" 
    xhandlers
    flags 
    probability 4599032071156696725
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.24957691254844944 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597213233028029193
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593072671573930308
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  470  <|@ instruction rdi|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD <|@ <|@
      nr  474  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr  476  <|@ instruction rsi|QWORD = ADD (x: rdi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  478  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4599735042323379768
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  544  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  546  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  548  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  550  <|@ instruction MOV x: [r10|QWORD] y: 1 size: QWORD <|@ <|@
      nr  552  <|@ instruction MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  554  <|@ instruction MOV (x: [r10|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  556  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  558  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4599674408099325029
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4629886495576233067
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4629839598793565730
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction MOV x: [r10|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  602  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  604  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4599674408099325029
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599735042323379768
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B24" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction rdi|DWORD = SUB (x: rbx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  672  <|@ instruction CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  674  <|@ instruction rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  676  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  704  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction rsi|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  802  <|@ instruction rdx|QWORD = MOV value: r11|DWORD size: DWORD <|@ <|@
      nr  804  <|@ instruction r11|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  806  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + rdx|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  808  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  810  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  812  <|@ instruction stack:32|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4590015800143340609
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  292  <|@ instruction r11|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  294  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  296  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  298  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  300  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589962286348538852
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  360  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  362  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  364  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  366  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  368  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  370  <|@ instruction MOV (x: [rdi|QWORD + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  372  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B40" 
    xhandlers
    flags 
    probability 4590015800143340609
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction stack:32|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  422  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  420  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  840  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  842  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4601059508744723248
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  896  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr  898  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  900  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  902  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  904  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  906  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1801e864 encoding: base: 0 shift: 3 <|@ <|@
      nr  924  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  926  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" "B14" "B43" "B44" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4581491086567258382
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4571426031092231524
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  866  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} r10|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:19, 41, 3] <|@ <|@
      nr  868  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} r10|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:19, 41, 3] <|@ <|@
      nr  870  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B45" 
    xhandlers
    flags 
    probability 4571363187372395366
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:""] <|@ <|@
      nr  236  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B32" 
    xhandlers
    flags 
    probability 4569985998969753389
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10, 16, 41, 3] <|@ <|@
      nr  506  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:10, 16, 41, 3] <|@ <|@
      nr  508  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569907603205318980
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction ZERO_MEMORY (pointer: [r10|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4559988989006196334
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: r10|QWORD[.] int[0|0x0] r8|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:22, 3] <|@ <|@
      nr  328  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: r10|QWORD[.] int[0|0x0] r8|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:22, 3] <|@ <|@
      nr  330  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B45" 
    xhandlers
    flags 
    probability 4531370617721367879
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2840) [bci: 54]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.newString(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:54, 3] <|@ <|@
      nr  960  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction r10|DWORD = MOVE input: int[-54809|0xffffffffffff29e7] <|@ <|@
      nr  740  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction r9|DWORD = MOVE input: int[-50195|0xffffffffffff3bed] <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction r10|DWORD = MOVE input: int[-52761|0xffffffffffff31e7] <|@ <|@
      nr  688  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction r9|DWORD = MOVE input: int[-48147|0xffffffffffff43ed] <|@ <|@
      nr   50  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction r9|DWORD = MOVE input: int[-49171|0xffffffffffff3fed] <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  132  <|@ st <@st|@live-base-pointers: []
java.lang.String.subSequence(String.java:2872) [bci: 0]
locals: r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction r10|DWORD = MOVE input: int[-53785|0xffffffffffff2de7] <|@ <|@
      nr  716  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  760  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  762  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction DEOPT info [bci:10, 16, 41, 3] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: iload_2       
     3: invokevirtual #189        // substring:(int, int)java.lang.String
     6: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6fe89784 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction r9|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.lang.String.subSequence(String.java:2872) [bci: 0]
locals: r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction rdi|DWORD = MOVSXB input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   94  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction rsi|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6018906262441794 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4603596568345418578
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9663721533267153 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603414260059205002
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600843320827103580
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B44" 
    xhandlers
    flags 
    probability 4601207937399530733
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1801e864 encoding: base: 0 shift: 3 <|@ <|@
      nr  206  <|@ instruction rbp|DWORD = SUB (x: r8|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  208  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.9999787285234901 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601207777090930452
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.00977198389730849 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B22" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.7183170795883598 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B21" 
    xhandlers
    flags 
    probability 4599032071156696725
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.24957691254844944 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597213233028029193
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593072671573930308
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  470  <|@ instruction rdi|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD <|@ <|@
      nr  474  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr  476  <|@ instruction rsi|QWORD = ADD (x: rdi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  478  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4599735042323379768
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  544  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  546  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  548  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  550  <|@ instruction MOV x: [r10|QWORD] y: 1 size: QWORD <|@ <|@
      nr  552  <|@ instruction MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  554  <|@ instruction MOV (x: [r10|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  556  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  558  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4599674408099325029
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4629886495576233067
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4629839598793565730
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction MOV x: [r10|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  602  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  604  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4599674408099325029
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599735042323379768
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B24" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction rdi|DWORD = SUB (x: rbx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  672  <|@ instruction CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  674  <|@ instruction rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  676  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  704  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction rsi|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  802  <|@ instruction rdx|QWORD = MOV value: r11|DWORD size: DWORD <|@ <|@
      nr  804  <|@ instruction r11|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  806  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + rdx|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  808  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  810  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  812  <|@ instruction stack:32|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4590015800143340609
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  292  <|@ instruction r11|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  294  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  296  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  298  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  300  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589962286348538852
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  360  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  362  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  364  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  366  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  368  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  370  <|@ instruction MOV (x: [rdi|QWORD + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  372  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B40" 
    xhandlers
    flags 
    probability 4590015800143340609
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction stack:32|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  422  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  420  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  840  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  842  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4601059508744723248
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  896  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr  898  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  900  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  902  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  904  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  906  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1801e864 encoding: base: 0 shift: 3 <|@ <|@
      nr  924  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  926  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" "B14" "B43" "B44" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4581491086567258382
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4571426031092231524
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  866  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} r10|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:19, 41, 3] <|@ <|@
      nr  868  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} r10|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:19, 41, 3] <|@ <|@
      nr  870  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B45" 
    xhandlers
    flags 
    probability 4571363187372395366
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:""] <|@ <|@
      nr  236  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B32" 
    xhandlers
    flags 
    probability 4569985998969753389
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10, 16, 41, 3] <|@ <|@
      nr  506  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:10, 16, 41, 3] <|@ <|@
      nr  508  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569907603205318980
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction ZERO_MEMORY (pointer: [r10|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4559988989006196334
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: r10|QWORD[.] int[0|0x0] r8|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:22, 3] <|@ <|@
      nr  328  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: r10|QWORD[.] int[0|0x0] r8|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:22, 3] <|@ <|@
      nr  330  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B45" 
    xhandlers
    flags 
    probability 4531370617721367879
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2840) [bci: 54]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.newString(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:54, 3] <|@ <|@
      nr  960  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction r10|DWORD = MOVE input: int[-54809|0xffffffffffff29e7] <|@ <|@
      nr  740  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction r9|DWORD = MOVE input: int[-50195|0xffffffffffff3bed] <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction r10|DWORD = MOVE input: int[-52761|0xffffffffffff31e7] <|@ <|@
      nr  688  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction r9|DWORD = MOVE input: int[-48147|0xffffffffffff43ed] <|@ <|@
      nr   50  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction r9|DWORD = MOVE input: int[-49171|0xffffffffffff3fed] <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  132  <|@ st <@st|@live-base-pointers: []
java.lang.String.subSequence(String.java:2872) [bci: 0]
locals: r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction r10|DWORD = MOVE input: int[-53785|0xffffffffffff2de7] <|@ <|@
      nr  716  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  760  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  762  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction DEOPT info [bci:10, 16, 41, 3] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: iload_2       
     3: invokevirtual #189        // substring:(int, int)java.lang.String
     6: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6fe89784 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction r9|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.lang.String.subSequence(String.java:2872) [bci: 0]
locals: r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction rdi|DWORD = MOVSXB input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   94  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction rsi|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6018906262441794 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4603596568345418578
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9663721533267153 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603414260059205002
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600843320827103580
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B44" 
    xhandlers
    flags 
    probability 4601207937399530733
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1801e864 encoding: base: 0 shift: 3 <|@ <|@
      nr  206  <|@ instruction rbp|DWORD = SUB (x: r8|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  208  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.9999787285234901 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601207777090930452
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.00977198389730849 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B22" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.7183170795883598 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B21" 
    xhandlers
    flags 
    probability 4599032071156696725
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.24957691254844944 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597213233028029193
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593072671573930308
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  470  <|@ instruction rdi|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD <|@ <|@
      nr  474  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr  476  <|@ instruction rsi|QWORD = ADD (x: rdi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  478  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4599735042323379768
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  544  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  546  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  548  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  550  <|@ instruction MOV x: [r10|QWORD] y: 1 size: QWORD <|@ <|@
      nr  552  <|@ instruction MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  554  <|@ instruction MOV (x: [r10|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  556  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  558  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4599674408099325029
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4629886495576233067
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4629839598793565730
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction MOV x: [r10|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  602  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  604  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4599674408099325029
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599735042323379768
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B24" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction rdi|DWORD = SUB (x: rbx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  672  <|@ instruction CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  674  <|@ instruction rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  676  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  704  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction rsi|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  802  <|@ instruction rdx|QWORD = MOV value: r11|DWORD size: DWORD <|@ <|@
      nr  804  <|@ instruction r11|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  806  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + rdx|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  808  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  810  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  812  <|@ instruction stack:32|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4590015800143340609
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  292  <|@ instruction r11|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  294  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  296  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  298  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  300  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589962286348538852
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  360  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  362  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  364  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  366  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  368  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  370  <|@ instruction MOV (x: [rdi|QWORD + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  372  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B40" 
    xhandlers
    flags 
    probability 4590015800143340609
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction stack:32|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  422  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  420  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  840  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  842  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4601059508744723248
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  896  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr  898  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  900  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  902  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  904  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  906  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1801e864 encoding: base: 0 shift: 3 <|@ <|@
      nr  924  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  926  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" "B14" "B43" "B44" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4581491086567258382
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4571426031092231524
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  866  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} r10|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:19, 41, 3] <|@ <|@
      nr  868  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} r10|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:19, 41, 3] <|@ <|@
      nr  870  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B45" 
    xhandlers
    flags 
    probability 4571363187372395366
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:""] <|@ <|@
      nr  236  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B32" 
    xhandlers
    flags 
    probability 4569985998969753389
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10, 16, 41, 3] <|@ <|@
      nr  506  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:10, 16, 41, 3] <|@ <|@
      nr  508  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569907603205318980
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction ZERO_MEMORY (pointer: [r10|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4559988989006196334
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: r10|QWORD[.] int[0|0x0] r8|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:22, 3] <|@ <|@
      nr  328  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: r10|QWORD[.] int[0|0x0] r8|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:22, 3] <|@ <|@
      nr  330  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B45" 
    xhandlers
    flags 
    probability 4531370617721367879
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2840) [bci: 54]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.newString(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:54, 3] <|@ <|@
      nr  960  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction r10|DWORD = MOVE input: int[-54809|0xffffffffffff29e7] <|@ <|@
      nr  740  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction r9|DWORD = MOVE input: int[-50195|0xffffffffffff3bed] <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction r10|DWORD = MOVE input: int[-52761|0xffffffffffff31e7] <|@ <|@
      nr  688  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction r9|DWORD = MOVE input: int[-48147|0xffffffffffff43ed] <|@ <|@
      nr   50  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction r9|DWORD = MOVE input: int[-49171|0xffffffffffff3fed] <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  132  <|@ st <@st|@live-base-pointers: []
java.lang.String.subSequence(String.java:2872) [bci: 0]
locals: r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction r10|DWORD = MOVE input: int[-53785|0xffffffffffff2de7] <|@ <|@
      nr  716  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  760  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  762  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction DEOPT info [bci:10, 16, 41, 3] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: iload_2       
     3: invokevirtual #189        // substring:(int, int)java.lang.String
     6: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6fe89784 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction r9|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.lang.String.subSequence(String.java:2872) [bci: 0]
locals: r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction rdi|DWORD = MOVSXB input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   94  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction rsi|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6018906262441794 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4603596568345418578
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9663721533267153 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603414260059205002
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" "B14" "B43" "B44" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600843320827103580
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B44" 
    xhandlers
    flags 
    probability 4601207937399530733
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1801e864 encoding: base: 0 shift: 3 <|@ <|@
      nr  206  <|@ instruction rbp|DWORD = SUB (x: r8|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  208  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.9999787285234901 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601207777090930452
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.00977198389730849 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B22" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.7183170795883598 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B21" 
    xhandlers
    flags 
    probability 4599032071156696725
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.24957691254844944 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597213233028029193
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  470  <|@ instruction rdi|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD <|@ <|@
      nr  474  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr  476  <|@ instruction rsi|QWORD = ADD (x: rdi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  478  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4599735042323379768
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  544  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  546  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  548  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  550  <|@ instruction MOV x: [r10|QWORD] y: 1 size: QWORD <|@ <|@
      nr  552  <|@ instruction MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  554  <|@ instruction MOV (x: [r10|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  556  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  558  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4599674408099325029
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4629839598793565730
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction MOV x: [r10|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  602  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  604  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4629886495576233067
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4599674408099325029
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599735042323379768
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B24" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction rdi|DWORD = SUB (x: rbx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  672  <|@ instruction CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  674  <|@ instruction rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  676  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  704  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction rsi|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  802  <|@ instruction rdx|QWORD = MOV value: r11|DWORD size: DWORD <|@ <|@
      nr  804  <|@ instruction r11|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  806  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + rdx|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  808  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  810  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  812  <|@ instruction stack:32|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  420  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  840  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  842  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4601059508744723248
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  896  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr  898  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  900  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  902  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  904  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  906  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1801e864 encoding: base: 0 shift: 3 <|@ <|@
      nr  924  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  926  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593072671573930308
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4590015800143340609
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  292  <|@ instruction r11|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  294  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  296  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  298  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  300  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589962286348538852
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  360  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  362  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  364  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  366  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  368  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  370  <|@ instruction MOV (x: [rdi|QWORD + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  372  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B40" 
    xhandlers
    flags 
    probability 4590015800143340609
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction stack:32|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  422  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4581491086567258382
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4571426031092231524
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  866  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} r10|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:19, 41, 3] <|@ <|@
      nr  868  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} r10|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:19, 41, 3] <|@ <|@
      nr  870  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B45" 
    xhandlers
    flags 
    probability 4571363187372395366
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:""] <|@ <|@
      nr  236  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B32" 
    xhandlers
    flags 
    probability 4569985998969753389
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10, 16, 41, 3] <|@ <|@
      nr  506  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:10, 16, 41, 3] <|@ <|@
      nr  508  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569907603205318980
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction ZERO_MEMORY (pointer: [r10|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4559988989006196334
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: r10|QWORD[.] int[0|0x0] r8|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:22, 3] <|@ <|@
      nr  328  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: r10|QWORD[.] int[0|0x0] r8|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:22, 3] <|@ <|@
      nr  330  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B45" 
    xhandlers
    flags 
    probability 4531370617721367879
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2840) [bci: 54]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.newString(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:54, 3] <|@ <|@
      nr  960  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction r10|DWORD = MOVE input: int[-54809|0xffffffffffff29e7] <|@ <|@
      nr  740  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  760  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  762  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction DEOPT info [bci:10, 16, 41, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction r10|DWORD = MOVE input: int[-53785|0xffffffffffff2de7] <|@ <|@
      nr  716  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction r10|DWORD = MOVE input: int[-52761|0xffffffffffff31e7] <|@ <|@
      nr  688  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction r9|DWORD = MOVE input: int[-48147|0xffffffffffff43ed] <|@ <|@
      nr   50  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  132  <|@ st <@st|@live-base-pointers: []
java.lang.String.subSequence(String.java:2872) [bci: 0]
locals: r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction r9|DWORD = MOVE input: int[-49171|0xffffffffffff3fed] <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction r9|DWORD = MOVE input: int[-50195|0xffffffffffff3bed] <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: iload_2       
     3: invokevirtual #189        // substring:(int, int)java.lang.String
     6: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6fe89784 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction r9|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.lang.String.subSequence(String.java:2872) [bci: 0]
locals: r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction rdi|DWORD = MOVSXB input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   94  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction rsi|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6018906262441794 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4603596568345418578
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9663721533267153 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603414260059205002
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" "B14" "B43" "B44" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600843320827103580
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B44" 
    xhandlers
    flags 
    probability 4601207937399530733
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1801e864 encoding: base: 0 shift: 3 <|@ <|@
      nr  206  <|@ instruction rbp|DWORD = SUB (x: r8|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  208  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.9999787285234901 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601207777090930452
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.00977198389730849 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B22" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.7183170795883598 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B21" 
    xhandlers
    flags 
    probability 4599032071156696725
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.24957691254844944 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597213233028029193
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  470  <|@ instruction rdi|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD <|@ <|@
      nr  474  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr  476  <|@ instruction rsi|QWORD = ADD (x: rdi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  478  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4599735042323379768
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  544  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  546  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  548  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  550  <|@ instruction MOV x: [r10|QWORD] y: 1 size: QWORD <|@ <|@
      nr  552  <|@ instruction MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  554  <|@ instruction MOV (x: [r10|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  556  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  558  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4599674408099325029
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4629839598793565730
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction MOV x: [r10|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  602  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  604  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4629886495576233067
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4599674408099325029
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599735042323379768
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B24" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction rdi|DWORD = SUB (x: rbx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  672  <|@ instruction CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  674  <|@ instruction rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  676  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  704  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction rsi|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  802  <|@ instruction rdx|QWORD = MOV value: r11|DWORD size: DWORD <|@ <|@
      nr  804  <|@ instruction r11|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  806  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + rdx|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  808  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  810  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  812  <|@ instruction stack:32|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  420  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  840  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  842  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4601059508744723248
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  896  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr  898  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  900  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  902  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  904  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  906  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1801e864 encoding: base: 0 shift: 3 <|@ <|@
      nr  924  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  926  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593072671573930308
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4590015800143340609
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  292  <|@ instruction r11|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  294  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  296  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  298  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  300  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589962286348538852
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  360  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  362  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  364  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  366  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  368  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  370  <|@ instruction MOV (x: [rdi|QWORD + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  372  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B40" 
    xhandlers
    flags 
    probability 4590015800143340609
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction stack:32|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  422  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4581491086567258382
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4571426031092231524
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  866  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} r10|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:19, 41, 3] <|@ <|@
      nr  868  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} r10|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:19, 41, 3] <|@ <|@
      nr  870  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B45" 
    xhandlers
    flags 
    probability 4571363187372395366
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:""] <|@ <|@
      nr  236  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B32" 
    xhandlers
    flags 
    probability 4569985998969753389
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10, 16, 41, 3] <|@ <|@
      nr  506  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:10, 16, 41, 3] <|@ <|@
      nr  508  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569907603205318980
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction ZERO_MEMORY (pointer: [r10|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4559988989006196334
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: r10|QWORD[.] int[0|0x0] r8|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:22, 3] <|@ <|@
      nr  328  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: r10|QWORD[.] int[0|0x0] r8|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:22, 3] <|@ <|@
      nr  330  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B45" 
    xhandlers
    flags 
    probability 4531370617721367879
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2840) [bci: 54]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.newString(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:54, 3] <|@ <|@
      nr  960  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction r10|DWORD = MOVE input: int[-54809|0xffffffffffff29e7] <|@ <|@
      nr  740  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  760  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  762  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction DEOPT info [bci:10, 16, 41, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction r10|DWORD = MOVE input: int[-53785|0xffffffffffff2de7] <|@ <|@
      nr  716  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction r10|DWORD = MOVE input: int[-52761|0xffffffffffff31e7] <|@ <|@
      nr  688  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction r9|DWORD = MOVE input: int[-48147|0xffffffffffff43ed] <|@ <|@
      nr   50  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  132  <|@ st <@st|@live-base-pointers: []
java.lang.String.subSequence(String.java:2872) [bci: 0]
locals: r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction r9|DWORD = MOVE input: int[-49171|0xffffffffffff3fed] <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction r9|DWORD = MOVE input: int[-50195|0xffffffffffff3bed] <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: iload_2       
     3: invokevirtual #189        // substring:(int, int)java.lang.String
     6: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6fe89784 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction r9|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.lang.String.subSequence(String.java:2872) [bci: 0]
locals: r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction rdi|DWORD = MOVSXB input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   94  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction rsi|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6018906262441794 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4603596568345418578
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9663721533267153 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603414260059205002
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" "B14" "B43" "B44" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600843320827103580
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B44" 
    xhandlers
    flags 
    probability 4601207937399530733
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1801e864 encoding: base: 0 shift: 3 <|@ <|@
      nr  206  <|@ instruction rbp|DWORD = SUB (x: r8|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  208  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.9999787285234901 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601207777090930452
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.00977198389730849 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B22" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.7183170795883598 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B21" 
    xhandlers
    flags 
    probability 4599032071156696725
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.24957691254844944 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597213233028029193
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  470  <|@ instruction rdi|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD <|@ <|@
      nr  474  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr  476  <|@ instruction rsi|QWORD = ADD (x: rdi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  478  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4599735042323379768
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  544  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  546  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  548  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  550  <|@ instruction MOV x: [r10|QWORD] y: 1 size: QWORD <|@ <|@
      nr  552  <|@ instruction MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  554  <|@ instruction MOV (x: [r10|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  556  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  558  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4599674408099325029
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4629839598793565730
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction MOV x: [r10|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  602  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  604  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4629886495576233067
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4599674408099325029
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599735042323379768
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B24" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction rdi|DWORD = SUB (x: rbx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  672  <|@ instruction CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  674  <|@ instruction rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  676  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  704  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction rsi|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  802  <|@ instruction rdx|QWORD = MOV value: r11|DWORD size: DWORD <|@ <|@
      nr  804  <|@ instruction r11|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  806  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + rdx|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  808  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  810  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  812  <|@ instruction stack:32|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  420  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  840  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  842  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4601059508744723248
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  896  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr  898  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  900  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  902  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  904  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  906  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1801e864 encoding: base: 0 shift: 3 <|@ <|@
      nr  924  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  926  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593072671573930308
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4590015800143340609
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  292  <|@ instruction r11|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  294  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  296  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  298  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  300  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589962286348538852
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  360  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  362  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  364  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  366  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  368  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  370  <|@ instruction MOV (x: [rdi|QWORD + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  372  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B40" 
    xhandlers
    flags 
    probability 4590015800143340609
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction stack:32|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  422  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4581491086567258382
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4571426031092231524
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  866  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} r10|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:19, 41, 3] <|@ <|@
      nr  868  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} r10|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:19, 41, 3] <|@ <|@
      nr  870  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B45" 
    xhandlers
    flags 
    probability 4571363187372395366
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:""] <|@ <|@
      nr  236  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B32" 
    xhandlers
    flags 
    probability 4569985998969753389
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10, 16, 41, 3] <|@ <|@
      nr  506  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:10, 16, 41, 3] <|@ <|@
      nr  508  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569907603205318980
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction ZERO_MEMORY (pointer: [r10|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4559988989006196334
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: r10|QWORD[.] int[0|0x0] r8|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:22, 3] <|@ <|@
      nr  328  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: r10|QWORD[.] int[0|0x0] r8|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:22, 3] <|@ <|@
      nr  330  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B45" 
    xhandlers
    flags 
    probability 4531370617721367879
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2840) [bci: 54]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.newString(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:54, 3] <|@ <|@
      nr  960  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction r10|DWORD = MOVE input: int[-54809|0xffffffffffff29e7] <|@ <|@
      nr  740  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  760  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  762  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction DEOPT info [bci:10, 16, 41, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction r10|DWORD = MOVE input: int[-53785|0xffffffffffff2de7] <|@ <|@
      nr  716  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction r10|DWORD = MOVE input: int[-52761|0xffffffffffff31e7] <|@ <|@
      nr  688  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction r9|DWORD = MOVE input: int[-48147|0xffffffffffff43ed] <|@ <|@
      nr   50  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  132  <|@ st <@st|@live-base-pointers: []
java.lang.String.subSequence(String.java:2872) [bci: 0]
locals: r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction r9|DWORD = MOVE input: int[-49171|0xffffffffffff3fed] <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction r9|DWORD = MOVE input: int[-50195|0xffffffffffff3bed] <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: iload_2       
     3: invokevirtual #189        // substring:(int, int)java.lang.String
     6: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6fe89784 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction r9|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@reference-map: [r9:0, r10:0]
live-base-pointers: []
java.lang.String.subSequence(String.java:2872) [bci: 0]
locals: r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction rdi|DWORD = MOVSXB input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   94  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction rsi|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6018906262441794 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4603596568345418578
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9663721533267153 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603414260059205002
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" "B14" "B43" "B44" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600843320827103580
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B44" 
    xhandlers
    flags 
    probability 4601207937399530733
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1801e864 encoding: base: 0 shift: 3 <|@ <|@
      nr  206  <|@ instruction rbp|DWORD = SUB (x: r8|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  208  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.9999787285234901 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601207777090930452
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.00977198389730849 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B22" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.7183170795883598 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B21" 
    xhandlers
    flags 
    probability 4599032071156696725
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.24957691254844944 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597213233028029193
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  470  <|@ instruction rdi|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD <|@ <|@
      nr  474  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr  476  <|@ instruction rsi|QWORD = ADD (x: rdi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  478  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4599735042323379768
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  544  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  546  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  548  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  550  <|@ instruction MOV x: [r10|QWORD] y: 1 size: QWORD <|@ <|@
      nr  552  <|@ instruction MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  554  <|@ instruction MOV (x: [r10|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  556  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  558  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4599674408099325029
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4629839598793565730
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction MOV x: [r10|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  602  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  604  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4629886495576233067
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4599674408099325029
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599735042323379768
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B24" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction rdi|DWORD = SUB (x: rbx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  672  <|@ instruction CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  674  <|@ instruction rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  676  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  704  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction rsi|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  802  <|@ instruction rdx|QWORD = MOV value: r11|DWORD size: DWORD <|@ <|@
      nr  804  <|@ instruction r11|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  806  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + rdx|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  808  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  810  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  812  <|@ instruction stack:32|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  420  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  840  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  842  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4601059508744723248
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  896  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr  898  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  900  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  902  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  904  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  906  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1801e864 encoding: base: 0 shift: 3 <|@ <|@
      nr  924  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  926  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593072671573930308
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4590015800143340609
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  292  <|@ instruction r11|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  294  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  296  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  298  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  300  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589962286348538852
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  360  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  362  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  364  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  366  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  368  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  370  <|@ instruction MOV (x: [rdi|QWORD + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  372  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B40" 
    xhandlers
    flags 
    probability 4590015800143340609
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction stack:32|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  422  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4581491086567258382
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4571426031092231524
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  866  <|@ st <@st|@reference-map: [r10:0]
live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} r10|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:19, 41, 3] <|@ <|@
      nr  868  <|@ st <@st|@reference-map: [rax:0, r10:0]
live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} r10|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:19, 41, 3] <|@ <|@
      nr  870  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B45" 
    xhandlers
    flags 
    probability 4571363187372395366
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:""] <|@ <|@
      nr  236  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B32" 
    xhandlers
    flags 
    probability 4569985998969753389
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ st <@st|@reference-map: [r9:0]
live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10, 16, 41, 3] <|@ <|@
      nr  506  <|@ st <@st|@reference-map: [rax:0, r9:0]
live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:10, 16, 41, 3] <|@ <|@
      nr  508  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569907603205318980
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction ZERO_MEMORY (pointer: [r10|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4559988989006196334
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ st <@st|@reference-map: [r9:0, r10:0]
live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: r10|QWORD[.] int[0|0x0] r8|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:22, 3] <|@ <|@
      nr  328  <|@ st <@st|@reference-map: [rax:0, r9:0, r10:0]
live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: r10|QWORD[.] int[0|0x0] r8|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:22, 3] <|@ <|@
      nr  330  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B45" 
    xhandlers
    flags 
    probability 4531370617721367879
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.lang.String.substring(String.java:2840) [bci: 54]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.newString(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:54, 3] <|@ <|@
      nr  960  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction r10|DWORD = MOVE input: int[-54809|0xffffffffffff29e7] <|@ <|@
      nr  740  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  760  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  762  <|@ st <@st|@reference-map: [r9:0]
live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction DEOPT info [bci:10, 16, 41, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction r10|DWORD = MOVE input: int[-53785|0xffffffffffff2de7] <|@ <|@
      nr  716  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction r10|DWORD = MOVE input: int[-52761|0xffffffffffff31e7] <|@ <|@
      nr  688  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction r9|DWORD = MOVE input: int[-48147|0xffffffffffff43ed] <|@ <|@
      nr   50  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  132  <|@ st <@st|@reference-map: [r10:0]
live-base-pointers: []
java.lang.String.subSequence(String.java:2872) [bci: 0]
locals: r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction r9|DWORD = MOVE input: int[-49171|0xffffffffffff3fed] <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction r9|DWORD = MOVE input: int[-50195|0xffffffffffff3bed] <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: iload_2       
     3: invokevirtual #189        // substring:(int, int)java.lang.String
     6: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6fe89784 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction r9|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@reference-map: [r9:0, r10:0]
live-base-pointers: []
java.lang.String.subSequence(String.java:2872) [bci: 0]
locals: r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction rdi|DWORD = MOVSXB input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   94  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction rsi|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6018906262441794 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4603596568345418578
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9663721533267153 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603414260059205002
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" "B14" "B43" "B44" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600843320827103580
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B44" 
    xhandlers
    flags 
    probability 4601207937399530733
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1801e864 encoding: base: 0 shift: 3 <|@ <|@
      nr  206  <|@ instruction rbp|DWORD = SUB (x: r8|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  208  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.9999787285234901 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601207777090930452
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.00977198389730849 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B22" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.7183170795883598 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B21" 
    xhandlers
    flags 
    probability 4599032071156696725
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.24957691254844944 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597213233028029193
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  470  <|@ instruction rdi|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD <|@ <|@
      nr  474  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr  476  <|@ instruction rsi|QWORD = ADD (x: rdi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  478  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4599735042323379768
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  544  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  546  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  548  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  550  <|@ instruction MOV x: [r10|QWORD] y: 1 size: QWORD <|@ <|@
      nr  552  <|@ instruction MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  554  <|@ instruction MOV (x: [r10|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  556  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  558  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4599674408099325029
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4629839598793565730
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction MOV x: [r10|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  602  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  604  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4629886495576233067
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4599674408099325029
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599735042323379768
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B24" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction rdi|DWORD = SUB (x: rbx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  672  <|@ instruction CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  674  <|@ instruction rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  676  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  704  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4599796289014344150
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction rsi|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  802  <|@ instruction rdx|QWORD = MOV value: r11|DWORD size: DWORD <|@ <|@
      nr  804  <|@ instruction r11|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  806  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + rdx|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  808  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  810  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  812  <|@ instruction stack:32|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  420  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  840  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  842  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4601059508744723248
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  896  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr  898  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  900  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  902  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  904  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  906  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1801e864 encoding: base: 0 shift: 3 <|@ <|@
      nr  924  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  926  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593072671573930308
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4590015800143340609
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  292  <|@ instruction r11|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  294  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  296  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  298  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  300  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589962286348538852
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  360  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  362  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  364  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  366  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  368  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  370  <|@ instruction MOV (x: [rdi|QWORD + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  372  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B40" 
    xhandlers
    flags 
    probability 4590015800143340609
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction stack:32|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  422  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4581491086567258382
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4571426031092231524
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  866  <|@ st <@st|@reference-map: [r10:0]
live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} r10|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:19, 41, 3] <|@ <|@
      nr  868  <|@ st <@st|@reference-map: [rax:0, r10:0]
live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} r10|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:19, 41, 3] <|@ <|@
      nr  870  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B45" 
    xhandlers
    flags 
    probability 4571363187372395366
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:""] <|@ <|@
      nr  236  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B32" 
    xhandlers
    flags 
    probability 4569985998969753389
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ st <@st|@reference-map: [r9:0]
live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10, 16, 41, 3] <|@ <|@
      nr  506  <|@ st <@st|@reference-map: [rax:0, r9:0]
live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:10, 16, 41, 3] <|@ <|@
      nr  508  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569907603205318980
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction ZERO_MEMORY (pointer: [r10|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4559988989006196334
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ st <@st|@reference-map: [r9:0, r10:0]
live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: r10|QWORD[.] int[0|0x0] r8|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:22, 3] <|@ <|@
      nr  328  <|@ st <@st|@reference-map: [rax:0, r9:0, r10:0]
live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: r10|QWORD[.] int[0|0x0] r8|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:22, 3] <|@ <|@
      nr  330  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B45" 
    xhandlers
    flags 
    probability 4531370617721367879
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.lang.String.substring(String.java:2840) [bci: 54]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.newString(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:54, 3] <|@ <|@
      nr  960  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction r10|DWORD = MOVE input: int[-54809|0xffffffffffff29e7] <|@ <|@
      nr  740  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  760  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  762  <|@ st <@st|@reference-map: [r9:0]
live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction DEOPT info [bci:10, 16, 41, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction r10|DWORD = MOVE input: int[-53785|0xffffffffffff2de7] <|@ <|@
      nr  716  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction r10|DWORD = MOVE input: int[-52761|0xffffffffffff31e7] <|@ <|@
      nr  688  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction r9|DWORD = MOVE input: int[-48147|0xffffffffffff43ed] <|@ <|@
      nr   50  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  132  <|@ st <@st|@reference-map: [r10:0]
live-base-pointers: []
java.lang.String.subSequence(String.java:2872) [bci: 0]
locals: r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction r9|DWORD = MOVE input: int[-49171|0xffffffffffff3fed] <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction r9|DWORD = MOVE input: int[-50195|0xffffffffffff3bed] <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: iload_2       
     3: invokevirtual #189        // substring:(int, int)java.lang.String
     6: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec189041817f20000000000f857c040000909090909090909090909048896c24104c8bd6448bda448bc1458b4a14428b1ccd0c0000004585db0f8c0904000090909090453bd80f8f2b04000090909090909090410fbe7a108bcf8bf3d3ee443bc60f8f1b040000909090904585db0f853500000090909090413bf00f85a70200009090909090909090909090498bc2488b6c24104883c418493ba7500400000f87f8030000c5f877c39090909090909090909049c1e103418be8412beb85ff0f851903000090909090453bc30f848502000090909090904585db0f85ab01000090909090413bd80f84a601000090909090909090909090909090904d8b97b80100008bfd488d7f174883e7f8488bf74903f2493bb7c80100000f874f02000090909090909090909090909090904989b7b8010000420f18841700010000420f18841740010000420f1884178001000049c7020100000041c74208addeadde41896a0c488d4ff04881f9000800000f832702000090909048c7c610000000e9280000006666660f1f84000000000066666690660f1f4400009090909090909049c7043200000000488d760890909090483bfe77e490909090909090909090909090908bfb412bfb3bfd0f4ffd85ff0f8c6a02000090909090902bdf443bdb0f8f4f020000909090903bfd0f871402000090909090909090909090909090909090498bf2418bd3448bdf498d7c1110488d7610498bd34c891424e8000000004c8b14249090909090909090498b87b8010000488d7018493bb7c80100000f87ef000000909090909090909090904989b7b80100000f18801801000048c70001000000c74008addeaddec7400c0000000048c7401000000000909090909049c1ea03448950144c8bd0e9f9fdffff909090e95dfeffff9090909090909090909090498bbfb8010000448bdb498d73174883e6f8488bd64803d7493b97c80100000f87ef0000009090909090909090909090498997b80100000f18843e000100000f18843e400100000f18843e8001000048c70701000000c74708addeadde895f0c9090909090909090909090909090488bf748893c24498d7910488d7610498bd3e800000000e9f5feffff909090e97cfdffff90909090909090909048beaddeaddeaddeaddee8000000000f1f8400000000008500e91fffffff909090909048beaddeaddeaddeadde4c8bd6e916fdffff48beaddeaddeaddeadde9090909090909090908bd5e8000000000f1f84000000000085004c8bd0e920feffff909090909090909090498d7a104833c0f348aae904feffff48beaddeaddeaddeadde9090909090909090908bd3e8000000000f1f8400000000008500488bf8e920ffffff90909090909090909090498bf18bcd90e8000000000f1f8400000000004c8bd0e981fcffff90909041bae729ffff909090909090904589978404000049c7879004000000000000e8000000000f1f84000000000090909041bae72dffffebcf90909041bae731ffffebc490909041b9ed43ffff9090909090909045898f8404000049c7879004000014000000e8000000000f1f84000000000090909041b9ed3fffffebcf90909041b9ed3bffffebc448896c2410e800000000e975fbfffff4488d0df4fbffff49898f68040000e927fbfffff441c78784040000f588ffff49c7879004000000000000e8000000000f1f84000000000041c787840400008f51feff49c7879004000000000000e8000000000f1f84000000000041c787840400008f88feff49c7879004000000000000e8000000000f1f84000000000041c787840400008fd8feff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 74 26 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6fe89784 slotKind: QWORD  <||@
  Comment 74 28 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 77 30 r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 80 32 r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 83 34 r9|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 87 36 rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 87 [r9:0, r10:0]at java.lang.String.subSequence(String.java:2872) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2        
     locals:  |r10|QWORD[.]  |r11|DWORD  |r8|DWORD   <||@
  Comment 87 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 95 38 TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 104 block B2 null  <||@
  Comment 104 52 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 104 54 NOP  <||@
  Comment 105 56 NOP  <||@
  Comment 106 58 NOP  <||@
  Comment 107 60 NOP  <||@
  Comment 108 62 CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD  <||@
  Comment 117 block B4 null  <||@
  Comment 117 76 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 117 78 NOP  <||@
  Comment 118 80 NOP  <||@
  Comment 119 82 NOP  <||@
  Comment 120 84 NOP  <||@
  Comment 121 86 NOP  <||@
  Comment 122 88 NOP  <||@
  Comment 123 90 NOP  <||@
  Comment 124 92 rdi|DWORD = MOVSXB input: [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 129 94 rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 131 96 rsi|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 135 98 CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B7 size: DWORD  <||@
  Comment 144 block B7 null  <||@
  Comment 144 134 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 144 136 NOP  <||@
  Comment 145 138 NOP  <||@
  Comment 146 140 NOP  <||@
  Comment 147 142 NOP  <||@
  Comment 148 144 TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6018906262441794 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 size: DWORD  <||@
  Comment 157 block B8 null  <||@
  Comment 157 146 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 157 148 NOP  <||@
  Comment 158 150 NOP  <||@
  Comment 159 152 NOP  <||@
  Comment 160 154 NOP  <||@
  Comment 161 156 CMPBRANCH (x: rsi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9663721533267153 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD  <||@
  Comment 170 block B9 null  <||@
  Comment 170 158 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 170 160 NOP  <||@
  Comment 171 162 NOP  <||@
  Comment 172 164 NOP  <||@
  Comment 173 166 JUMP ~outgoingValues: [] destination: B9 -> B45  <||@
  Comment 173 block B45 null  <||@
  Comment 173 964 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 173 966 NOP  <||@
  Comment 174 968 NOP  <||@
  Comment 175 970 NOP  <||@
  Comment 176 972 NOP  <||@
  Comment 177 974 NOP  <||@
  Comment 178 976 NOP  <||@
  Comment 179 978 NOP  <||@
  Comment 180 980 NOP  <||@
  Comment 181 982 rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 184 984 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 193 POLL_RETURN_FAR  <||@
  Comment 210 block B11 null  <||@
  Comment 210 178 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 210 180 NOP  <||@
  Comment 211 182 NOP  <||@
  Comment 212 184 NOP  <||@
  Comment 213 186 JUMP ~outgoingValues: [] destination: B11 -> B12  <||@
  Comment 213 block B12 null  <||@
  Comment 213 188 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 213 190 NOP  <||@
  Comment 214 192 NOP  <||@
  Comment 215 194 NOP  <||@
  Comment 216 196 NOP  <||@
  Comment 217 198 NOP  <||@
  Comment 218 200 NOP  <||@
  Comment 219 202 NOP  <||@
  Comment 220 204 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1801e864 encoding: base: 0 shift: 3  <||@
  Comment 224 206 rbp|DWORD = SUB (x: r8|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 230 208 TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.9999787285234901 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B44 size: DWORD  <||@
  Comment 238 block B13 null  <||@
  Comment 238 210 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 238 212 NOP  <||@
  Comment 239 214 NOP  <||@
  Comment 240 216 NOP  <||@
  Comment 241 218 NOP  <||@
  Comment 242 220 CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.00977198389730849 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD  <||@
  Comment 251 block B15 null  <||@
  Comment 251 240 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 251 242 NOP  <||@
  Comment 252 244 NOP  <||@
  Comment 253 246 NOP  <||@
  Comment 254 248 NOP  <||@
  Comment 255 250 NOP  <||@
  Comment 256 252 TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.7183170795883598 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B22 size: DWORD  <||@
  Comment 265 block B16 null  <||@
  Comment 265 254 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 265 256 NOP  <||@
  Comment 266 258 NOP  <||@
  Comment 267 260 NOP  <||@
  Comment 268 262 NOP  <||@
  Comment 269 264 CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.24957691254844944 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD  <||@
  Comment 278 block B21 null  <||@
  Comment 278 424 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 278 426 NOP  <||@
  Comment 279 428 NOP  <||@
  Comment 280 430 NOP  <||@
  Comment 281 432 JUMP ~outgoingValues: [] destination: B21 -> B23  <||@
  Comment 281 block B23 null  <||@
  Comment 281 444 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 281 446 NOP  <||@
  Comment 282 448 NOP  <||@
  Comment 283 450 NOP  <||@
  Comment 284 452 NOP  <||@
  Comment 285 454 NOP  <||@
  Comment 286 456 NOP  <||@
  Comment 287 458 NOP  <||@
  Comment 288 460 NOP  <||@
  Comment 289 462 NOP  <||@
  Comment 290 464 NOP  <||@
  Comment 291 466 NOP  <||@
  Comment 292 468 r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 299 470 rdi|QWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 301 472 rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD  <||@
  Comment 305 474 rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD  <||@
  Comment 309 476 rsi|QWORD = ADD (x: rdi|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 315 478 CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD  <||@
  Comment 328 block B25 null  <||@
  Comment 328 512 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 328 514 NOP  <||@
  Comment 329 516 NOP  <||@
  Comment 330 518 NOP  <||@
  Comment 331 520 NOP  <||@
  Comment 332 522 NOP  <||@
  Comment 333 524 NOP  <||@
  Comment 334 526 NOP  <||@
  Comment 335 528 NOP  <||@
  Comment 336 530 NOP  <||@
  Comment 337 532 NOP  <||@
  Comment 338 534 NOP  <||@
  Comment 339 536 NOP  <||@
  Comment 340 538 NOP  <||@
  Comment 341 540 NOP  <||@
  Comment 342 542 MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD  <||@
  Comment 349 544 AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 256] instr: 0  <||@
  Comment 358 546 AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 320] instr: 0  <||@
  Comment 367 548 AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 384] instr: 0  <||@
  Comment 376 550 MOV x: [r10|QWORD] y: 1 size: QWORD  <||@
  Comment 383 552 MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 383 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 391 554 MOV (x: [r10|QWORD + 12], y: rbp|DWORD) size: DWORD  <||@
  Comment 395 556 rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD  <||@
  Comment 399 558 CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 y: 2048 size: QWORD inlinedY: null  <||@
  Comment 412 block B26 null  <||@
  Comment 412 560 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 412 562 NOP  <||@
  Comment 413 564 NOP  <||@
  Comment 414 566 NOP  <||@
  Comment 415 568 rsi|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 422 570 JUMP ~outgoingValues: [] destination: B26 -> B27  <||@
  Comment 427 block B28 loop 0 depth 1 header:327|LoopBegin  <||@
  Comment 427 584 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 448 586 NOP  <||@
  Comment 449 588 NOP  <||@
  Comment 450 590 NOP  <||@
  Comment 451 592 NOP  <||@
  Comment 452 594 NOP  <||@
  Comment 453 596 NOP  <||@
  Comment 454 598 NOP  <||@
  Comment 455 600 MOV x: [r10|QWORD + rsi|QWORD * 1] y: 0 size: QWORD  <||@
  Comment 463 602 rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD  <||@
  Comment 467 604 JUMP ~outgoingValues: [] destination: B28 -> B27  <||@
  Comment 467 block B27 loop 0 depth 1 header:327|LoopBegin  <||@
  Comment 467 572 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 467 574 NOP  <||@
  Comment 468 576 NOP  <||@
  Comment 469 578 NOP  <||@
  Comment 470 580 NOP  <||@
  Comment 471 582 CMPBRANCH (x: rdi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD  <||@
  Comment 476 block B29 null  <||@
  Comment 476 606 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 476 608 NOP  <||@
  Comment 477 610 NOP  <||@
  Comment 478 612 NOP  <||@
  Comment 479 614 JUMP ~outgoingValues: [] destination: B29 -> B31  <||@
  Comment 479 block B31 null  <||@
  Comment 479 640 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 479 642 NOP  <||@
  Comment 480 644 NOP  <||@
  Comment 481 646 NOP  <||@
  Comment 482 648 NOP  <||@
  Comment 483 650 r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 483 652 JUMP ~outgoingValues: [] destination: B31 -> B32  <||@
  Comment 483 block B32 null  <||@
  Comment 483 654 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 483 656 NOP  <||@
  Comment 484 658 NOP  <||@
  Comment 485 660 NOP  <||@
  Comment 486 662 NOP  <||@
  Comment 487 664 NOP  <||@
  Comment 488 666 NOP  <||@
  Comment 489 668 NOP  <||@
  Comment 490 670 rdi|DWORD = SUB (x: rbx|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 495 672 CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 497 674 rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: rbp|DWORD) condition: >  <||@
  Comment 500 676 TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD  <||@
  Comment 508 block B34 null  <||@
  Comment 508 690 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 508 692 NOP  <||@
  Comment 509 694 NOP  <||@
  Comment 510 696 NOP  <||@
  Comment 511 698 NOP  <||@
  Comment 512 700 NOP  <||@
  Comment 513 702 rbx|DWORD = SUB (x: rbx|DWORD, ~y: rdi|DWORD) size: DWORD  <||@
  Comment 515 704 CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD  <||@
  Comment 524 block B36 null  <||@
  Comment 524 718 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 524 720 NOP  <||@
  Comment 525 722 NOP  <||@
  Comment 526 724 NOP  <||@
  Comment 527 726 NOP  <||@
  Comment 528 728 CMPBRANCH (x: rdi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B39 size: DWORD  <||@
  Comment 536 block B39 null  <||@
  Comment 536 764 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 536 766 NOP  <||@
  Comment 537 768 NOP  <||@
  Comment 538 770 NOP  <||@
  Comment 539 772 NOP  <||@
  Comment 540 774 NOP  <||@
  Comment 541 776 NOP  <||@
  Comment 542 778 NOP  <||@
  Comment 543 780 NOP  <||@
  Comment 544 782 NOP  <||@
  Comment 545 784 NOP  <||@
  Comment 546 786 NOP  <||@
  Comment 547 788 NOP  <||@
  Comment 548 790 NOP  <||@
  Comment 549 792 NOP  <||@
  Comment 550 794 NOP  <||@
  Comment 551 796 NOP  <||@
  Comment 552 798 r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 552 800 rsi|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 555 802 rdx|QWORD = MOV value: r11|DWORD size: DWORD  <||@
  Comment 558 804 r11|QWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 561 806 rdi|QWORD = LEA address: [r9|QWORD[*] + rdx|QWORD * 1 + 16] size: QWORD  <||@
  Comment 566 808 rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD  <||@
  Comment 570 810 rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD  <||@
  Comment 573 812 stack:32|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 577 814 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 577 {Field[name=StubRoutines::_jbyte_arraycopy, type=address, offset=0, address=0x7f78b1ffa4e8, value=140155947490816]:0x7f7899769e00}  <||@
  Comment 582 818 JUMP ~outgoingValues: [] destination: B39 -> B40  <||@
  Comment 582 block B40 null  <||@
  Comment 582 820 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 582 420 r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 586 822 NOP  <||@
  Comment 587 824 NOP  <||@
  Comment 588 826 NOP  <||@
  Comment 589 828 NOP  <||@
  Comment 590 830 NOP  <||@
  Comment 591 832 NOP  <||@
  Comment 592 834 NOP  <||@
  Comment 593 836 NOP  <||@
  Comment 594 838 rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 601 840 rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD  <||@
  Comment 605 842 CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: QWORD  <||@
  Comment 618 block B42 null  <||@
  Comment 618 872 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 618 874 NOP  <||@
  Comment 619 876 NOP  <||@
  Comment 620 878 NOP  <||@
  Comment 621 880 NOP  <||@
  Comment 622 882 NOP  <||@
  Comment 623 884 NOP  <||@
  Comment 624 886 NOP  <||@
  Comment 625 888 NOP  <||@
  Comment 626 890 NOP  <||@
  Comment 627 892 NOP  <||@
  Comment 628 894 MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD  <||@
  Comment 635 896 AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0  <||@
  Comment 642 898 MOV x: [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 649 900 MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 649 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 656 902 MOV x: [rax|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 663 904 MOV x: [rax|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 671 906 rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 671 908 JUMP ~outgoingValues: [] destination: B42 -> B43  <||@
  Comment 671 block B43 null  <||@
  Comment 671 910 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 671 912 NOP  <||@
  Comment 672 914 NOP  <||@
  Comment 673 916 NOP  <||@
  Comment 674 918 NOP  <||@
  Comment 675 920 NOP  <||@
  Comment 676 922 r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1801e864 encoding: base: 0 shift: 3  <||@
  Comment 680 924 MOV (x: [rax|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD  <||@
  Comment 684 926 r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 687 928 JUMP ~outgoingValues: [] destination: B43 -> B45  <||@
  Comment 692 block B22 null  <||@
  Comment 692 434 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 692 436 NOP  <||@
  Comment 693 438 NOP  <||@
  Comment 694 440 NOP  <||@
  Comment 695 442 JUMP ~outgoingValues: [] destination: B22 -> B23  <||@
  Comment 700 block B17 null  <||@
  Comment 700 266 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 700 268 NOP  <||@
  Comment 701 270 NOP  <||@
  Comment 702 272 NOP  <||@
  Comment 703 274 NOP  <||@
  Comment 704 276 NOP  <||@
  Comment 705 278 NOP  <||@
  Comment 706 280 NOP  <||@
  Comment 707 282 NOP  <||@
  Comment 708 284 NOP  <||@
  Comment 709 286 NOP  <||@
  Comment 710 288 NOP  <||@
  Comment 711 290 rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 718 292 r11|QWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 721 294 rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD  <||@
  Comment 725 296 rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD  <||@
  Comment 729 298 rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 735 300 CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD  <||@
  Comment 748 block B19 null  <||@
  Comment 748 334 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 748 336 NOP  <||@
  Comment 749 338 NOP  <||@
  Comment 750 340 NOP  <||@
  Comment 751 342 NOP  <||@
  Comment 752 344 NOP  <||@
  Comment 753 346 NOP  <||@
  Comment 754 348 NOP  <||@
  Comment 755 350 NOP  <||@
  Comment 756 352 NOP  <||@
  Comment 757 354 NOP  <||@
  Comment 758 356 NOP  <||@
  Comment 759 358 MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD  <||@
  Comment 766 360 AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0  <||@
  Comment 774 362 AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0  <||@
  Comment 782 364 AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0  <||@
  Comment 790 366 MOV x: [rdi|QWORD] y: 1 size: QWORD  <||@
  Comment 797 368 MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 797 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 804 370 MOV (x: [rdi|QWORD + 12], y: rbx|DWORD) size: DWORD  <||@
  Comment 807 372 rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD  <||@
  Comment 807 374 JUMP ~outgoingValues: [] destination: B19 -> B20  <||@
  Comment 807 block B20 null  <||@
  Comment 807 376 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 807 378 NOP  <||@
  Comment 808 380 NOP  <||@
  Comment 809 382 NOP  <||@
  Comment 810 384 NOP  <||@
  Comment 811 386 NOP  <||@
  Comment 812 388 NOP  <||@
  Comment 813 390 NOP  <||@
  Comment 814 392 NOP  <||@
  Comment 815 394 NOP  <||@
  Comment 816 396 NOP  <||@
  Comment 817 398 NOP  <||@
  Comment 818 400 NOP  <||@
  Comment 819 402 NOP  <||@
  Comment 820 404 NOP  <||@
  Comment 821 406 r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 821 408 rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 824 410 stack:32|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 828 412 rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD  <||@
  Comment 832 414 rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD  <||@
  Comment 836 416 rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD  <||@
  Comment 839 418 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 839 {Field[name=StubRoutines::_jbyte_disjoint_arraycopy, type=address, offset=0, address=0x7f78b1ffa4b8, value=140155947490624]:0x7f7899769d40}  <||@
  Comment 844 422 JUMP ~outgoingValues: [] destination: B20 -> B40  <||@
  Comment 849 block B10 null  <||@
  Comment 849 168 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 849 170 NOP  <||@
  Comment 850 172 NOP  <||@
  Comment 851 174 NOP  <||@
  Comment 852 176 JUMP ~outgoingValues: [] destination: B10 -> B12  <||@
  Comment 857 block B41 null  <||@
  Comment 857 844 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 857 846 NOP  <||@
  Comment 858 848 NOP  <||@
  Comment 859 850 NOP  <||@
  Comment 860 852 NOP  <||@
  Comment 861 854 NOP  <||@
  Comment 862 856 NOP  <||@
  Comment 863 858 NOP  <||@
  Comment 864 860 NOP  <||@
  Comment 865 862 NOP  <||@
  Comment 866 864 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 866 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 876 866 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:19, 41, 3]  <||@
  Comment 876 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 881 [r10:0]at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19, duringCall: false, rethrow: false]
              |0                                                                                                             |1                                                                                                             |2            
     locals:  |-                                                                                                             |-                                                                                                             |-            
     stack:   |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]}  |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]}  |r10|QWORD[.] 
  at java.lang.String.substring(String.java:2839) [bci: 41, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.lang.String.subSequence(String.java:2872) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 889 868 NULLCHECK address: [rax|QWORD[.]] state [bci:19, 41, 3]  <||@
  Comment 889 [rax:0, r10:0]at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19, duringCall: false, rethrow: false]
              |0                                                                                                             |1                                                                                                             |2            
     locals:  |-                                                                                                             |-                                                                                                             |-            
     stack:   |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]}  |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]}  |r10|QWORD[.] 
  at java.lang.String.substring(String.java:2839) [bci: 41, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.lang.String.subSequence(String.java:2872) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 889 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 891 870 JUMP ~outgoingValues: [] destination: B41 -> B43  <||@
  Comment 896 block B14 null  <||@
  Comment 896 222 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 896 224 NOP  <||@
  Comment 897 226 NOP  <||@
  Comment 898 228 NOP  <||@
  Comment 899 230 NOP  <||@
  Comment 900 232 NOP  <||@
  Comment 901 234 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:""]  <||@
  Comment 901 {Object[String:""]}  <||@
  Comment 911 236 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 914 238 JUMP ~outgoingValues: [] destination: B14 -> B45  <||@
  Comment 919 block B24 null  <||@
  Comment 919 480 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 919 482 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 919 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 929 484 NOP  <||@
  Comment 930 486 NOP  <||@
  Comment 931 488 NOP  <||@
  Comment 932 490 NOP  <||@
  Comment 933 492 NOP  <||@
  Comment 934 494 NOP  <||@
  Comment 935 496 NOP  <||@
  Comment 936 498 NOP  <||@
  Comment 937 500 NOP  <||@
  Comment 938 502 rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 940 504 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10, 16, 41, 3]  <||@
  Comment 940 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 945 [r9:0]at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10, duringCall: false, rethrow: false]
              |0            |1          |2        
     locals:  |r9|QWORD[.]  |r11|DWORD  |r8|DWORD 
  at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16, duringCall: true, rethrow: false]
              |0                                                                                                             |1                                                                                                             |2 
     locals:  |-                                                                                                             |-                                                                                                             |- 
     stack:   |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]}  |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]}  |  
  at java.lang.String.substring(String.java:2839) [bci: 41, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.lang.String.subSequence(String.java:2872) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 953 506 NULLCHECK address: [rax|QWORD[.]] state [bci:10, 16, 41, 3]  <||@
  Comment 953 [rax:0, r9:0]at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10, duringCall: false, rethrow: false]
              |0            |1          |2        
     locals:  |r9|QWORD[.]  |r11|DWORD  |r8|DWORD 
  at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16, duringCall: true, rethrow: false]
              |0                                                                                                             |1                                                                                                             |2 
     locals:  |-                                                                                                             |-                                                                                                             |- 
     stack:   |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]}  |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]}  |  
  at java.lang.String.substring(String.java:2839) [bci: 41, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.lang.String.subSequence(String.java:2872) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 953 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 955 508 r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 958 510 JUMP ~outgoingValues: [] destination: B24 -> B32  <||@
  Comment 963 block B30 null  <||@
  Comment 963 616 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 963 618 NOP  <||@
  Comment 964 620 NOP  <||@
  Comment 965 622 NOP  <||@
  Comment 966 624 NOP  <||@
  Comment 967 626 NOP  <||@
  Comment 968 628 NOP  <||@
  Comment 969 630 NOP  <||@
  Comment 970 632 NOP  <||@
  Comment 971 634 NOP  <||@
  Comment 972 636 ZERO_MEMORY (pointer: [r10|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD}  <||@
  Comment 982 638 JUMP ~outgoingValues: [] destination: B30 -> B31  <||@
  Comment 987 block B18 null  <||@
  Comment 987 302 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 987 304 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 987 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 997 306 NOP  <||@
  Comment 998 308 NOP  <||@
  Comment 999 310 NOP  <||@
  Comment 1000 312 NOP  <||@
  Comment 1001 314 NOP  <||@
  Comment 1002 316 NOP  <||@
  Comment 1003 318 NOP  <||@
  Comment 1004 320 NOP  <||@
  Comment 1005 322 NOP  <||@
  Comment 1006 324 rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 1008 326 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:22, 3]  <||@
  Comment 1008 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1013 [r9:0, r10:0]at java.lang.String.substring(String.java:2838) [bci: 22, duringCall: false, rethrow: false]
              |0             |1           |2         |3  |4 
     locals:  |r10|QWORD[.]  |int[0|0x0]  |r8|DWORD  |-  |- 
  at java.lang.String.subSequence(String.java:2872) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 1021 328 NULLCHECK address: [rax|QWORD[.]] state [bci:22, 3]  <||@
  Comment 1021 [rax:0, r9:0, r10:0]at java.lang.String.substring(String.java:2838) [bci: 22, duringCall: false, rethrow: false]
              |0             |1           |2         |3  |4 
     locals:  |r10|QWORD[.]  |int[0|0x0]  |r8|DWORD  |-  |- 
  at java.lang.String.subSequence(String.java:2872) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 1021 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1023 330 rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1026 332 JUMP ~outgoingValues: [] destination: B18 -> B20  <||@
  Comment 1031 block B44 null  <||@
  Comment 1031 930 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1031 932 NOP  <||@
  Comment 1032 934 NOP  <||@
  Comment 1033 936 NOP  <||@
  Comment 1034 938 NOP  <||@
  Comment 1035 940 NOP  <||@
  Comment 1036 942 NOP  <||@
  Comment 1037 944 NOP  <||@
  Comment 1038 946 NOP  <||@
  Comment 1039 948 NOP  <||@
  Comment 1040 950 NOP  <||@
  Comment 1041 952 rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1044 956 rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 1046 958 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.newString(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:54, 3]  <||@
  Comment 1047 {HotSpotMethod<StringUTF16.newString(byte[], int, int)>}  <||@
  Comment 1047 INVOKESTATIC  <||@
  Comment 1052 []at java.lang.String.substring(String.java:2840) [bci: 54, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.lang.String.subSequence(String.java:2872) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 1060 960 r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1063 962 JUMP ~outgoingValues: [] destination: B44 -> B45  <||@
  Comment 1068 block B37 null  <||@
  Comment 1068 730 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1068 732 NOP  <||@
  Comment 1069 734 NOP  <||@
  Comment 1070 736 NOP  <||@
  Comment 1071 738 r10|DWORD = MOVE input: int[-54809|0xffffffffffff29e7]  <||@
  Comment 1077 740 JUMP ~outgoingValues: [] destination: B37 -> B38  <||@
  Comment 1077 block B38 null  <||@
  Comment 1077 742 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1077 744 NOP  <||@
  Comment 1078 746 NOP  <||@
  Comment 1079 748 NOP  <||@
  Comment 1080 750 NOP  <||@
  Comment 1081 752 NOP  <||@
  Comment 1082 754 NOP  <||@
  Comment 1083 756 NOP  <||@
  Comment 1084 758 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 1091 760 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 1102 762 DEOPT info [bci:10, 16, 41, 3]  <||@
  Comment 1102 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1107 [r9:0]at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10, duringCall: false, rethrow: false]
              |0            |1          |2        
     locals:  |r9|QWORD[.]  |r11|DWORD  |r8|DWORD 
  at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16, duringCall: true, rethrow: false]
              |0                                                                                                             |1                                                                                                             |2 
     locals:  |-                                                                                                             |-                                                                                                             |- 
     stack:   |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]}  |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]}  |  
  at java.lang.String.substring(String.java:2839) [bci: 41, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.lang.String.subSequence(String.java:2872) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 1115 block B35 null  <||@
  Comment 1115 706 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1115 708 NOP  <||@
  Comment 1116 710 NOP  <||@
  Comment 1117 712 NOP  <||@
  Comment 1118 714 r10|DWORD = MOVE input: int[-53785|0xffffffffffff2de7]  <||@
  Comment 1124 716 JUMP ~outgoingValues: [] destination: B35 -> B38  <||@
  Comment 1126 block B33 null  <||@
  Comment 1126 678 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1126 680 NOP  <||@
  Comment 1127 682 NOP  <||@
  Comment 1128 684 NOP  <||@
  Comment 1129 686 r10|DWORD = MOVE input: int[-52761|0xffffffffffff31e7]  <||@
  Comment 1135 688 JUMP ~outgoingValues: [] destination: B33 -> B38  <||@
  Comment 1137 block B1 null  <||@
  Comment 1137 40 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1137 42 NOP  <||@
  Comment 1138 44 NOP  <||@
  Comment 1139 46 NOP  <||@
  Comment 1140 48 r9|DWORD = MOVE input: int[-48147|0xffffffffffff43ed]  <||@
  Comment 1146 50 JUMP ~outgoingValues: [] destination: B1 -> B6  <||@
  Comment 1146 block B6 null  <||@
  Comment 1146 112 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1146 114 NOP  <||@
  Comment 1147 116 NOP  <||@
  Comment 1148 118 NOP  <||@
  Comment 1149 120 NOP  <||@
  Comment 1150 122 NOP  <||@
  Comment 1151 124 NOP  <||@
  Comment 1152 126 NOP  <||@
  Comment 1153 128 MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD  <||@
  Comment 1160 130 MOV x: [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 1171 132 DEOPT info [bci:0]  <||@
  Comment 1171 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1176 [r10:0]at java.lang.String.subSequence(String.java:2872) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2        
     locals:  |r10|QWORD[.]  |r11|DWORD  |r8|DWORD   <||@
  Comment 1184 block B3 null  <||@
  Comment 1184 64 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1184 66 NOP  <||@
  Comment 1185 68 NOP  <||@
  Comment 1186 70 NOP  <||@
  Comment 1187 72 r9|DWORD = MOVE input: int[-49171|0xffffffffffff3fed]  <||@
  Comment 1193 74 JUMP ~outgoingValues: [] destination: B3 -> B6  <||@
  Comment 1195 block B5 null  <||@
  Comment 1195 100 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1195 102 NOP  <||@
  Comment 1196 104 NOP  <||@
  Comment 1197 106 NOP  <||@
  Comment 1198 108 r9|DWORD = MOVE input: int[-50195|0xffffffffffff3bed]  <||@
  Comment 1204 110 JUMP ~outgoingValues: [] destination: B5 -> B6  <||@
  Comment 1211 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 1236 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 1264 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1269 [r9:0, r10:0]at java.lang.String.subSequence(String.java:2872) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2        
     locals:  |r10|QWORD[.]  |r11|DWORD  |r8|DWORD   <||@
  Comment 1299 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1304 [rax:0, r10:0]at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19, duringCall: false, rethrow: false]
              |0                                                                                                             |1                                                                                                             |2            
     locals:  |-                                                                                                             |-                                                                                                             |-            
     stack:   |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]}  |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]}  |r10|QWORD[.] 
  at java.lang.String.substring(String.java:2839) [bci: 41, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.lang.String.subSequence(String.java:2872) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 1334 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1339 [rax:0, r9:0]at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10, duringCall: false, rethrow: false]
              |0            |1          |2        
     locals:  |r9|QWORD[.]  |r11|DWORD  |r8|DWORD 
  at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16, duringCall: true, rethrow: false]
              |0                                                                                                             |1                                                                                                             |2 
     locals:  |-                                                                                                             |-                                                                                                             |- 
     stack:   |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]}  |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]}  |  
  at java.lang.String.substring(String.java:2839) [bci: 41, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.lang.String.subSequence(String.java:2872) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 1369 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1374 [rax:0, r9:0, r10:0]at java.lang.String.substring(String.java:2838) [bci: 22, duringCall: false, rethrow: false]
              |0             |1           |2         |3  |4 
     locals:  |r10|QWORD[.]  |int[0|0x0]  |r8|DWORD  |-  |- 
  at java.lang.String.subSequence(String.java:2872) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 1382 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1382 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1388 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 1388 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9626[java.lang.String.subSequence(int, int)]"
  method "HotSpotCompilation-9626[java.lang.String.subSequence(int, int)]"
  date 1724269760067
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789af349c0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85a30685fe66669089842400c0feff4883ec189041817f20000000000f857c040000909090909090909090909048896c24104c8bd6448bda448bc1458b4a14428b1ccd0c0000004585db0f8c0904000090909090453bd80f8f2b04000090909090909090410fbe7a108bcf8bf3d3ee443bc60f8f1b040000909090904585db0f853500000090909090413bf00f85a70200009090909090909090909090498bc2488b6c24104883c418493ba7500400000f87f8030000c5f877c39090909090909090909049c1e103418be8412beb85ff0f851903000090909090453bc30f848502000090909090904585db0f85ab01000090909090413bd80f84a601000090909090909090909090909090904d8b97b80100008bfd488d7f174883e7f8488bf74903f2493bb7c80100000f874f02000090909090909090909090909090904989b7b8010000420f18841700010000420f18841740010000420f1884178001000049c7020100000041c74208c022000041896a0c488d4ff04881f9000800000f832702000090909048c7c610000000e9280000006666660f1f84000000000066666690660f1f4400009090909090909049c7043200000000488d760890909090483bfe77e490909090909090909090909090908bfb412bfb3bfd0f4ffd85ff0f8c6a02000090909090902bdf443bdb0f8f4f020000909090903bfd0f871402000090909090909090909090909090909090498bf2418bd3448bdf498d7c1110488d7610498bd34c891424e8fa5183fe4c8b14249090909090909090498b87b8010000488d7018493bb7c80100000f87ef000000909090909090909090904989b7b80100000f18801801000048c70001000000c74008d8e80000c7400c0000000048c7401000000000909090909049c1ea03448950144c8bd0e9f9fdffff909090e95dfeffff9090909090909090909090498bbfb8010000448bdb498d73174883e6f8488bd64803d7493b97c80100000f87ef0000009090909090909090909090498997b80100000f18843e000100000f18843e400100000f18843e8001000048c70701000000c74708c0220000895f0c9090909090909090909090909090488bf748893c24498d7910488d7610498bd3e8345083fee9f5feffff909090e97cfdffff90909090909090909048bed8e8002b787f0000e84f359afe0f1f8400000000008500e91fffffff909090909048be0000c0ff070000004c8bd6e916fdffff48bec022002b787f00009090909090909090908bd5e88f9e99fe0f1f84000000000085004c8bd0e920feffff909090909090909090498d7a104833c0f348aae904feffff48bec022002b787f00009090909090909090908bd3e84b9e99fe0f1f8400000000008500488bf8e920ffffff90909090909090909090498bf18bcd90e8a40b85fe0f1f8400cc0500074c8bd0e981fcffff90909041bae729ffff909090909090904589978404000049c7879004000000000000e8676385fe0f1f84000000000090909041bae72dffffebcf90909041bae731ffffebc490909041b9ed43ffff9090909090909045898f8404000049c7879004000014000000e8226385fe0f1f84000000000090909041b9ed3fffffebcf90909041b9ed3bffffebc448896c2410e8a06383fee975fbfffff4488d0df4fbffff49898f68040000e9677185fef441c78784040000f588ffff49c7879004000000000000e8c56285fe0f1f84000000000041c787840400008f51feff49c7879004000000000000e8a26285fe0f1f84000000000041c787840400008f88feff49c7879004000000000000e87f6285fe0f1f84000000000041c787840400008fd8feff49c7879004000000000000e85c6285fe0f1f840000000000e8d50399fef4e8ef5f85fef4f4f4f4f4f4f448bb0000000000000000e9fbfffffff4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 74 26 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6fe89784 slotKind: QWORD  <||@
  Comment 74 28 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 77 30 r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 80 32 r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 83 34 r9|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 87 36 rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 87 [r9:0, r10:0]at java.lang.String.subSequence(String.java:2872) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2        
     locals:  |r10|QWORD[.]  |r11|DWORD  |r8|DWORD   <||@
  Comment 87 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 95 38 TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 104 block B2 null  <||@
  Comment 104 52 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 104 54 NOP  <||@
  Comment 105 56 NOP  <||@
  Comment 106 58 NOP  <||@
  Comment 107 60 NOP  <||@
  Comment 108 62 CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD  <||@
  Comment 117 block B4 null  <||@
  Comment 117 76 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 117 78 NOP  <||@
  Comment 118 80 NOP  <||@
  Comment 119 82 NOP  <||@
  Comment 120 84 NOP  <||@
  Comment 121 86 NOP  <||@
  Comment 122 88 NOP  <||@
  Comment 123 90 NOP  <||@
  Comment 124 92 rdi|DWORD = MOVSXB input: [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 129 94 rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 131 96 rsi|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 135 98 CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B7 size: DWORD  <||@
  Comment 144 block B7 null  <||@
  Comment 144 134 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 144 136 NOP  <||@
  Comment 145 138 NOP  <||@
  Comment 146 140 NOP  <||@
  Comment 147 142 NOP  <||@
  Comment 148 144 TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6018906262441794 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 size: DWORD  <||@
  Comment 157 block B8 null  <||@
  Comment 157 146 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 157 148 NOP  <||@
  Comment 158 150 NOP  <||@
  Comment 159 152 NOP  <||@
  Comment 160 154 NOP  <||@
  Comment 161 156 CMPBRANCH (x: rsi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9663721533267153 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD  <||@
  Comment 170 block B9 null  <||@
  Comment 170 158 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 170 160 NOP  <||@
  Comment 171 162 NOP  <||@
  Comment 172 164 NOP  <||@
  Comment 173 166 JUMP ~outgoingValues: [] destination: B9 -> B45  <||@
  Comment 173 block B45 null  <||@
  Comment 173 964 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 173 966 NOP  <||@
  Comment 174 968 NOP  <||@
  Comment 175 970 NOP  <||@
  Comment 176 972 NOP  <||@
  Comment 177 974 NOP  <||@
  Comment 178 976 NOP  <||@
  Comment 179 978 NOP  <||@
  Comment 180 980 NOP  <||@
  Comment 181 982 rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 184 984 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 193 POLL_RETURN_FAR  <||@
  Comment 210 block B11 null  <||@
  Comment 210 178 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 210 180 NOP  <||@
  Comment 211 182 NOP  <||@
  Comment 212 184 NOP  <||@
  Comment 213 186 JUMP ~outgoingValues: [] destination: B11 -> B12  <||@
  Comment 213 block B12 null  <||@
  Comment 213 188 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 213 190 NOP  <||@
  Comment 214 192 NOP  <||@
  Comment 215 194 NOP  <||@
  Comment 216 196 NOP  <||@
  Comment 217 198 NOP  <||@
  Comment 218 200 NOP  <||@
  Comment 219 202 NOP  <||@
  Comment 220 204 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1801e864 encoding: base: 0 shift: 3  <||@
  Comment 224 206 rbp|DWORD = SUB (x: r8|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 230 208 TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.9999787285234901 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B44 size: DWORD  <||@
  Comment 238 block B13 null  <||@
  Comment 238 210 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 238 212 NOP  <||@
  Comment 239 214 NOP  <||@
  Comment 240 216 NOP  <||@
  Comment 241 218 NOP  <||@
  Comment 242 220 CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.00977198389730849 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD  <||@
  Comment 251 block B15 null  <||@
  Comment 251 240 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 251 242 NOP  <||@
  Comment 252 244 NOP  <||@
  Comment 253 246 NOP  <||@
  Comment 254 248 NOP  <||@
  Comment 255 250 NOP  <||@
  Comment 256 252 TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.7183170795883598 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B22 size: DWORD  <||@
  Comment 265 block B16 null  <||@
  Comment 265 254 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 265 256 NOP  <||@
  Comment 266 258 NOP  <||@
  Comment 267 260 NOP  <||@
  Comment 268 262 NOP  <||@
  Comment 269 264 CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.24957691254844944 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD  <||@
  Comment 278 block B21 null  <||@
  Comment 278 424 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 278 426 NOP  <||@
  Comment 279 428 NOP  <||@
  Comment 280 430 NOP  <||@
  Comment 281 432 JUMP ~outgoingValues: [] destination: B21 -> B23  <||@
  Comment 281 block B23 null  <||@
  Comment 281 444 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 281 446 NOP  <||@
  Comment 282 448 NOP  <||@
  Comment 283 450 NOP  <||@
  Comment 284 452 NOP  <||@
  Comment 285 454 NOP  <||@
  Comment 286 456 NOP  <||@
  Comment 287 458 NOP  <||@
  Comment 288 460 NOP  <||@
  Comment 289 462 NOP  <||@
  Comment 290 464 NOP  <||@
  Comment 291 466 NOP  <||@
  Comment 292 468 r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 299 470 rdi|QWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 301 472 rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD  <||@
  Comment 305 474 rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD  <||@
  Comment 309 476 rsi|QWORD = ADD (x: rdi|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 315 478 CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD  <||@
  Comment 328 block B25 null  <||@
  Comment 328 512 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 328 514 NOP  <||@
  Comment 329 516 NOP  <||@
  Comment 330 518 NOP  <||@
  Comment 331 520 NOP  <||@
  Comment 332 522 NOP  <||@
  Comment 333 524 NOP  <||@
  Comment 334 526 NOP  <||@
  Comment 335 528 NOP  <||@
  Comment 336 530 NOP  <||@
  Comment 337 532 NOP  <||@
  Comment 338 534 NOP  <||@
  Comment 339 536 NOP  <||@
  Comment 340 538 NOP  <||@
  Comment 341 540 NOP  <||@
  Comment 342 542 MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD  <||@
  Comment 349 544 AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 256] instr: 0  <||@
  Comment 358 546 AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 320] instr: 0  <||@
  Comment 367 548 AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 384] instr: 0  <||@
  Comment 376 550 MOV x: [r10|QWORD] y: 1 size: QWORD  <||@
  Comment 383 552 MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 383 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 391 554 MOV (x: [r10|QWORD + 12], y: rbp|DWORD) size: DWORD  <||@
  Comment 395 556 rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD  <||@
  Comment 399 558 CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 y: 2048 size: QWORD inlinedY: null  <||@
  Comment 412 block B26 null  <||@
  Comment 412 560 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 412 562 NOP  <||@
  Comment 413 564 NOP  <||@
  Comment 414 566 NOP  <||@
  Comment 415 568 rsi|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 422 570 JUMP ~outgoingValues: [] destination: B26 -> B27  <||@
  Comment 427 block B28 loop 0 depth 1 header:327|LoopBegin  <||@
  Comment 427 584 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 448 586 NOP  <||@
  Comment 449 588 NOP  <||@
  Comment 450 590 NOP  <||@
  Comment 451 592 NOP  <||@
  Comment 452 594 NOP  <||@
  Comment 453 596 NOP  <||@
  Comment 454 598 NOP  <||@
  Comment 455 600 MOV x: [r10|QWORD + rsi|QWORD * 1] y: 0 size: QWORD  <||@
  Comment 463 602 rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD  <||@
  Comment 467 604 JUMP ~outgoingValues: [] destination: B28 -> B27  <||@
  Comment 467 block B27 loop 0 depth 1 header:327|LoopBegin  <||@
  Comment 467 572 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 467 574 NOP  <||@
  Comment 468 576 NOP  <||@
  Comment 469 578 NOP  <||@
  Comment 470 580 NOP  <||@
  Comment 471 582 CMPBRANCH (x: rdi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD  <||@
  Comment 476 block B29 null  <||@
  Comment 476 606 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 476 608 NOP  <||@
  Comment 477 610 NOP  <||@
  Comment 478 612 NOP  <||@
  Comment 479 614 JUMP ~outgoingValues: [] destination: B29 -> B31  <||@
  Comment 479 block B31 null  <||@
  Comment 479 640 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 479 642 NOP  <||@
  Comment 480 644 NOP  <||@
  Comment 481 646 NOP  <||@
  Comment 482 648 NOP  <||@
  Comment 483 650 r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 483 652 JUMP ~outgoingValues: [] destination: B31 -> B32  <||@
  Comment 483 block B32 null  <||@
  Comment 483 654 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 483 656 NOP  <||@
  Comment 484 658 NOP  <||@
  Comment 485 660 NOP  <||@
  Comment 486 662 NOP  <||@
  Comment 487 664 NOP  <||@
  Comment 488 666 NOP  <||@
  Comment 489 668 NOP  <||@
  Comment 490 670 rdi|DWORD = SUB (x: rbx|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 495 672 CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 497 674 rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: rbp|DWORD) condition: >  <||@
  Comment 500 676 TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD  <||@
  Comment 508 block B34 null  <||@
  Comment 508 690 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 508 692 NOP  <||@
  Comment 509 694 NOP  <||@
  Comment 510 696 NOP  <||@
  Comment 511 698 NOP  <||@
  Comment 512 700 NOP  <||@
  Comment 513 702 rbx|DWORD = SUB (x: rbx|DWORD, ~y: rdi|DWORD) size: DWORD  <||@
  Comment 515 704 CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD  <||@
  Comment 524 block B36 null  <||@
  Comment 524 718 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 524 720 NOP  <||@
  Comment 525 722 NOP  <||@
  Comment 526 724 NOP  <||@
  Comment 527 726 NOP  <||@
  Comment 528 728 CMPBRANCH (x: rdi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B39 size: DWORD  <||@
  Comment 536 block B39 null  <||@
  Comment 536 764 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 536 766 NOP  <||@
  Comment 537 768 NOP  <||@
  Comment 538 770 NOP  <||@
  Comment 539 772 NOP  <||@
  Comment 540 774 NOP  <||@
  Comment 541 776 NOP  <||@
  Comment 542 778 NOP  <||@
  Comment 543 780 NOP  <||@
  Comment 544 782 NOP  <||@
  Comment 545 784 NOP  <||@
  Comment 546 786 NOP  <||@
  Comment 547 788 NOP  <||@
  Comment 548 790 NOP  <||@
  Comment 549 792 NOP  <||@
  Comment 550 794 NOP  <||@
  Comment 551 796 NOP  <||@
  Comment 552 798 r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 552 800 rsi|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 555 802 rdx|QWORD = MOV value: r11|DWORD size: DWORD  <||@
  Comment 558 804 r11|QWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 561 806 rdi|QWORD = LEA address: [r9|QWORD[*] + rdx|QWORD * 1 + 16] size: QWORD  <||@
  Comment 566 808 rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD  <||@
  Comment 570 810 rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD  <||@
  Comment 573 812 stack:32|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 577 814 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 577 {Field[name=StubRoutines::_jbyte_arraycopy, type=address, offset=0, address=0x7f78b1ffa4e8, value=140155947490816]:0x7f7899769e00}  <||@
  Comment 582 818 JUMP ~outgoingValues: [] destination: B39 -> B40  <||@
  Comment 582 block B40 null  <||@
  Comment 582 820 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 582 420 r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 586 822 NOP  <||@
  Comment 587 824 NOP  <||@
  Comment 588 826 NOP  <||@
  Comment 589 828 NOP  <||@
  Comment 590 830 NOP  <||@
  Comment 591 832 NOP  <||@
  Comment 592 834 NOP  <||@
  Comment 593 836 NOP  <||@
  Comment 594 838 rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 601 840 rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD  <||@
  Comment 605 842 CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: QWORD  <||@
  Comment 618 block B42 null  <||@
  Comment 618 872 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 618 874 NOP  <||@
  Comment 619 876 NOP  <||@
  Comment 620 878 NOP  <||@
  Comment 621 880 NOP  <||@
  Comment 622 882 NOP  <||@
  Comment 623 884 NOP  <||@
  Comment 624 886 NOP  <||@
  Comment 625 888 NOP  <||@
  Comment 626 890 NOP  <||@
  Comment 627 892 NOP  <||@
  Comment 628 894 MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD  <||@
  Comment 635 896 AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0  <||@
  Comment 642 898 MOV x: [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 649 900 MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 649 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 656 902 MOV x: [rax|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 663 904 MOV x: [rax|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 671 906 rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 671 908 JUMP ~outgoingValues: [] destination: B42 -> B43  <||@
  Comment 671 block B43 null  <||@
  Comment 671 910 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 671 912 NOP  <||@
  Comment 672 914 NOP  <||@
  Comment 673 916 NOP  <||@
  Comment 674 918 NOP  <||@
  Comment 675 920 NOP  <||@
  Comment 676 922 r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1801e864 encoding: base: 0 shift: 3  <||@
  Comment 680 924 MOV (x: [rax|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD  <||@
  Comment 684 926 r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 687 928 JUMP ~outgoingValues: [] destination: B43 -> B45  <||@
  Comment 692 block B22 null  <||@
  Comment 692 434 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 692 436 NOP  <||@
  Comment 693 438 NOP  <||@
  Comment 694 440 NOP  <||@
  Comment 695 442 JUMP ~outgoingValues: [] destination: B22 -> B23  <||@
  Comment 700 block B17 null  <||@
  Comment 700 266 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 700 268 NOP  <||@
  Comment 701 270 NOP  <||@
  Comment 702 272 NOP  <||@
  Comment 703 274 NOP  <||@
  Comment 704 276 NOP  <||@
  Comment 705 278 NOP  <||@
  Comment 706 280 NOP  <||@
  Comment 707 282 NOP  <||@
  Comment 708 284 NOP  <||@
  Comment 709 286 NOP  <||@
  Comment 710 288 NOP  <||@
  Comment 711 290 rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 718 292 r11|QWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 721 294 rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD  <||@
  Comment 725 296 rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD  <||@
  Comment 729 298 rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 735 300 CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD  <||@
  Comment 748 block B19 null  <||@
  Comment 748 334 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 748 336 NOP  <||@
  Comment 749 338 NOP  <||@
  Comment 750 340 NOP  <||@
  Comment 751 342 NOP  <||@
  Comment 752 344 NOP  <||@
  Comment 753 346 NOP  <||@
  Comment 754 348 NOP  <||@
  Comment 755 350 NOP  <||@
  Comment 756 352 NOP  <||@
  Comment 757 354 NOP  <||@
  Comment 758 356 NOP  <||@
  Comment 759 358 MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD  <||@
  Comment 766 360 AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0  <||@
  Comment 774 362 AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0  <||@
  Comment 782 364 AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0  <||@
  Comment 790 366 MOV x: [rdi|QWORD] y: 1 size: QWORD  <||@
  Comment 797 368 MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 797 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 804 370 MOV (x: [rdi|QWORD + 12], y: rbx|DWORD) size: DWORD  <||@
  Comment 807 372 rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD  <||@
  Comment 807 374 JUMP ~outgoingValues: [] destination: B19 -> B20  <||@
  Comment 807 block B20 null  <||@
  Comment 807 376 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 807 378 NOP  <||@
  Comment 808 380 NOP  <||@
  Comment 809 382 NOP  <||@
  Comment 810 384 NOP  <||@
  Comment 811 386 NOP  <||@
  Comment 812 388 NOP  <||@
  Comment 813 390 NOP  <||@
  Comment 814 392 NOP  <||@
  Comment 815 394 NOP  <||@
  Comment 816 396 NOP  <||@
  Comment 817 398 NOP  <||@
  Comment 818 400 NOP  <||@
  Comment 819 402 NOP  <||@
  Comment 820 404 NOP  <||@
  Comment 821 406 r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 821 408 rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 824 410 stack:32|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 828 412 rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD  <||@
  Comment 832 414 rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD  <||@
  Comment 836 416 rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD  <||@
  Comment 839 418 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 839 {Field[name=StubRoutines::_jbyte_disjoint_arraycopy, type=address, offset=0, address=0x7f78b1ffa4b8, value=140155947490624]:0x7f7899769d40}  <||@
  Comment 844 422 JUMP ~outgoingValues: [] destination: B20 -> B40  <||@
  Comment 849 block B10 null  <||@
  Comment 849 168 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 849 170 NOP  <||@
  Comment 850 172 NOP  <||@
  Comment 851 174 NOP  <||@
  Comment 852 176 JUMP ~outgoingValues: [] destination: B10 -> B12  <||@
  Comment 857 block B41 null  <||@
  Comment 857 844 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 857 846 NOP  <||@
  Comment 858 848 NOP  <||@
  Comment 859 850 NOP  <||@
  Comment 860 852 NOP  <||@
  Comment 861 854 NOP  <||@
  Comment 862 856 NOP  <||@
  Comment 863 858 NOP  <||@
  Comment 864 860 NOP  <||@
  Comment 865 862 NOP  <||@
  Comment 866 864 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 866 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 876 866 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:19, 41, 3]  <||@
  Comment 876 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 881 [r10:0]at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19, duringCall: false, rethrow: false]
              |0                                                                                                             |1                                                                                                             |2            
     locals:  |-                                                                                                             |-                                                                                                             |-            
     stack:   |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]}  |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]}  |r10|QWORD[.] 
  at java.lang.String.substring(String.java:2839) [bci: 41, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.lang.String.subSequence(String.java:2872) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 889 868 NULLCHECK address: [rax|QWORD[.]] state [bci:19, 41, 3]  <||@
  Comment 889 [rax:0, r10:0]at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19, duringCall: false, rethrow: false]
              |0                                                                                                             |1                                                                                                             |2            
     locals:  |-                                                                                                             |-                                                                                                             |-            
     stack:   |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]}  |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]}  |r10|QWORD[.] 
  at java.lang.String.substring(String.java:2839) [bci: 41, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.lang.String.subSequence(String.java:2872) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 889 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 891 870 JUMP ~outgoingValues: [] destination: B41 -> B43  <||@
  Comment 896 block B14 null  <||@
  Comment 896 222 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 896 224 NOP  <||@
  Comment 897 226 NOP  <||@
  Comment 898 228 NOP  <||@
  Comment 899 230 NOP  <||@
  Comment 900 232 NOP  <||@
  Comment 901 234 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:""]  <||@
  Comment 901 {Object[String:""]}  <||@
  Comment 911 236 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 914 238 JUMP ~outgoingValues: [] destination: B14 -> B45  <||@
  Comment 919 block B24 null  <||@
  Comment 919 480 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 919 482 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 919 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 929 484 NOP  <||@
  Comment 930 486 NOP  <||@
  Comment 931 488 NOP  <||@
  Comment 932 490 NOP  <||@
  Comment 933 492 NOP  <||@
  Comment 934 494 NOP  <||@
  Comment 935 496 NOP  <||@
  Comment 936 498 NOP  <||@
  Comment 937 500 NOP  <||@
  Comment 938 502 rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 940 504 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10, 16, 41, 3]  <||@
  Comment 940 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 945 [r9:0]at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10, duringCall: false, rethrow: false]
              |0            |1          |2        
     locals:  |r9|QWORD[.]  |r11|DWORD  |r8|DWORD 
  at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16, duringCall: true, rethrow: false]
              |0                                                                                                             |1                                                                                                             |2 
     locals:  |-                                                                                                             |-                                                                                                             |- 
     stack:   |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]}  |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]}  |  
  at java.lang.String.substring(String.java:2839) [bci: 41, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.lang.String.subSequence(String.java:2872) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 953 506 NULLCHECK address: [rax|QWORD[.]] state [bci:10, 16, 41, 3]  <||@
  Comment 953 [rax:0, r9:0]at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10, duringCall: false, rethrow: false]
              |0            |1          |2        
     locals:  |r9|QWORD[.]  |r11|DWORD  |r8|DWORD 
  at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16, duringCall: true, rethrow: false]
              |0                                                                                                             |1                                                                                                             |2 
     locals:  |-                                                                                                             |-                                                                                                             |- 
     stack:   |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]}  |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]}  |  
  at java.lang.String.substring(String.java:2839) [bci: 41, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.lang.String.subSequence(String.java:2872) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 953 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 955 508 r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 958 510 JUMP ~outgoingValues: [] destination: B24 -> B32  <||@
  Comment 963 block B30 null  <||@
  Comment 963 616 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 963 618 NOP  <||@
  Comment 964 620 NOP  <||@
  Comment 965 622 NOP  <||@
  Comment 966 624 NOP  <||@
  Comment 967 626 NOP  <||@
  Comment 968 628 NOP  <||@
  Comment 969 630 NOP  <||@
  Comment 970 632 NOP  <||@
  Comment 971 634 NOP  <||@
  Comment 972 636 ZERO_MEMORY (pointer: [r10|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD}  <||@
  Comment 982 638 JUMP ~outgoingValues: [] destination: B30 -> B31  <||@
  Comment 987 block B18 null  <||@
  Comment 987 302 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 987 304 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 987 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 997 306 NOP  <||@
  Comment 998 308 NOP  <||@
  Comment 999 310 NOP  <||@
  Comment 1000 312 NOP  <||@
  Comment 1001 314 NOP  <||@
  Comment 1002 316 NOP  <||@
  Comment 1003 318 NOP  <||@
  Comment 1004 320 NOP  <||@
  Comment 1005 322 NOP  <||@
  Comment 1006 324 rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 1008 326 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:22, 3]  <||@
  Comment 1008 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1013 [r9:0, r10:0]at java.lang.String.substring(String.java:2838) [bci: 22, duringCall: false, rethrow: false]
              |0             |1           |2         |3  |4 
     locals:  |r10|QWORD[.]  |int[0|0x0]  |r8|DWORD  |-  |- 
  at java.lang.String.subSequence(String.java:2872) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 1021 328 NULLCHECK address: [rax|QWORD[.]] state [bci:22, 3]  <||@
  Comment 1021 [rax:0, r9:0, r10:0]at java.lang.String.substring(String.java:2838) [bci: 22, duringCall: false, rethrow: false]
              |0             |1           |2         |3  |4 
     locals:  |r10|QWORD[.]  |int[0|0x0]  |r8|DWORD  |-  |- 
  at java.lang.String.subSequence(String.java:2872) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 1021 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1023 330 rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1026 332 JUMP ~outgoingValues: [] destination: B18 -> B20  <||@
  Comment 1031 block B44 null  <||@
  Comment 1031 930 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1031 932 NOP  <||@
  Comment 1032 934 NOP  <||@
  Comment 1033 936 NOP  <||@
  Comment 1034 938 NOP  <||@
  Comment 1035 940 NOP  <||@
  Comment 1036 942 NOP  <||@
  Comment 1037 944 NOP  <||@
  Comment 1038 946 NOP  <||@
  Comment 1039 948 NOP  <||@
  Comment 1040 950 NOP  <||@
  Comment 1041 952 rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1044 956 rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 1046 958 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.newString(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:54, 3]  <||@
  Comment 1047 {HotSpotMethod<StringUTF16.newString(byte[], int, int)>}  <||@
  Comment 1047 INVOKESTATIC  <||@
  Comment 1052 []at java.lang.String.substring(String.java:2840) [bci: 54, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.lang.String.subSequence(String.java:2872) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 1060 960 r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1063 962 JUMP ~outgoingValues: [] destination: B44 -> B45  <||@
  Comment 1068 block B37 null  <||@
  Comment 1068 730 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1068 732 NOP  <||@
  Comment 1069 734 NOP  <||@
  Comment 1070 736 NOP  <||@
  Comment 1071 738 r10|DWORD = MOVE input: int[-54809|0xffffffffffff29e7]  <||@
  Comment 1077 740 JUMP ~outgoingValues: [] destination: B37 -> B38  <||@
  Comment 1077 block B38 null  <||@
  Comment 1077 742 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1077 744 NOP  <||@
  Comment 1078 746 NOP  <||@
  Comment 1079 748 NOP  <||@
  Comment 1080 750 NOP  <||@
  Comment 1081 752 NOP  <||@
  Comment 1082 754 NOP  <||@
  Comment 1083 756 NOP  <||@
  Comment 1084 758 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 1091 760 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 1102 762 DEOPT info [bci:10, 16, 41, 3]  <||@
  Comment 1102 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1107 [r9:0]at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10, duringCall: false, rethrow: false]
              |0            |1          |2        
     locals:  |r9|QWORD[.]  |r11|DWORD  |r8|DWORD 
  at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16, duringCall: true, rethrow: false]
              |0                                                                                                             |1                                                                                                             |2 
     locals:  |-                                                                                                             |-                                                                                                             |- 
     stack:   |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]}  |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]}  |  
  at java.lang.String.substring(String.java:2839) [bci: 41, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.lang.String.subSequence(String.java:2872) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 1115 block B35 null  <||@
  Comment 1115 706 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1115 708 NOP  <||@
  Comment 1116 710 NOP  <||@
  Comment 1117 712 NOP  <||@
  Comment 1118 714 r10|DWORD = MOVE input: int[-53785|0xffffffffffff2de7]  <||@
  Comment 1124 716 JUMP ~outgoingValues: [] destination: B35 -> B38  <||@
  Comment 1126 block B33 null  <||@
  Comment 1126 678 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1126 680 NOP  <||@
  Comment 1127 682 NOP  <||@
  Comment 1128 684 NOP  <||@
  Comment 1129 686 r10|DWORD = MOVE input: int[-52761|0xffffffffffff31e7]  <||@
  Comment 1135 688 JUMP ~outgoingValues: [] destination: B33 -> B38  <||@
  Comment 1137 block B1 null  <||@
  Comment 1137 40 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1137 42 NOP  <||@
  Comment 1138 44 NOP  <||@
  Comment 1139 46 NOP  <||@
  Comment 1140 48 r9|DWORD = MOVE input: int[-48147|0xffffffffffff43ed]  <||@
  Comment 1146 50 JUMP ~outgoingValues: [] destination: B1 -> B6  <||@
  Comment 1146 block B6 null  <||@
  Comment 1146 112 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1146 114 NOP  <||@
  Comment 1147 116 NOP  <||@
  Comment 1148 118 NOP  <||@
  Comment 1149 120 NOP  <||@
  Comment 1150 122 NOP  <||@
  Comment 1151 124 NOP  <||@
  Comment 1152 126 NOP  <||@
  Comment 1153 128 MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD  <||@
  Comment 1160 130 MOV x: [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 1171 132 DEOPT info [bci:0]  <||@
  Comment 1171 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1176 [r10:0]at java.lang.String.subSequence(String.java:2872) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2        
     locals:  |r10|QWORD[.]  |r11|DWORD  |r8|DWORD   <||@
  Comment 1184 block B3 null  <||@
  Comment 1184 64 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1184 66 NOP  <||@
  Comment 1185 68 NOP  <||@
  Comment 1186 70 NOP  <||@
  Comment 1187 72 r9|DWORD = MOVE input: int[-49171|0xffffffffffff3fed]  <||@
  Comment 1193 74 JUMP ~outgoingValues: [] destination: B3 -> B6  <||@
  Comment 1195 block B5 null  <||@
  Comment 1195 100 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1195 102 NOP  <||@
  Comment 1196 104 NOP  <||@
  Comment 1197 106 NOP  <||@
  Comment 1198 108 r9|DWORD = MOVE input: int[-50195|0xffffffffffff3bed]  <||@
  Comment 1204 110 JUMP ~outgoingValues: [] destination: B5 -> B6  <||@
  Comment 1211 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 1236 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 1264 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1269 [r9:0, r10:0]at java.lang.String.subSequence(String.java:2872) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2        
     locals:  |r10|QWORD[.]  |r11|DWORD  |r8|DWORD   <||@
  Comment 1299 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1304 [rax:0, r10:0]at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19, duringCall: false, rethrow: false]
              |0                                                                                                             |1                                                                                                             |2            
     locals:  |-                                                                                                             |-                                                                                                             |-            
     stack:   |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]}  |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]}  |r10|QWORD[.] 
  at java.lang.String.substring(String.java:2839) [bci: 41, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.lang.String.subSequence(String.java:2872) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 1334 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1339 [rax:0, r9:0]at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10, duringCall: false, rethrow: false]
              |0            |1          |2        
     locals:  |r9|QWORD[.]  |r11|DWORD  |r8|DWORD 
  at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16, duringCall: true, rethrow: false]
              |0                                                                                                             |1                                                                                                             |2 
     locals:  |-                                                                                                             |-                                                                                                             |- 
     stack:   |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]}  |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]}  |  
  at java.lang.String.substring(String.java:2839) [bci: 41, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.lang.String.subSequence(String.java:2872) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 1369 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1374 [rax:0, r9:0, r10:0]at java.lang.String.substring(String.java:2838) [bci: 22, duringCall: false, rethrow: false]
              |0             |1           |2         |3  |4 
     locals:  |r10|QWORD[.]  |int[0|0x0]  |r8|DWORD  |-  |- 
  at java.lang.String.subSequence(String.java:2872) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 1382 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1382 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1388 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 1388 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
