begin_compilation
  name " HotSpotCompilation-7973[java.util.Arrays.hashCode(Object[])]"
  method "HotSpotCompilation-7973[java.util.Arrays.hashCode(Object[])]"
  date 1724269703562
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i178 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: i178  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a java.lang.Object[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v184 v187 ?14 ?144 ?145 v183 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Arrays.hashCode(Object[])>
localsSize: 6
locksSize: 0
sourceFile: Arrays.java
sourceLine: 4593
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v180 i178 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i178 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i178 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-17163|0xffffffffffffbcf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 11]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v183 
lastLocationAccess: - 
=== Succesors ===
next: v42 
=== Usages ===
?14 v15 ?144 v96 ?145 v73 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v183 lastLocationAccess: - #next: v42  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 13]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
?144 v73 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 25]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i178 
y: i8 
=== Succesors ===
=== Usages ===
v42 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i178 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4596) [bci: 6]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i60 i32 i62 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 19]
profileData: PROFILED designatedSuccessorProbability: 0.32829322047634435
stamp: void
=== Inputs ===
condition: v73 
=== Succesors ===
trueSuccessor: v40 
falseSuccessor: v41 
=== Usages ===
=== Predecessor ===
i178 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v73 #trueSuccessor: v40 #falseSuccessor: v41  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599585624819528018
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4601) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
next: v57 
=== Usages ===
=== Predecessor ===
v42 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v57  <|@  <|@
f <@*|@fixed>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4601) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
v40 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604225416349206359
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: a179 
=== Usages ===
=== Predecessor ===
v42 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a179  <|@  <|@
f <@~|@floating>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a179 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a179 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 25]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v184 
lastLocationAccess: - 
=== Succesors ===
next: v180 
=== Usages ===
a83 v190 
=== Predecessor ===
v41 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v184 lastLocationAccess: - #next: v180  <|@  <|@
f <@~|@floating>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a179 
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a179  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-21771|0xffffffffffffaaf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v190 
lastLocationAccess: - 
=== Succesors ===
next: v90 
=== Usages ===
v172 
=== Predecessor ===
a179 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v190 lastLocationAccess: - #next: v90  <|@  <|@
f <@~|@floating>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v180 
=== Succesors ===
=== Usages ===
v185 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v180  <|@  <|@
f <@~|@floating>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
displacement: 480
stamp: void*
stride: S1
=== Inputs ===
base: v172 
index: - 
=== Succesors ===
=== Usages ===
v90 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v172 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v185 
lastLocationAccess: - 
=== Succesors ===
next: j93 
=== Usages ===
v186 v94 
=== Predecessor ===
v180 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v185 lastLocationAccess: - #next: j93  <|@  <|@
f <@~|@floating>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v90 
index: - 
=== Succesors ===
=== Usages ===
j93 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v90 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j93 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v186 
lastLocationAccess: - 
=== Succesors ===
next: i47 
=== Usages ===
v94 
=== Predecessor ===
v90 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v186 lastLocationAccess: - #next: i47  <|@  <|@
f <@~|@floating>@ <|@
tid a83 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 25]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a179 
=== Succesors ===
=== Usages ===
v94 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a179  <|@  <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Ljava/lang/Object;, resolved>]
stamp: void
targetMethod: HotSpotMethod<Object.hashCode()>
=== Inputs ===
computedAddress: j93 
metaspaceMethod: v90 
arguments: a83 
=== Succesors ===
=== Usages ===
i47 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j93 metaspaceMethod: v90 arguments: a83  <|@  <|@
f <@~|@floating>@ <|@
tid i66 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 31]
rawvalue: 31
stableDimension: 0
stamp: i32 [31]
stampKind: i32
value: int[31|0x1f]
=== Inputs ===
=== Succesors ===
=== Usages ===
?144 i49 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?144 <|@
d <@d|@=== Debug Properties ===
bci: 43
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Arrays.hashCode(Object[])>
localsSize: 6
locksSize: 0
sourceFile: Arrays.java
sourceLine: 4599
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i66 - - a1 i178 i8 
=== Succesors ===
=== Usages ===
i47 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i66 - - a1 i178 i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i47 <|@
d <@d|@=== Debug Properties ===
bci: 43
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
polymorphic: true
stamp: i32
targetMethod: Indirect#Object.hashCode
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v94 
stateDuring: ?144 
=== Succesors ===
next: v10 
=== Usages ===
i49 
=== Predecessor ===
j93 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v94 stateDuring: ?144 #next: v10  <|@  <|@
f <@~|@floating>@ <|@
tid i49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 46]
stamp: i32
=== Inputs ===
x: i47 
y: i66 
=== Succesors ===
=== Usages ===
i61 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i47 y: i66  <|@  <|@
f <@~|@floating>@ <|@
tid i35 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 31]
rawvalue: 5
stableDimension: 0
stamp: i32 [5]
stampKind: i32
value: int[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i36 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
i47 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608868344202672518
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v11 
values: i6 i32 
=== Succesors ===
=== Usages ===
?14 v15 j117 ?145 i32 v96 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v11 values: i6 i32  <|@  <|@
f <@~|@floating>@ <|@
tid i61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v11 
values: i49 i31 
=== Succesors ===
=== Usages ===
?14 i60 i37 i36 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v11 values: i49 i31  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v10 
=== Succesors ===
next: v21 
=== Usages ===
i62 i61 v17 v33 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v10 #next: v21  <|@  <|@
f <@~|@floating>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 19]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i62 
y: i178 
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i62 y: i178  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 19]
profileData: INJECTED designatedSuccessorProbability: 0.51125516299068
stamp: void
=== Inputs ===
condition: v15 
=== Succesors ===
trueSuccessor: v20 
falseSuccessor: v17 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v15 #trueSuccessor: v20 #falseSuccessor: v17  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604504072801397685
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v137 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v137  <|@  <|@
tid ?14 <|@
d <@d|@=== Debug Properties ===
bci: 16
bytecode: iload
code: ResolvedJavaMethodBytecode<Arrays.hashCode(Object[])>
localsSize: 6
locksSize: 0
sourceFile: Arrays.java
sourceLine: 4598
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - i61 a1 i178 i62 
=== Succesors ===
=== Usages ===
v192 v182 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - i61 a1 i178 i62  <|@  <|@
f <@~|@floating>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 25]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i62 
y: i178 
=== Succesors ===
=== Usages ===
v137 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i62 y: i178  <|@  <|@
f <@*|@fixed>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 25]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v96 
=== Succesors ===
trueSuccessor: v134 
falseSuccessor: v136 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v96 #trueSuccessor: v134 #falseSuccessor: v136  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604504072801397685
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: a181 
=== Usages ===
=== Predecessor ===
v137 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a181  <|@  <|@
f <@~|@floating>@ <|@
tid j117 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 25]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i62 
=== Succesors ===
=== Usages ===
v187 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i62  <|@  <|@
f <@~|@floating>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a1 
index: j117 
=== Succesors ===
=== Usages ===
a181 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j117  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a181 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 25]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v187 
lastLocationAccess: - 
=== Succesors ===
next: v182 
=== Usages ===
a104 v191 
=== Predecessor ===
v134 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v187 lastLocationAccess: - #next: v182  <|@  <|@
f <@~|@floating>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a181 
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a181  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-27147|0xffffffffffff95f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?14 
guard: - 
address: v191 
lastLocationAccess: - 
=== Succesors ===
next: v110 
=== Usages ===
v175 
=== Predecessor ===
a181 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?14 guard: - address: v191 lastLocationAccess: - #next: v110  <|@  <|@
f <@~|@floating>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v182 
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v182  <|@  <|@
f <@~|@floating>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
displacement: 480
stamp: void*
stride: S1
=== Inputs ===
base: v175 
index: - 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v175 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v188 
lastLocationAccess: - 
=== Succesors ===
next: j112 
=== Usages ===
v189 v113 
=== Predecessor ===
v182 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v188 lastLocationAccess: - #next: j112  <|@  <|@
f <@~|@floating>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v110 
index: - 
=== Succesors ===
=== Usages ===
j112 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v110 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j112 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v189 
lastLocationAccess: - 
=== Succesors ===
next: i28 
=== Usages ===
v113 
=== Predecessor ===
v110 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v189 lastLocationAccess: - #next: i28  <|@  <|@
f <@~|@floating>@ <|@
tid a104 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 25]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a181 
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a181  <|@  <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Ljava/lang/Object;, resolved>]
stamp: void
targetMethod: HotSpotMethod<Object.hashCode()>
=== Inputs ===
computedAddress: j112 
metaspaceMethod: v110 
arguments: a104 
=== Succesors ===
=== Usages ===
i28 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j112 metaspaceMethod: v110 arguments: a104  <|@  <|@
f <@~|@floating>@ <|@
tid i36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 31]
stamp: i32 [-2147483648 - 2147483616] bits:x...x00000
=== Inputs ===
x: i61 
y: i35 
=== Succesors ===
=== Usages ===
i37 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i61 y: i35  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 31]
stamp: i32
=== Inputs ===
x: i36 
y: i61 
=== Succesors ===
=== Usages ===
?145 i31 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i36 y: i61  <|@  <|@
tid ?145 <|@
d <@d|@=== Debug Properties ===
bci: 43
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Arrays.hashCode(Object[])>
localsSize: 6
locksSize: 0
sourceFile: Arrays.java
sourceLine: 4599
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i37 - - a1 i178 i62 
=== Succesors ===
=== Usages ===
i28 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i37 - - a1 i178 i62  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i28 <|@
d <@d|@=== Debug Properties ===
bci: 43
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
polymorphic: true
stamp: i32
targetMethod: Indirect#Object.hashCode
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v113 
stateDuring: ?145 
=== Succesors ===
next: v33 
=== Usages ===
i31 
=== Predecessor ===
j112 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v113 stateDuring: ?145 #next: v33  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 46]
stamp: i32
=== Inputs ===
x: i28 
y: i37 
=== Succesors ===
=== Usages ===
i61 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i28 y: i37  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 48]
stamp: i32
=== Inputs ===
x: i62 
y: i6 
=== Succesors ===
=== Usages ===
i62 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i62 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
stamp: void
=== Inputs ===
loopBegin: v11 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i28 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v11  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604225416349206359
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4601) [bci: 54]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v11 
=== Succesors ===
next: v56 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v11 #next: v56  <|@  <|@
f <@*|@fixed>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4601) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
v17 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i60 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4601) [bci: 54]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v55 
values: i61 i6 
=== Succesors ===
=== Usages ===
v34 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v55 values: i61 i6  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4601) [bci: 54]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v56 v57 
=== Succesors ===
next: v34 
=== Usages ===
i60 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v56 v57 #next: v34  <|@  <|@
f <@*|@fixed>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4601) [bci: 55]
stamp: void
=== Inputs ===
memoryMap: - 
result: i60 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i60  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v192 
=== Usages ===
=== Predecessor ===
v137 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v192  <|@  <|@
f <@*|@fixed>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 97
mayConvertToGuard: true
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?14 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?14  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@150bbbf0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v1|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.32829322047634435 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604225416349206359
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV input: [v4|QWORD + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV input: [v6|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - v0|QWORD[.] v1|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA address: [v9|DWORD + 31] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v10|DWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608868344202672518
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD, v12|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v11|DWORD) trueDestinationProbability: 0.51125516299068 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604504072801397685
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604504072801397685
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV input: [v0|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v12|DWORD v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction v14|DWORD = MOV input: [v13|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = UNCOMPRESSPOINTER (input: v14|DWORD, ~baseRegister: v16|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV input: [v15|QWORD + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV input: [v17|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SHL x: v12|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = SUB (x: v20|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v17|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v18|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: v21|DWORD 
locals: - - v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v24|DWORD, v23|DWORD] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604225416349206359
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599585624819528018
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v12|DWORD v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i178 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: i178  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a java.lang.Object[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v184 v187 ?14 ?144 ?145 v183 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Arrays.hashCode(Object[])>
localsSize: 6
locksSize: 0
sourceFile: Arrays.java
sourceLine: 4593
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v180 i178 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v183 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i178 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i178 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-17163|0xffffffffffffbcf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 11]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v183 
lastLocationAccess: - 
=== Succesors ===
next: v42 
=== Usages ===
?14 v15 ?144 v96 ?145 v73 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v183 lastLocationAccess: - #next: v42  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 13]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
?144 v73 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 25]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i178 
y: i8 
=== Succesors ===
=== Usages ===
v42 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i178 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4596) [bci: 6]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i60 i32 i62 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 19]
profileData: PROFILED designatedSuccessorProbability: 0.32829322047634435
stamp: void
=== Inputs ===
condition: v73 
=== Succesors ===
trueSuccessor: v40 
falseSuccessor: v41 
=== Usages ===
=== Predecessor ===
i178 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v73 #trueSuccessor: v40 #falseSuccessor: v41  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@150bbbf0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v1|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.32829322047634435 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599585624819528018
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4601) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
next: v57 
=== Usages ===
=== Predecessor ===
v42 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v57  <|@  <|@
f <@*|@fixed>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4601) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
v40 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604225416349206359
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: a179 
=== Usages ===
=== Predecessor ===
v42 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a179  <|@  <|@
f <@~|@floating>@ <|@
tid v184 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a179 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a179 <|@
result v2|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 25]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v184 
lastLocationAccess: - 
=== Succesors ===
next: v180 
=== Usages ===
a83 v190 
=== Predecessor ===
v41 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v184 lastLocationAccess: - #next: v180  <|@  <|@
f <@~|@floating>@ <|@
tid v190 <|@
result [v2|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a179 
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a179  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v180 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-21771|0xffffffffffffaaf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v190 
lastLocationAccess: - 
=== Succesors ===
next: v90 
=== Usages ===
v172 
=== Predecessor ===
a179 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v190 lastLocationAccess: - #next: v90  <|@  <|@
f <@~|@floating>@ <|@
tid v172 <|@
result v4|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v180 
=== Succesors ===
=== Usages ===
v185 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v180  <|@  <|@
f <@~|@floating>@ <|@
tid v185 <|@
result [v4|QWORD + 480] <|@
d <@d|@=== Debug Properties ===
displacement: 480
stamp: void*
stride: S1
=== Inputs ===
base: v172 
index: - 
=== Succesors ===
=== Usages ===
v90 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v172 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v90 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v185 
lastLocationAccess: - 
=== Succesors ===
next: j93 
=== Usages ===
v186 v94 
=== Predecessor ===
v180 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v185 lastLocationAccess: - #next: j93  <|@  <|@
f <@~|@floating>@ <|@
tid v186 <|@
result [v6|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v90 
index: - 
=== Succesors ===
=== Usages ===
j93 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v90 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j93 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v186 
lastLocationAccess: - 
=== Succesors ===
next: i47 
=== Usages ===
v94 
=== Predecessor ===
v90 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v186 lastLocationAccess: - #next: i47  <|@  <|@
f <@~|@floating>@ <|@
tid a83 <|@
result v8|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 25]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a179 
=== Succesors ===
=== Usages ===
v94 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a179  <|@  <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Ljava/lang/Object;, resolved>]
stamp: void
targetMethod: HotSpotMethod<Object.hashCode()>
=== Inputs ===
computedAddress: j93 
metaspaceMethod: v90 
arguments: a83 
=== Succesors ===
=== Usages ===
i47 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j93 metaspaceMethod: v90 arguments: a83  <|@  <|@
f <@~|@floating>@ <|@
tid i66 <|@
result int[31|0x1f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 31]
rawvalue: 31
stableDimension: 0
stamp: i32 [31]
stampKind: i32
value: int[31|0x1f]
=== Inputs ===
=== Succesors ===
=== Usages ===
?144 i49 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?144 <|@
d <@d|@=== Debug Properties ===
bci: 43
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Arrays.hashCode(Object[])>
localsSize: 6
locksSize: 0
sourceFile: Arrays.java
sourceLine: 4599
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i66 - - a1 i178 i8 
=== Succesors ===
=== Usages ===
i47 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i66 - - a1 i178 i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i47 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 43
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
polymorphic: true
stamp: i32
targetMethod: Indirect#Object.hashCode
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v94 
stateDuring: ?144 
=== Succesors ===
next: v10 
=== Usages ===
i49 
=== Predecessor ===
j93 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v94 stateDuring: ?144 #next: v10  <|@  <|@
f <@~|@floating>@ <|@
tid i49 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 46]
stamp: i32
=== Inputs ===
x: i47 
y: i66 
=== Succesors ===
=== Usages ===
i61 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i47 y: i66  <|@  <|@
f <@~|@floating>@ <|@
tid i35 <|@
result int[5|0x5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 31]
rawvalue: 5
stableDimension: 0
stamp: i32 [5]
stampKind: i32
value: int[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i36 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
i47 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV input: [v4|QWORD + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV input: [v6|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - v0|QWORD[.] v1|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA address: [v9|DWORD + 31] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v10|DWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608868344202672518
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i62 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v11 
values: i6 i32 
=== Succesors ===
=== Usages ===
?14 v15 j117 ?145 i32 v96 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v11 values: i6 i32  <|@  <|@
f <@~|@floating>@ <|@
tid i61 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v11 
values: i49 i31 
=== Succesors ===
=== Usages ===
?14 i60 i37 i36 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v11 values: i49 i31  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v10 
=== Succesors ===
next: v21 
=== Usages ===
i62 i61 v17 v33 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v10 #next: v21  <|@  <|@
f <@~|@floating>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 19]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i62 
y: i178 
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i62 y: i178  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 19]
profileData: INJECTED designatedSuccessorProbability: 0.51125516299068
stamp: void
=== Inputs ===
condition: v15 
=== Succesors ===
trueSuccessor: v20 
falseSuccessor: v17 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v15 #trueSuccessor: v20 #falseSuccessor: v17  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD, v12|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v11|DWORD) trueDestinationProbability: 0.51125516299068 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604504072801397685
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v137 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v137  <|@  <|@
tid ?14 <|@
d <@d|@=== Debug Properties ===
bci: 16
bytecode: iload
code: ResolvedJavaMethodBytecode<Arrays.hashCode(Object[])>
localsSize: 6
locksSize: 0
sourceFile: Arrays.java
sourceLine: 4598
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - i61 a1 i178 i62 
=== Succesors ===
=== Usages ===
v192 v182 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - i61 a1 i178 i62  <|@  <|@
f <@~|@floating>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 25]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i62 
y: i178 
=== Succesors ===
=== Usages ===
v137 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i62 y: i178  <|@  <|@
f <@*|@fixed>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 25]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v96 
=== Succesors ===
trueSuccessor: v134 
falseSuccessor: v136 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v96 #trueSuccessor: v134 #falseSuccessor: v136  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604504072801397685
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: a181 
=== Usages ===
=== Predecessor ===
v137 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a181  <|@  <|@
f <@~|@floating>@ <|@
tid j117 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 25]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i62 
=== Succesors ===
=== Usages ===
v187 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i62  <|@  <|@
f <@~|@floating>@ <|@
tid v187 <|@
result [v0|QWORD[.] + v11|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a1 
index: j117 
=== Succesors ===
=== Usages ===
a181 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j117  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a181 <|@
result v13|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 25]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v187 
lastLocationAccess: - 
=== Succesors ===
next: v182 
=== Usages ===
a104 v191 
=== Predecessor ===
v134 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v187 lastLocationAccess: - #next: v182  <|@  <|@
f <@~|@floating>@ <|@
tid v191 <|@
result [v13|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a181 
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a181  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v182 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-27147|0xffffffffffff95f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?14 
guard: - 
address: v191 
lastLocationAccess: - 
=== Succesors ===
next: v110 
=== Usages ===
v175 
=== Predecessor ===
a181 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?14 guard: - address: v191 lastLocationAccess: - #next: v110  <|@  <|@
f <@~|@floating>@ <|@
tid v175 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v182 
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v182  <|@  <|@
f <@~|@floating>@ <|@
tid v188 <|@
result [v15|QWORD + 480] <|@
d <@d|@=== Debug Properties ===
displacement: 480
stamp: void*
stride: S1
=== Inputs ===
base: v175 
index: - 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v175 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v110 <|@
result v17|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v188 
lastLocationAccess: - 
=== Succesors ===
next: j112 
=== Usages ===
v189 v113 
=== Predecessor ===
v182 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v188 lastLocationAccess: - #next: j112  <|@  <|@
f <@~|@floating>@ <|@
tid v189 <|@
result [v17|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v110 
index: - 
=== Succesors ===
=== Usages ===
j112 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v110 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j112 <|@
result v18|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v189 
lastLocationAccess: - 
=== Succesors ===
next: i28 
=== Usages ===
v113 
=== Predecessor ===
v110 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v189 lastLocationAccess: - #next: i28  <|@  <|@
f <@~|@floating>@ <|@
tid a104 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 25]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a181 
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a181  <|@  <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Ljava/lang/Object;, resolved>]
stamp: void
targetMethod: HotSpotMethod<Object.hashCode()>
=== Inputs ===
computedAddress: j112 
metaspaceMethod: v110 
arguments: a104 
=== Succesors ===
=== Usages ===
i28 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j112 metaspaceMethod: v110 arguments: a104  <|@  <|@
f <@~|@floating>@ <|@
tid i36 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 31]
stamp: i32 [-2147483648 - 2147483616] bits:x...x00000
=== Inputs ===
x: i61 
y: i35 
=== Succesors ===
=== Usages ===
i37 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i61 y: i35  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 31]
stamp: i32
=== Inputs ===
x: i36 
y: i61 
=== Succesors ===
=== Usages ===
?145 i31 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i36 y: i61  <|@  <|@
tid ?145 <|@
d <@d|@=== Debug Properties ===
bci: 43
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Arrays.hashCode(Object[])>
localsSize: 6
locksSize: 0
sourceFile: Arrays.java
sourceLine: 4599
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i37 - - a1 i178 i62 
=== Succesors ===
=== Usages ===
i28 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i37 - - a1 i178 i62  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i28 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 43
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
polymorphic: true
stamp: i32
targetMethod: Indirect#Object.hashCode
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v113 
stateDuring: ?145 
=== Succesors ===
next: v33 
=== Usages ===
i31 
=== Predecessor ===
j112 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v113 stateDuring: ?145 #next: v33  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 46]
stamp: i32
=== Inputs ===
x: i28 
y: i37 
=== Succesors ===
=== Usages ===
i61 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i28 y: i37  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 48]
stamp: i32
=== Inputs ===
x: i62 
y: i6 
=== Succesors ===
=== Usages ===
i62 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i62 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
stamp: void
=== Inputs ===
loopBegin: v11 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i28 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v11  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV input: [v0|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v12|DWORD v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction v14|DWORD = MOV input: [v13|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = UNCOMPRESSPOINTER (input: v14|DWORD, ~baseRegister: v16|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV input: [v15|QWORD + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV input: [v17|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SHL x: v12|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = SUB (x: v20|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v17|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v18|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: v21|DWORD 
locals: - - v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v24|DWORD, v23|DWORD] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604225416349206359
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4601) [bci: 54]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v11 
=== Succesors ===
next: v56 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v11 #next: v56  <|@  <|@
f <@*|@fixed>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4601) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
v17 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i60 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4601) [bci: 54]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v55 
values: i61 i6 
=== Succesors ===
=== Usages ===
v34 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v55 values: i61 i6  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4601) [bci: 54]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v56 v57 
=== Succesors ===
next: v34 
=== Usages ===
i60 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v56 v57 #next: v34  <|@  <|@
f <@*|@fixed>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4601) [bci: 55]
stamp: void
=== Inputs ===
memoryMap: - 
result: i60 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i60  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v192 
=== Usages ===
=== Predecessor ===
v137 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v192  <|@  <|@
f <@*|@fixed>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 97
mayConvertToGuard: true
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?14 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?14  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v12|DWORD v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@150bbbf0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v1|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.32829322047634435 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604225416349206359
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV input: [v4|QWORD + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV input: [v6|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - v0|QWORD[.] v1|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA address: [v9|DWORD + 31] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v10|DWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608868344202672518
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD, v12|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v11|DWORD) trueDestinationProbability: 0.51125516299068 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604504072801397685
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604504072801397685
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV input: [v0|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v12|DWORD v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction v14|DWORD = MOV input: [v13|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = UNCOMPRESSPOINTER (input: v14|DWORD, ~baseRegister: v16|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV input: [v15|QWORD + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV input: [v17|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SHL x: v12|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = SUB (x: v20|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v17|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v18|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: v21|DWORD 
locals: - - v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v24|DWORD, v23|DWORD] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604225416349206359
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599585624819528018
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v12|DWORD v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@150bbbf0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v1|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.32829322047634435 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604225416349206359
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV input: [v4|QWORD + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV input: [v6|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - v0|QWORD[.] v1|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA address: [v9|DWORD + 31] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v10|DWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608868344202672518
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD, v12|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v11|DWORD) trueDestinationProbability: 0.51125516299068 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604504072801397685
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604504072801397685
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV input: [v0|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v12|DWORD v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction v14|DWORD = MOV input: [v13|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = UNCOMPRESSPOINTER (input: v14|DWORD, ~baseRegister: v16|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV input: [v15|QWORD + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV input: [v17|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SHL x: v12|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = SUB (x: v20|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v17|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v18|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: v21|DWORD 
locals: - - v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v24|DWORD, v23|DWORD] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604225416349206359
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599585624819528018
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v12|DWORD v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@150bbbf0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v1|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.32829322047634435 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604225416349206359
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV input: [v4|QWORD + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV input: [v6|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - v0|QWORD[.] v1|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA address: [v9|DWORD + 31] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v10|DWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608868344202672518
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD, v12|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v11|DWORD) trueDestinationProbability: 0.51125516299068 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604504072801397685
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604504072801397685
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV input: [v0|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v12|DWORD v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction v14|DWORD = MOV input: [v13|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = UNCOMPRESSPOINTER (input: v14|DWORD, ~baseRegister: v16|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV input: [v15|QWORD + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV input: [v17|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SHL x: v12|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = SUB (x: v20|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v17|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v18|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: v21|DWORD 
locals: - - v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v24|DWORD, v23|DWORD] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604225416349206359
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599585624819528018
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v12|DWORD v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@150bbbf0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v1|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.32829322047634435 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604225416349206359
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV input: [v4|QWORD + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV input: [v6|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - v0|QWORD[.] v1|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA address: [v9|DWORD + 31] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v10|DWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608868344202672518
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD, v12|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v11|DWORD) trueDestinationProbability: 0.51125516299068 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604504072801397685
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604504072801397685
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV input: [v0|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v12|DWORD v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction v14|DWORD = MOV input: [v13|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = UNCOMPRESSPOINTER (input: v14|DWORD, ~baseRegister: v16|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV input: [v15|QWORD + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV input: [v17|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SHL x: v12|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = SUB (x: v20|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v17|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v18|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: v21|DWORD 
locals: - - v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v24|DWORD, v23|DWORD] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604225416349206359
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599585624819528018
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v12|DWORD v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@150bbbf0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v1|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.32829322047634435 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604225416349206359
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV input: [v4|QWORD + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV input: [v6|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - v0|QWORD[.] v1|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA address: [v9|DWORD + 31] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v10|DWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608868344202672518
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD, v12|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v11|DWORD) trueDestinationProbability: 0.51125516299068 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604504072801397685
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604504072801397685
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV input: [v0|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v12|DWORD v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction v14|DWORD = MOV input: [v13|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = UNCOMPRESSPOINTER (input: v14|DWORD, ~baseRegister: v16|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV input: [v15|QWORD + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV input: [v17|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SHL x: v12|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = SUB (x: v20|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v17|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v18|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: v21|DWORD 
locals: - - v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v24|DWORD, v23|DWORD] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604225416349206359
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599585624819528018
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v12|DWORD v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@150bbbf0 slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v1|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.32829322047634435 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604225416349206359
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   78  <|@ instruction v5|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   80  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   82  <|@ instruction v6|QWORD = MOV input: [v4|QWORD + 480] size: QWORD <|@ <|@
      nr   84  <|@ instruction v7|QWORD = MOV input: [v6|QWORD + 64] size: QWORD <|@ <|@
      nr   86  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction rbx|QWORD = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction rax|QWORD = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - v0|QWORD[.] v1|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   96  <|@ instruction v9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction v10|DWORD = LEA address: [v9|DWORD + 31] size: DWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v10|DWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608868344202672518
    begin_IR
      LIR
      nr  102  <|@ instruction [v11|DWORD, v12|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v11|DWORD) trueDestinationProbability: 0.51125516299068 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604504072801397685
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604504072801397685
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction v13|DWORD[_] = MOV input: [v0|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  176  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v12|DWORD v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction v14|DWORD = MOV input: [v13|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr  178  <|@ instruction v16|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  180  <|@ instruction v15|QWORD = UNCOMPRESSPOINTER (input: v14|DWORD, ~baseRegister: v16|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  182  <|@ instruction v17|QWORD = MOV input: [v15|QWORD + 480] size: QWORD <|@ <|@
      nr  184  <|@ instruction v18|QWORD = MOV input: [v17|QWORD + 64] size: QWORD <|@ <|@
      nr  186  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 0 shift: 3 <|@ <|@
      nr  188  <|@ instruction v20|DWORD = SHL x: v12|DWORD y: 5 size: DWORD <|@ <|@
      nr  190  <|@ instruction v21|DWORD = SUB (x: v20|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr  192  <|@ instruction rsi|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction rbx|QWORD = MOVE input: v17|QWORD moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction rax|QWORD = MOVE input: v18|QWORD moveKind: QWORD <|@ <|@
      nr  198  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: v21|DWORD 
locals: - - v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr  200  <|@ instruction v22|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  202  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction v24|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr  206  <|@ instruction JUMP ~outgoingValues: [v24|DWORD, v23|DWORD] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604225416349206359
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599585624819528018
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  228  <|@ instruction [v25|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction rax|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr  268  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v12|DWORD v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@150bbbf0 slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v1|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.32829322047634435 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604225416349206359
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   78  <|@ instruction v5|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   80  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   82  <|@ instruction v6|QWORD = MOV input: [v4|QWORD + 480] size: QWORD <|@ <|@
      nr   84  <|@ instruction v7|QWORD = MOV input: [v6|QWORD + 64] size: QWORD <|@ <|@
      nr   86  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction rbx|QWORD = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction rax|QWORD = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - v0|QWORD[.] v1|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   96  <|@ instruction v9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction v10|DWORD = LEA address: [v9|DWORD + 31] size: DWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v10|DWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608868344202672518
    begin_IR
      LIR
      nr  102  <|@ instruction [v11|DWORD, v12|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v11|DWORD) trueDestinationProbability: 0.51125516299068 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604504072801397685
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604504072801397685
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction v13|DWORD[_] = MOV input: [v0|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  176  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v12|DWORD v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction v14|DWORD = MOV input: [v13|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr  178  <|@ instruction v16|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  180  <|@ instruction v15|QWORD = UNCOMPRESSPOINTER (input: v14|DWORD, ~baseRegister: v16|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  182  <|@ instruction v17|QWORD = MOV input: [v15|QWORD + 480] size: QWORD <|@ <|@
      nr  184  <|@ instruction v18|QWORD = MOV input: [v17|QWORD + 64] size: QWORD <|@ <|@
      nr  186  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 0 shift: 3 <|@ <|@
      nr  188  <|@ instruction v20|DWORD = SHL x: v12|DWORD y: 5 size: DWORD <|@ <|@
      nr  190  <|@ instruction v21|DWORD = SUB (x: v20|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr  192  <|@ instruction rsi|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction rbx|QWORD = MOVE input: v17|QWORD moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction rax|QWORD = MOVE input: v18|QWORD moveKind: QWORD <|@ <|@
      nr  198  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: v21|DWORD 
locals: - - v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr  200  <|@ instruction v22|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  202  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction v24|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr  206  <|@ instruction JUMP ~outgoingValues: [v24|DWORD, v23|DWORD] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604225416349206359
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599585624819528018
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  228  <|@ instruction [v25|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction rax|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr  268  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v12|DWORD v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|d fixed "[rax|d]" rax|d v7|q [0, 1[[92, 96[[196, 200[[246, 248[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  rbx|- fixed "[rbx|-]" rbx|- v6|q [0, 1[[90, 95[[194, 199[ "NoOptimization"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 18[[94, 95[[198, 199[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v8|q [0, 22[[88, 95[[192, 199[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|- [22, 208[[250, 271[22 MustHaveRegister 24 MustHaveRegister 74 MustHaveRegister 174 MustHaveRegister 207 LiveAtLoopEnd  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d -1 [24, 208[[250, 271[24 MustHaveRegister 26 MustHaveRegister 112 MustHaveRegister 124 MustHaveRegister 207 LiveAtLoopEnd  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [74, 86[74 MustHaveRegister 76 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [76, 80[76 MustHaveRegister 80 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[v4|q]" v4|q v3|d [80, 82[80 MustHaveRegister 82 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q -1 [78, 81[78 MustHaveRegister 80 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q -1 [82, 90[82 MustHaveRegister 84 MustHaveRegister 90 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q -1 [84, 92[84 MustHaveRegister 92 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q v2|d [86, 88[86 MustHaveRegister 88 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d rax|d [96, 98[96 MustHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[v10|d]" v10|d -1 [98, 101[98 MustHaveRegister 100 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d v24|d [102, 204[[250, 271[112 ShouldHaveRegister 124 ShouldHaveRegister 174 MustHaveRegister 204 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d v23|d [102, 191[[208, 217[[250, 271[188 MustHaveRegister 190 ShouldHaveRegister 216 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[v13|d]" v13|d -1 [174, 186[174 MustHaveRegister 176 MustHaveRegister 186 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[v14|d]" v14|d -1 [176, 180[176 MustHaveRegister 180 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[v15|q]" v15|q v14|d [180, 182[180 MustHaveRegister 182 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[v16|q]" v16|q -1 [178, 181[178 MustHaveRegister 180 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[v17|q]" v17|q -1 [182, 194[182 MustHaveRegister 184 MustHaveRegister 194 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[v18|q]" v18|q -1 [184, 196[184 MustHaveRegister 196 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[v19|q]" v19|q v13|d [186, 192[186 MustHaveRegister 192 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[v20|d]" v20|d v12|d [188, 190[188 MustHaveRegister 190 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[v21|d]" v21|d v20|d [190, 202[190 MustHaveRegister 202 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[v22|d]" v22|d rax|d [200, 202[200 MustHaveRegister 202 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[v23|d]" v23|d v22|d [202, 207[202 MustHaveRegister 206 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[v24|d]" v24|d v11|d [204, 207[204 MustHaveRegister 206 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[v25|d]" v25|d v12|d [228, 246[246 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|d fixed "[rax|d]" rax|d v7|q [0, 1[[92, 96[[196, 200[[246, 248[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  rbx|- fixed "[rbx|-]" rbx|- v6|q [0, 1[[90, 95[[194, 199[ "NoOptimization"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 18[[94, 95[[198, 199[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v8|q [0, 22[[88, 95[[192, 199[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [22, 87[22 MustHaveRegister 24 MustHaveRegister 74 MustHaveRegister  "SpillInDominator"
  v1|d DWORD "[r10|d]" v1|d -1 [24, 28[24 MustHaveRegister 26 MustHaveRegister  "SpillInDominator"
  v2|d DWORD "[rbx|d]" v2|d -1 [74, 86[74 MustHaveRegister 76 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rax|d]" v3|d -1 [76, 80[76 MustHaveRegister 80 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rax|q]" v4|q v3|d [80, 82[80 MustHaveRegister 82 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[r11|q]" v5|q -1 [78, 81[78 MustHaveRegister 80 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q -1 [82, 90[82 MustHaveRegister 84 MustHaveRegister 90 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[r11|q]" v7|q -1 [84, 92[84 MustHaveRegister 92 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[rbx|q]" v8|q v2|d [86, 88[86 MustHaveRegister 88 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[rax|d]" v9|d rax|d [96, 98[96 MustHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[rsi|d]" v10|d -1 [98, 101[98 MustHaveRegister 100 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[r11|d]" v11|d v24|d [102, 197[112 ShouldHaveRegister 124 ShouldHaveRegister 174 MustHaveRegister  "OneSpillStore"
  v12|d DWORD "[r8|d]" v12|d v23|d [102, 191[[208, 217[[250, 271[188 MustHaveRegister 190 ShouldHaveRegister 216 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[rbx|d]" v13|d -1 [174, 186[174 MustHaveRegister 176 MustHaveRegister 186 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[rax|d]" v14|d -1 [176, 180[176 MustHaveRegister 180 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[rax|q]" v15|q v14|d [180, 182[180 MustHaveRegister 182 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[r9|q]" v16|q -1 [178, 181[178 MustHaveRegister 180 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[rax|q]" v17|q -1 [182, 194[182 MustHaveRegister 184 MustHaveRegister 194 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[r9|q]" v18|q -1 [184, 196[184 MustHaveRegister 196 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rbx|q]" v19|q v13|d [186, 192[186 MustHaveRegister 192 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[rcx|d]" v20|d v12|d [188, 190[188 MustHaveRegister 190 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[rcx|d]" v21|d v20|d [190, 197[190 MustHaveRegister  "OneSpillStore"
  v22|d DWORD "[rax|d]" v22|d rax|d [200, 202[200 MustHaveRegister 202 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[rax|d]" v23|d v22|d [202, 207[202 MustHaveRegister 206 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[r11|d]" v24|d v11|d [204, 207[204 MustHaveRegister 206 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[r8|d]" v25|d v12|d [228, 246[246 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[vstack:1|q]" v0|q v0|q [87, 93[ "SpillInDominator"
  v27|d DWORD "[vstack:0|d]" v1|d v1|d [28, 93[ "SpillInDominator"
  v28|d DWORD "[vstack:0|d]" v1|d v1|d [93, 102[ "SpillInDominator"
  v29|q QWORD "[vstack:1|q]" v0|q v0|q [93, 102[ "SpillInDominator"
  v30|d DWORD "[r10|d]" v1|d v1|d [102, 126[112 MustHaveRegister 124 MustHaveRegister  "SpillInDominator"
  v31|q QWORD "[rsi|q]" v0|q v0|q [102, 191[174 MustHaveRegister  "SpillInDominator"
  v32|d DWORD "[vstack:0|d]" v1|d v1|d [126, 197[ "SpillInDominator"
  v33|d DWORD "[vstack:5|d]" v11|d v11|d [197, 204[204 ShouldHaveRegister  "OneSpillStore"
  v34|q QWORD "[vstack:1|q]" v0|q v0|q [191, 197[ "SpillInDominator"
  v35|d DWORD "[vstack:0|d]" v1|d v1|d [197, 208[207 LiveAtLoopEnd  "SpillInDominator"
  v36|d DWORD "[vstack:4|d]" v21|d v21|d [197, 202[202 ShouldHaveRegister  "OneSpillStore"
  v37|q QWORD "[vstack:1|q]" v0|q v0|q [197, 208[207 LiveAtLoopEnd  "SpillInDominator"
  v38|d DWORD "[r11|d]" v11|d v11|d [250, 271[ "OneSpillStore"
  v39|q QWORD "[rsi|q]" v0|q v0|q [250, 271[ "SpillInDominator"
  v40|d DWORD "[r10|d]" v1|d v1|d [250, 271[ "SpillInDominator"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@150bbbf0 slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v1|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.32829322047634435 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604225416349206359
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   78  <|@ instruction v5|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   80  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   82  <|@ instruction v6|QWORD = MOV input: [v4|QWORD + 480] size: QWORD <|@ <|@
      nr   84  <|@ instruction v7|QWORD = MOV input: [v6|QWORD + 64] size: QWORD <|@ <|@
      nr   86  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   88  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction rbx|QWORD = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction rax|QWORD = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = STACKMOVE (input: v26|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = STACKMOVE (input: v27|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - v0|QWORD[.] v1|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   96  <|@ instruction v9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction v10|DWORD = LEA address: [v9|DWORD + 31] size: DWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v10|DWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608868344202672518
    begin_IR
      LIR
      nr  102  <|@ instruction [v11|DWORD, v12|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v11|DWORD) trueDestinationProbability: 0.51125516299068 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604504072801397685
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604504072801397685
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction v13|DWORD[_] = MOV input: [v0|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  176  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v12|DWORD v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction v14|DWORD = MOV input: [v13|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr  178  <|@ instruction v16|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  180  <|@ instruction v15|QWORD = UNCOMPRESSPOINTER (input: v14|DWORD, ~baseRegister: v16|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  182  <|@ instruction v17|QWORD = MOV input: [v15|QWORD + 480] size: QWORD <|@ <|@
      nr  184  <|@ instruction v18|QWORD = MOV input: [v17|QWORD + 64] size: QWORD <|@ <|@
      nr  186  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 0 shift: 3 <|@ <|@
      nr  188  <|@ instruction v20|DWORD = SHL x: v12|DWORD y: 5 size: DWORD <|@ <|@
      nr  190  <|@ instruction v21|DWORD = SUB (x: v20|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  192  <|@ instruction rsi|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction rbx|QWORD = MOVE input: v17|QWORD moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction rax|QWORD = MOVE input: v18|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = STACKMOVE (input: v32|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = STACKMOVE (input: v34|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE input: v11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE input: v21|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  198  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: v21|DWORD 
locals: - - v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr  200  <|@ instruction v22|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  202  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction v24|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr  206  <|@ instruction JUMP ~outgoingValues: [v24|DWORD, v23|DWORD] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604225416349206359
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599585624819528018
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  228  <|@ instruction [v25|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction rax|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr  268  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v12|DWORD v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|d fixed "[rax|d]" rax|d v7|q [0, 1[[92, 96[[196, 200[[246, 248[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  rbx|- fixed "[rbx|-]" rbx|- v6|q [0, 1[[90, 95[[194, 199[ "NoOptimization"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 18[[94, 95[[198, 199[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v8|q [0, 22[[88, 95[[192, 199[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [22, 87[22 MustHaveRegister 24 MustHaveRegister 74 MustHaveRegister  "StoreAtDefinition"
  v1|d DWORD "[r10|d]" v1|d -1 [24, 28[24 MustHaveRegister 26 MustHaveRegister  "StoreAtDefinition"
  v2|d DWORD "[rbx|d]" v2|d -1 [74, 86[74 MustHaveRegister 76 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rax|d]" v3|d -1 [76, 80[76 MustHaveRegister 80 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rax|q]" v4|q v3|d [80, 82[80 MustHaveRegister 82 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[r11|q]" v5|q -1 [78, 81[78 MustHaveRegister 80 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q -1 [82, 90[82 MustHaveRegister 84 MustHaveRegister 90 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[r11|q]" v7|q -1 [84, 92[84 MustHaveRegister 92 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[rbx|q]" v8|q v2|d [86, 88[86 MustHaveRegister 88 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[rax|d]" v9|d rax|d [96, 98[96 MustHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[rsi|d]" v10|d -1 [98, 101[98 MustHaveRegister 100 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[r11|d]" v11|d v24|d [102, 197[112 ShouldHaveRegister 124 ShouldHaveRegister 174 MustHaveRegister  "OneSpillStore"
  v12|d DWORD "[r8|d]" v12|d v23|d [102, 191[[208, 217[[250, 271[188 MustHaveRegister 190 ShouldHaveRegister 216 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[rbx|d]" v13|d -1 [174, 186[174 MustHaveRegister 176 MustHaveRegister 186 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[rax|d]" v14|d -1 [176, 180[176 MustHaveRegister 180 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[rax|q]" v15|q v14|d [180, 182[180 MustHaveRegister 182 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[r9|q]" v16|q -1 [178, 181[178 MustHaveRegister 180 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[rax|q]" v17|q -1 [182, 194[182 MustHaveRegister 184 MustHaveRegister 194 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[r9|q]" v18|q -1 [184, 196[184 MustHaveRegister 196 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rbx|q]" v19|q v13|d [186, 192[186 MustHaveRegister 192 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[rcx|d]" v20|d v12|d [188, 190[188 MustHaveRegister 190 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[rcx|d]" v21|d v20|d [190, 197[190 MustHaveRegister  "OneSpillStore"
  v22|d DWORD "[rax|d]" v22|d rax|d [200, 202[200 MustHaveRegister 202 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[rax|d]" v23|d v22|d [202, 207[202 MustHaveRegister 206 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[r11|d]" v24|d v11|d [204, 207[204 MustHaveRegister 206 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[r8|d]" v25|d v12|d [228, 246[246 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[vstack:1|q]" v0|q v0|q [87, 93[ "StoreAtDefinition"
  v27|d DWORD "[vstack:0|d]" v1|d v1|d [28, 93[ "StoreAtDefinition"
  v28|d DWORD "[vstack:0|d]" v1|d v1|d [93, 102[ "StoreAtDefinition"
  v29|q QWORD "[vstack:1|q]" v0|q v0|q [93, 102[ "StoreAtDefinition"
  v30|d DWORD "[r10|d]" v1|d v1|d [102, 126[112 MustHaveRegister 124 MustHaveRegister  "StoreAtDefinition"
  v31|q QWORD "[rsi|q]" v0|q v0|q [102, 191[174 MustHaveRegister  "StoreAtDefinition"
  v32|d DWORD "[vstack:0|d]" v1|d v1|d [126, 197[ "StoreAtDefinition"
  v33|d DWORD "[vstack:5|d]" v11|d v11|d [197, 204[204 ShouldHaveRegister  "OneSpillStore"
  v34|q QWORD "[vstack:1|q]" v0|q v0|q [191, 197[ "StoreAtDefinition"
  v35|d DWORD "[vstack:0|d]" v1|d v1|d [197, 208[207 LiveAtLoopEnd  "StoreAtDefinition"
  v36|d DWORD "[vstack:4|d]" v21|d v21|d [197, 202[202 ShouldHaveRegister  "OneSpillStore"
  v37|q QWORD "[vstack:1|q]" v0|q v0|q [197, 208[207 LiveAtLoopEnd  "StoreAtDefinition"
  v38|d DWORD "[r11|d]" v11|d v11|d [250, 271[ "OneSpillStore"
  v39|q QWORD "[rsi|q]" v0|q v0|q [250, 271[ "StoreAtDefinition"
  v40|d DWORD "[r10|d]" v1|d v1|d [250, 271[ "StoreAtDefinition"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@150bbbf0 slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v1|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.32829322047634435 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604225416349206359
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   78  <|@ instruction v5|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   80  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   82  <|@ instruction v6|QWORD = MOV input: [v4|QWORD + 480] size: QWORD <|@ <|@
      nr   84  <|@ instruction v7|QWORD = MOV input: [v6|QWORD + 64] size: QWORD <|@ <|@
      nr   86  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   88  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction rbx|QWORD = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction rax|QWORD = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = STACKMOVE (input: v26|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = STACKMOVE (input: v27|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - v0|QWORD[.] v1|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   96  <|@ instruction v9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction v10|DWORD = LEA address: [v9|DWORD + 31] size: DWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v10|DWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608868344202672518
    begin_IR
      LIR
      nr  102  <|@ instruction [v11|DWORD, v12|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v11|DWORD) trueDestinationProbability: 0.51125516299068 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604504072801397685
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604504072801397685
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction v13|DWORD[_] = MOV input: [v0|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  176  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v12|DWORD v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction v14|DWORD = MOV input: [v13|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr  178  <|@ instruction v16|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  180  <|@ instruction v15|QWORD = UNCOMPRESSPOINTER (input: v14|DWORD, ~baseRegister: v16|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  182  <|@ instruction v17|QWORD = MOV input: [v15|QWORD + 480] size: QWORD <|@ <|@
      nr  184  <|@ instruction v18|QWORD = MOV input: [v17|QWORD + 64] size: QWORD <|@ <|@
      nr  186  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 0 shift: 3 <|@ <|@
      nr  188  <|@ instruction v20|DWORD = SHL x: v12|DWORD y: 5 size: DWORD <|@ <|@
      nr  190  <|@ instruction v21|DWORD = SUB (x: v20|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  192  <|@ instruction rsi|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction rbx|QWORD = MOVE input: v17|QWORD moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction rax|QWORD = MOVE input: v18|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = STACKMOVE (input: v32|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = STACKMOVE (input: v34|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE input: v11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE input: v21|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  198  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: v21|DWORD 
locals: - - v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr  200  <|@ instruction v22|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  202  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction v24|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr  206  <|@ instruction JUMP ~outgoingValues: [v24|DWORD, v23|DWORD] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604225416349206359
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599585624819528018
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  228  <|@ instruction [v25|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction rax|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr  268  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v12|DWORD v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|d fixed "[rax|d]" rax|d v7|q [0, 1[[92, 96[[196, 200[[246, 248[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  rbx|- fixed "[rbx|-]" rbx|- v6|q [0, 1[[90, 95[[194, 199[ "NoOptimization"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 18[[94, 95[[198, 199[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v8|q [0, 22[[88, 95[[192, 199[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[94, 95[[198, 199[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [22, 87[22 MustHaveRegister 24 MustHaveRegister 74 MustHaveRegister  "StoreAtDefinition"
  v1|d DWORD "[r10|d]" v1|d -1 [24, 28[24 MustHaveRegister 26 MustHaveRegister  "StoreAtDefinition"
  v2|d DWORD "[rbx|d]" v2|d -1 [74, 86[74 MustHaveRegister 76 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rax|d]" v3|d -1 [76, 80[76 MustHaveRegister 80 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rax|q]" v4|q v3|d [80, 82[80 MustHaveRegister 82 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[r11|q]" v5|q -1 [78, 81[78 MustHaveRegister 80 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q -1 [82, 90[82 MustHaveRegister 84 MustHaveRegister 90 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[r11|q]" v7|q -1 [84, 92[84 MustHaveRegister 92 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[rbx|q]" v8|q v2|d [86, 88[86 MustHaveRegister 88 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[rax|d]" v9|d rax|d [96, 98[96 MustHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[rsi|d]" v10|d -1 [98, 101[98 MustHaveRegister 100 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[r11|d]" v11|d v24|d [102, 197[112 ShouldHaveRegister 124 ShouldHaveRegister 174 MustHaveRegister  "OneSpillStore"
  v12|d DWORD "[r8|d]" v12|d v23|d [102, 191[[208, 217[[250, 271[188 MustHaveRegister 190 ShouldHaveRegister 216 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[rbx|d]" v13|d -1 [174, 186[174 MustHaveRegister 176 MustHaveRegister 186 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[rax|d]" v14|d -1 [176, 180[176 MustHaveRegister 180 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[rax|q]" v15|q v14|d [180, 182[180 MustHaveRegister 182 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[r9|q]" v16|q -1 [178, 181[178 MustHaveRegister 180 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[rax|q]" v17|q -1 [182, 194[182 MustHaveRegister 184 MustHaveRegister 194 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[r9|q]" v18|q -1 [184, 196[184 MustHaveRegister 196 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rbx|q]" v19|q v13|d [186, 192[186 MustHaveRegister 192 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[rcx|d]" v20|d v12|d [188, 190[188 MustHaveRegister 190 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[rcx|d]" v21|d v20|d [190, 197[190 MustHaveRegister  "OneSpillStore"
  v22|d DWORD "[rax|d]" v22|d rax|d [200, 202[200 MustHaveRegister 202 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[rax|d]" v23|d v22|d [202, 207[202 MustHaveRegister 206 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[r11|d]" v24|d v11|d [204, 207[204 MustHaveRegister 206 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[r8|d]" v25|d v12|d [228, 246[246 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[vstack:1|q]" v0|q v0|q [87, 93[ "StoreAtDefinition"
  v27|d DWORD "[vstack:0|d]" v1|d v1|d [28, 93[ "StoreAtDefinition"
  v28|d DWORD "[vstack:0|d]" v1|d v1|d [93, 102[ "StoreAtDefinition"
  v29|q QWORD "[vstack:1|q]" v0|q v0|q [93, 102[ "StoreAtDefinition"
  v30|d DWORD "[r10|d]" v1|d v1|d [102, 126[112 MustHaveRegister 124 MustHaveRegister  "StoreAtDefinition"
  v31|q QWORD "[rsi|q]" v0|q v0|q [102, 191[174 MustHaveRegister  "StoreAtDefinition"
  v32|d DWORD "[vstack:0|d]" v1|d v1|d [126, 197[ "StoreAtDefinition"
  v33|d DWORD "[vstack:5|d]" v11|d v11|d [197, 204[204 ShouldHaveRegister  "OneSpillStore"
  v34|q QWORD "[vstack:1|q]" v0|q v0|q [191, 197[ "StoreAtDefinition"
  v35|d DWORD "[vstack:0|d]" v1|d v1|d [197, 208[207 LiveAtLoopEnd  "StoreAtDefinition"
  v36|d DWORD "[vstack:4|d]" v21|d v21|d [197, 202[202 ShouldHaveRegister  "OneSpillStore"
  v37|q QWORD "[vstack:1|q]" v0|q v0|q [197, 208[207 LiveAtLoopEnd  "StoreAtDefinition"
  v38|d DWORD "[r11|d]" v11|d v11|d [250, 271[ "OneSpillStore"
  v39|q QWORD "[rsi|q]" v0|q v0|q [250, 271[ "StoreAtDefinition"
  v40|d DWORD "[r10|d]" v1|d v1|d [250, 271[ "StoreAtDefinition"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@150bbbf0 slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v1|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.32829322047634435 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604225416349206359
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   78  <|@ instruction v5|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   80  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   82  <|@ instruction v6|QWORD = MOV input: [v4|QWORD + 480] size: QWORD <|@ <|@
      nr   84  <|@ instruction v7|QWORD = MOV input: [v6|QWORD + 64] size: QWORD <|@ <|@
      nr   86  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   88  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction rbx|QWORD = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction rax|QWORD = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = STACKMOVE (input: v26|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = STACKMOVE (input: v27|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - v0|QWORD[.] v1|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   96  <|@ instruction v9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction v10|DWORD = LEA address: [v9|DWORD + 31] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: v10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE input: v28|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608868344202672518
    begin_IR
      LIR
      nr  102  <|@ instruction [v11|DWORD, v12|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v11|DWORD) trueDestinationProbability: 0.51125516299068 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604504072801397685
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604504072801397685
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: v30|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction v13|DWORD[_] = MOV input: [v0|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  176  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v12|DWORD v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction v14|DWORD = MOV input: [v13|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr  178  <|@ instruction v16|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  180  <|@ instruction v15|QWORD = UNCOMPRESSPOINTER (input: v14|DWORD, ~baseRegister: v16|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  182  <|@ instruction v17|QWORD = MOV input: [v15|QWORD + 480] size: QWORD <|@ <|@
      nr  184  <|@ instruction v18|QWORD = MOV input: [v17|QWORD + 64] size: QWORD <|@ <|@
      nr  186  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 0 shift: 3 <|@ <|@
      nr  188  <|@ instruction v20|DWORD = SHL x: v12|DWORD y: 5 size: DWORD <|@ <|@
      nr  190  <|@ instruction v21|DWORD = SUB (x: v20|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  192  <|@ instruction rsi|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction rbx|QWORD = MOVE input: v17|QWORD moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction rax|QWORD = MOVE input: v18|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = STACKMOVE (input: v32|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = STACKMOVE (input: v34|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE input: v11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE input: v21|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  198  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: v21|DWORD 
locals: - - v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr  200  <|@ instruction v22|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  202  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction v24|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: v23|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE input: v35|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = MOVE input: v37|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  206  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604225416349206359
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599585624819528018
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  226  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  228  <|@ instruction [v25|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction rax|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr  268  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v12|DWORD v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@150bbbf0 slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v1|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: r10|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.32829322047634435 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604225416349206359
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   78  <|@ instruction v5|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   80  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   82  <|@ instruction v6|QWORD = MOV input: [v4|QWORD + 480] size: QWORD <|@ <|@
      nr   84  <|@ instruction v7|QWORD = MOV input: [v6|QWORD + 64] size: QWORD <|@ <|@
      nr   86  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   88  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction rbx|QWORD = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction rax|QWORD = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - v0|QWORD[.] v1|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   96  <|@ instruction v9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction v10|DWORD = LEA address: [v9|DWORD + 31] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: v10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE input: v28|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608868344202672518
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v11|DWORD) trueDestinationProbability: 0.51125516299068 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604504072801397685
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604504072801397685
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction v13|DWORD[_] = MOV input: [v0|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  176  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v12|DWORD v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction v14|DWORD = MOV input: [v13|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr  178  <|@ instruction v16|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  180  <|@ instruction v15|QWORD = UNCOMPRESSPOINTER (input: v14|DWORD, ~baseRegister: v16|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  182  <|@ instruction v17|QWORD = MOV input: [v15|QWORD + 480] size: QWORD <|@ <|@
      nr  184  <|@ instruction v18|QWORD = MOV input: [v17|QWORD + 64] size: QWORD <|@ <|@
      nr  186  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 0 shift: 3 <|@ <|@
      nr  188  <|@ instruction v20|DWORD = SHL x: v12|DWORD y: 5 size: DWORD <|@ <|@
      nr  190  <|@ instruction v21|DWORD = SUB (x: v20|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  192  <|@ instruction rsi|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction rbx|QWORD = MOVE input: v17|QWORD moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction rax|QWORD = MOVE input: v18|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE input: v11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE input: v21|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  198  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: v21|DWORD 
locals: - - v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr  200  <|@ instruction v22|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  202  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction v24|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: v23|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE input: v35|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = MOVE input: v37|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  206  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604225416349206359
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599585624819528018
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  226  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction rax|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr  268  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v12|DWORD v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@150bbbf0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: r10|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.32829322047634435 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604225416349206359
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   78  <|@ instruction r11|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   80  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   82  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 480] size: QWORD <|@ <|@
      nr   84  <|@ instruction r11|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr   86  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - vstack:1|QWORD[.] vstack:0|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   98  <|@ instruction rsi|DWORD = LEA address: [rax|DWORD + 31] size: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: rsi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608868344202672518
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.51125516299068 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604504072801397685
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604504072801397685
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  176  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r8|DWORD rsi|QWORD[.] vstack:0|DWORD r11|DWORD - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr  178  <|@ instruction r9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  180  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  182  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 480] size: QWORD <|@ <|@
      nr  184  <|@ instruction r9|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  186  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 0 shift: 3 <|@ <|@
      nr  188  <|@ instruction rcx|DWORD = SHL x: r8|DWORD y: 5 size: DWORD <|@ <|@
      nr  190  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  192  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction rax|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  198  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: vstack:4|DWORD 
locals: - - vstack:1|QWORD[.] vstack:0|DWORD vstack:5|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr  202  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: vstack:4|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction r11|DWORD = INC value: vstack:5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  206  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604225416349206359
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599585624819528018
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  226  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr  268  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r8|DWORD rsi|QWORD[.] r10|DWORD r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@150bbbf0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: r10|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.32829322047634435 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604225416349206359
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   78  <|@ instruction r11|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   80  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   82  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 480] size: QWORD <|@ <|@
      nr   84  <|@ instruction r11|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr   86  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - vstack:1|QWORD[.] vstack:0|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   98  <|@ instruction rsi|DWORD = LEA address: [rax|DWORD + 31] size: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: rsi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608868344202672518
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.51125516299068 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604504072801397685
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604504072801397685
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  176  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r8|DWORD rsi|QWORD[.] vstack:0|DWORD r11|DWORD - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr  178  <|@ instruction r9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  180  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  182  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 480] size: QWORD <|@ <|@
      nr  184  <|@ instruction r9|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  186  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 0 shift: 3 <|@ <|@
      nr  188  <|@ instruction rcx|DWORD = SHL x: r8|DWORD y: 5 size: DWORD <|@ <|@
      nr  190  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  192  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction rax|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  198  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: vstack:4|DWORD 
locals: - - vstack:1|QWORD[.] vstack:0|DWORD vstack:5|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr  202  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: vstack:4|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction r11|DWORD = INC value: vstack:5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  206  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604225416349206359
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599585624819528018
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  226  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr  268  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r8|DWORD rsi|QWORD[.] r10|DWORD r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@150bbbf0 slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction vstack:1|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction vstack:0|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.32829322047634435 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604225416349206359
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   92  <|@ instruction r11|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   94  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   96  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 480] size: QWORD <|@ <|@
      nr   98  <|@ instruction r11|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  100  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 0 shift: 3 <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  108  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - vstack:1|QWORD[.] vstack:0|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr  110  <|@ instruction rsi|DWORD = LEA address: [rax|DWORD + 31] size: DWORD <|@ <|@
      nr  112  <|@ instruction r8|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  116  <|@ instruction r10|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608868344202672518
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.51125516299068 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604504072801397685
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604504072801397685
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  196  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r8|DWORD rsi|QWORD[.] vstack:0|DWORD r11|DWORD - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr  198  <|@ instruction r9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  200  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  202  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 480] size: QWORD <|@ <|@
      nr  204  <|@ instruction r9|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  206  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 0 shift: 3 <|@ <|@
      nr  208  <|@ instruction rcx|DWORD = SHL x: r8|DWORD y: 5 size: DWORD <|@ <|@
      nr  210  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  212  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction rax|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction vstack:5|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction vstack:4|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: vstack:4|DWORD 
locals: - - vstack:1|QWORD[.] vstack:0|DWORD vstack:5|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr  224  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: vstack:4|DWORD) size: DWORD <|@ <|@
      nr  226  <|@ instruction r11|DWORD = INC value: vstack:5|DWORD size: DWORD <|@ <|@
      nr  228  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction r10|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604225416349206359
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599585624819528018
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   40  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  266  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr  286  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r8|DWORD rsi|QWORD[.] r10|DWORD r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|d DWORD "[vstack:0|d]" vstack:0|d -1 [26, 235[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[vstack:1|q]" vstack:1|q -1 [22, 235[ "NOT_SUPPORTED"
  vstack:4|d DWORD "[vstack:4|d]" vstack:4|d -1 [220, 224[ "NOT_SUPPORTED"
  vstack:5|d DWORD "[vstack:5|d]" vstack:5|d -1 [218, 226[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|d DWORD "[stack:28|d]" vstack:0|d -1 [26, 235[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[stack:48|q]" vstack:1|q -1 [22, 235[ "NOT_SUPPORTED"
  vstack:4|d DWORD "[stack:36|d]" vstack:4|d -1 [220, 224[ "NOT_SUPPORTED"
  vstack:5|d DWORD "[stack:32|d]" vstack:5|d -1 [218, 226[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@150bbbf0 slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.32829322047634435 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604225416349206359
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   92  <|@ instruction r11|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   94  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   96  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 480] size: QWORD <|@ <|@
      nr   98  <|@ instruction r11|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  100  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 0 shift: 3 <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  108  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - stack:48|QWORD[.] stack:28|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr  110  <|@ instruction rsi|DWORD = LEA address: [rax|DWORD + 31] size: DWORD <|@ <|@
      nr  112  <|@ instruction r8|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  116  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608868344202672518
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.51125516299068 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604504072801397685
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604504072801397685
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  196  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r8|DWORD rsi|QWORD[.] stack:28|DWORD r11|DWORD - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr  198  <|@ instruction r9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  200  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  202  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 480] size: QWORD <|@ <|@
      nr  204  <|@ instruction r9|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  206  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 0 shift: 3 <|@ <|@
      nr  208  <|@ instruction rcx|DWORD = SHL x: r8|DWORD y: 5 size: DWORD <|@ <|@
      nr  210  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  212  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction rax|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction stack:36|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: stack:36|DWORD 
locals: - - stack:48|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr  224  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: stack:36|DWORD) size: DWORD <|@ <|@
      nr  226  <|@ instruction r11|DWORD = INC value: stack:32|DWORD size: DWORD <|@ <|@
      nr  228  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604225416349206359
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599585624819528018
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   40  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  266  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr  286  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r8|DWORD rsi|QWORD[.] r10|DWORD r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@150bbbf0 slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.32829322047634435 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604225416349206359
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   92  <|@ instruction r11|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   94  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   96  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 480] size: QWORD <|@ <|@
      nr   98  <|@ instruction r11|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  100  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 0 shift: 3 <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  108  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - stack:48|QWORD[.] stack:28|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr  110  <|@ instruction rsi|DWORD = LEA address: [rax|DWORD + 31] size: DWORD <|@ <|@
      nr  112  <|@ instruction r8|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  116  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608868344202672518
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.51125516299068 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604504072801397685
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604504072801397685
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  196  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r8|DWORD rsi|QWORD[.] stack:28|DWORD r11|DWORD - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr  198  <|@ instruction r9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  200  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  202  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 480] size: QWORD <|@ <|@
      nr  204  <|@ instruction r9|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  206  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 0 shift: 3 <|@ <|@
      nr  208  <|@ instruction rcx|DWORD = SHL x: r8|DWORD y: 5 size: DWORD <|@ <|@
      nr  210  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  212  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction rax|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction stack:36|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: stack:36|DWORD 
locals: - - stack:48|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr  224  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: stack:36|DWORD) size: DWORD <|@ <|@
      nr  226  <|@ instruction r11|DWORD = INC value: stack:32|DWORD size: DWORD <|@ <|@
      nr  228  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604225416349206359
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599585624819528018
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   40  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  266  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr  286  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r8|DWORD rsi|QWORD[.] r10|DWORD r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@150bbbf0 slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.32829322047634435 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604225416349206359
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   92  <|@ instruction r11|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   94  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   96  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 480] size: QWORD <|@ <|@
      nr   98  <|@ instruction r11|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  100  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 0 shift: 3 <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  108  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - stack:48|QWORD[.] stack:28|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr  110  <|@ instruction rsi|DWORD = LEA address: [rax|DWORD + 31] size: DWORD <|@ <|@
      nr  112  <|@ instruction r8|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608868344202672518
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  116  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.51125516299068 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604504072801397685
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604504072801397685
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  196  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r8|DWORD rsi|QWORD[.] stack:28|DWORD r11|DWORD - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr  198  <|@ instruction r9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  200  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  202  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 480] size: QWORD <|@ <|@
      nr  204  <|@ instruction r9|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  206  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 0 shift: 3 <|@ <|@
      nr  208  <|@ instruction rcx|DWORD = SHL x: r8|DWORD y: 5 size: DWORD <|@ <|@
      nr  210  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  212  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction rax|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction stack:36|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: stack:36|DWORD 
locals: - - stack:48|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr  224  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: stack:36|DWORD) size: DWORD <|@ <|@
      nr  226  <|@ instruction r11|DWORD = INC value: stack:32|DWORD size: DWORD <|@ <|@
      nr  228  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604225416349206359
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599585624819528018
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   40  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  266  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr  286  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r8|DWORD rsi|QWORD[.] r10|DWORD r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@150bbbf0 slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.32829322047634435 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604225416349206359
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   92  <|@ instruction r11|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   94  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   96  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 480] size: QWORD <|@ <|@
      nr   98  <|@ instruction r11|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  100  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 0 shift: 3 <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  108  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - stack:48|QWORD[.] stack:28|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr  110  <|@ instruction rsi|DWORD = LEA address: [rax|DWORD + 31] size: DWORD <|@ <|@
      nr  112  <|@ instruction r8|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608868344202672518
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  116  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.51125516299068 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604504072801397685
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604504072801397685
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  196  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r8|DWORD rsi|QWORD[.] stack:28|DWORD r11|DWORD - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr  198  <|@ instruction r9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  200  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  202  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 480] size: QWORD <|@ <|@
      nr  204  <|@ instruction r9|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  206  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 0 shift: 3 <|@ <|@
      nr  208  <|@ instruction rcx|DWORD = SHL x: r8|DWORD y: 5 size: DWORD <|@ <|@
      nr  210  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  212  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction rax|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction stack:36|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: stack:36|DWORD 
locals: - - stack:48|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr  224  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: stack:36|DWORD) size: DWORD <|@ <|@
      nr  226  <|@ instruction r11|DWORD = INC value: stack:32|DWORD size: DWORD <|@ <|@
      nr  228  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604225416349206359
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599585624819528018
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   40  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  266  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr  286  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r8|DWORD rsi|QWORD[.] r10|DWORD r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@150bbbf0 slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.32829322047634435 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604225416349206359
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   92  <|@ instruction r11|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   94  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   96  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 480] size: QWORD <|@ <|@
      nr   98  <|@ instruction r11|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  100  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 0 shift: 3 <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  108  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - stack:48|QWORD[.] stack:28|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr  110  <|@ instruction rsi|DWORD = LEA address: [rax|DWORD + 31] size: DWORD <|@ <|@
      nr  112  <|@ instruction r8|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608868344202672518
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  116  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.51125516299068 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604504072801397685
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604504072801397685
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  196  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r8|DWORD rsi|QWORD[.] stack:28|DWORD r11|DWORD - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr  198  <|@ instruction r9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  200  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  202  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 480] size: QWORD <|@ <|@
      nr  204  <|@ instruction r9|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  206  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 0 shift: 3 <|@ <|@
      nr  208  <|@ instruction rcx|DWORD = SHL x: r8|DWORD y: 5 size: DWORD <|@ <|@
      nr  210  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  212  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction rax|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction stack:36|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: stack:36|DWORD 
locals: - - stack:48|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr  224  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: stack:36|DWORD) size: DWORD <|@ <|@
      nr  226  <|@ instruction r11|DWORD = INC value: stack:32|DWORD size: DWORD <|@ <|@
      nr  228  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604225416349206359
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599585624819528018
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   40  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  266  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr  286  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r8|DWORD rsi|QWORD[.] r10|DWORD r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@150bbbf0 slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.32829322047634435 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604225416349206359
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   92  <|@ instruction r11|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   94  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   96  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 480] size: QWORD <|@ <|@
      nr   98  <|@ instruction r11|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  100  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 0 shift: 3 <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  108  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - stack:48|QWORD[.] stack:28|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr  110  <|@ instruction rsi|DWORD = LEA address: [rax|DWORD + 31] size: DWORD <|@ <|@
      nr  112  <|@ instruction r8|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608868344202672518
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  116  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.51125516299068 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604504072801397685
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604504072801397685
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  196  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r8|DWORD rsi|QWORD[.] stack:28|DWORD r11|DWORD - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr  198  <|@ instruction r9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  200  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  202  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 480] size: QWORD <|@ <|@
      nr  204  <|@ instruction r9|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  206  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 0 shift: 3 <|@ <|@
      nr  208  <|@ instruction rcx|DWORD = SHL x: r8|DWORD y: 5 size: DWORD <|@ <|@
      nr  210  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  212  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction rax|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction stack:36|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: stack:36|DWORD 
locals: - - stack:48|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr  224  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: stack:36|DWORD) size: DWORD <|@ <|@
      nr  226  <|@ instruction r11|DWORD = INC value: stack:32|DWORD size: DWORD <|@ <|@
      nr  228  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604225416349206359
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599585624819528018
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   40  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  266  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr  286  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r8|DWORD rsi|QWORD[.] r10|DWORD r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@150bbbf0 slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.32829322047634435 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604225416349206359
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   92  <|@ instruction r11|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   94  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   96  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 480] size: QWORD <|@ <|@
      nr   98  <|@ instruction r11|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  100  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 0 shift: 3 <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  108  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - stack:48|QWORD[.] stack:28|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr  110  <|@ instruction rsi|DWORD = LEA address: [rax|DWORD + 31] size: DWORD <|@ <|@
      nr  112  <|@ instruction r8|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604504072801397685
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604504072801397685
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  196  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r8|DWORD rsi|QWORD[.] stack:28|DWORD r11|DWORD - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr  198  <|@ instruction r9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  200  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  202  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 480] size: QWORD <|@ <|@
      nr  204  <|@ instruction r9|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  206  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 0 shift: 3 <|@ <|@
      nr  208  <|@ instruction rcx|DWORD = SHL x: r8|DWORD y: 5 size: DWORD <|@ <|@
      nr  210  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  212  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction rax|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction stack:36|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: stack:36|DWORD 
locals: - - stack:48|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr  224  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: stack:36|DWORD) size: DWORD <|@ <|@
      nr  226  <|@ instruction r11|DWORD = INC value: stack:32|DWORD size: DWORD <|@ <|@
      nr  228  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608868344202672518
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  116  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.51125516299068 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604225416349206359
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  266  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599585624819528018
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   40  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr  286  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r8|DWORD rsi|QWORD[.] r10|DWORD r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@150bbbf0 slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.32829322047634435 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604225416349206359
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   92  <|@ instruction r11|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   94  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   96  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 480] size: QWORD <|@ <|@
      nr   98  <|@ instruction r11|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  100  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 0 shift: 3 <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  108  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - stack:48|QWORD[.] stack:28|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr  110  <|@ instruction rsi|DWORD = LEA address: [rax|DWORD + 31] size: DWORD <|@ <|@
      nr  112  <|@ instruction r8|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604504072801397685
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604504072801397685
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  196  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r8|DWORD rsi|QWORD[.] stack:28|DWORD r11|DWORD - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr  198  <|@ instruction r9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  200  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  202  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 480] size: QWORD <|@ <|@
      nr  204  <|@ instruction r9|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  206  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 0 shift: 3 <|@ <|@
      nr  208  <|@ instruction rcx|DWORD = SHL x: r8|DWORD y: 5 size: DWORD <|@ <|@
      nr  210  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  212  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction rax|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction stack:36|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: stack:36|DWORD 
locals: - - stack:48|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr  224  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: stack:36|DWORD) size: DWORD <|@ <|@
      nr  226  <|@ instruction r11|DWORD = INC value: stack:32|DWORD size: DWORD <|@ <|@
      nr  228  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608868344202672518
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  116  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.51125516299068 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604225416349206359
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  266  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599585624819528018
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   40  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr  286  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r8|DWORD rsi|QWORD[.] r10|DWORD r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@150bbbf0 slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.32829322047634435 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604225416349206359
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   92  <|@ instruction r11|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   94  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   96  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 480] size: QWORD <|@ <|@
      nr   98  <|@ instruction r11|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  100  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 0 shift: 3 <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  108  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - stack:48|QWORD[.] stack:28|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr  110  <|@ instruction rsi|DWORD = LEA address: [rax|DWORD + 31] size: DWORD <|@ <|@
      nr  112  <|@ instruction r8|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604504072801397685
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604504072801397685
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  196  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r8|DWORD rsi|QWORD[.] stack:28|DWORD r11|DWORD - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr  198  <|@ instruction r9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  200  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  202  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 480] size: QWORD <|@ <|@
      nr  204  <|@ instruction r9|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  206  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 0 shift: 3 <|@ <|@
      nr  208  <|@ instruction rcx|DWORD = SHL x: r8|DWORD y: 5 size: DWORD <|@ <|@
      nr  210  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  212  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction rax|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction stack:36|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: stack:36|DWORD 
locals: - - stack:48|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr  224  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: stack:36|DWORD) size: DWORD <|@ <|@
      nr  226  <|@ instruction r11|DWORD = INC value: stack:32|DWORD size: DWORD <|@ <|@
      nr  228  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608868344202672518
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  116  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.51125516299068 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604225416349206359
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  266  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599585624819528018
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   40  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr  286  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r8|DWORD rsi|QWORD[.] r10|DWORD r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@150bbbf0 slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ st <@st|@reference-map: [rsi:0, stack:0]
live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.32829322047634435 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604225416349206359
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   90  <|@ st <@st|@reference-map: [rbx:0, rsi:0, stack:0]
live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   92  <|@ instruction r11|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   94  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   96  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 480] size: QWORD <|@ <|@
      nr   98  <|@ instruction r11|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  100  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 0 shift: 3 <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  108  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - stack:48|QWORD[.] stack:28|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr  110  <|@ instruction rsi|DWORD = LEA address: [rax|DWORD + 31] size: DWORD <|@ <|@
      nr  112  <|@ instruction r8|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604504072801397685
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604504072801397685
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  196  <|@ st <@st|@reference-map: [rbx:0, rsi:0, stack:0]
live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r8|DWORD rsi|QWORD[.] stack:28|DWORD r11|DWORD - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr  198  <|@ instruction r9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  200  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  202  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 480] size: QWORD <|@ <|@
      nr  204  <|@ instruction r9|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  206  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 0 shift: 3 <|@ <|@
      nr  208  <|@ instruction rcx|DWORD = SHL x: r8|DWORD y: 5 size: DWORD <|@ <|@
      nr  210  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  212  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction rax|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction stack:36|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: stack:36|DWORD 
locals: - - stack:48|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr  224  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: stack:36|DWORD) size: DWORD <|@ <|@
      nr  226  <|@ instruction r11|DWORD = INC value: stack:32|DWORD size: DWORD <|@ <|@
      nr  228  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608868344202672518
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  116  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.51125516299068 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604225416349206359
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  266  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599585624819528018
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   40  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr  286  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  288  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r8|DWORD rsi|QWORD[.] r10|DWORD r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@150bbbf0 slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ st <@st|@reference-map: [rsi:0, stack:0]
live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.32829322047634435 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604225416349206359
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   90  <|@ st <@st|@reference-map: [rbx:0, rsi:0, stack:0]
live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   92  <|@ instruction r11|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   94  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   96  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 480] size: QWORD <|@ <|@
      nr   98  <|@ instruction r11|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  100  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 0 shift: 3 <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  108  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - stack:48|QWORD[.] stack:28|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr  110  <|@ instruction rsi|DWORD = LEA address: [rax|DWORD + 31] size: DWORD <|@ <|@
      nr  112  <|@ instruction r8|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604504072801397685
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604504072801397685
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  196  <|@ st <@st|@reference-map: [rbx:0, rsi:0, stack:0]
live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r8|DWORD rsi|QWORD[.] stack:28|DWORD r11|DWORD - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr  198  <|@ instruction r9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  200  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  202  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 480] size: QWORD <|@ <|@
      nr  204  <|@ instruction r9|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  206  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 0 shift: 3 <|@ <|@
      nr  208  <|@ instruction rcx|DWORD = SHL x: r8|DWORD y: 5 size: DWORD <|@ <|@
      nr  210  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  212  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction rax|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction stack:36|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: stack:36|DWORD 
locals: - - stack:48|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr  224  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: stack:36|DWORD) size: DWORD <|@ <|@
      nr  226  <|@ instruction r11|DWORD = INC value: stack:32|DWORD size: DWORD <|@ <|@
      nr  228  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608868344202672518
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  116  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.51125516299068 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604225416349206359
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  266  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599585624819528018
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   40  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr  286  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  288  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r8|DWORD rsi|QWORD[.] r10|DWORD r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 89842400c0feff4883ec289041817f20000000000f8577010000909090909090909048896c242048893424448b560c44895424144585d20f841f010000909090909090909090909090909090909090909090908b5e108b04dd0800000049bb0000002b787f0000498d0403488b80e00100004c8b584048c1e303488bf3488bd8498bc3ffd00f1f8400000000008d701f448bc641bb01000000e983000000669090909090453bd30f86ba0000009090909090909090909090909090909090909090909090428b5c9e108b04dd0800000049b90000002b787f0000498d0401488b80e00100004c8b484048c1e303418bc8c1e105412bc8488bf3488bd8498bc144895c2410894c240cffd00f1f8400000000000344240c448b5c241041ffc3448bc0448b542414488b342490909090453bd30f8f69ffffff9090909090909090909090418bc0488b6c24204883c428493ba7500400000f8746000000c390909041b801000000ebd39090909090909041c78784040000e59effff49c7879004000000000000e8000000000f1f84000000000048896c2420e800000000e97afefffff4488d0da6ffffff49898f68040000e94cfefffff441c78784040000f5bcffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5aaffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f595ffff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 12 FRAME_COMPLETE  <||@
  Comment 12 ENTRY_BARRIER_PATCH  <||@
  Comment 26 block B0 null  <||@
  Comment 26 0 [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 26 2 NOP  <||@
  Comment 27 4 NOP  <||@
  Comment 28 6 NOP  <||@
  Comment 29 8 NOP  <||@
  Comment 30 10 NOP  <||@
  Comment 31 12 NOP  <||@
  Comment 32 14 NOP  <||@
  Comment 33 16 NOP  <||@
  Comment 34 18 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 39 20 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@150bbbf0 slotKind: QWORD  <||@
  Comment 39 22 stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 43 24 r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 43 [rsi:0, stack:0]at java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 43 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 47 26 stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 52 28 TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.32829322047634435 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 61 block B2 null  <||@
  Comment 61 42 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 61 44 NOP  <||@
  Comment 62 46 NOP  <||@
  Comment 63 48 NOP  <||@
  Comment 64 50 NOP  <||@
  Comment 65 52 NOP  <||@
  Comment 66 54 NOP  <||@
  Comment 67 56 NOP  <||@
  Comment 68 58 NOP  <||@
  Comment 69 60 NOP  <||@
  Comment 70 62 NOP  <||@
  Comment 71 64 NOP  <||@
  Comment 72 66 NOP  <||@
  Comment 73 68 NOP  <||@
  Comment 74 70 NOP  <||@
  Comment 75 72 NOP  <||@
  Comment 76 74 NOP  <||@
  Comment 77 76 NOP  <||@
  Comment 78 78 NOP  <||@
  Comment 79 80 NOP  <||@
  Comment 80 82 NOP  <||@
  Comment 81 84 NOP  <||@
  Comment 82 86 NOP  <||@
  Comment 83 88 rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 86 90 rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 86 [rbx:0, rsi:0, stack:0]at java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 86 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 93 92 r11|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 103 94 rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 140154094223360 shift: 0  <||@
  Comment 107 96 rax|QWORD = MOV input: [rax|QWORD + 480] size: QWORD  <||@
  Comment 114 98 r11|QWORD = MOV input: [rax|QWORD + 64] size: QWORD  <||@
  Comment 118 100 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 0 shift: 3  <||@
  Comment 122 102 rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 125 104 rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 128 106 rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD  <||@
  Comment 131 108 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43]  <||@
  Comment 131 {HotSpotMethod<Object.hashCode()>}  <||@
  Comment 131 INLINE_INVOKE  <||@
  Comment 133 [stack:0]at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43, duringCall: true, rethrow: false]
              |0             |1  |2                  |3               |4           |5 
     locals:  |-             |-  |stack:48|QWORD[.]  |stack:28|DWORD  |int[0|0x0]  |- 
     stack:   |int[31|0x1f]  |   |                   |                |            |    <||@
  Comment 141 110 rsi|DWORD = LEA address: [rax|DWORD + 31] size: DWORD  <||@
  Comment 144 112 r8|DWORD = MOVE input: rsi|DWORD moveKind: DWORD  <||@
  Comment 147 114 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 153 120 JUMP ~outgoingValues: [] destination: B2 -> B3  <||@
  Comment 158 block B4 loop 0 depth 1 header:11|LoopBegin  <||@
  Comment 158 134 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 160 136 NOP  <||@
  Comment 161 138 NOP  <||@
  Comment 162 140 NOP  <||@
  Comment 163 142 NOP  <||@
  Comment 164 144 CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD  <||@
  Comment 173 block B5 loop 0 depth 1 header:11|LoopBegin  <||@
  Comment 173 146 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 173 148 NOP  <||@
  Comment 174 150 NOP  <||@
  Comment 175 152 NOP  <||@
  Comment 176 154 NOP  <||@
  Comment 177 156 NOP  <||@
  Comment 178 158 NOP  <||@
  Comment 179 160 NOP  <||@
  Comment 180 162 NOP  <||@
  Comment 181 164 NOP  <||@
  Comment 182 166 NOP  <||@
  Comment 183 168 NOP  <||@
  Comment 184 170 NOP  <||@
  Comment 185 172 NOP  <||@
  Comment 186 174 NOP  <||@
  Comment 187 176 NOP  <||@
  Comment 188 178 NOP  <||@
  Comment 189 180 NOP  <||@
  Comment 190 182 NOP  <||@
  Comment 191 184 NOP  <||@
  Comment 192 186 NOP  <||@
  Comment 193 188 NOP  <||@
  Comment 194 190 NOP  <||@
  Comment 195 192 NOP  <||@
  Comment 196 194 rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 201 196 rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:16]  <||@
  Comment 201 [rbx:0, rsi:0, stack:0]at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16, duringCall: false, rethrow: false]
              |0  |1         |2             |3               |4          |5 
     locals:  |-  |r8|DWORD  |rsi|QWORD[.]  |stack:28|DWORD  |r11|DWORD  |-   <||@
  Comment 201 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 208 198 r9|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 218 200 rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 140154094223360 shift: 0  <||@
  Comment 222 202 rax|QWORD = MOV input: [rax|QWORD + 480] size: QWORD  <||@
  Comment 229 204 r9|QWORD = MOV input: [rax|QWORD + 64] size: QWORD  <||@
  Comment 233 206 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 0 shift: 3  <||@
  Comment 237 208 rcx|DWORD = SHL x: r8|DWORD y: 5 size: DWORD  <||@
  Comment 243 210 rcx|DWORD = SUB (x: rcx|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 246 212 rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 249 214 rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 252 216 rax|QWORD = MOVE input: r9|QWORD moveKind: QWORD  <||@
  Comment 255 218 stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 260 220 stack:36|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 264 222 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43]  <||@
  Comment 264 {HotSpotMethod<Object.hashCode()>}  <||@
  Comment 264 INLINE_INVOKE  <||@
  Comment 266 [stack:0]at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43, duringCall: true, rethrow: false]
              |0               |1  |2                  |3               |4               |5 
     locals:  |-               |-  |stack:48|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |- 
     stack:   |stack:36|DWORD  |   |                   |                |                |    <||@
  Comment 274 224 rax|DWORD = ADD (x: rax|DWORD, y: stack:36|DWORD) size: DWORD  <||@
  Comment 278 226 r11|DWORD = INC value: stack:32|DWORD size: DWORD  <||@
  Comment 286 228 r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 289 234 JUMP ~outgoingValues: [] destination: B5 -> B3  <||@
  Comment 289 block B3 loop 0 depth 1 header:11|LoopBegin  <||@
  Comment 289 122 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 289 116 r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 294 118 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 298 124 NOP  <||@
  Comment 299 126 NOP  <||@
  Comment 300 128 NOP  <||@
  Comment 301 130 NOP  <||@
  Comment 302 132 CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.51125516299068 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD  <||@
  Comment 311 block B6 null  <||@
  Comment 311 236 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 311 238 NOP  <||@
  Comment 312 240 NOP  <||@
  Comment 313 242 NOP  <||@
  Comment 314 244 JUMP ~outgoingValues: [] destination: B6 -> B7  <||@
  Comment 314 block B7 null  <||@
  Comment 314 246 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 314 248 NOP  <||@
  Comment 315 250 NOP  <||@
  Comment 316 252 NOP  <||@
  Comment 317 254 NOP  <||@
  Comment 318 256 NOP  <||@
  Comment 319 258 NOP  <||@
  Comment 320 260 NOP  <||@
  Comment 321 262 NOP  <||@
  Comment 322 264 rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 325 266 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 334 POLL_RETURN_FAR  <||@
  Comment 348 block B1 null  <||@
  Comment 348 30 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 348 32 NOP  <||@
  Comment 349 34 NOP  <||@
  Comment 350 36 NOP  <||@
  Comment 351 38 r8|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 357 40 JUMP ~outgoingValues: [] destination: B1 -> B7  <||@
  Comment 359 block B8 null  <||@
  Comment 359 268 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 359 270 NOP  <||@
  Comment 360 272 NOP  <||@
  Comment 361 274 NOP  <||@
  Comment 362 276 NOP  <||@
  Comment 363 278 NOP  <||@
  Comment 364 280 NOP  <||@
  Comment 365 282 NOP  <||@
  Comment 366 284 MOV x: [r15|QWORD + 1156] y: -24859 size: DWORD  <||@
  Comment 377 286 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 388 288 DEOPT info [bci:16]  <||@
  Comment 388 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 393 [rsi:0]at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16, duringCall: false, rethrow: false]
              |0  |1         |2             |3          |4          |5 
     locals:  |-  |r8|DWORD  |rsi|QWORD[.]  |r10|DWORD  |r11|DWORD  |-   <||@
  Comment 406 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 431 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 459 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 464 [rsi:0, stack:0]at java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 494 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 499 [rbx:0, rsi:0, stack:0]at java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 529 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 534 [rbx:0, rsi:0, stack:0]at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16, duringCall: false, rethrow: false]
              |0  |1         |2             |3               |4          |5 
     locals:  |-  |r8|DWORD  |rsi|QWORD[.]  |stack:28|DWORD  |r11|DWORD  |-   <||@
  Comment 542 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 542 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 548 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 548 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-7973[java.util.Arrays.hashCode(Object[])]"
  method "HotSpotCompilation-7973[java.util.Arrays.hashCode(Object[])]"
  date 1724269703864
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789aa0b680 89842400c0feff4883ec289041817f20030000000f8577010000909090909090909048896c242048893424448b560c44895424144585d20f841f010000909090909090909090909090909090909090909090908b5e108b04dd0800000049bb0000002b787f0000498d0403488b80e00100004c8b584048c1e303488bf3488bd8498bc3ffd00f1f8400000000008d701f448bc641bb01000000e983000000669090909090453bd30f86ba0000009090909090909090909090909090909090909090909090428b5c9e108b04dd0800000049b90000002b787f0000498d0401488b80e00100004c8b484048c1e303418bc8c1e105412bc8488bf3488bd8498bc144895c2410894c240cffd00f1f8400000000000344240c448b5c241041ffc3448bc0448b542414488b342490909090453bd30f8f69ffffff9090909090909090909090418bc0488b6c24204883c428493ba7500400000f8746000000c390909041b801000000ebd39090909090909041c78784040000e59effff49c7879004000000000000e871f9d7fe0f1f84000000000048896c2420e805fad5fee97afefffff4488d0da6ffffff49898f68040000e9cc07d8fef441c78784040000f5bcffff49c7879004000000000000e82af9d7fe0f1f84000000000041c78784040000f5aaffff49c7879004000000000000e807f9d7fe0f1f84000000000041c78784040000f595ffff49c7879004000000000000e8e4f8d7fe0f1f840000000000e85d9aebfef4e877f6d7fef4f4f4f4f4f4f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 12 FRAME_COMPLETE  <||@
  Comment 12 ENTRY_BARRIER_PATCH  <||@
  Comment 26 block B0 null  <||@
  Comment 26 0 [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 26 2 NOP  <||@
  Comment 27 4 NOP  <||@
  Comment 28 6 NOP  <||@
  Comment 29 8 NOP  <||@
  Comment 30 10 NOP  <||@
  Comment 31 12 NOP  <||@
  Comment 32 14 NOP  <||@
  Comment 33 16 NOP  <||@
  Comment 34 18 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 39 20 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@150bbbf0 slotKind: QWORD  <||@
  Comment 39 22 stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 43 24 r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 43 [rsi:0, stack:0]at java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 43 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 47 26 stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 52 28 TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.32829322047634435 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 61 block B2 null  <||@
  Comment 61 42 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 61 44 NOP  <||@
  Comment 62 46 NOP  <||@
  Comment 63 48 NOP  <||@
  Comment 64 50 NOP  <||@
  Comment 65 52 NOP  <||@
  Comment 66 54 NOP  <||@
  Comment 67 56 NOP  <||@
  Comment 68 58 NOP  <||@
  Comment 69 60 NOP  <||@
  Comment 70 62 NOP  <||@
  Comment 71 64 NOP  <||@
  Comment 72 66 NOP  <||@
  Comment 73 68 NOP  <||@
  Comment 74 70 NOP  <||@
  Comment 75 72 NOP  <||@
  Comment 76 74 NOP  <||@
  Comment 77 76 NOP  <||@
  Comment 78 78 NOP  <||@
  Comment 79 80 NOP  <||@
  Comment 80 82 NOP  <||@
  Comment 81 84 NOP  <||@
  Comment 82 86 NOP  <||@
  Comment 83 88 rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 86 90 rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 86 [rbx:0, rsi:0, stack:0]at java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 86 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 93 92 r11|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 103 94 rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 140154094223360 shift: 0  <||@
  Comment 107 96 rax|QWORD = MOV input: [rax|QWORD + 480] size: QWORD  <||@
  Comment 114 98 r11|QWORD = MOV input: [rax|QWORD + 64] size: QWORD  <||@
  Comment 118 100 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 0 shift: 3  <||@
  Comment 122 102 rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 125 104 rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 128 106 rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD  <||@
  Comment 131 108 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43]  <||@
  Comment 131 {HotSpotMethod<Object.hashCode()>}  <||@
  Comment 131 INLINE_INVOKE  <||@
  Comment 133 [stack:0]at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43, duringCall: true, rethrow: false]
              |0             |1  |2                  |3               |4           |5 
     locals:  |-             |-  |stack:48|QWORD[.]  |stack:28|DWORD  |int[0|0x0]  |- 
     stack:   |int[31|0x1f]  |   |                   |                |            |    <||@
  Comment 141 110 rsi|DWORD = LEA address: [rax|DWORD + 31] size: DWORD  <||@
  Comment 144 112 r8|DWORD = MOVE input: rsi|DWORD moveKind: DWORD  <||@
  Comment 147 114 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 153 120 JUMP ~outgoingValues: [] destination: B2 -> B3  <||@
  Comment 158 block B4 loop 0 depth 1 header:11|LoopBegin  <||@
  Comment 158 134 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 160 136 NOP  <||@
  Comment 161 138 NOP  <||@
  Comment 162 140 NOP  <||@
  Comment 163 142 NOP  <||@
  Comment 164 144 CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD  <||@
  Comment 173 block B5 loop 0 depth 1 header:11|LoopBegin  <||@
  Comment 173 146 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 173 148 NOP  <||@
  Comment 174 150 NOP  <||@
  Comment 175 152 NOP  <||@
  Comment 176 154 NOP  <||@
  Comment 177 156 NOP  <||@
  Comment 178 158 NOP  <||@
  Comment 179 160 NOP  <||@
  Comment 180 162 NOP  <||@
  Comment 181 164 NOP  <||@
  Comment 182 166 NOP  <||@
  Comment 183 168 NOP  <||@
  Comment 184 170 NOP  <||@
  Comment 185 172 NOP  <||@
  Comment 186 174 NOP  <||@
  Comment 187 176 NOP  <||@
  Comment 188 178 NOP  <||@
  Comment 189 180 NOP  <||@
  Comment 190 182 NOP  <||@
  Comment 191 184 NOP  <||@
  Comment 192 186 NOP  <||@
  Comment 193 188 NOP  <||@
  Comment 194 190 NOP  <||@
  Comment 195 192 NOP  <||@
  Comment 196 194 rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 201 196 rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:16]  <||@
  Comment 201 [rbx:0, rsi:0, stack:0]at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16, duringCall: false, rethrow: false]
              |0  |1         |2             |3               |4          |5 
     locals:  |-  |r8|DWORD  |rsi|QWORD[.]  |stack:28|DWORD  |r11|DWORD  |-   <||@
  Comment 201 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 208 198 r9|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 218 200 rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 140154094223360 shift: 0  <||@
  Comment 222 202 rax|QWORD = MOV input: [rax|QWORD + 480] size: QWORD  <||@
  Comment 229 204 r9|QWORD = MOV input: [rax|QWORD + 64] size: QWORD  <||@
  Comment 233 206 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4658743 encoding: base: 0 shift: 3  <||@
  Comment 237 208 rcx|DWORD = SHL x: r8|DWORD y: 5 size: DWORD  <||@
  Comment 243 210 rcx|DWORD = SUB (x: rcx|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 246 212 rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 249 214 rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 252 216 rax|QWORD = MOVE input: r9|QWORD moveKind: QWORD  <||@
  Comment 255 218 stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 260 220 stack:36|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 264 222 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43]  <||@
  Comment 264 {HotSpotMethod<Object.hashCode()>}  <||@
  Comment 264 INLINE_INVOKE  <||@
  Comment 266 [stack:0]at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43, duringCall: true, rethrow: false]
              |0               |1  |2                  |3               |4               |5 
     locals:  |-               |-  |stack:48|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |- 
     stack:   |stack:36|DWORD  |   |                   |                |                |    <||@
  Comment 274 224 rax|DWORD = ADD (x: rax|DWORD, y: stack:36|DWORD) size: DWORD  <||@
  Comment 278 226 r11|DWORD = INC value: stack:32|DWORD size: DWORD  <||@
  Comment 286 228 r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 289 234 JUMP ~outgoingValues: [] destination: B5 -> B3  <||@
  Comment 289 block B3 loop 0 depth 1 header:11|LoopBegin  <||@
  Comment 289 122 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 289 116 r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 294 118 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 298 124 NOP  <||@
  Comment 299 126 NOP  <||@
  Comment 300 128 NOP  <||@
  Comment 301 130 NOP  <||@
  Comment 302 132 CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.51125516299068 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD  <||@
  Comment 311 block B6 null  <||@
  Comment 311 236 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 311 238 NOP  <||@
  Comment 312 240 NOP  <||@
  Comment 313 242 NOP  <||@
  Comment 314 244 JUMP ~outgoingValues: [] destination: B6 -> B7  <||@
  Comment 314 block B7 null  <||@
  Comment 314 246 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 314 248 NOP  <||@
  Comment 315 250 NOP  <||@
  Comment 316 252 NOP  <||@
  Comment 317 254 NOP  <||@
  Comment 318 256 NOP  <||@
  Comment 319 258 NOP  <||@
  Comment 320 260 NOP  <||@
  Comment 321 262 NOP  <||@
  Comment 322 264 rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 325 266 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 334 POLL_RETURN_FAR  <||@
  Comment 348 block B1 null  <||@
  Comment 348 30 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 348 32 NOP  <||@
  Comment 349 34 NOP  <||@
  Comment 350 36 NOP  <||@
  Comment 351 38 r8|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 357 40 JUMP ~outgoingValues: [] destination: B1 -> B7  <||@
  Comment 359 block B8 null  <||@
  Comment 359 268 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 359 270 NOP  <||@
  Comment 360 272 NOP  <||@
  Comment 361 274 NOP  <||@
  Comment 362 276 NOP  <||@
  Comment 363 278 NOP  <||@
  Comment 364 280 NOP  <||@
  Comment 365 282 NOP  <||@
  Comment 366 284 MOV x: [r15|QWORD + 1156] y: -24859 size: DWORD  <||@
  Comment 377 286 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 388 288 DEOPT info [bci:16]  <||@
  Comment 388 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 393 [rsi:0]at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16, duringCall: false, rethrow: false]
              |0  |1         |2             |3          |4          |5 
     locals:  |-  |r8|DWORD  |rsi|QWORD[.]  |r10|DWORD  |r11|DWORD  |-   <||@
  Comment 406 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 431 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 459 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 464 [rsi:0, stack:0]at java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 494 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 499 [rbx:0, rsi:0, stack:0]at java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 529 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 534 [rbx:0, rsi:0, stack:0]at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16, duringCall: false, rethrow: false]
              |0  |1         |2             |3               |4          |5 
     locals:  |-  |r8|DWORD  |rsi|QWORD[.]  |stack:28|DWORD  |r11|DWORD  |-   <||@
  Comment 542 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 542 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 548 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 548 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
