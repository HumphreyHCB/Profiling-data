begin_compilation
  name " HotSpotCompilation-5860[java.util.regex.Pattern$$Lambda/0x800000044.is(int)]"
  method "HotSpotCompilation-5860[java.util.regex.Pattern$$Lambda/0x800000044.is(int)]"
  date 1724269748390
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a362 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a362  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.regex.Pattern$$Lambda/0x800000044
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v393 v394 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a362 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a362 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 1]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v393 
lastLocationAccess: - 
=== Succesors ===
next: v363 
=== Usages ===
v405 v395 v396 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v393 lastLocationAccess: - #next: v363  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?127 ?125 ?296 v31 v33 v50 v52 v69 v71 v88 v90 v107 v109 v199 ?115 ?119 ?121 ?123 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Pattern$$Lambda/0x800000044.is(int)>
localsSize: 2
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v303 v363 v367 v371 v375 v379 v392 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@~|@floating>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a362 
=== Succesors ===
=== Usages ===
v363 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a362  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-36107|0xffffffffffff72f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v405 
lastLocationAccess: - 
=== Succesors ===
next: v26 
=== Usages ===
v349 
=== Predecessor ===
a362 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v405 lastLocationAccess: - #next: v26  <|@  <|@
f <@~|@floating>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v363 
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v363  <|@  <|@
f <@~|@floating>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a362 
=== Succesors ===
=== Usages ===
i365 a387 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a362  <|@  <|@
f <@~|@floating>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a362 
=== Succesors ===
=== Usages ===
i364 a366 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a362  <|@  <|@
f <@~|@floating>@ <|@
tid j311 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j302 j302 j302 j302 j302 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j306 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
rawvalue: 1300
stableDimension: 0
stamp: i64 [1300]
stampKind: i64
value: long[1300|0x514]
=== Inputs ===
=== Succesors ===
=== Usages ===
j302 j302 j302 j302 j302 j302 j302 j302 j302 j302 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}]
keySuccessors: [I@2a98d532
keys: [HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>, HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>]
profileData: PROFILED keyProbabilities: [0.5000010106805837, 0.49999898931941633, 0.0]
stamp: void
=== Inputs ===
value: v349 
=== Succesors ===
successors: v16 v18 v21 
=== Usages ===
=== Predecessor ===
v363 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v349 #successors: v16 v18 v21  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: i364 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i364  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i364 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v395 
lastLocationAccess: - 
=== Succesors ===
next: v255 
=== Usages ===
v31 
=== Predecessor ===
v16 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v395 lastLocationAccess: - #next: v255  <|@  <|@
f <@~|@floating>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i364 
=== Succesors ===
=== Usages ===
v255 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i364  <|@  <|@
f <@*|@fixed>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v31 
=== Succesors ===
trueSuccessor: v253 
falseSuccessor: v254 
=== Usages ===
=== Predecessor ===
i364 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v31 #trueSuccessor: v253 #falseSuccessor: v254  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v304 
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v304  <|@  <|@
f <@~|@floating>@ <|@
tid i305 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
rawvalue: -64531
stableDimension: 0
stamp: i32 [-64531]
stampKind: i32
value: int[-64531|0xffffffffffff03ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i301 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
v253 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 5]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: i365 
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i365  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i365 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v396 
lastLocationAccess: - 
=== Succesors ===
next: v259 
=== Usages ===
v33 
=== Predecessor ===
v254 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v396 lastLocationAccess: - #next: v259  <|@  <|@
f <@~|@floating>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i365 
y: i2 
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i365 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v33 
=== Succesors ===
trueSuccessor: v257 
falseSuccessor: v258 
=== Usages ===
=== Predecessor ===
i365 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v33 #trueSuccessor: v257 #falseSuccessor: v258  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v312 
=== Usages ===
=== Predecessor ===
v259 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v312  <|@  <|@
f <@~|@floating>@ <|@
tid i313 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
rawvalue: -65555
stableDimension: 0
stamp: i32 [-65555]
stampKind: i32
value: int[-65555|0xfffffffffffeffed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i301 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
v257 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 10]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v17 
=== Usages ===
=== Predecessor ===
v259 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v17  <|@  <|@
f <@*|@fixed>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
v258 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B12" "B37" 
    xhandlers
    flags 
    probability 4602678800965844112
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a366 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a366  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a366 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v395 
lastLocationAccess: - 
=== Succesors ===
next: v367 
=== Usages ===
v406 v397 v398 
=== Predecessor ===
v18 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v395 lastLocationAccess: - #next: v367  <|@  <|@
f <@~|@floating>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a366 
=== Succesors ===
=== Usages ===
v367 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a366  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v367 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-38923|0xffffffffffff67f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v406 
lastLocationAccess: - 
=== Succesors ===
next: v45 
=== Usages ===
v352 
=== Predecessor ===
a366 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v406 lastLocationAccess: - #next: v45  <|@  <|@
f <@~|@floating>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v367 
=== Succesors ===
=== Usages ===
v45 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v367  <|@  <|@
f <@~|@floating>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a366 
=== Succesors ===
=== Usages ===
i369 a386 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a366  <|@  <|@
f <@~|@floating>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a366 
=== Succesors ===
=== Usages ===
i368 a370 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a366  <|@  <|@
f <@*|@fixed>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}]
keySuccessors: [I@6fecd24b
keys: [HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>, HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>]
profileData: PROFILED keyProbabilities: [0.5000010106805837, 0.49999898931941633, 0.0]
stamp: void
=== Inputs ===
value: v352 
=== Succesors ===
successors: v37 v38 v40 
=== Usages ===
=== Predecessor ===
v367 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v352 #successors: v37 v38 v40  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: i368 
=== Usages ===
=== Predecessor ===
v45 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i368  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i368 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v397 
lastLocationAccess: - 
=== Succesors ===
next: v263 
=== Usages ===
v50 
=== Predecessor ===
v37 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v397 lastLocationAccess: - #next: v263  <|@  <|@
f <@~|@floating>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i368 
=== Succesors ===
=== Usages ===
v263 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i368  <|@  <|@
f <@*|@fixed>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v50 
=== Succesors ===
trueSuccessor: v261 
falseSuccessor: v262 
=== Usages ===
=== Predecessor ===
i368 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v50 #trueSuccessor: v261 #falseSuccessor: v262  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v314 
=== Usages ===
=== Predecessor ===
v263 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v314  <|@  <|@
f <@~|@floating>@ <|@
tid i315 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
rawvalue: -66579
stableDimension: 0
stamp: i32 [-66579]
stampKind: i32
value: int[-66579|0xfffffffffffefbed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i301 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
v261 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 5]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: i369 
=== Usages ===
=== Predecessor ===
v263 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i369  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i369 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v398 
lastLocationAccess: - 
=== Succesors ===
next: v267 
=== Usages ===
v52 
=== Predecessor ===
v262 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v398 lastLocationAccess: - #next: v267  <|@  <|@
f <@~|@floating>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i369 
y: i2 
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i369 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v52 
=== Succesors ===
trueSuccessor: v265 
falseSuccessor: v266 
=== Usages ===
=== Predecessor ===
i369 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v52 #trueSuccessor: v265 #falseSuccessor: v266  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v320 
=== Usages ===
=== Predecessor ===
v267 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v320  <|@  <|@
f <@~|@floating>@ <|@
tid i321 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
rawvalue: -67603
stableDimension: 0
stamp: i32 [-67603]
stampKind: i32
value: int[-67603|0xfffffffffffef7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i301 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
v265 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B33" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 10]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v19 
=== Usages ===
=== Predecessor ===
v267 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v19  <|@  <|@
f <@*|@fixed>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
v266 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" "B18" "B36" 
    xhandlers
    flags 
    probability 4598175183131707619
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a370 
=== Usages ===
=== Predecessor ===
v45 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a370  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a370 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v397 
lastLocationAccess: - 
=== Succesors ===
next: v371 
=== Usages ===
v407 v399 v400 
=== Predecessor ===
v38 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v397 lastLocationAccess: - #next: v371  <|@  <|@
f <@~|@floating>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a370 
=== Succesors ===
=== Usages ===
v371 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a370  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-41739|0xffffffffffff5cf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v407 
lastLocationAccess: - 
=== Succesors ===
next: v64 
=== Usages ===
v355 
=== Predecessor ===
a370 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v407 lastLocationAccess: - #next: v64  <|@  <|@
f <@~|@floating>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v371 
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v371  <|@  <|@
f <@~|@floating>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a370 
=== Succesors ===
=== Usages ===
i373 a385 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a370  <|@  <|@
f <@~|@floating>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a370 
=== Succesors ===
=== Usages ===
i372 a374 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a370  <|@  <|@
f <@*|@fixed>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}]
keySuccessors: [I@1ea19191
keys: [HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>, HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>]
profileData: PROFILED keyProbabilities: [0.5000010106805837, 0.49999898931941633, 0.0]
stamp: void
=== Inputs ===
value: v355 
=== Succesors ===
successors: v56 v57 v59 
=== Usages ===
=== Predecessor ===
v371 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v355 #successors: v56 v57 v59  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: i372 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i372  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i372 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v399 
lastLocationAccess: - 
=== Succesors ===
next: v271 
=== Usages ===
v69 
=== Predecessor ===
v56 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v399 lastLocationAccess: - #next: v271  <|@  <|@
f <@~|@floating>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i372 
=== Succesors ===
=== Usages ===
v271 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i372  <|@  <|@
f <@*|@fixed>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v69 
=== Succesors ===
trueSuccessor: v269 
falseSuccessor: v270 
=== Usages ===
=== Predecessor ===
i372 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v69 #trueSuccessor: v269 #falseSuccessor: v270  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v322 
=== Usages ===
=== Predecessor ===
v271 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v322  <|@  <|@
f <@~|@floating>@ <|@
tid i323 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
rawvalue: -68627
stableDimension: 0
stamp: i32 [-68627]
stampKind: i32
value: int[-68627|0xfffffffffffef3ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i301 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
v269 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 5]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: i373 
=== Usages ===
=== Predecessor ===
v271 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i373  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i373 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v400 
lastLocationAccess: - 
=== Succesors ===
next: v275 
=== Usages ===
v71 
=== Predecessor ===
v270 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v400 lastLocationAccess: - #next: v275  <|@  <|@
f <@~|@floating>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i373 
y: i2 
=== Succesors ===
=== Usages ===
v275 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i373 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v71 
=== Succesors ===
trueSuccessor: v273 
falseSuccessor: v274 
=== Usages ===
=== Predecessor ===
i373 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v71 #trueSuccessor: v273 #falseSuccessor: v274  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v328 
=== Usages ===
=== Predecessor ===
v275 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v328  <|@  <|@
f <@~|@floating>@ <|@
tid i329 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
rawvalue: -69651
stableDimension: 0
stamp: i32 [-69651]
stampKind: i32
value: int[-69651|0xfffffffffffeefed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i301 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
v273 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B33" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 10]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v131 
=== Usages ===
=== Predecessor ===
v275 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v131  <|@  <|@
f <@*|@fixed>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
v274 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B24" "B35" 
    xhandlers
    flags 
    probability 4593671565297607928
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a374 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a374  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a374 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v399 
lastLocationAccess: - 
=== Succesors ===
next: v375 
=== Usages ===
v408 v401 v402 
=== Predecessor ===
v57 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v399 lastLocationAccess: - #next: v375  <|@  <|@
f <@~|@floating>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a374 
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a374  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-44555|0xffffffffffff51f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v408 
lastLocationAccess: - 
=== Succesors ===
next: v83 
=== Usages ===
v358 
=== Predecessor ===
a374 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v408 lastLocationAccess: - #next: v83  <|@  <|@
f <@~|@floating>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v375 
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v375  <|@  <|@
f <@~|@floating>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a374 
=== Succesors ===
=== Usages ===
i377 a384 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a374  <|@  <|@
f <@~|@floating>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a374 
=== Succesors ===
=== Usages ===
i376 a378 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a374  <|@  <|@
f <@*|@fixed>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}]
keySuccessors: [I@7c7f8c2
keys: [HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>, HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>]
profileData: PROFILED keyProbabilities: [0.5000010106805837, 0.49999898931941633, 0.0]
stamp: void
=== Inputs ===
value: v358 
=== Succesors ===
successors: v75 v76 v78 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v358 #successors: v75 v76 v78  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: i376 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i376  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i376 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v401 
lastLocationAccess: - 
=== Succesors ===
next: v279 
=== Usages ===
v88 
=== Predecessor ===
v75 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v401 lastLocationAccess: - #next: v279  <|@  <|@
f <@~|@floating>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i376 
=== Succesors ===
=== Usages ===
v279 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i376  <|@  <|@
f <@*|@fixed>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v88 
=== Succesors ===
trueSuccessor: v277 
falseSuccessor: v278 
=== Usages ===
=== Predecessor ===
i376 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v88 #trueSuccessor: v277 #falseSuccessor: v278  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v330 
=== Usages ===
=== Predecessor ===
v279 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v330  <|@  <|@
f <@~|@floating>@ <|@
tid i331 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
rawvalue: -70675
stableDimension: 0
stamp: i32 [-70675]
stampKind: i32
value: int[-70675|0xfffffffffffeebed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i301 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
v277 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 5]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: i377 
=== Usages ===
=== Predecessor ===
v279 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i377  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i377 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v402 
lastLocationAccess: - 
=== Succesors ===
next: v283 
=== Usages ===
v90 
=== Predecessor ===
v278 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v402 lastLocationAccess: - #next: v283  <|@  <|@
f <@~|@floating>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i377 
y: i2 
=== Succesors ===
=== Usages ===
v283 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i377 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v90 
=== Succesors ===
trueSuccessor: v281 
falseSuccessor: v282 
=== Usages ===
=== Predecessor ===
i377 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v90 #trueSuccessor: v281 #falseSuccessor: v282  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v336 
=== Usages ===
=== Predecessor ===
v283 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v336  <|@  <|@
f <@~|@floating>@ <|@
tid i337 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
rawvalue: -71699
stableDimension: 0
stamp: i32 [-71699]
stampKind: i32
value: int[-71699|0xfffffffffffee7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i301 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
v281 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B33" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 10]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v128 
=== Usages ===
=== Predecessor ===
v283 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v128  <|@  <|@
f <@*|@fixed>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
v282 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B30" "B34" 
    xhandlers
    flags 
    probability 4589167947463545039
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a378 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a378  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a378 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v401 
lastLocationAccess: - 
=== Succesors ===
next: v379 
=== Usages ===
v409 v403 v404 
=== Predecessor ===
v76 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v401 lastLocationAccess: - #next: v379  <|@  <|@
f <@~|@floating>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a378 
=== Succesors ===
=== Usages ===
v379 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a378  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-47371|0xffffffffffff46f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v409 
lastLocationAccess: - 
=== Succesors ===
next: v102 
=== Usages ===
v361 
=== Predecessor ===
a378 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v409 lastLocationAccess: - #next: v102  <|@  <|@
f <@~|@floating>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v379 
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v379  <|@  <|@
f <@~|@floating>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a378 
=== Succesors ===
=== Usages ===
i381 a383 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a378  <|@  <|@
f <@~|@floating>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a378 
=== Succesors ===
=== Usages ===
i380 a382 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a378  <|@  <|@
f <@*|@fixed>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}]
keySuccessors: [I@6b1a9c4d
keys: [HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>, HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>]
profileData: PROFILED keyProbabilities: [0.5000010106805837, 0.49999898931941633, 0.0]
stamp: void
=== Inputs ===
value: v361 
=== Succesors ===
successors: v94 v95 v97 
=== Usages ===
=== Predecessor ===
v379 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v361 #successors: v94 v95 v97  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: i380 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i380  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i380 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v403 
lastLocationAccess: - 
=== Succesors ===
next: v287 
=== Usages ===
v107 
=== Predecessor ===
v94 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v403 lastLocationAccess: - #next: v287  <|@  <|@
f <@~|@floating>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i380 
=== Succesors ===
=== Usages ===
v287 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i380  <|@  <|@
f <@*|@fixed>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v107 
=== Succesors ===
trueSuccessor: v285 
falseSuccessor: v286 
=== Usages ===
=== Predecessor ===
i380 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v107 #trueSuccessor: v285 #falseSuccessor: v286  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v338 
=== Usages ===
=== Predecessor ===
v287 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v338  <|@  <|@
f <@~|@floating>@ <|@
tid i339 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
rawvalue: -72723
stableDimension: 0
stamp: i32 [-72723]
stampKind: i32
value: int[-72723|0xfffffffffffee3ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i301 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
v285 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 5]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: i381 
=== Usages ===
=== Predecessor ===
v287 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i381  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i381 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v404 
lastLocationAccess: - 
=== Succesors ===
next: v291 
=== Usages ===
v109 
=== Predecessor ===
v286 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v404 lastLocationAccess: - #next: v291  <|@  <|@
f <@~|@floating>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i381 
y: i2 
=== Succesors ===
=== Usages ===
v291 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i381 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v109 
=== Succesors ===
trueSuccessor: v289 
falseSuccessor: v290 
=== Usages ===
=== Predecessor ===
i381 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v109 #trueSuccessor: v289 #falseSuccessor: v290  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v344 
=== Usages ===
=== Predecessor ===
v291 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v344  <|@  <|@
f <@~|@floating>@ <|@
tid i345 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
rawvalue: -73747
stableDimension: 0
stamp: i32 [-73747]
stampKind: i32
value: int[-73747|0xfffffffffffedfed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i301 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
v289 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 10]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v130 
=== Usages ===
=== Predecessor ===
v291 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v130  <|@  <|@
f <@*|@fixed>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
v290 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4584664329629518953
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a382 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a382  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a382 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v403 
lastLocationAccess: - 
=== Succesors ===
next: v392 
=== Usages ===
a192 v410 
=== Predecessor ===
v95 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v403 lastLocationAccess: - #next: v392  <|@  <|@
f <@~|@floating>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a382 
=== Succesors ===
=== Usages ===
v392 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a382  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?3 
object: v410 
=== Succesors ===
next: a383 
=== Usages ===
=== Predecessor ===
a382 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: v410 #next: a383  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a383 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v404 
lastLocationAccess: - 
=== Succesors ===
next: a384 
=== Usages ===
a195 
=== Predecessor ===
v392 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v404 lastLocationAccess: - #next: a384  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a384 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v402 
lastLocationAccess: - 
=== Succesors ===
next: a385 
=== Usages ===
a184 
=== Predecessor ===
a383 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v402 lastLocationAccess: - #next: a385  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a385 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v400 
lastLocationAccess: - 
=== Succesors ===
next: a386 
=== Usages ===
a173 
=== Predecessor ===
a384 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v400 lastLocationAccess: - #next: a386  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a386 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v398 
lastLocationAccess: - 
=== Succesors ===
next: a387 
=== Usages ===
a162 
=== Predecessor ===
a385 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v398 lastLocationAccess: - #next: a387  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a387 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v396 
lastLocationAccess: - 
=== Succesors ===
next: a388 
=== Usages ===
a151 
=== Predecessor ===
a386 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v396 lastLocationAccess: - #next: a388  <|@  <|@
f <@~|@floating>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a388 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a388 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v394 
lastLocationAccess: - 
=== Succesors ===
next: i114 
=== Usages ===
a140 
=== Predecessor ===
a387 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v394 lastLocationAccess: - #next: i114  <|@  <|@
f <@~|@floating>@ <|@
tid a192 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a382 
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a382  <|@  <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/util/regex/Pattern$CharPredicate;, resolved>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<Pattern$CharPredicate.is(int)>
=== Inputs ===
arguments: a192 i2 
=== Succesors ===
=== Usages ===
i114 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a192 i2  <|@  <|@
tid ?132 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<Pattern$$Lambda/0x800000044.is(int)>
localsSize: 2
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
?127 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
f <@~|@floating>@ <|@
tid a140 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a388 
=== Succesors ===
=== Usages ===
?127 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a388  <|@  <|@
tid ?127 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Pattern.lambda$union$3(Pattern$CharPredicate, Pattern$CharPredicate, int)>
localsSize: 3
locksSize: 0
sourceFile: Pattern.java
sourceLine: 5802
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?132 
values: - a140 i2 
=== Succesors ===
=== Usages ===
?126 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?132 values: - a140 i2  <|@  <|@
tid ?126 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<Pattern$$Lambda/0x800000044.is(int)>
localsSize: 2
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?127 
=== Succesors ===
=== Usages ===
?125 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?127  <|@  <|@
f <@~|@floating>@ <|@
tid a151 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a387 
=== Succesors ===
=== Usages ===
?125 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a387  <|@  <|@
tid ?125 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Pattern.lambda$union$3(Pattern$CharPredicate, Pattern$CharPredicate, int)>
localsSize: 3
locksSize: 0
sourceFile: Pattern.java
sourceLine: 5802
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?126 
values: - a151 i2 
=== Succesors ===
=== Usages ===
?124 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?126 values: - a151 i2  <|@  <|@
tid ?124 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<Pattern$$Lambda/0x800000044.is(int)>
localsSize: 2
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?125 
=== Succesors ===
=== Usages ===
?123 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?125  <|@  <|@
f <@~|@floating>@ <|@
tid a162 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a386 
=== Succesors ===
=== Usages ===
?123 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a386  <|@  <|@
tid ?123 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Pattern.lambda$union$3(Pattern$CharPredicate, Pattern$CharPredicate, int)>
localsSize: 3
locksSize: 0
sourceFile: Pattern.java
sourceLine: 5802
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?124 
values: - a162 i2 
=== Succesors ===
=== Usages ===
?122 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?124 values: - a162 i2  <|@  <|@
tid ?122 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<Pattern$$Lambda/0x800000044.is(int)>
localsSize: 2
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?123 
=== Succesors ===
=== Usages ===
?121 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?123  <|@  <|@
f <@~|@floating>@ <|@
tid a173 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a385 
=== Succesors ===
=== Usages ===
?121 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a385  <|@  <|@
tid ?121 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Pattern.lambda$union$3(Pattern$CharPredicate, Pattern$CharPredicate, int)>
localsSize: 3
locksSize: 0
sourceFile: Pattern.java
sourceLine: 5802
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?122 
values: - a173 i2 
=== Succesors ===
=== Usages ===
?120 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?122 values: - a173 i2  <|@  <|@
tid ?120 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<Pattern$$Lambda/0x800000044.is(int)>
localsSize: 2
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?121 
=== Succesors ===
=== Usages ===
?119 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?121  <|@  <|@
f <@~|@floating>@ <|@
tid a184 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a384 
=== Succesors ===
=== Usages ===
?119 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a384  <|@  <|@
tid ?119 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Pattern.lambda$union$3(Pattern$CharPredicate, Pattern$CharPredicate, int)>
localsSize: 3
locksSize: 0
sourceFile: Pattern.java
sourceLine: 5802
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?120 
values: - a184 i2 
=== Succesors ===
=== Usages ===
?118 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?120 values: - a184 i2  <|@  <|@
tid ?118 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<Pattern$$Lambda/0x800000044.is(int)>
localsSize: 2
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?119 
=== Succesors ===
=== Usages ===
?115 ?296 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?119  <|@  <|@
f <@~|@floating>@ <|@
tid a195 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a383 
=== Succesors ===
=== Usages ===
?115 ?296 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a383  <|@  <|@
tid ?296 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Pattern.lambda$union$3(Pattern$CharPredicate, Pattern$CharPredicate, int)>
localsSize: 3
locksSize: 0
sourceFile: Pattern.java
sourceLine: 5802
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?118 
values: - a195 i2 
=== Succesors ===
=== Usages ===
i114 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?118 values: - a195 i2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i114 <|@
d <@d|@=== Debug Properties ===
bci: 2
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
polymorphic: true
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Direct#Pattern$CharPredicate.is
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v199 
stateDuring: ?296 
=== Succesors ===
next: v295 
=== Usages ===
v116 
=== Predecessor ===
a388 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v199 stateDuring: ?296 #next: v295  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v116 ?115 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i114 
y: i12 
=== Succesors ===
=== Usages ===
v295 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i114 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v116 
=== Succesors ===
trueSuccessor: v293 
falseSuccessor: v294 
=== Usages ===
=== Predecessor ===
i114 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v116 #trueSuccessor: v293 #falseSuccessor: v294  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v292 
=== Usages ===
=== Predecessor ===
v295 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v292  <|@  <|@
tid ?115 <|@
d <@d|@=== Debug Properties ===
bci: 7
bytecode: ifne
code: ResolvedJavaMethodBytecode<Pattern.lambda$union$3(Pattern$CharPredicate, Pattern$CharPredicate, int)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
sourceFile: Pattern.java
sourceLine: 5802
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?118 
values: i12 - a195 i2 
=== Succesors ===
=== Usages ===
v292 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?118 values: i12 - a195 i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
reason: UnreachedCode
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0xd98badbc]: UnreachedCode@6[HotSpotMethod<Pattern.lambda$union$3(Pattern$CharPredicate, Pattern$CharPredicate, int)>, 10]}
stamp: void
=== Inputs ===
stateBefore: ?115 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v293 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?115  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584664329629518953
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 20]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v129 
=== Usages ===
=== Predecessor ===
v295 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v129  <|@  <|@
f <@*|@fixed>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
v294 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B5" "B11" "B23" "B32" "B29" "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v17 v19 v128 v129 v130 v131 
=== Succesors ===
next: v9 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v17 v19 v128 v129 v130 v131 #next: v9  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 20]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v9 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 12]
stamp: void
=== Inputs ===
memoryMap: - 
result: i13 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i13  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v342 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v342  <|@  <|@
f <@~|@floating>@ <|@
tid i343 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
rawvalue: -24627
stableDimension: 0
stamp: i32 [-24627]
stampKind: i32
value: int[-24627|0xffffffffffff9fcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i301 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
v97 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v334 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v334  <|@  <|@
f <@~|@floating>@ <|@
tid i335 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
rawvalue: -19763
stableDimension: 0
stamp: i32 [-19763]
stampKind: i32
value: int[-19763|0xffffffffffffb2cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i301 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
v78 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v326 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v326  <|@  <|@
f <@~|@floating>@ <|@
tid i327 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
rawvalue: -14899
stableDimension: 0
stamp: i32 [-14899]
stampKind: i32
value: int[-14899|0xffffffffffffc5cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i301 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
v59 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v318 
=== Usages ===
=== Predecessor ===
v45 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v318  <|@  <|@
f <@~|@floating>@ <|@
tid i319 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
rawvalue: -10035
stableDimension: 0
stamp: i32 [-10035]
stampKind: i32
value: int[-10035|0xffffffffffffd8cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i301 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
v40 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v309 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v309  <|@  <|@
f <@~|@floating>@ <|@
tid i310 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
rawvalue: -5171
stableDimension: 0
stamp: i32 [-5171]
stampKind: i32
value: int[-5171|0xffffffffffffebcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i301 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
v21 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" "B38" "B4" "B8" "B37" "B10" "B14" "B36" "B16" "B20" "B35" "B22" "B26" "B34" "B28" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i301 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: i32 [-73747 - -5171] bits:1...1xxxxxxxxx11x01101
valueDescription: i32
=== Inputs ===
merge: v297 
values: i305 i310 i313 i315 i319 i321 i323 i327 i329 i331 i335 i337 i339 i343 i345 
=== Succesors ===
=== Usages ===
v303 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v297 values: i305 i310 i313 i315 i319 i321 i323 i327 i329 i331 i335 i337 i339 i343 i345  <|@  <|@
f <@~|@floating>@ <|@
tid j302 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: i64 [660 - 1300] bits:0...0xxxx0010100
valueDescription: i64
=== Inputs ===
merge: v297 
values: j306 j311 j306 j306 j311 j306 j306 j311 j306 j306 j311 j306 j306 j311 j306 
=== Succesors ===
=== Usages ===
v303 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v297 values: j306 j311 j306 j306 j311 j306 j306 j311 j306 j306 j311 j306 j306 j311 j306  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v304 v309 v312 v314 v318 v320 v322 v326 v328 v330 v334 v336 v338 v342 v344 
=== Succesors ===
next: v303 
=== Usages ===
i301 j302 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v304 v309 v312 v314 v318 v320 v322 v326 v328 v330 v334 v336 v338 v342 v344 #next: v303  <|@  <|@
f <@*|@fixed>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i301 
speculation: j302 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v297 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i301 speculation: j302  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@62ed65ef slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v4|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B0 -> B1, B0 -> B6] defaultTarget: B0 -> B38 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v2|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v2|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B12" "B37" 
    xhandlers
    flags 
    probability 4602678800965844112
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v7|DWORD = MOV input: [v6|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v7|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v8|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B6 -> B7, B6 -> B12] defaultTarget: B6 -> B37 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v6|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v6|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B33" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" "B18" "B36" 
    xhandlers
    flags 
    probability 4598175183131707619
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v11|DWORD = MOV input: [v10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = UNCOMPRESSPOINTER (input: v11|DWORD, ~baseRegister: v13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v12|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B12 -> B13, B12 -> B18] defaultTarget: B12 -> B36 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v10|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v10|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B33" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B24" "B35" 
    xhandlers
    flags 
    probability 4593671565297607928
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[_] = MOV input: [v10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v15|DWORD = MOV input: [v14|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = UNCOMPRESSPOINTER (input: v15|DWORD, ~baseRegister: v17|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v16|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B18 -> B19, B18 -> B24] defaultTarget: B18 -> B35 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v14|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v14|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B33" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B30" "B34" 
    xhandlers
    flags 
    probability 4589167947463545039
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[_] = MOV input: [v14|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v19|DWORD = MOV input: [v18|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = UNCOMPRESSPOINTER (input: v19|DWORD, ~baseRegister: v21|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v20|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B24 -> B25, B24 -> B30] defaultTarget: B24 -> B34 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v18|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v18|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4584664329629518953
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[_] = MOV input: [v18|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v22|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV input: [v18|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD[_] = MOV input: [v14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV input: [v10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v27|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v35|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v34|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v33|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v32|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v31|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v30|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v36|DWORD, y: v36|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584664329629518953
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B5" "B11" "B23" "B32" "B29" "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-66579|0xfffffffffffefbed], long[1300|0x514]] destination: B8 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-71699|0xfffffffffffee7ed], long[1300|0x514]] destination: B22 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-72723|0xfffffffffffee3ed], long[1300|0x514]] destination: B26 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-73747|0xfffffffffffedfed], long[1300|0x514]] destination: B28 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-24627|0xffffffffffff9fcd], long[660|0x294]] destination: B34 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -74771 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - v35|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v34|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v33|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v32|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v31|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v30|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-67603|0xfffffffffffef7ed], long[1300|0x514]] destination: B10 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-70675|0xfffffffffffeebed], long[1300|0x514]] destination: B20 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-19763|0xffffffffffffb2cd], long[660|0x294]] destination: B35 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-10035|0xffffffffffffd8cd], long[660|0x294]] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-68627|0xfffffffffffef3ed], long[1300|0x514]] destination: B14 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-69651|0xfffffffffffeefed], long[1300|0x514]] destination: B16 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-14899|0xffffffffffffc5cd], long[660|0x294]] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-64531|0xffffffffffff03ed], long[1300|0x514]] destination: B2 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-65555|0xfffffffffffeffed], long[1300|0x514]] destination: B4 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-5171|0xffffffffffffebcd], long[660|0x294]] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" "B38" "B4" "B8" "B37" "B10" "B14" "B36" "B16" "B20" "B35" "B22" "B26" "B34" "B28" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|DWORD, v38|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // arg$1:java.util.regex.Pattern$CharPredicate
     4: aload_0       
     5: getfield      #2          // arg$2:java.util.regex.Pattern$CharPredicate
     8: iload_1       
     9: invokestatic  #3          // java.util.regex.Pattern.lambda$union$3:(java.util.regex.Pattern$CharPredicate, java.util.regex.Pattern$CharPredicate, int)boolean
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a362 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a362  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.regex.Pattern$$Lambda/0x800000044
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v393 v394 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v393 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a362 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a362 <|@
result v2|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 1]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v393 
lastLocationAccess: - 
=== Succesors ===
next: v363 
=== Usages ===
v405 v395 v396 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v393 lastLocationAccess: - #next: v363  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?127 ?125 ?296 v31 v33 v50 v52 v69 v71 v88 v90 v107 v109 v199 ?115 ?119 ?121 ?123 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Pattern$$Lambda/0x800000044.is(int)>
localsSize: 2
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v303 v363 v367 v371 v375 v379 v392 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@~|@floating>@ <|@
tid v405 <|@
result [v2|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a362 
=== Succesors ===
=== Usages ===
v363 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a362  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v363 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-36107|0xffffffffffff72f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v405 
lastLocationAccess: - 
=== Succesors ===
next: v26 
=== Usages ===
v349 
=== Predecessor ===
a362 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v405 lastLocationAccess: - #next: v26  <|@  <|@
f <@~|@floating>@ <|@
tid v349 <|@
result v4|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v363 
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v363  <|@  <|@
f <@~|@floating>@ <|@
tid v396 <|@
result [v2|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a362 
=== Succesors ===
=== Usages ===
i365 a387 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a362  <|@  <|@
f <@~|@floating>@ <|@
tid v395 <|@
result [v2|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a362 
=== Succesors ===
=== Usages ===
i364 a366 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a362  <|@  <|@
f <@~|@floating>@ <|@
tid j311 <|@
result long[660|0x294] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j302 j302 j302 j302 j302 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j306 <|@
result long[1300|0x514] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
rawvalue: 1300
stableDimension: 0
stamp: i64 [1300]
stampKind: i64
value: long[1300|0x514]
=== Inputs ===
=== Succesors ===
=== Usages ===
j302 j302 j302 j302 j302 j302 j302 j302 j302 j302 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}]
keySuccessors: [I@2a98d532
keys: [HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>, HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>]
profileData: PROFILED keyProbabilities: [0.5000010106805837, 0.49999898931941633, 0.0]
stamp: void
=== Inputs ===
value: v349 
=== Succesors ===
successors: v16 v18 v21 
=== Usages ===
=== Predecessor ===
v363 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v349 #successors: v16 v18 v21  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@62ed65ef slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v4|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B0 -> B1, B0 -> B6] defaultTarget: B0 -> B38 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: i364 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i364  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i364 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v395 
lastLocationAccess: - 
=== Succesors ===
next: v255 
=== Usages ===
v31 
=== Predecessor ===
v16 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v395 lastLocationAccess: - #next: v255  <|@  <|@
f <@~|@floating>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i364 
=== Succesors ===
=== Usages ===
v255 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i364  <|@  <|@
f <@*|@fixed>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v31 
=== Succesors ===
trueSuccessor: v253 
falseSuccessor: v254 
=== Usages ===
=== Predecessor ===
i364 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v31 #trueSuccessor: v253 #falseSuccessor: v254  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v2|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v304 
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v304  <|@  <|@
f <@~|@floating>@ <|@
tid i305 <|@
result int[-64531|0xffffffffffff03ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
rawvalue: -64531
stableDimension: 0
stamp: i32 [-64531]
stampKind: i32
value: int[-64531|0xffffffffffff03ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i301 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
v253 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-64531|0xffffffffffff03ed], long[1300|0x514]] destination: B2 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 5]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: i365 
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i365  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i365 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v396 
lastLocationAccess: - 
=== Succesors ===
next: v259 
=== Usages ===
v33 
=== Predecessor ===
v254 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v396 lastLocationAccess: - #next: v259  <|@  <|@
f <@~|@floating>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i365 
y: i2 
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i365 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v33 
=== Succesors ===
trueSuccessor: v257 
falseSuccessor: v258 
=== Usages ===
=== Predecessor ===
i365 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v33 #trueSuccessor: v257 #falseSuccessor: v258  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v2|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v312 
=== Usages ===
=== Predecessor ===
v259 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v312  <|@  <|@
f <@~|@floating>@ <|@
tid i313 <|@
result int[-65555|0xfffffffffffeffed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
rawvalue: -65555
stableDimension: 0
stamp: i32 [-65555]
stampKind: i32
value: int[-65555|0xfffffffffffeffed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i301 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
v257 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-65555|0xfffffffffffeffed], long[1300|0x514]] destination: B4 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 10]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v17 
=== Usages ===
=== Predecessor ===
v259 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v17  <|@  <|@
f <@*|@fixed>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
v258 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B12" "B37" 
    xhandlers
    flags 
    probability 4602678800965844112
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a366 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a366  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a366 <|@
result v6|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v395 
lastLocationAccess: - 
=== Succesors ===
next: v367 
=== Usages ===
v406 v397 v398 
=== Predecessor ===
v18 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v395 lastLocationAccess: - #next: v367  <|@  <|@
f <@~|@floating>@ <|@
tid v406 <|@
result [v6|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a366 
=== Succesors ===
=== Usages ===
v367 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a366  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v367 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-38923|0xffffffffffff67f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v406 
lastLocationAccess: - 
=== Succesors ===
next: v45 
=== Usages ===
v352 
=== Predecessor ===
a366 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v406 lastLocationAccess: - #next: v45  <|@  <|@
f <@~|@floating>@ <|@
tid v352 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v367 
=== Succesors ===
=== Usages ===
v45 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v367  <|@  <|@
f <@~|@floating>@ <|@
tid v398 <|@
result [v6|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a366 
=== Succesors ===
=== Usages ===
i369 a386 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a366  <|@  <|@
f <@~|@floating>@ <|@
tid v397 <|@
result [v6|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a366 
=== Succesors ===
=== Usages ===
i368 a370 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a366  <|@  <|@
f <@*|@fixed>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}]
keySuccessors: [I@6fecd24b
keys: [HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>, HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>]
profileData: PROFILED keyProbabilities: [0.5000010106805837, 0.49999898931941633, 0.0]
stamp: void
=== Inputs ===
value: v352 
=== Succesors ===
successors: v37 v38 v40 
=== Usages ===
=== Predecessor ===
v367 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v352 #successors: v37 v38 v40  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v7|DWORD = MOV input: [v6|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v7|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v8|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B6 -> B7, B6 -> B12] defaultTarget: B6 -> B37 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: i368 
=== Usages ===
=== Predecessor ===
v45 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i368  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i368 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v397 
lastLocationAccess: - 
=== Succesors ===
next: v263 
=== Usages ===
v50 
=== Predecessor ===
v37 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v397 lastLocationAccess: - #next: v263  <|@  <|@
f <@~|@floating>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i368 
=== Succesors ===
=== Usages ===
v263 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i368  <|@  <|@
f <@*|@fixed>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v50 
=== Succesors ===
trueSuccessor: v261 
falseSuccessor: v262 
=== Usages ===
=== Predecessor ===
i368 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v50 #trueSuccessor: v261 #falseSuccessor: v262  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v6|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v314 
=== Usages ===
=== Predecessor ===
v263 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v314  <|@  <|@
f <@~|@floating>@ <|@
tid i315 <|@
result int[-66579|0xfffffffffffefbed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
rawvalue: -66579
stableDimension: 0
stamp: i32 [-66579]
stampKind: i32
value: int[-66579|0xfffffffffffefbed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i301 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
v261 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-66579|0xfffffffffffefbed], long[1300|0x514]] destination: B8 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 5]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: i369 
=== Usages ===
=== Predecessor ===
v263 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i369  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i369 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v398 
lastLocationAccess: - 
=== Succesors ===
next: v267 
=== Usages ===
v52 
=== Predecessor ===
v262 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v398 lastLocationAccess: - #next: v267  <|@  <|@
f <@~|@floating>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i369 
y: i2 
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i369 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v52 
=== Succesors ===
trueSuccessor: v265 
falseSuccessor: v266 
=== Usages ===
=== Predecessor ===
i369 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v52 #trueSuccessor: v265 #falseSuccessor: v266  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v6|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v320 
=== Usages ===
=== Predecessor ===
v267 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v320  <|@  <|@
f <@~|@floating>@ <|@
tid i321 <|@
result int[-67603|0xfffffffffffef7ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
rawvalue: -67603
stableDimension: 0
stamp: i32 [-67603]
stampKind: i32
value: int[-67603|0xfffffffffffef7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i301 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
v265 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-67603|0xfffffffffffef7ed], long[1300|0x514]] destination: B10 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B33" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 10]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v19 
=== Usages ===
=== Predecessor ===
v267 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v19  <|@  <|@
f <@*|@fixed>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
v266 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" "B18" "B36" 
    xhandlers
    flags 
    probability 4598175183131707619
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a370 
=== Usages ===
=== Predecessor ===
v45 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a370  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a370 <|@
result v10|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v397 
lastLocationAccess: - 
=== Succesors ===
next: v371 
=== Usages ===
v407 v399 v400 
=== Predecessor ===
v38 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v397 lastLocationAccess: - #next: v371  <|@  <|@
f <@~|@floating>@ <|@
tid v407 <|@
result [v10|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a370 
=== Succesors ===
=== Usages ===
v371 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a370  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v371 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-41739|0xffffffffffff5cf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v407 
lastLocationAccess: - 
=== Succesors ===
next: v64 
=== Usages ===
v355 
=== Predecessor ===
a370 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v407 lastLocationAccess: - #next: v64  <|@  <|@
f <@~|@floating>@ <|@
tid v355 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v371 
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v371  <|@  <|@
f <@~|@floating>@ <|@
tid v400 <|@
result [v10|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a370 
=== Succesors ===
=== Usages ===
i373 a385 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a370  <|@  <|@
f <@~|@floating>@ <|@
tid v399 <|@
result [v10|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a370 
=== Succesors ===
=== Usages ===
i372 a374 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a370  <|@  <|@
f <@*|@fixed>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}]
keySuccessors: [I@1ea19191
keys: [HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>, HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>]
profileData: PROFILED keyProbabilities: [0.5000010106805837, 0.49999898931941633, 0.0]
stamp: void
=== Inputs ===
value: v355 
=== Succesors ===
successors: v56 v57 v59 
=== Usages ===
=== Predecessor ===
v371 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v355 #successors: v56 v57 v59  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v11|DWORD = MOV input: [v10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = UNCOMPRESSPOINTER (input: v11|DWORD, ~baseRegister: v13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v12|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B12 -> B13, B12 -> B18] defaultTarget: B12 -> B36 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: i372 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i372  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i372 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v399 
lastLocationAccess: - 
=== Succesors ===
next: v271 
=== Usages ===
v69 
=== Predecessor ===
v56 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v399 lastLocationAccess: - #next: v271  <|@  <|@
f <@~|@floating>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i372 
=== Succesors ===
=== Usages ===
v271 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i372  <|@  <|@
f <@*|@fixed>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v69 
=== Succesors ===
trueSuccessor: v269 
falseSuccessor: v270 
=== Usages ===
=== Predecessor ===
i372 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v69 #trueSuccessor: v269 #falseSuccessor: v270  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v10|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v322 
=== Usages ===
=== Predecessor ===
v271 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v322  <|@  <|@
f <@~|@floating>@ <|@
tid i323 <|@
result int[-68627|0xfffffffffffef3ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
rawvalue: -68627
stableDimension: 0
stamp: i32 [-68627]
stampKind: i32
value: int[-68627|0xfffffffffffef3ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i301 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
v269 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-68627|0xfffffffffffef3ed], long[1300|0x514]] destination: B14 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 5]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: i373 
=== Usages ===
=== Predecessor ===
v271 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i373  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i373 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v400 
lastLocationAccess: - 
=== Succesors ===
next: v275 
=== Usages ===
v71 
=== Predecessor ===
v270 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v400 lastLocationAccess: - #next: v275  <|@  <|@
f <@~|@floating>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i373 
y: i2 
=== Succesors ===
=== Usages ===
v275 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i373 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v71 
=== Succesors ===
trueSuccessor: v273 
falseSuccessor: v274 
=== Usages ===
=== Predecessor ===
i373 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v71 #trueSuccessor: v273 #falseSuccessor: v274  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v10|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v328 
=== Usages ===
=== Predecessor ===
v275 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v328  <|@  <|@
f <@~|@floating>@ <|@
tid i329 <|@
result int[-69651|0xfffffffffffeefed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
rawvalue: -69651
stableDimension: 0
stamp: i32 [-69651]
stampKind: i32
value: int[-69651|0xfffffffffffeefed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i301 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
v273 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-69651|0xfffffffffffeefed], long[1300|0x514]] destination: B16 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B33" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 10]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v131 
=== Usages ===
=== Predecessor ===
v275 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v131  <|@  <|@
f <@*|@fixed>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
v274 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B24" "B35" 
    xhandlers
    flags 
    probability 4593671565297607928
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a374 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a374  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a374 <|@
result v14|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v399 
lastLocationAccess: - 
=== Succesors ===
next: v375 
=== Usages ===
v408 v401 v402 
=== Predecessor ===
v57 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v399 lastLocationAccess: - #next: v375  <|@  <|@
f <@~|@floating>@ <|@
tid v408 <|@
result [v14|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a374 
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a374  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v375 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-44555|0xffffffffffff51f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v408 
lastLocationAccess: - 
=== Succesors ===
next: v83 
=== Usages ===
v358 
=== Predecessor ===
a374 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v408 lastLocationAccess: - #next: v83  <|@  <|@
f <@~|@floating>@ <|@
tid v358 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v375 
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v375  <|@  <|@
f <@~|@floating>@ <|@
tid v402 <|@
result [v14|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a374 
=== Succesors ===
=== Usages ===
i377 a384 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a374  <|@  <|@
f <@~|@floating>@ <|@
tid v401 <|@
result [v14|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a374 
=== Succesors ===
=== Usages ===
i376 a378 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a374  <|@  <|@
f <@*|@fixed>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}]
keySuccessors: [I@7c7f8c2
keys: [HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>, HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>]
profileData: PROFILED keyProbabilities: [0.5000010106805837, 0.49999898931941633, 0.0]
stamp: void
=== Inputs ===
value: v358 
=== Succesors ===
successors: v75 v76 v78 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v358 #successors: v75 v76 v78  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[_] = MOV input: [v10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v15|DWORD = MOV input: [v14|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = UNCOMPRESSPOINTER (input: v15|DWORD, ~baseRegister: v17|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v16|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B18 -> B19, B18 -> B24] defaultTarget: B18 -> B35 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: i376 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i376  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i376 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v401 
lastLocationAccess: - 
=== Succesors ===
next: v279 
=== Usages ===
v88 
=== Predecessor ===
v75 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v401 lastLocationAccess: - #next: v279  <|@  <|@
f <@~|@floating>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i376 
=== Succesors ===
=== Usages ===
v279 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i376  <|@  <|@
f <@*|@fixed>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v88 
=== Succesors ===
trueSuccessor: v277 
falseSuccessor: v278 
=== Usages ===
=== Predecessor ===
i376 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v88 #trueSuccessor: v277 #falseSuccessor: v278  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v14|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v330 
=== Usages ===
=== Predecessor ===
v279 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v330  <|@  <|@
f <@~|@floating>@ <|@
tid i331 <|@
result int[-70675|0xfffffffffffeebed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
rawvalue: -70675
stableDimension: 0
stamp: i32 [-70675]
stampKind: i32
value: int[-70675|0xfffffffffffeebed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i301 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
v277 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-70675|0xfffffffffffeebed], long[1300|0x514]] destination: B20 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 5]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: i377 
=== Usages ===
=== Predecessor ===
v279 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i377  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i377 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v402 
lastLocationAccess: - 
=== Succesors ===
next: v283 
=== Usages ===
v90 
=== Predecessor ===
v278 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v402 lastLocationAccess: - #next: v283  <|@  <|@
f <@~|@floating>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i377 
y: i2 
=== Succesors ===
=== Usages ===
v283 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i377 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v90 
=== Succesors ===
trueSuccessor: v281 
falseSuccessor: v282 
=== Usages ===
=== Predecessor ===
i377 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v90 #trueSuccessor: v281 #falseSuccessor: v282  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v14|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v336 
=== Usages ===
=== Predecessor ===
v283 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v336  <|@  <|@
f <@~|@floating>@ <|@
tid i337 <|@
result int[-71699|0xfffffffffffee7ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
rawvalue: -71699
stableDimension: 0
stamp: i32 [-71699]
stampKind: i32
value: int[-71699|0xfffffffffffee7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i301 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
v281 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-71699|0xfffffffffffee7ed], long[1300|0x514]] destination: B22 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B33" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 10]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v128 
=== Usages ===
=== Predecessor ===
v283 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v128  <|@  <|@
f <@*|@fixed>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
v282 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B30" "B34" 
    xhandlers
    flags 
    probability 4589167947463545039
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a378 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a378  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a378 <|@
result v18|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v401 
lastLocationAccess: - 
=== Succesors ===
next: v379 
=== Usages ===
v409 v403 v404 
=== Predecessor ===
v76 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v401 lastLocationAccess: - #next: v379  <|@  <|@
f <@~|@floating>@ <|@
tid v409 <|@
result [v18|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a378 
=== Succesors ===
=== Usages ===
v379 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a378  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v379 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-47371|0xffffffffffff46f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v409 
lastLocationAccess: - 
=== Succesors ===
next: v102 
=== Usages ===
v361 
=== Predecessor ===
a378 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v409 lastLocationAccess: - #next: v102  <|@  <|@
f <@~|@floating>@ <|@
tid v361 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v379 
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v379  <|@  <|@
f <@~|@floating>@ <|@
tid v404 <|@
result [v18|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a378 
=== Succesors ===
=== Usages ===
i381 a383 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a378  <|@  <|@
f <@~|@floating>@ <|@
tid v403 <|@
result [v18|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a378 
=== Succesors ===
=== Usages ===
i380 a382 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a378  <|@  <|@
f <@*|@fixed>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}]
keySuccessors: [I@6b1a9c4d
keys: [HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>, HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>]
profileData: PROFILED keyProbabilities: [0.5000010106805837, 0.49999898931941633, 0.0]
stamp: void
=== Inputs ===
value: v361 
=== Succesors ===
successors: v94 v95 v97 
=== Usages ===
=== Predecessor ===
v379 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v361 #successors: v94 v95 v97  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[_] = MOV input: [v14|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v19|DWORD = MOV input: [v18|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = UNCOMPRESSPOINTER (input: v19|DWORD, ~baseRegister: v21|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v20|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B24 -> B25, B24 -> B30] defaultTarget: B24 -> B34 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: i380 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i380  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i380 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v403 
lastLocationAccess: - 
=== Succesors ===
next: v287 
=== Usages ===
v107 
=== Predecessor ===
v94 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v403 lastLocationAccess: - #next: v287  <|@  <|@
f <@~|@floating>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i380 
=== Succesors ===
=== Usages ===
v287 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i380  <|@  <|@
f <@*|@fixed>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v107 
=== Succesors ===
trueSuccessor: v285 
falseSuccessor: v286 
=== Usages ===
=== Predecessor ===
i380 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v107 #trueSuccessor: v285 #falseSuccessor: v286  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v18|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v338 
=== Usages ===
=== Predecessor ===
v287 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v338  <|@  <|@
f <@~|@floating>@ <|@
tid i339 <|@
result int[-72723|0xfffffffffffee3ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
rawvalue: -72723
stableDimension: 0
stamp: i32 [-72723]
stampKind: i32
value: int[-72723|0xfffffffffffee3ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i301 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
v285 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-72723|0xfffffffffffee3ed], long[1300|0x514]] destination: B26 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 5]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: i381 
=== Usages ===
=== Predecessor ===
v287 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i381  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i381 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v404 
lastLocationAccess: - 
=== Succesors ===
next: v291 
=== Usages ===
v109 
=== Predecessor ===
v286 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v404 lastLocationAccess: - #next: v291  <|@  <|@
f <@~|@floating>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i381 
y: i2 
=== Succesors ===
=== Usages ===
v291 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i381 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v109 
=== Succesors ===
trueSuccessor: v289 
falseSuccessor: v290 
=== Usages ===
=== Predecessor ===
i381 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v109 #trueSuccessor: v289 #falseSuccessor: v290  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v18|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v344 
=== Usages ===
=== Predecessor ===
v291 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v344  <|@  <|@
f <@~|@floating>@ <|@
tid i345 <|@
result int[-73747|0xfffffffffffedfed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
rawvalue: -73747
stableDimension: 0
stamp: i32 [-73747]
stampKind: i32
value: int[-73747|0xfffffffffffedfed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i301 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
v289 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-73747|0xfffffffffffedfed], long[1300|0x514]] destination: B28 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 10]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v130 
=== Usages ===
=== Predecessor ===
v291 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v130  <|@  <|@
f <@*|@fixed>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
v290 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4584664329629518953
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a382 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a382  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a382 <|@
result v22|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v403 
lastLocationAccess: - 
=== Succesors ===
next: v392 
=== Usages ===
a192 v410 
=== Predecessor ===
v95 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v403 lastLocationAccess: - #next: v392  <|@  <|@
f <@~|@floating>@ <|@
tid v410 <|@
result [v22|DWORD[_] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a382 
=== Succesors ===
=== Usages ===
v392 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a382  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?3 
object: v410 
=== Succesors ===
next: a383 
=== Usages ===
=== Predecessor ===
a382 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: v410 #next: a383  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a383 <|@
result v23|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v404 
lastLocationAccess: - 
=== Succesors ===
next: a384 
=== Usages ===
a195 
=== Predecessor ===
v392 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v404 lastLocationAccess: - #next: a384  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a384 <|@
result v24|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v402 
lastLocationAccess: - 
=== Succesors ===
next: a385 
=== Usages ===
a184 
=== Predecessor ===
a383 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v402 lastLocationAccess: - #next: a385  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a385 <|@
result v25|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v400 
lastLocationAccess: - 
=== Succesors ===
next: a386 
=== Usages ===
a173 
=== Predecessor ===
a384 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v400 lastLocationAccess: - #next: a386  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a386 <|@
result v26|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v398 
lastLocationAccess: - 
=== Succesors ===
next: a387 
=== Usages ===
a162 
=== Predecessor ===
a385 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v398 lastLocationAccess: - #next: a387  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a387 <|@
result v27|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v396 
lastLocationAccess: - 
=== Succesors ===
next: a388 
=== Usages ===
a151 
=== Predecessor ===
a386 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v396 lastLocationAccess: - #next: a388  <|@  <|@
f <@~|@floating>@ <|@
tid v394 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a388 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a388 <|@
result v28|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v394 
lastLocationAccess: - 
=== Succesors ===
next: i114 
=== Usages ===
a140 
=== Predecessor ===
a387 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v394 lastLocationAccess: - #next: i114  <|@  <|@
f <@~|@floating>@ <|@
tid a192 <|@
result v29|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a382 
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a382  <|@  <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/util/regex/Pattern$CharPredicate;, resolved>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<Pattern$CharPredicate.is(int)>
=== Inputs ===
arguments: a192 i2 
=== Succesors ===
=== Usages ===
i114 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a192 i2  <|@  <|@
tid ?132 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<Pattern$$Lambda/0x800000044.is(int)>
localsSize: 2
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
?127 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
f <@~|@floating>@ <|@
tid a140 <|@
result v30|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a388 
=== Succesors ===
=== Usages ===
?127 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a388  <|@  <|@
tid ?127 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Pattern.lambda$union$3(Pattern$CharPredicate, Pattern$CharPredicate, int)>
localsSize: 3
locksSize: 0
sourceFile: Pattern.java
sourceLine: 5802
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?132 
values: - a140 i2 
=== Succesors ===
=== Usages ===
?126 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?132 values: - a140 i2  <|@  <|@
tid ?126 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<Pattern$$Lambda/0x800000044.is(int)>
localsSize: 2
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?127 
=== Succesors ===
=== Usages ===
?125 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?127  <|@  <|@
f <@~|@floating>@ <|@
tid a151 <|@
result v31|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a387 
=== Succesors ===
=== Usages ===
?125 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a387  <|@  <|@
tid ?125 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Pattern.lambda$union$3(Pattern$CharPredicate, Pattern$CharPredicate, int)>
localsSize: 3
locksSize: 0
sourceFile: Pattern.java
sourceLine: 5802
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?126 
values: - a151 i2 
=== Succesors ===
=== Usages ===
?124 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?126 values: - a151 i2  <|@  <|@
tid ?124 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<Pattern$$Lambda/0x800000044.is(int)>
localsSize: 2
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?125 
=== Succesors ===
=== Usages ===
?123 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?125  <|@  <|@
f <@~|@floating>@ <|@
tid a162 <|@
result v32|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a386 
=== Succesors ===
=== Usages ===
?123 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a386  <|@  <|@
tid ?123 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Pattern.lambda$union$3(Pattern$CharPredicate, Pattern$CharPredicate, int)>
localsSize: 3
locksSize: 0
sourceFile: Pattern.java
sourceLine: 5802
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?124 
values: - a162 i2 
=== Succesors ===
=== Usages ===
?122 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?124 values: - a162 i2  <|@  <|@
tid ?122 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<Pattern$$Lambda/0x800000044.is(int)>
localsSize: 2
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?123 
=== Succesors ===
=== Usages ===
?121 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?123  <|@  <|@
f <@~|@floating>@ <|@
tid a173 <|@
result v33|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a385 
=== Succesors ===
=== Usages ===
?121 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a385  <|@  <|@
tid ?121 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Pattern.lambda$union$3(Pattern$CharPredicate, Pattern$CharPredicate, int)>
localsSize: 3
locksSize: 0
sourceFile: Pattern.java
sourceLine: 5802
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?122 
values: - a173 i2 
=== Succesors ===
=== Usages ===
?120 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?122 values: - a173 i2  <|@  <|@
tid ?120 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<Pattern$$Lambda/0x800000044.is(int)>
localsSize: 2
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?121 
=== Succesors ===
=== Usages ===
?119 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?121  <|@  <|@
f <@~|@floating>@ <|@
tid a184 <|@
result v34|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a384 
=== Succesors ===
=== Usages ===
?119 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a384  <|@  <|@
tid ?119 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Pattern.lambda$union$3(Pattern$CharPredicate, Pattern$CharPredicate, int)>
localsSize: 3
locksSize: 0
sourceFile: Pattern.java
sourceLine: 5802
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?120 
values: - a184 i2 
=== Succesors ===
=== Usages ===
?118 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?120 values: - a184 i2  <|@  <|@
tid ?118 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<Pattern$$Lambda/0x800000044.is(int)>
localsSize: 2
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?119 
=== Succesors ===
=== Usages ===
?115 ?296 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?119  <|@  <|@
f <@~|@floating>@ <|@
tid a195 <|@
result v35|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a383 
=== Succesors ===
=== Usages ===
?115 ?296 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a383  <|@  <|@
tid ?296 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Pattern.lambda$union$3(Pattern$CharPredicate, Pattern$CharPredicate, int)>
localsSize: 3
locksSize: 0
sourceFile: Pattern.java
sourceLine: 5802
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?118 
values: - a195 i2 
=== Succesors ===
=== Usages ===
i114 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?118 values: - a195 i2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i114 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 2
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
polymorphic: true
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Direct#Pattern$CharPredicate.is
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v199 
stateDuring: ?296 
=== Succesors ===
next: v295 
=== Usages ===
v116 
=== Predecessor ===
a388 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v199 stateDuring: ?296 #next: v295  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v116 ?115 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i114 
y: i12 
=== Succesors ===
=== Usages ===
v295 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i114 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v116 
=== Succesors ===
trueSuccessor: v293 
falseSuccessor: v294 
=== Usages ===
=== Predecessor ===
i114 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v116 #trueSuccessor: v293 #falseSuccessor: v294  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[_] = MOV input: [v18|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v22|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV input: [v18|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD[_] = MOV input: [v14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV input: [v10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v27|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v35|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v34|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v33|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v32|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v31|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v30|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v36|DWORD, y: v36|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v292 
=== Usages ===
=== Predecessor ===
v295 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v292  <|@  <|@
tid ?115 <|@
d <@d|@=== Debug Properties ===
bci: 7
bytecode: ifne
code: ResolvedJavaMethodBytecode<Pattern.lambda$union$3(Pattern$CharPredicate, Pattern$CharPredicate, int)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
sourceFile: Pattern.java
sourceLine: 5802
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?118 
values: i12 - a195 i2 
=== Succesors ===
=== Usages ===
v292 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?118 values: i12 - a195 i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
reason: UnreachedCode
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0xd98badbc]: UnreachedCode@6[HotSpotMethod<Pattern.lambda$union$3(Pattern$CharPredicate, Pattern$CharPredicate, int)>, 10]}
stamp: void
=== Inputs ===
stateBefore: ?115 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v293 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?115  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -74771 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - v35|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v34|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v33|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v32|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v31|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v30|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584664329629518953
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 20]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v129 
=== Usages ===
=== Predecessor ===
v295 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v129  <|@  <|@
f <@*|@fixed>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
v294 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B5" "B11" "B23" "B32" "B29" "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v17 v19 v128 v129 v130 v131 
=== Succesors ===
next: v9 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v17 v19 v128 v129 v130 v131 #next: v9  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 20]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v9 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 12]
stamp: void
=== Inputs ===
memoryMap: - 
result: i13 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i13  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v342 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v342  <|@  <|@
f <@~|@floating>@ <|@
tid i343 <|@
result int[-24627|0xffffffffffff9fcd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
rawvalue: -24627
stableDimension: 0
stamp: i32 [-24627]
stampKind: i32
value: int[-24627|0xffffffffffff9fcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i301 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
v97 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-24627|0xffffffffffff9fcd], long[660|0x294]] destination: B34 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v334 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v334  <|@  <|@
f <@~|@floating>@ <|@
tid i335 <|@
result int[-19763|0xffffffffffffb2cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
rawvalue: -19763
stableDimension: 0
stamp: i32 [-19763]
stampKind: i32
value: int[-19763|0xffffffffffffb2cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i301 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
v78 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-19763|0xffffffffffffb2cd], long[660|0x294]] destination: B35 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v326 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v326  <|@  <|@
f <@~|@floating>@ <|@
tid i327 <|@
result int[-14899|0xffffffffffffc5cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
rawvalue: -14899
stableDimension: 0
stamp: i32 [-14899]
stampKind: i32
value: int[-14899|0xffffffffffffc5cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i301 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
v59 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-14899|0xffffffffffffc5cd], long[660|0x294]] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v318 
=== Usages ===
=== Predecessor ===
v45 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v318  <|@  <|@
f <@~|@floating>@ <|@
tid i319 <|@
result int[-10035|0xffffffffffffd8cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
rawvalue: -10035
stableDimension: 0
stamp: i32 [-10035]
stampKind: i32
value: int[-10035|0xffffffffffffd8cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i301 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
v40 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-10035|0xffffffffffffd8cd], long[660|0x294]] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v309 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v309  <|@  <|@
f <@~|@floating>@ <|@
tid i310 <|@
result int[-5171|0xffffffffffffebcd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
rawvalue: -5171
stableDimension: 0
stamp: i32 [-5171]
stampKind: i32
value: int[-5171|0xffffffffffffebcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i301 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
v21 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-5171|0xffffffffffffebcd], long[660|0x294]] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" "B38" "B4" "B8" "B37" "B10" "B14" "B36" "B16" "B20" "B35" "B22" "B26" "B34" "B28" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i301 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: i32 [-73747 - -5171] bits:1...1xxxxxxxxx11x01101
valueDescription: i32
=== Inputs ===
merge: v297 
values: i305 i310 i313 i315 i319 i321 i323 i327 i329 i331 i335 i337 i339 i343 i345 
=== Succesors ===
=== Usages ===
v303 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v297 values: i305 i310 i313 i315 i319 i321 i323 i327 i329 i331 i335 i337 i339 i343 i345  <|@  <|@
f <@~|@floating>@ <|@
tid j302 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: i64 [660 - 1300] bits:0...0xxxx0010100
valueDescription: i64
=== Inputs ===
merge: v297 
values: j306 j311 j306 j306 j311 j306 j306 j311 j306 j306 j311 j306 j306 j311 j306 
=== Succesors ===
=== Usages ===
v303 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v297 values: j306 j311 j306 j306 j311 j306 j306 j311 j306 j306 j311 j306 j306 j311 j306  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v304 v309 v312 v314 v318 v320 v322 v326 v328 v330 v334 v336 v338 v342 v344 
=== Succesors ===
next: v303 
=== Usages ===
i301 j302 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v304 v309 v312 v314 v318 v320 v322 v326 v328 v330 v334 v336 v338 v342 v344 #next: v303  <|@  <|@
f <@*|@fixed>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i301 
speculation: j302 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v297 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i301 speculation: j302  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|DWORD, v38|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@62ed65ef slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v4|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B0 -> B1, B0 -> B6] defaultTarget: B0 -> B38 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v2|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v2|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B12" "B37" 
    xhandlers
    flags 
    probability 4602678800965844112
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v7|DWORD = MOV input: [v6|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v7|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v8|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B6 -> B7, B6 -> B12] defaultTarget: B6 -> B37 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v6|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v6|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B33" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" "B18" "B36" 
    xhandlers
    flags 
    probability 4598175183131707619
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v11|DWORD = MOV input: [v10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = UNCOMPRESSPOINTER (input: v11|DWORD, ~baseRegister: v13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v12|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B12 -> B13, B12 -> B18] defaultTarget: B12 -> B36 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v10|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v10|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B33" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B24" "B35" 
    xhandlers
    flags 
    probability 4593671565297607928
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[_] = MOV input: [v10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v15|DWORD = MOV input: [v14|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = UNCOMPRESSPOINTER (input: v15|DWORD, ~baseRegister: v17|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v16|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B18 -> B19, B18 -> B24] defaultTarget: B18 -> B35 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v14|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v14|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B33" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B30" "B34" 
    xhandlers
    flags 
    probability 4589167947463545039
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[_] = MOV input: [v14|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v19|DWORD = MOV input: [v18|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = UNCOMPRESSPOINTER (input: v19|DWORD, ~baseRegister: v21|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v20|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B24 -> B25, B24 -> B30] defaultTarget: B24 -> B34 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v18|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v18|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4584664329629518953
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[_] = MOV input: [v18|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v22|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV input: [v18|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD[_] = MOV input: [v14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV input: [v10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v27|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v35|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v34|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v33|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v32|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v31|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v30|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v36|DWORD, y: v36|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584664329629518953
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B5" "B11" "B23" "B32" "B29" "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-66579|0xfffffffffffefbed], long[1300|0x514]] destination: B8 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-71699|0xfffffffffffee7ed], long[1300|0x514]] destination: B22 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-72723|0xfffffffffffee3ed], long[1300|0x514]] destination: B26 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-73747|0xfffffffffffedfed], long[1300|0x514]] destination: B28 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-24627|0xffffffffffff9fcd], long[660|0x294]] destination: B34 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -74771 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - v35|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v34|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v33|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v32|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v31|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v30|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-67603|0xfffffffffffef7ed], long[1300|0x514]] destination: B10 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-70675|0xfffffffffffeebed], long[1300|0x514]] destination: B20 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-19763|0xffffffffffffb2cd], long[660|0x294]] destination: B35 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-10035|0xffffffffffffd8cd], long[660|0x294]] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-68627|0xfffffffffffef3ed], long[1300|0x514]] destination: B14 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-69651|0xfffffffffffeefed], long[1300|0x514]] destination: B16 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-14899|0xffffffffffffc5cd], long[660|0x294]] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-64531|0xffffffffffff03ed], long[1300|0x514]] destination: B2 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-65555|0xfffffffffffeffed], long[1300|0x514]] destination: B4 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-5171|0xffffffffffffebcd], long[660|0x294]] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" "B38" "B4" "B8" "B37" "B10" "B14" "B36" "B16" "B20" "B35" "B22" "B26" "B34" "B28" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|DWORD, v38|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // arg$1:java.util.regex.Pattern$CharPredicate
     4: aload_0       
     5: getfield      #2          // arg$2:java.util.regex.Pattern$CharPredicate
     8: iload_1       
     9: invokestatic  #3          // java.util.regex.Pattern.lambda$union$3:(java.util.regex.Pattern$CharPredicate, java.util.regex.Pattern$CharPredicate, int)boolean
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@62ed65ef slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v4|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B0 -> B1, B0 -> B6] defaultTarget: B0 -> B38 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v2|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v2|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B12" "B37" 
    xhandlers
    flags 
    probability 4602678800965844112
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v7|DWORD = MOV input: [v6|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v7|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v8|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B6 -> B7, B6 -> B12] defaultTarget: B6 -> B37 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v6|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v6|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B33" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" "B18" "B36" 
    xhandlers
    flags 
    probability 4598175183131707619
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v11|DWORD = MOV input: [v10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = UNCOMPRESSPOINTER (input: v11|DWORD, ~baseRegister: v13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v12|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B12 -> B13, B12 -> B18] defaultTarget: B12 -> B36 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v10|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v10|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B33" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B24" "B35" 
    xhandlers
    flags 
    probability 4593671565297607928
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[_] = MOV input: [v10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v15|DWORD = MOV input: [v14|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = UNCOMPRESSPOINTER (input: v15|DWORD, ~baseRegister: v17|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v16|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B18 -> B19, B18 -> B24] defaultTarget: B18 -> B35 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v14|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v14|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B33" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B30" "B34" 
    xhandlers
    flags 
    probability 4589167947463545039
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[_] = MOV input: [v14|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v19|DWORD = MOV input: [v18|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = UNCOMPRESSPOINTER (input: v19|DWORD, ~baseRegister: v21|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v20|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B24 -> B25, B24 -> B30] defaultTarget: B24 -> B34 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v18|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v18|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4584664329629518953
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[_] = MOV input: [v18|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v22|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV input: [v18|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD[_] = MOV input: [v14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV input: [v10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v27|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v35|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v34|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v33|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v32|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v31|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v30|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v36|DWORD, y: v36|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584664329629518953
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B5" "B11" "B23" "B32" "B29" "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-66579|0xfffffffffffefbed], long[1300|0x514]] destination: B8 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-71699|0xfffffffffffee7ed], long[1300|0x514]] destination: B22 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-72723|0xfffffffffffee3ed], long[1300|0x514]] destination: B26 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-73747|0xfffffffffffedfed], long[1300|0x514]] destination: B28 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-24627|0xffffffffffff9fcd], long[660|0x294]] destination: B34 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -74771 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - v35|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v34|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v33|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v32|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v31|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v30|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-67603|0xfffffffffffef7ed], long[1300|0x514]] destination: B10 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-70675|0xfffffffffffeebed], long[1300|0x514]] destination: B20 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-19763|0xffffffffffffb2cd], long[660|0x294]] destination: B35 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-10035|0xffffffffffffd8cd], long[660|0x294]] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-68627|0xfffffffffffef3ed], long[1300|0x514]] destination: B14 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-69651|0xfffffffffffeefed], long[1300|0x514]] destination: B16 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-14899|0xffffffffffffc5cd], long[660|0x294]] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-64531|0xffffffffffff03ed], long[1300|0x514]] destination: B2 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-65555|0xfffffffffffeffed], long[1300|0x514]] destination: B4 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-5171|0xffffffffffffebcd], long[660|0x294]] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" "B38" "B4" "B8" "B37" "B10" "B14" "B36" "B16" "B20" "B35" "B22" "B26" "B34" "B28" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|DWORD, v38|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // arg$1:java.util.regex.Pattern$CharPredicate
     4: aload_0       
     5: getfield      #2          // arg$2:java.util.regex.Pattern$CharPredicate
     8: iload_1       
     9: invokestatic  #3          // java.util.regex.Pattern.lambda$union$3:(java.util.regex.Pattern$CharPredicate, java.util.regex.Pattern$CharPredicate, int)boolean
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@62ed65ef slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v4|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B0 -> B1, B0 -> B6] defaultTarget: B0 -> B38 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v2|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v2|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B12" "B37" 
    xhandlers
    flags 
    probability 4602678800965844112
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v7|DWORD = MOV input: [v6|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v7|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v8|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B6 -> B7, B6 -> B12] defaultTarget: B6 -> B37 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v6|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v6|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B33" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" "B18" "B36" 
    xhandlers
    flags 
    probability 4598175183131707619
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v11|DWORD = MOV input: [v10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = UNCOMPRESSPOINTER (input: v11|DWORD, ~baseRegister: v13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v12|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B12 -> B13, B12 -> B18] defaultTarget: B12 -> B36 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v10|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v10|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B33" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B24" "B35" 
    xhandlers
    flags 
    probability 4593671565297607928
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[_] = MOV input: [v10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v15|DWORD = MOV input: [v14|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = UNCOMPRESSPOINTER (input: v15|DWORD, ~baseRegister: v17|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v16|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B18 -> B19, B18 -> B24] defaultTarget: B18 -> B35 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v14|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v14|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B33" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B30" "B34" 
    xhandlers
    flags 
    probability 4589167947463545039
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[_] = MOV input: [v14|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v19|DWORD = MOV input: [v18|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = UNCOMPRESSPOINTER (input: v19|DWORD, ~baseRegister: v21|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v20|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B24 -> B25, B24 -> B30] defaultTarget: B24 -> B34 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v18|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v18|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4584664329629518953
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[_] = MOV input: [v18|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v22|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV input: [v18|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD[_] = MOV input: [v14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV input: [v10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v27|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v35|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v34|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v33|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v32|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v31|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v30|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v36|DWORD, y: v36|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584664329629518953
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B5" "B11" "B23" "B32" "B29" "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-66579|0xfffffffffffefbed], long[1300|0x514]] destination: B8 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-71699|0xfffffffffffee7ed], long[1300|0x514]] destination: B22 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-72723|0xfffffffffffee3ed], long[1300|0x514]] destination: B26 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-73747|0xfffffffffffedfed], long[1300|0x514]] destination: B28 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-24627|0xffffffffffff9fcd], long[660|0x294]] destination: B34 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -74771 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - v35|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v34|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v33|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v32|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v31|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v30|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-67603|0xfffffffffffef7ed], long[1300|0x514]] destination: B10 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-70675|0xfffffffffffeebed], long[1300|0x514]] destination: B20 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-19763|0xffffffffffffb2cd], long[660|0x294]] destination: B35 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-10035|0xffffffffffffd8cd], long[660|0x294]] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-68627|0xfffffffffffef3ed], long[1300|0x514]] destination: B14 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-69651|0xfffffffffffeefed], long[1300|0x514]] destination: B16 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-14899|0xffffffffffffc5cd], long[660|0x294]] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-64531|0xffffffffffff03ed], long[1300|0x514]] destination: B2 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-65555|0xfffffffffffeffed], long[1300|0x514]] destination: B4 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-5171|0xffffffffffffebcd], long[660|0x294]] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" "B38" "B4" "B8" "B37" "B10" "B14" "B36" "B16" "B20" "B35" "B22" "B26" "B34" "B28" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|DWORD, v38|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // arg$1:java.util.regex.Pattern$CharPredicate
     4: aload_0       
     5: getfield      #2          // arg$2:java.util.regex.Pattern$CharPredicate
     8: iload_1       
     9: invokestatic  #3          // java.util.regex.Pattern.lambda$union$3:(java.util.regex.Pattern$CharPredicate, java.util.regex.Pattern$CharPredicate, int)boolean
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@62ed65ef slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v4|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B0 -> B1, B0 -> B6] defaultTarget: B0 -> B38 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v2|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v2|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B12" "B37" 
    xhandlers
    flags 
    probability 4602678800965844112
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v7|DWORD = MOV input: [v6|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v7|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v8|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B6 -> B7, B6 -> B12] defaultTarget: B6 -> B37 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v6|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v6|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B33" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" "B18" "B36" 
    xhandlers
    flags 
    probability 4598175183131707619
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v11|DWORD = MOV input: [v10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = UNCOMPRESSPOINTER (input: v11|DWORD, ~baseRegister: v13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v12|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B12 -> B13, B12 -> B18] defaultTarget: B12 -> B36 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v10|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v10|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B33" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B24" "B35" 
    xhandlers
    flags 
    probability 4593671565297607928
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[_] = MOV input: [v10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v15|DWORD = MOV input: [v14|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = UNCOMPRESSPOINTER (input: v15|DWORD, ~baseRegister: v17|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v16|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B18 -> B19, B18 -> B24] defaultTarget: B18 -> B35 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v14|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v14|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B33" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B30" "B34" 
    xhandlers
    flags 
    probability 4589167947463545039
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[_] = MOV input: [v14|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v19|DWORD = MOV input: [v18|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = UNCOMPRESSPOINTER (input: v19|DWORD, ~baseRegister: v21|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v20|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B24 -> B25, B24 -> B30] defaultTarget: B24 -> B34 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v18|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v18|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4584664329629518953
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[_] = MOV input: [v18|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v22|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV input: [v18|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD[_] = MOV input: [v14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV input: [v10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v27|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v35|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v34|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v33|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v32|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v31|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v30|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v36|DWORD, y: v36|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584664329629518953
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B5" "B11" "B23" "B32" "B29" "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-66579|0xfffffffffffefbed], long[1300|0x514]] destination: B8 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-71699|0xfffffffffffee7ed], long[1300|0x514]] destination: B22 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-72723|0xfffffffffffee3ed], long[1300|0x514]] destination: B26 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-73747|0xfffffffffffedfed], long[1300|0x514]] destination: B28 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-24627|0xffffffffffff9fcd], long[660|0x294]] destination: B34 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -74771 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - v35|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v34|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v33|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v32|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v31|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v30|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-67603|0xfffffffffffef7ed], long[1300|0x514]] destination: B10 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-70675|0xfffffffffffeebed], long[1300|0x514]] destination: B20 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-19763|0xffffffffffffb2cd], long[660|0x294]] destination: B35 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-10035|0xffffffffffffd8cd], long[660|0x294]] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-68627|0xfffffffffffef3ed], long[1300|0x514]] destination: B14 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-69651|0xfffffffffffeefed], long[1300|0x514]] destination: B16 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-14899|0xffffffffffffc5cd], long[660|0x294]] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-64531|0xffffffffffff03ed], long[1300|0x514]] destination: B2 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-65555|0xfffffffffffeffed], long[1300|0x514]] destination: B4 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-5171|0xffffffffffffebcd], long[660|0x294]] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" "B38" "B4" "B8" "B37" "B10" "B14" "B36" "B16" "B20" "B35" "B22" "B26" "B34" "B28" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|DWORD, v38|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // arg$1:java.util.regex.Pattern$CharPredicate
     4: aload_0       
     5: getfield      #2          // arg$2:java.util.regex.Pattern$CharPredicate
     8: iload_1       
     9: invokestatic  #3          // java.util.regex.Pattern.lambda$union$3:(java.util.regex.Pattern$CharPredicate, java.util.regex.Pattern$CharPredicate, int)boolean
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@62ed65ef slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v4|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B0 -> B1, B0 -> B6] defaultTarget: B0 -> B38 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v2|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v2|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B12" "B37" 
    xhandlers
    flags 
    probability 4602678800965844112
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v7|DWORD = MOV input: [v6|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v7|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v8|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B6 -> B7, B6 -> B12] defaultTarget: B6 -> B37 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v6|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v6|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B33" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" "B18" "B36" 
    xhandlers
    flags 
    probability 4598175183131707619
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v11|DWORD = MOV input: [v10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = UNCOMPRESSPOINTER (input: v11|DWORD, ~baseRegister: v13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v12|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B12 -> B13, B12 -> B18] defaultTarget: B12 -> B36 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v10|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v10|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B33" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B24" "B35" 
    xhandlers
    flags 
    probability 4593671565297607928
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[_] = MOV input: [v10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v15|DWORD = MOV input: [v14|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = UNCOMPRESSPOINTER (input: v15|DWORD, ~baseRegister: v17|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v16|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B18 -> B19, B18 -> B24] defaultTarget: B18 -> B35 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v14|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v14|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B33" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B30" "B34" 
    xhandlers
    flags 
    probability 4589167947463545039
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[_] = MOV input: [v14|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v19|DWORD = MOV input: [v18|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = UNCOMPRESSPOINTER (input: v19|DWORD, ~baseRegister: v21|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v20|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B24 -> B25, B24 -> B30] defaultTarget: B24 -> B34 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v18|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v18|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4584664329629518953
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[_] = MOV input: [v18|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v22|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV input: [v18|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD[_] = MOV input: [v14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV input: [v10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v27|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v35|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v34|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v33|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v32|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v31|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v30|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v36|DWORD, y: v36|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584664329629518953
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B5" "B11" "B23" "B32" "B29" "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-66579|0xfffffffffffefbed], long[1300|0x514]] destination: B8 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-71699|0xfffffffffffee7ed], long[1300|0x514]] destination: B22 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-72723|0xfffffffffffee3ed], long[1300|0x514]] destination: B26 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-73747|0xfffffffffffedfed], long[1300|0x514]] destination: B28 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-24627|0xffffffffffff9fcd], long[660|0x294]] destination: B34 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -74771 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - v35|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v34|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v33|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v32|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v31|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v30|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-67603|0xfffffffffffef7ed], long[1300|0x514]] destination: B10 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-70675|0xfffffffffffeebed], long[1300|0x514]] destination: B20 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-19763|0xffffffffffffb2cd], long[660|0x294]] destination: B35 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-10035|0xffffffffffffd8cd], long[660|0x294]] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-68627|0xfffffffffffef3ed], long[1300|0x514]] destination: B14 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-69651|0xfffffffffffeefed], long[1300|0x514]] destination: B16 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-14899|0xffffffffffffc5cd], long[660|0x294]] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-64531|0xffffffffffff03ed], long[1300|0x514]] destination: B2 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-65555|0xfffffffffffeffed], long[1300|0x514]] destination: B4 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-5171|0xffffffffffffebcd], long[660|0x294]] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" "B38" "B4" "B8" "B37" "B10" "B14" "B36" "B16" "B20" "B35" "B22" "B26" "B34" "B28" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|DWORD, v38|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // arg$1:java.util.regex.Pattern$CharPredicate
     4: aload_0       
     5: getfield      #2          // arg$2:java.util.regex.Pattern$CharPredicate
     8: iload_1       
     9: invokestatic  #3          // java.util.regex.Pattern.lambda$union$3:(java.util.regex.Pattern$CharPredicate, java.util.regex.Pattern$CharPredicate, int)boolean
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@62ed65ef slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction v5|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   54  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   56  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v4|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B0 -> B1, B0 -> B6] defaultTarget: B0 -> B38 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v2|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v2|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B12" "B37" 
    xhandlers
    flags 
    probability 4602678800965844112
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction v6|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  126  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v7|DWORD = MOV input: [v6|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  128  <|@ instruction v9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  130  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v7|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  132  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v8|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B6 -> B7, B6 -> B12] defaultTarget: B6 -> B37 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v6|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v6|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B33" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" "B18" "B36" 
    xhandlers
    flags 
    probability 4598175183131707619
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction v10|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  202  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v11|DWORD = MOV input: [v10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  204  <|@ instruction v13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  206  <|@ instruction v12|QWORD = UNCOMPRESSPOINTER (input: v11|DWORD, ~baseRegister: v13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  208  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v12|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B12 -> B13, B12 -> B18] defaultTarget: B12 -> B36 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v10|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v10|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B33" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B24" "B35" 
    xhandlers
    flags 
    probability 4593671565297607928
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction v14|DWORD[_] = MOV input: [v10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  278  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v15|DWORD = MOV input: [v14|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  280  <|@ instruction v17|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  282  <|@ instruction v16|QWORD = UNCOMPRESSPOINTER (input: v15|DWORD, ~baseRegister: v17|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  284  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v16|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B18 -> B19, B18 -> B24] defaultTarget: B18 -> B35 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v14|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v14|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B33" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B30" "B34" 
    xhandlers
    flags 
    probability 4589167947463545039
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction v18|DWORD[_] = MOV input: [v14|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v19|DWORD = MOV input: [v18|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  356  <|@ instruction v21|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  358  <|@ instruction v20|QWORD = UNCOMPRESSPOINTER (input: v19|DWORD, ~baseRegister: v21|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  360  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v20|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B24 -> B25, B24 -> B30] defaultTarget: B24 -> B34 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v18|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v18|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4584664329629518953
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction v22|DWORD[_] = MOV input: [v18|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  466  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v22|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  468  <|@ instruction v23|DWORD[_] = MOV input: [v18|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  470  <|@ instruction v24|DWORD[_] = MOV input: [v14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  472  <|@ instruction v25|DWORD[_] = MOV input: [v10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  474  <|@ instruction v26|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  476  <|@ instruction v27|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  478  <|@ instruction v28|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  480  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  482  <|@ instruction v30|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  484  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v27|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  486  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  488  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  490  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  492  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr  498  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v35|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v34|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v33|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v32|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v31|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v30|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9] <|@ <|@
      nr  500  <|@ instruction v36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  502  <|@ instruction TESTBRANCH (x: v36|DWORD, y: v36|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584664329629518953
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B5" "B11" "B23" "B32" "B29" "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  534  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [int[-66579|0xfffffffffffefbed], long[1300|0x514]] destination: B8 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction JUMP ~outgoingValues: [int[-71699|0xfffffffffffee7ed], long[1300|0x514]] destination: B22 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [int[-72723|0xfffffffffffee3ed], long[1300|0x514]] destination: B26 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [int[-73747|0xfffffffffffedfed], long[1300|0x514]] destination: B28 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction JUMP ~outgoingValues: [int[-24627|0xffffffffffff9fcd], long[660|0x294]] destination: B34 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction MOV x: [r15|QWORD + 1156] y: -74771 size: DWORD <|@ <|@
      nr  604  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  606  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - v35|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v34|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v33|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v32|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v31|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v30|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [int[-67603|0xfffffffffffef7ed], long[1300|0x514]] destination: B10 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction JUMP ~outgoingValues: [int[-70675|0xfffffffffffeebed], long[1300|0x514]] destination: B20 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction JUMP ~outgoingValues: [int[-19763|0xffffffffffffb2cd], long[660|0x294]] destination: B35 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [int[-10035|0xffffffffffffd8cd], long[660|0x294]] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [int[-68627|0xfffffffffffef3ed], long[1300|0x514]] destination: B14 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction JUMP ~outgoingValues: [int[-69651|0xfffffffffffeefed], long[1300|0x514]] destination: B16 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction JUMP ~outgoingValues: [int[-14899|0xffffffffffffc5cd], long[660|0x294]] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction JUMP ~outgoingValues: [int[-64531|0xffffffffffff03ed], long[1300|0x514]] destination: B2 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction JUMP ~outgoingValues: [int[-65555|0xfffffffffffeffed], long[1300|0x514]] destination: B4 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction JUMP ~outgoingValues: [int[-5171|0xffffffffffffebcd], long[660|0x294]] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" "B38" "B4" "B8" "B37" "B10" "B14" "B36" "B16" "B20" "B35" "B22" "B26" "B34" "B28" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      LIR
      nr  708  <|@ instruction [v37|DWORD, v38|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v37|DWORD) size: DWORD <|@ <|@
      nr  726  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v38|QWORD) size: QWORD <|@ <|@
      nr  728  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // arg$1:java.util.regex.Pattern$CharPredicate
     4: aload_0       
     5: getfield      #2          // arg$2:java.util.regex.Pattern$CharPredicate
     8: iload_1       
     9: invokestatic  #3          // java.util.regex.Pattern.lambda$union$3:(java.util.regex.Pattern$CharPredicate, java.util.regex.Pattern$CharPredicate, int)boolean
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@62ed65ef slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction v5|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   54  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   56  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v4|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B0 -> B1, B0 -> B6] defaultTarget: B0 -> B38 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v2|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v2|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B12" "B37" 
    xhandlers
    flags 
    probability 4602678800965844112
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction v6|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  126  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v7|DWORD = MOV input: [v6|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  128  <|@ instruction v9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  130  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v7|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  132  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v8|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B6 -> B7, B6 -> B12] defaultTarget: B6 -> B37 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v6|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v6|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B33" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" "B18" "B36" 
    xhandlers
    flags 
    probability 4598175183131707619
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction v10|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  202  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v11|DWORD = MOV input: [v10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  204  <|@ instruction v13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  206  <|@ instruction v12|QWORD = UNCOMPRESSPOINTER (input: v11|DWORD, ~baseRegister: v13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  208  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v12|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B12 -> B13, B12 -> B18] defaultTarget: B12 -> B36 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v10|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v10|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B33" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B24" "B35" 
    xhandlers
    flags 
    probability 4593671565297607928
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction v14|DWORD[_] = MOV input: [v10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  278  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v15|DWORD = MOV input: [v14|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  280  <|@ instruction v17|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  282  <|@ instruction v16|QWORD = UNCOMPRESSPOINTER (input: v15|DWORD, ~baseRegister: v17|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  284  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v16|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B18 -> B19, B18 -> B24] defaultTarget: B18 -> B35 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v14|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v14|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B33" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B30" "B34" 
    xhandlers
    flags 
    probability 4589167947463545039
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction v18|DWORD[_] = MOV input: [v14|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v19|DWORD = MOV input: [v18|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  356  <|@ instruction v21|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  358  <|@ instruction v20|QWORD = UNCOMPRESSPOINTER (input: v19|DWORD, ~baseRegister: v21|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  360  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v20|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B24 -> B25, B24 -> B30] defaultTarget: B24 -> B34 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v18|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v18|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4584664329629518953
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction v22|DWORD[_] = MOV input: [v18|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  466  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v22|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  468  <|@ instruction v23|DWORD[_] = MOV input: [v18|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  470  <|@ instruction v24|DWORD[_] = MOV input: [v14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  472  <|@ instruction v25|DWORD[_] = MOV input: [v10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  474  <|@ instruction v26|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  476  <|@ instruction v27|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  478  <|@ instruction v28|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  480  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  482  <|@ instruction v30|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  484  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v27|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  486  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  488  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  490  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  492  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr  498  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v35|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v34|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v33|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v32|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v31|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v30|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9] <|@ <|@
      nr  500  <|@ instruction v36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  502  <|@ instruction TESTBRANCH (x: v36|DWORD, y: v36|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584664329629518953
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B5" "B11" "B23" "B32" "B29" "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  534  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [int[-66579|0xfffffffffffefbed], long[1300|0x514]] destination: B8 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction JUMP ~outgoingValues: [int[-71699|0xfffffffffffee7ed], long[1300|0x514]] destination: B22 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [int[-72723|0xfffffffffffee3ed], long[1300|0x514]] destination: B26 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [int[-73747|0xfffffffffffedfed], long[1300|0x514]] destination: B28 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction JUMP ~outgoingValues: [int[-24627|0xffffffffffff9fcd], long[660|0x294]] destination: B34 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction MOV x: [r15|QWORD + 1156] y: -74771 size: DWORD <|@ <|@
      nr  604  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  606  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - v35|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v34|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v33|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v32|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v31|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v30|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [int[-67603|0xfffffffffffef7ed], long[1300|0x514]] destination: B10 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction JUMP ~outgoingValues: [int[-70675|0xfffffffffffeebed], long[1300|0x514]] destination: B20 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction JUMP ~outgoingValues: [int[-19763|0xffffffffffffb2cd], long[660|0x294]] destination: B35 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [int[-10035|0xffffffffffffd8cd], long[660|0x294]] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [int[-68627|0xfffffffffffef3ed], long[1300|0x514]] destination: B14 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction JUMP ~outgoingValues: [int[-69651|0xfffffffffffeefed], long[1300|0x514]] destination: B16 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction JUMP ~outgoingValues: [int[-14899|0xffffffffffffc5cd], long[660|0x294]] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction JUMP ~outgoingValues: [int[-64531|0xffffffffffff03ed], long[1300|0x514]] destination: B2 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction JUMP ~outgoingValues: [int[-65555|0xfffffffffffeffed], long[1300|0x514]] destination: B4 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction JUMP ~outgoingValues: [int[-5171|0xffffffffffffebcd], long[660|0x294]] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" "B38" "B4" "B8" "B37" "B10" "B14" "B36" "B16" "B20" "B35" "B22" "B26" "B34" "B28" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      LIR
      nr  708  <|@ instruction [v37|DWORD, v38|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v37|DWORD) size: DWORD <|@ <|@
      nr  726  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v38|QWORD) size: QWORD <|@ <|@
      nr  728  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // arg$1:java.util.regex.Pattern$CharPredicate
     4: aload_0       
     5: getfield      #2          // arg$2:java.util.regex.Pattern$CharPredicate
     8: iload_1       
     9: invokestatic  #3          // java.util.regex.Pattern.lambda$union$3:(java.util.regex.Pattern$CharPredicate, java.util.regex.Pattern$CharPredicate, int)boolean
    12: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|d fixed "[rax|d]" rax|d -1 [0, 1[[498, 500[[532, 534[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- v1|d [0, 46[[496, 499[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 40[[498, 499[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v29|q [0, 44[[494, 499[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|- [44, 82[[92, 158[[168, 234[[244, 310[[320, 386[[396, 478[[536, 586[[608, 729[44 MustHaveRegister 48 MustHaveRegister 478 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d rdx|- [46, 82[[92, 158[[168, 234[[244, 310[[320, 386[[396, 504[[536, 607[[608, 729[46 MustHaveRegister 68 MustHaveRegister 80 MustHaveRegister 144 MustHaveRegister 156 MustHaveRegister 220 MustHaveRegister 232 MustHaveRegister 296 MustHaveRegister 308 MustHaveRegister 372 MustHaveRegister 384 MustHaveRegister 496 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [48, 80[[92, 134[[168, 210[[244, 286[[320, 362[[396, 476[48 MustHaveRegister 50 MustHaveRegister 68 MustHaveRegister 80 MustHaveRegister 124 MustHaveRegister 476 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [50, 54[50 MustHaveRegister 54 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[v4|q]" v4|q v3|d [54, 57[54 MustHaveRegister 56 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q -1 [52, 55[52 MustHaveRegister 54 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d -1 [124, 156[[168, 210[[244, 286[[320, 362[[396, 474[124 MustHaveRegister 126 MustHaveRegister 144 MustHaveRegister 156 MustHaveRegister 200 MustHaveRegister 474 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d -1 [126, 130[126 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q v7|d [130, 133[130 MustHaveRegister 132 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[v9|q]" v9|q -1 [128, 131[128 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[v10|d]" v10|d -1 [200, 232[[244, 286[[320, 362[[396, 472[200 MustHaveRegister 202 MustHaveRegister 220 MustHaveRegister 232 MustHaveRegister 276 MustHaveRegister 472 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d -1 [202, 206[202 MustHaveRegister 206 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[v12|q]" v12|q v11|d [206, 209[206 MustHaveRegister 208 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[v13|q]" v13|q -1 [204, 207[204 MustHaveRegister 206 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[v14|d]" v14|d -1 [276, 308[[320, 362[[396, 470[276 MustHaveRegister 278 MustHaveRegister 296 MustHaveRegister 308 MustHaveRegister 352 MustHaveRegister 470 MustHaveRegister  "NoSpillStore"
  v15|d DWORD "[v15|d]" v15|d -1 [278, 282[278 MustHaveRegister 282 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[v16|q]" v16|q v15|d [282, 285[282 MustHaveRegister 284 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[v17|q]" v17|q -1 [280, 283[280 MustHaveRegister 282 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[v18|d]" v18|d -1 [352, 384[[396, 468[352 MustHaveRegister 354 MustHaveRegister 372 MustHaveRegister 384 MustHaveRegister 464 MustHaveRegister 468 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[v19|d]" v19|d -1 [354, 358[354 MustHaveRegister 358 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[v20|q]" v20|q v19|d [358, 361[358 MustHaveRegister 360 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[v21|q]" v21|q -1 [356, 359[356 MustHaveRegister 358 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[v22|d]" v22|d -1 [464, 480[464 MustHaveRegister 466 MustHaveRegister 480 MustHaveRegister  "NoSpillStore"
  v23|d DWORD "[v23|d]" v23|d -1 [468, 492[468 MustHaveRegister 492 MustHaveRegister  "NoSpillStore"
  v24|d DWORD "[v24|d]" v24|d -1 [470, 490[470 MustHaveRegister 490 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[v25|d]" v25|d -1 [472, 488[472 MustHaveRegister 488 MustHaveRegister  "NoSpillStore"
  v26|d DWORD "[v26|d]" v26|d -1 [474, 486[474 MustHaveRegister 486 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[v27|d]" v27|d -1 [476, 484[476 MustHaveRegister 484 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[v28|d]" v28|d -1 [478, 482[478 MustHaveRegister 482 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[v29|q]" v29|q v22|d [480, 494[480 MustHaveRegister 494 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[v30|q]" v30|q v28|d [482, 504[[586, 607[482 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[v31|q]" v31|q v27|d [484, 504[[586, 607[484 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[v32|q]" v32|q v26|d [486, 504[[586, 607[486 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[v33|q]" v33|q v25|d [488, 504[[586, 607[488 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[v34|q]" v34|q v24|d [490, 504[[586, 607[490 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[v35|q]" v35|q v23|d [492, 504[[586, 607[492 MustHaveRegister  "NoSpillStore"
  v36|d DWORD "[v36|d]" v36|d rax|d [500, 502[500 MustHaveRegister 502 MustHaveRegister  "NoSpillStore"
  v37|d DWORD "[v37|d]" v37|d -1 [708, 724[724 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[v38|q]" v38|q -1 [708, 726[726 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|d fixed "[rax|d]" rax|d -1 [0, 1[[498, 500[[532, 534[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- v1|d [0, 46[[496, 499[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 40[[498, 499[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v29|q [0, 44[[494, 499[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [44, 82[[92, 158[[168, 234[[244, 310[[320, 386[[396, 478[[536, 586[[608, 729[44 MustHaveRegister 48 MustHaveRegister 478 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|- [46, 82[[92, 158[[168, 234[[244, 310[[320, 386[[396, 495[46 MustHaveRegister 68 MustHaveRegister 80 MustHaveRegister 144 MustHaveRegister 156 MustHaveRegister 220 MustHaveRegister 232 MustHaveRegister 296 MustHaveRegister 308 MustHaveRegister 372 MustHaveRegister 384 MustHaveRegister  "OneSpillStore"
  v2|d DWORD "[r10|d]" v2|d -1 [48, 80[[92, 134[[168, 210[[244, 286[[320, 362[[396, 476[48 MustHaveRegister 50 MustHaveRegister 68 MustHaveRegister 80 MustHaveRegister 124 MustHaveRegister 476 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r11|d]" v3|d -1 [50, 54[50 MustHaveRegister 54 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[r11|q]" v4|q v3|d [54, 57[54 MustHaveRegister 56 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[r8|q]" v5|q -1 [52, 55[52 MustHaveRegister 54 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r11|d]" v6|d -1 [124, 156[[168, 210[[244, 286[[320, 362[[396, 474[124 MustHaveRegister 126 MustHaveRegister 144 MustHaveRegister 156 MustHaveRegister 200 MustHaveRegister 474 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[r8|d]" v7|d -1 [126, 130[126 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[r8|q]" v8|q v7|d [130, 133[130 MustHaveRegister 132 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[r9|q]" v9|q -1 [128, 131[128 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[r8|d]" v10|d -1 [200, 232[[244, 286[[320, 362[[396, 472[200 MustHaveRegister 202 MustHaveRegister 220 MustHaveRegister 232 MustHaveRegister 276 MustHaveRegister 472 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[r9|d]" v11|d -1 [202, 206[202 MustHaveRegister 206 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[r9|q]" v12|q v11|d [206, 209[206 MustHaveRegister 208 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[rcx|q]" v13|q -1 [204, 207[204 MustHaveRegister 206 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[r9|d]" v14|d -1 [276, 308[[320, 362[[396, 470[276 MustHaveRegister 278 MustHaveRegister 296 MustHaveRegister 308 MustHaveRegister 352 MustHaveRegister 470 MustHaveRegister  "NoSpillStore"
  v15|d DWORD "[rcx|d]" v15|d -1 [278, 282[278 MustHaveRegister 282 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[rcx|q]" v16|q v15|d [282, 285[282 MustHaveRegister 284 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[rbx|q]" v17|q -1 [280, 283[280 MustHaveRegister 282 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[rcx|d]" v18|d -1 [352, 384[[396, 468[352 MustHaveRegister 354 MustHaveRegister 372 MustHaveRegister 384 MustHaveRegister 464 MustHaveRegister 468 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[rbx|d]" v19|d -1 [354, 358[354 MustHaveRegister 358 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[rbx|q]" v20|q v19|d [358, 361[358 MustHaveRegister 360 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[rdi|q]" v21|q -1 [356, 359[356 MustHaveRegister 358 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[rbx|d]" v22|d -1 [464, 480[464 MustHaveRegister 466 MustHaveRegister 480 MustHaveRegister  "NoSpillStore"
  v23|d DWORD "[rcx|d]" v23|d -1 [468, 492[468 MustHaveRegister 492 MustHaveRegister  "NoSpillStore"
  v24|d DWORD "[r9|d]" v24|d -1 [470, 490[470 MustHaveRegister 490 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[r8|d]" v25|d -1 [472, 488[472 MustHaveRegister 488 MustHaveRegister  "NoSpillStore"
  v26|d DWORD "[r11|d]" v26|d -1 [474, 486[474 MustHaveRegister 486 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[r10|d]" v27|d -1 [476, 484[476 MustHaveRegister 484 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[rsi|d]" v28|d -1 [478, 482[478 MustHaveRegister 482 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[rbx|q]" v29|q v22|d [480, 494[480 MustHaveRegister 494 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[rsi|q]" v30|q v28|d [482, 493[482 MustHaveRegister  "OneSpillStore"
  v31|q QWORD "[r10|q]" v31|q v27|d [484, 497[484 MustHaveRegister  "OneSpillStore"
  v32|q QWORD "[r11|q]" v32|q v26|d [486, 497[486 MustHaveRegister  "OneSpillStore"
  v33|q QWORD "[r8|q]" v33|q v25|d [488, 497[488 MustHaveRegister  "OneSpillStore"
  v34|q QWORD "[r9|q]" v34|q v24|d [490, 497[490 MustHaveRegister  "OneSpillStore"
  v35|q QWORD "[rcx|q]" v35|q v23|d [492, 497[492 MustHaveRegister  "OneSpillStore"
  v36|d DWORD "[rax|d]" v36|d rax|d [500, 502[500 MustHaveRegister 502 MustHaveRegister  "NoSpillStore"
  v37|d DWORD "[r10|d]" v37|d -1 [708, 724[724 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[r11|q]" v38|q -1 [708, 726[726 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[rbx|d]" v1|d v1|d [495, 497[496 ShouldHaveRegister  "OneSpillStore"
  v40|q QWORD "[vstack:1|q]" v30|q v30|q [493, 497[ "OneSpillStore"
  v41|q QWORD "[vstack:6|q]" v31|q v31|q [497, 504[ "OneSpillStore"
  v42|q QWORD "[vstack:5|q]" v32|q v32|q [497, 504[ "OneSpillStore"
  v43|q QWORD "[vstack:4|q]" v33|q v33|q [497, 504[ "OneSpillStore"
  v44|q QWORD "[vstack:3|q]" v34|q v34|q [497, 504[ "OneSpillStore"
  v45|q QWORD "[vstack:2|q]" v35|q v35|q [497, 504[ "OneSpillStore"
  v46|q QWORD "[vstack:1|q]" v30|q v30|q [497, 504[ "OneSpillStore"
  v47|d DWORD "[vstack:0|d]" v1|d v1|d [497, 504[[536, 607[[608, 708[ "OneSpillStore"
  v48|d DWORD "[rdx|d]" v1|d v1|d [708, 729[ "OneSpillStore"
  v49|q QWORD "[rsi|q]" v30|q v30|q [586, 607[ "OneSpillStore"
  v50|q QWORD "[rcx|q]" v35|q v35|q [586, 607[ "OneSpillStore"
  v51|q QWORD "[r9|q]" v34|q v34|q [586, 607[ "OneSpillStore"
  v52|q QWORD "[r8|q]" v33|q v33|q [586, 607[ "OneSpillStore"
  v53|q QWORD "[r11|q]" v32|q v32|q [586, 607[ "OneSpillStore"
  v54|q QWORD "[r10|q]" v31|q v31|q [586, 607[ "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@62ed65ef slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction v5|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   54  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   56  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v4|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B0 -> B1, B0 -> B6] defaultTarget: B0 -> B38 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v2|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v2|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B12" "B37" 
    xhandlers
    flags 
    probability 4602678800965844112
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction v6|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  126  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v7|DWORD = MOV input: [v6|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  128  <|@ instruction v9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  130  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v7|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  132  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v8|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B6 -> B7, B6 -> B12] defaultTarget: B6 -> B37 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v6|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v6|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B33" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" "B18" "B36" 
    xhandlers
    flags 
    probability 4598175183131707619
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction v10|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  202  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v11|DWORD = MOV input: [v10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  204  <|@ instruction v13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  206  <|@ instruction v12|QWORD = UNCOMPRESSPOINTER (input: v11|DWORD, ~baseRegister: v13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  208  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v12|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B12 -> B13, B12 -> B18] defaultTarget: B12 -> B36 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v10|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v10|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B33" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B24" "B35" 
    xhandlers
    flags 
    probability 4593671565297607928
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction v14|DWORD[_] = MOV input: [v10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  278  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v15|DWORD = MOV input: [v14|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  280  <|@ instruction v17|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  282  <|@ instruction v16|QWORD = UNCOMPRESSPOINTER (input: v15|DWORD, ~baseRegister: v17|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  284  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v16|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B18 -> B19, B18 -> B24] defaultTarget: B18 -> B35 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v14|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v14|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B33" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B30" "B34" 
    xhandlers
    flags 
    probability 4589167947463545039
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction v18|DWORD[_] = MOV input: [v14|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v19|DWORD = MOV input: [v18|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  356  <|@ instruction v21|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  358  <|@ instruction v20|QWORD = UNCOMPRESSPOINTER (input: v19|DWORD, ~baseRegister: v21|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  360  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v20|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B24 -> B25, B24 -> B30] defaultTarget: B24 -> B34 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v18|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v18|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4584664329629518953
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction v22|DWORD[_] = MOV input: [v18|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  466  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v22|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  468  <|@ instruction v23|DWORD[_] = MOV input: [v18|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  470  <|@ instruction v24|DWORD[_] = MOV input: [v14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  472  <|@ instruction v25|DWORD[_] = MOV input: [v10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  474  <|@ instruction v26|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  476  <|@ instruction v27|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  478  <|@ instruction v28|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  480  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  482  <|@ instruction v30|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  484  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v27|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  486  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  488  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  490  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  492  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = MOVE input: v30|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  496  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = STACKMOVE (input: v40|QWORD[.], ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: v39|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  498  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v35|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v34|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v33|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v32|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v31|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v30|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9] <|@ <|@
      nr  500  <|@ instruction v36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  502  <|@ instruction TESTBRANCH (x: v36|DWORD, y: v36|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584664329629518953
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B5" "B11" "B23" "B32" "B29" "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  534  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [int[-66579|0xfffffffffffefbed], long[1300|0x514]] destination: B8 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction JUMP ~outgoingValues: [int[-71699|0xfffffffffffee7ed], long[1300|0x514]] destination: B22 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [int[-72723|0xfffffffffffee3ed], long[1300|0x514]] destination: B26 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [int[-73747|0xfffffffffffedfed], long[1300|0x514]] destination: B28 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction JUMP ~outgoingValues: [int[-24627|0xffffffffffff9fcd], long[660|0x294]] destination: B34 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction MOV x: [r15|QWORD + 1156] y: -74771 size: DWORD <|@ <|@
      nr  604  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  606  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - v35|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v34|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v33|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v32|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v31|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v30|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [int[-67603|0xfffffffffffef7ed], long[1300|0x514]] destination: B10 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction JUMP ~outgoingValues: [int[-70675|0xfffffffffffeebed], long[1300|0x514]] destination: B20 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction JUMP ~outgoingValues: [int[-19763|0xffffffffffffb2cd], long[660|0x294]] destination: B35 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [int[-10035|0xffffffffffffd8cd], long[660|0x294]] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [int[-68627|0xfffffffffffef3ed], long[1300|0x514]] destination: B14 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction JUMP ~outgoingValues: [int[-69651|0xfffffffffffeefed], long[1300|0x514]] destination: B16 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction JUMP ~outgoingValues: [int[-14899|0xffffffffffffc5cd], long[660|0x294]] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction JUMP ~outgoingValues: [int[-64531|0xffffffffffff03ed], long[1300|0x514]] destination: B2 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction JUMP ~outgoingValues: [int[-65555|0xfffffffffffeffed], long[1300|0x514]] destination: B4 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction JUMP ~outgoingValues: [int[-5171|0xffffffffffffebcd], long[660|0x294]] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" "B38" "B4" "B8" "B37" "B10" "B14" "B36" "B16" "B20" "B35" "B22" "B26" "B34" "B28" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      LIR
      nr  708  <|@ instruction [v37|DWORD, v38|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v37|DWORD) size: DWORD <|@ <|@
      nr  726  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v38|QWORD) size: QWORD <|@ <|@
      nr  728  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // arg$1:java.util.regex.Pattern$CharPredicate
     4: aload_0       
     5: getfield      #2          // arg$2:java.util.regex.Pattern$CharPredicate
     8: iload_1       
     9: invokestatic  #3          // java.util.regex.Pattern.lambda$union$3:(java.util.regex.Pattern$CharPredicate, java.util.regex.Pattern$CharPredicate, int)boolean
    12: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|d fixed "[rax|d]" rax|d -1 [0, 1[[498, 500[[532, 534[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- v1|d [0, 46[[496, 499[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 40[[498, 499[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v29|q [0, 44[[494, 499[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [44, 82[[92, 158[[168, 234[[244, 310[[320, 386[[396, 478[[536, 586[[608, 729[44 MustHaveRegister 48 MustHaveRegister 478 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|- [46, 82[[92, 158[[168, 234[[244, 310[[320, 386[[396, 495[46 MustHaveRegister 68 MustHaveRegister 80 MustHaveRegister 144 MustHaveRegister 156 MustHaveRegister 220 MustHaveRegister 232 MustHaveRegister 296 MustHaveRegister 308 MustHaveRegister 372 MustHaveRegister 384 MustHaveRegister  "OneSpillStore"
  v2|d DWORD "[r10|d]" v2|d -1 [48, 80[[92, 134[[168, 210[[244, 286[[320, 362[[396, 476[48 MustHaveRegister 50 MustHaveRegister 68 MustHaveRegister 80 MustHaveRegister 124 MustHaveRegister 476 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r11|d]" v3|d -1 [50, 54[50 MustHaveRegister 54 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[r11|q]" v4|q v3|d [54, 57[54 MustHaveRegister 56 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[r8|q]" v5|q -1 [52, 55[52 MustHaveRegister 54 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r11|d]" v6|d -1 [124, 156[[168, 210[[244, 286[[320, 362[[396, 474[124 MustHaveRegister 126 MustHaveRegister 144 MustHaveRegister 156 MustHaveRegister 200 MustHaveRegister 474 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[r8|d]" v7|d -1 [126, 130[126 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[r8|q]" v8|q v7|d [130, 133[130 MustHaveRegister 132 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[r9|q]" v9|q -1 [128, 131[128 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[r8|d]" v10|d -1 [200, 232[[244, 286[[320, 362[[396, 472[200 MustHaveRegister 202 MustHaveRegister 220 MustHaveRegister 232 MustHaveRegister 276 MustHaveRegister 472 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[r9|d]" v11|d -1 [202, 206[202 MustHaveRegister 206 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[r9|q]" v12|q v11|d [206, 209[206 MustHaveRegister 208 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[rcx|q]" v13|q -1 [204, 207[204 MustHaveRegister 206 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[r9|d]" v14|d -1 [276, 308[[320, 362[[396, 470[276 MustHaveRegister 278 MustHaveRegister 296 MustHaveRegister 308 MustHaveRegister 352 MustHaveRegister 470 MustHaveRegister  "NoSpillStore"
  v15|d DWORD "[rcx|d]" v15|d -1 [278, 282[278 MustHaveRegister 282 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[rcx|q]" v16|q v15|d [282, 285[282 MustHaveRegister 284 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[rbx|q]" v17|q -1 [280, 283[280 MustHaveRegister 282 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[rcx|d]" v18|d -1 [352, 384[[396, 468[352 MustHaveRegister 354 MustHaveRegister 372 MustHaveRegister 384 MustHaveRegister 464 MustHaveRegister 468 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[rbx|d]" v19|d -1 [354, 358[354 MustHaveRegister 358 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[rbx|q]" v20|q v19|d [358, 361[358 MustHaveRegister 360 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[rdi|q]" v21|q -1 [356, 359[356 MustHaveRegister 358 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[rbx|d]" v22|d -1 [464, 480[464 MustHaveRegister 466 MustHaveRegister 480 MustHaveRegister  "NoSpillStore"
  v23|d DWORD "[rcx|d]" v23|d -1 [468, 492[468 MustHaveRegister 492 MustHaveRegister  "NoSpillStore"
  v24|d DWORD "[r9|d]" v24|d -1 [470, 490[470 MustHaveRegister 490 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[r8|d]" v25|d -1 [472, 488[472 MustHaveRegister 488 MustHaveRegister  "NoSpillStore"
  v26|d DWORD "[r11|d]" v26|d -1 [474, 486[474 MustHaveRegister 486 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[r10|d]" v27|d -1 [476, 484[476 MustHaveRegister 484 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[rsi|d]" v28|d -1 [478, 482[478 MustHaveRegister 482 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[rbx|q]" v29|q v22|d [480, 494[480 MustHaveRegister 494 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[rsi|q]" v30|q v28|d [482, 493[482 MustHaveRegister  "OneSpillStore"
  v31|q QWORD "[r10|q]" v31|q v27|d [484, 497[484 MustHaveRegister  "OneSpillStore"
  v32|q QWORD "[r11|q]" v32|q v26|d [486, 497[486 MustHaveRegister  "OneSpillStore"
  v33|q QWORD "[r8|q]" v33|q v25|d [488, 497[488 MustHaveRegister  "OneSpillStore"
  v34|q QWORD "[r9|q]" v34|q v24|d [490, 497[490 MustHaveRegister  "OneSpillStore"
  v35|q QWORD "[rcx|q]" v35|q v23|d [492, 497[492 MustHaveRegister  "OneSpillStore"
  v36|d DWORD "[rax|d]" v36|d rax|d [500, 502[500 MustHaveRegister 502 MustHaveRegister  "NoSpillStore"
  v37|d DWORD "[r10|d]" v37|d -1 [708, 724[724 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[r11|q]" v38|q -1 [708, 726[726 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[rbx|d]" v1|d v1|d [495, 497[496 ShouldHaveRegister  "OneSpillStore"
  v40|q QWORD "[vstack:1|q]" v30|q v30|q [493, 497[ "OneSpillStore"
  v41|q QWORD "[vstack:6|q]" v31|q v31|q [497, 504[ "OneSpillStore"
  v42|q QWORD "[vstack:5|q]" v32|q v32|q [497, 504[ "OneSpillStore"
  v43|q QWORD "[vstack:4|q]" v33|q v33|q [497, 504[ "OneSpillStore"
  v44|q QWORD "[vstack:3|q]" v34|q v34|q [497, 504[ "OneSpillStore"
  v45|q QWORD "[vstack:2|q]" v35|q v35|q [497, 504[ "OneSpillStore"
  v46|q QWORD "[vstack:1|q]" v30|q v30|q [497, 504[ "OneSpillStore"
  v47|d DWORD "[vstack:0|d]" v1|d v1|d [497, 504[[536, 607[[608, 708[ "OneSpillStore"
  v48|d DWORD "[rdx|d]" v1|d v1|d [708, 729[ "OneSpillStore"
  v49|q QWORD "[rsi|q]" v30|q v30|q [586, 607[ "OneSpillStore"
  v50|q QWORD "[rcx|q]" v35|q v35|q [586, 607[ "OneSpillStore"
  v51|q QWORD "[r9|q]" v34|q v34|q [586, 607[ "OneSpillStore"
  v52|q QWORD "[r8|q]" v33|q v33|q [586, 607[ "OneSpillStore"
  v53|q QWORD "[r11|q]" v32|q v32|q [586, 607[ "OneSpillStore"
  v54|q QWORD "[r10|q]" v31|q v31|q [586, 607[ "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@62ed65ef slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction v5|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   54  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   56  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v4|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B0 -> B1, B0 -> B6] defaultTarget: B0 -> B38 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v2|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v2|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B12" "B37" 
    xhandlers
    flags 
    probability 4602678800965844112
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction v6|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  126  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v7|DWORD = MOV input: [v6|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  128  <|@ instruction v9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  130  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v7|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  132  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v8|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B6 -> B7, B6 -> B12] defaultTarget: B6 -> B37 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v6|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v6|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B33" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" "B18" "B36" 
    xhandlers
    flags 
    probability 4598175183131707619
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction v10|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  202  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v11|DWORD = MOV input: [v10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  204  <|@ instruction v13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  206  <|@ instruction v12|QWORD = UNCOMPRESSPOINTER (input: v11|DWORD, ~baseRegister: v13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  208  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v12|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B12 -> B13, B12 -> B18] defaultTarget: B12 -> B36 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v10|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v10|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B33" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B24" "B35" 
    xhandlers
    flags 
    probability 4593671565297607928
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction v14|DWORD[_] = MOV input: [v10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  278  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v15|DWORD = MOV input: [v14|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  280  <|@ instruction v17|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  282  <|@ instruction v16|QWORD = UNCOMPRESSPOINTER (input: v15|DWORD, ~baseRegister: v17|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  284  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v16|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B18 -> B19, B18 -> B24] defaultTarget: B18 -> B35 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v14|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v14|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B33" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B30" "B34" 
    xhandlers
    flags 
    probability 4589167947463545039
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction v18|DWORD[_] = MOV input: [v14|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v19|DWORD = MOV input: [v18|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  356  <|@ instruction v21|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  358  <|@ instruction v20|QWORD = UNCOMPRESSPOINTER (input: v19|DWORD, ~baseRegister: v21|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  360  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v20|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B24 -> B25, B24 -> B30] defaultTarget: B24 -> B34 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v18|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v18|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4584664329629518953
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction v22|DWORD[_] = MOV input: [v18|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  466  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v22|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  468  <|@ instruction v23|DWORD[_] = MOV input: [v18|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  470  <|@ instruction v24|DWORD[_] = MOV input: [v14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  472  <|@ instruction v25|DWORD[_] = MOV input: [v10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  474  <|@ instruction v26|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  476  <|@ instruction v27|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  478  <|@ instruction v28|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  480  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  482  <|@ instruction v30|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  484  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v27|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  486  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  488  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  490  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  492  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = MOVE input: v30|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  496  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = STACKMOVE (input: v40|QWORD[.], ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: v39|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  498  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v35|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v34|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v33|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v32|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v31|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v30|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9] <|@ <|@
      nr  500  <|@ instruction v36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  502  <|@ instruction TESTBRANCH (x: v36|DWORD, y: v36|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584664329629518953
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B5" "B11" "B23" "B32" "B29" "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  534  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [int[-66579|0xfffffffffffefbed], long[1300|0x514]] destination: B8 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction JUMP ~outgoingValues: [int[-71699|0xfffffffffffee7ed], long[1300|0x514]] destination: B22 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [int[-72723|0xfffffffffffee3ed], long[1300|0x514]] destination: B26 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [int[-73747|0xfffffffffffedfed], long[1300|0x514]] destination: B28 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction JUMP ~outgoingValues: [int[-24627|0xffffffffffff9fcd], long[660|0x294]] destination: B34 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction MOV x: [r15|QWORD + 1156] y: -74771 size: DWORD <|@ <|@
      nr  604  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  606  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - v35|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v34|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v33|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v32|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v31|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v30|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [int[-67603|0xfffffffffffef7ed], long[1300|0x514]] destination: B10 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction JUMP ~outgoingValues: [int[-70675|0xfffffffffffeebed], long[1300|0x514]] destination: B20 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction JUMP ~outgoingValues: [int[-19763|0xffffffffffffb2cd], long[660|0x294]] destination: B35 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [int[-10035|0xffffffffffffd8cd], long[660|0x294]] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [int[-68627|0xfffffffffffef3ed], long[1300|0x514]] destination: B14 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction JUMP ~outgoingValues: [int[-69651|0xfffffffffffeefed], long[1300|0x514]] destination: B16 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction JUMP ~outgoingValues: [int[-14899|0xffffffffffffc5cd], long[660|0x294]] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction JUMP ~outgoingValues: [int[-64531|0xffffffffffff03ed], long[1300|0x514]] destination: B2 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction JUMP ~outgoingValues: [int[-65555|0xfffffffffffeffed], long[1300|0x514]] destination: B4 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction JUMP ~outgoingValues: [int[-5171|0xffffffffffffebcd], long[660|0x294]] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" "B38" "B4" "B8" "B37" "B10" "B14" "B36" "B16" "B20" "B35" "B22" "B26" "B34" "B28" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      LIR
      nr  708  <|@ instruction [v37|DWORD, v38|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v37|DWORD) size: DWORD <|@ <|@
      nr  726  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v38|QWORD) size: QWORD <|@ <|@
      nr  728  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // arg$1:java.util.regex.Pattern$CharPredicate
     4: aload_0       
     5: getfield      #2          // arg$2:java.util.regex.Pattern$CharPredicate
     8: iload_1       
     9: invokestatic  #3          // java.util.regex.Pattern.lambda$union$3:(java.util.regex.Pattern$CharPredicate, java.util.regex.Pattern$CharPredicate, int)boolean
    12: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|d fixed "[rax|d]" rax|d -1 [0, 1[[498, 500[[532, 534[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- v1|d [0, 46[[496, 499[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 40[[498, 499[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v29|q [0, 44[[494, 499[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[498, 499[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [44, 82[[92, 158[[168, 234[[244, 310[[320, 386[[396, 478[[536, 586[[608, 729[44 MustHaveRegister 48 MustHaveRegister 478 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|- [46, 82[[92, 158[[168, 234[[244, 310[[320, 386[[396, 495[46 MustHaveRegister 68 MustHaveRegister 80 MustHaveRegister 144 MustHaveRegister 156 MustHaveRegister 220 MustHaveRegister 232 MustHaveRegister 296 MustHaveRegister 308 MustHaveRegister 372 MustHaveRegister 384 MustHaveRegister  "OneSpillStore"
  v2|d DWORD "[r10|d]" v2|d -1 [48, 80[[92, 134[[168, 210[[244, 286[[320, 362[[396, 476[48 MustHaveRegister 50 MustHaveRegister 68 MustHaveRegister 80 MustHaveRegister 124 MustHaveRegister 476 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r11|d]" v3|d -1 [50, 54[50 MustHaveRegister 54 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[r11|q]" v4|q v3|d [54, 57[54 MustHaveRegister 56 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[r8|q]" v5|q -1 [52, 55[52 MustHaveRegister 54 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r11|d]" v6|d -1 [124, 156[[168, 210[[244, 286[[320, 362[[396, 474[124 MustHaveRegister 126 MustHaveRegister 144 MustHaveRegister 156 MustHaveRegister 200 MustHaveRegister 474 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[r8|d]" v7|d -1 [126, 130[126 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[r8|q]" v8|q v7|d [130, 133[130 MustHaveRegister 132 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[r9|q]" v9|q -1 [128, 131[128 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[r8|d]" v10|d -1 [200, 232[[244, 286[[320, 362[[396, 472[200 MustHaveRegister 202 MustHaveRegister 220 MustHaveRegister 232 MustHaveRegister 276 MustHaveRegister 472 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[r9|d]" v11|d -1 [202, 206[202 MustHaveRegister 206 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[r9|q]" v12|q v11|d [206, 209[206 MustHaveRegister 208 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[rcx|q]" v13|q -1 [204, 207[204 MustHaveRegister 206 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[r9|d]" v14|d -1 [276, 308[[320, 362[[396, 470[276 MustHaveRegister 278 MustHaveRegister 296 MustHaveRegister 308 MustHaveRegister 352 MustHaveRegister 470 MustHaveRegister  "NoSpillStore"
  v15|d DWORD "[rcx|d]" v15|d -1 [278, 282[278 MustHaveRegister 282 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[rcx|q]" v16|q v15|d [282, 285[282 MustHaveRegister 284 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[rbx|q]" v17|q -1 [280, 283[280 MustHaveRegister 282 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[rcx|d]" v18|d -1 [352, 384[[396, 468[352 MustHaveRegister 354 MustHaveRegister 372 MustHaveRegister 384 MustHaveRegister 464 MustHaveRegister 468 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[rbx|d]" v19|d -1 [354, 358[354 MustHaveRegister 358 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[rbx|q]" v20|q v19|d [358, 361[358 MustHaveRegister 360 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[rdi|q]" v21|q -1 [356, 359[356 MustHaveRegister 358 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[rbx|d]" v22|d -1 [464, 480[464 MustHaveRegister 466 MustHaveRegister 480 MustHaveRegister  "NoSpillStore"
  v23|d DWORD "[rcx|d]" v23|d -1 [468, 492[468 MustHaveRegister 492 MustHaveRegister  "NoSpillStore"
  v24|d DWORD "[r9|d]" v24|d -1 [470, 490[470 MustHaveRegister 490 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[r8|d]" v25|d -1 [472, 488[472 MustHaveRegister 488 MustHaveRegister  "NoSpillStore"
  v26|d DWORD "[r11|d]" v26|d -1 [474, 486[474 MustHaveRegister 486 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[r10|d]" v27|d -1 [476, 484[476 MustHaveRegister 484 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[rsi|d]" v28|d -1 [478, 482[478 MustHaveRegister 482 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[rbx|q]" v29|q v22|d [480, 494[480 MustHaveRegister 494 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[rsi|q]" v30|q v28|d [482, 493[482 MustHaveRegister  "OneSpillStore"
  v31|q QWORD "[r10|q]" v31|q v27|d [484, 497[484 MustHaveRegister  "OneSpillStore"
  v32|q QWORD "[r11|q]" v32|q v26|d [486, 497[486 MustHaveRegister  "OneSpillStore"
  v33|q QWORD "[r8|q]" v33|q v25|d [488, 497[488 MustHaveRegister  "OneSpillStore"
  v34|q QWORD "[r9|q]" v34|q v24|d [490, 497[490 MustHaveRegister  "OneSpillStore"
  v35|q QWORD "[rcx|q]" v35|q v23|d [492, 497[492 MustHaveRegister  "OneSpillStore"
  v36|d DWORD "[rax|d]" v36|d rax|d [500, 502[500 MustHaveRegister 502 MustHaveRegister  "NoSpillStore"
  v37|d DWORD "[r10|d]" v37|d -1 [708, 724[724 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[r11|q]" v38|q -1 [708, 726[726 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[rbx|d]" v1|d v1|d [495, 497[496 ShouldHaveRegister  "OneSpillStore"
  v40|q QWORD "[vstack:1|q]" v30|q v30|q [493, 497[ "OneSpillStore"
  v41|q QWORD "[vstack:6|q]" v31|q v31|q [497, 504[ "OneSpillStore"
  v42|q QWORD "[vstack:5|q]" v32|q v32|q [497, 504[ "OneSpillStore"
  v43|q QWORD "[vstack:4|q]" v33|q v33|q [497, 504[ "OneSpillStore"
  v44|q QWORD "[vstack:3|q]" v34|q v34|q [497, 504[ "OneSpillStore"
  v45|q QWORD "[vstack:2|q]" v35|q v35|q [497, 504[ "OneSpillStore"
  v46|q QWORD "[vstack:1|q]" v30|q v30|q [497, 504[ "OneSpillStore"
  v47|d DWORD "[vstack:0|d]" v1|d v1|d [497, 504[[536, 607[[608, 708[ "OneSpillStore"
  v48|d DWORD "[rdx|d]" v1|d v1|d [708, 729[ "OneSpillStore"
  v49|q QWORD "[rsi|q]" v30|q v30|q [586, 607[ "OneSpillStore"
  v50|q QWORD "[rcx|q]" v35|q v35|q [586, 607[ "OneSpillStore"
  v51|q QWORD "[r9|q]" v34|q v34|q [586, 607[ "OneSpillStore"
  v52|q QWORD "[r8|q]" v33|q v33|q [586, 607[ "OneSpillStore"
  v53|q QWORD "[r11|q]" v32|q v32|q [586, 607[ "OneSpillStore"
  v54|q QWORD "[r10|q]" v31|q v31|q [586, 607[ "OneSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@62ed65ef slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction v5|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   54  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   56  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v4|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B0 -> B1, B0 -> B6] defaultTarget: B0 -> B38 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v2|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v2|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B12" "B37" 
    xhandlers
    flags 
    probability 4602678800965844112
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction v6|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  126  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v7|DWORD = MOV input: [v6|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  128  <|@ instruction v9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  130  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v7|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  132  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v8|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B6 -> B7, B6 -> B12] defaultTarget: B6 -> B37 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v6|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v6|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B33" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" "B18" "B36" 
    xhandlers
    flags 
    probability 4598175183131707619
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction v10|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  202  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v11|DWORD = MOV input: [v10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  204  <|@ instruction v13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  206  <|@ instruction v12|QWORD = UNCOMPRESSPOINTER (input: v11|DWORD, ~baseRegister: v13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  208  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v12|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B12 -> B13, B12 -> B18] defaultTarget: B12 -> B36 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v10|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v10|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B33" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B24" "B35" 
    xhandlers
    flags 
    probability 4593671565297607928
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction v14|DWORD[_] = MOV input: [v10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  278  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v15|DWORD = MOV input: [v14|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  280  <|@ instruction v17|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  282  <|@ instruction v16|QWORD = UNCOMPRESSPOINTER (input: v15|DWORD, ~baseRegister: v17|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  284  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v16|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B18 -> B19, B18 -> B24] defaultTarget: B18 -> B35 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v14|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v14|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B33" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B30" "B34" 
    xhandlers
    flags 
    probability 4589167947463545039
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction v18|DWORD[_] = MOV input: [v14|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v19|DWORD = MOV input: [v18|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  356  <|@ instruction v21|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  358  <|@ instruction v20|QWORD = UNCOMPRESSPOINTER (input: v19|DWORD, ~baseRegister: v21|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  360  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v20|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B24 -> B25, B24 -> B30] defaultTarget: B24 -> B34 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v18|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v18|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4584664329629518953
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction v22|DWORD[_] = MOV input: [v18|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  466  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v22|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  468  <|@ instruction v23|DWORD[_] = MOV input: [v18|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  470  <|@ instruction v24|DWORD[_] = MOV input: [v14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  472  <|@ instruction v25|DWORD[_] = MOV input: [v10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  474  <|@ instruction v26|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  476  <|@ instruction v27|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  478  <|@ instruction v28|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  480  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  482  <|@ instruction v30|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  484  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v27|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  486  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  488  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  490  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  492  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = MOVE input: v30|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  496  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = STACKMOVE (input: v40|QWORD[.], ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: v39|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  498  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v35|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v34|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v33|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v32|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v31|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v30|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9] <|@ <|@
      nr  500  <|@ instruction v36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  502  <|@ instruction TESTBRANCH (x: v36|DWORD, y: v36|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584664329629518953
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B5" "B11" "B23" "B32" "B29" "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  534  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: int[-66579|0xfffffffffffefbed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVE input: v47|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: int[-71699|0xfffffffffffee7ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVE input: v47|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  554  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: int[-72723|0xfffffffffffee3ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVE input: v47|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: int[-73747|0xfffffffffffedfed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVE input: v47|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: int[-24627|0xffffffffffff9fcd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVE input: v47|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  584  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: v45|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = MOVE input: v43|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE input: v42|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = MOVE input: v41|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction MOV x: [r15|QWORD + 1156] y: -74771 size: DWORD <|@ <|@
      nr  604  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  606  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - v35|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v34|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v33|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v32|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v31|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v30|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: int[-67603|0xfffffffffffef7ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVE input: v47|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: int[-70675|0xfffffffffffeebed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVE input: v47|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  626  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: int[-19763|0xffffffffffffb2cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVE input: v47|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  636  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: int[-10035|0xffffffffffffd8cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVE input: v47|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: int[-68627|0xfffffffffffef3ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVE input: v47|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: int[-69651|0xfffffffffffeefed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVE input: v47|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  666  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: int[-14899|0xffffffffffffc5cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVE input: v47|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  676  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: int[-64531|0xffffffffffff03ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVE input: v47|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  686  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: int[-65555|0xfffffffffffeffed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVE input: v47|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  696  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: int[-5171|0xffffffffffffebcd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVE input: v47|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  706  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" "B38" "B4" "B8" "B37" "B10" "B14" "B36" "B16" "B20" "B35" "B22" "B26" "B34" "B28" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      LIR
      nr  708  <|@ instruction [v37|DWORD, v38|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v37|DWORD) size: DWORD <|@ <|@
      nr  726  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v38|QWORD) size: QWORD <|@ <|@
      nr  728  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // arg$1:java.util.regex.Pattern$CharPredicate
     4: aload_0       
     5: getfield      #2          // arg$2:java.util.regex.Pattern$CharPredicate
     8: iload_1       
     9: invokestatic  #3          // java.util.regex.Pattern.lambda$union$3:(java.util.regex.Pattern$CharPredicate, java.util.regex.Pattern$CharPredicate, int)boolean
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@62ed65ef slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction v5|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   54  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   56  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v4|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B0 -> B1, B0 -> B6] defaultTarget: B0 -> B38 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v2|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v2|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B12" "B37" 
    xhandlers
    flags 
    probability 4602678800965844112
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction v6|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  126  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v7|DWORD = MOV input: [v6|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  128  <|@ instruction v9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  130  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v7|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  132  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v8|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B6 -> B7, B6 -> B12] defaultTarget: B6 -> B37 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v6|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v6|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B33" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" "B18" "B36" 
    xhandlers
    flags 
    probability 4598175183131707619
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction v10|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  202  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v11|DWORD = MOV input: [v10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  204  <|@ instruction v13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  206  <|@ instruction v12|QWORD = UNCOMPRESSPOINTER (input: v11|DWORD, ~baseRegister: v13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  208  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v12|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B12 -> B13, B12 -> B18] defaultTarget: B12 -> B36 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v10|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v10|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B33" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B24" "B35" 
    xhandlers
    flags 
    probability 4593671565297607928
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction v14|DWORD[_] = MOV input: [v10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  278  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v15|DWORD = MOV input: [v14|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  280  <|@ instruction v17|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  282  <|@ instruction v16|QWORD = UNCOMPRESSPOINTER (input: v15|DWORD, ~baseRegister: v17|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  284  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v16|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B18 -> B19, B18 -> B24] defaultTarget: B18 -> B35 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v14|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v14|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B33" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B30" "B34" 
    xhandlers
    flags 
    probability 4589167947463545039
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction v18|DWORD[_] = MOV input: [v14|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v19|DWORD = MOV input: [v18|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  356  <|@ instruction v21|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  358  <|@ instruction v20|QWORD = UNCOMPRESSPOINTER (input: v19|DWORD, ~baseRegister: v21|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  360  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v20|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B24 -> B25, B24 -> B30] defaultTarget: B24 -> B34 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v18|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v18|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4584664329629518953
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction v22|DWORD[_] = MOV input: [v18|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  466  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v22|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  468  <|@ instruction v23|DWORD[_] = MOV input: [v18|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  470  <|@ instruction v24|DWORD[_] = MOV input: [v14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  472  <|@ instruction v25|DWORD[_] = MOV input: [v10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  474  <|@ instruction v26|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  476  <|@ instruction v27|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  478  <|@ instruction v28|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  480  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  482  <|@ instruction v30|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  484  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v27|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  486  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  488  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  490  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  492  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = MOVE input: v30|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  496  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = STACKMOVE (input: v40|QWORD[.], ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: v39|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  498  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v35|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v34|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v33|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v32|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v31|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v30|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9] <|@ <|@
      nr  500  <|@ instruction v36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  502  <|@ instruction TESTBRANCH (x: v36|DWORD, y: v36|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584664329629518953
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B5" "B11" "B23" "B32" "B29" "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  534  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: int[-66579|0xfffffffffffefbed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVE input: v47|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: int[-71699|0xfffffffffffee7ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVE input: v47|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  554  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: int[-72723|0xfffffffffffee3ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVE input: v47|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: int[-73747|0xfffffffffffedfed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVE input: v47|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: int[-24627|0xffffffffffff9fcd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVE input: v47|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  584  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: v45|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = MOVE input: v43|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE input: v42|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = MOVE input: v41|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction MOV x: [r15|QWORD + 1156] y: -74771 size: DWORD <|@ <|@
      nr  604  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  606  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - v35|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v34|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v33|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v32|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v31|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v30|QWORD[.] v1|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: int[-67603|0xfffffffffffef7ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVE input: v47|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: int[-70675|0xfffffffffffeebed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVE input: v47|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  626  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: int[-19763|0xffffffffffffb2cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVE input: v47|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  636  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: int[-10035|0xffffffffffffd8cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVE input: v47|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: int[-68627|0xfffffffffffef3ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVE input: v47|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: int[-69651|0xfffffffffffeefed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVE input: v47|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  666  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: int[-14899|0xffffffffffffc5cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVE input: v47|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  676  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: int[-64531|0xffffffffffff03ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVE input: v47|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  686  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: int[-65555|0xfffffffffffeffed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVE input: v47|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  696  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: int[-5171|0xffffffffffffebcd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVE input: v47|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  706  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" "B38" "B4" "B8" "B37" "B10" "B14" "B36" "B16" "B20" "B35" "B22" "B26" "B34" "B28" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v37|DWORD) size: DWORD <|@ <|@
      nr  726  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v38|QWORD) size: QWORD <|@ <|@
      nr  728  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // arg$1:java.util.regex.Pattern$CharPredicate
     4: aload_0       
     5: getfield      #2          // arg$2:java.util.regex.Pattern$CharPredicate
     8: iload_1       
     9: invokestatic  #3          // java.util.regex.Pattern.lambda$union$3:(java.util.regex.Pattern$CharPredicate, java.util.regex.Pattern$CharPredicate, int)boolean
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@62ed65ef slotKind: QWORD <|@ <|@
      nr   48  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction r8|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   54  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   56  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r11|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B0 -> B1, B0 -> B6] defaultTarget: B0 -> B38 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r10|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B12" "B37" 
    xhandlers
    flags 
    probability 4602678800965844112
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  126  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  128  <|@ instruction r9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  130  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  132  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r8|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B6 -> B7, B6 -> B12] defaultTarget: B6 -> B37 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r11|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r11|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B33" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" "B18" "B36" 
    xhandlers
    flags 
    probability 4598175183131707619
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  202  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  204  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  206  <|@ instruction r9|QWORD = UNCOMPRESSPOINTER (input: r9|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  208  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r9|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B12 -> B13, B12 -> B18] defaultTarget: B12 -> B36 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r8|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r8|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B33" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B24" "B35" 
    xhandlers
    flags 
    probability 4593671565297607928
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction r9|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  278  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction rcx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  280  <|@ instruction rbx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  282  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  284  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rcx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B18 -> B19, B18 -> B24] defaultTarget: B18 -> B35 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r9|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r9|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B33" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B30" "B34" 
    xhandlers
    flags 
    probability 4589167947463545039
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction rcx|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction rbx|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  356  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  358  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  360  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B24 -> B25, B24 -> B30] defaultTarget: B24 -> B34 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rcx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4584664329629518953
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction rbx|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  466  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rbx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  468  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  470  <|@ instruction r9|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  472  <|@ instruction r8|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  474  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  476  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  478  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  480  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  482  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  484  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  486  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  488  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  490  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  492  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  496  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  498  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - vstack:2|QWORD[.] vstack:0|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - vstack:3|QWORD[.] vstack:0|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - vstack:4|QWORD[.] vstack:0|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - vstack:5|QWORD[.] vstack:0|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - vstack:6|QWORD[.] vstack:0|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - vstack:1|QWORD[.] vstack:0|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9] <|@ <|@
      nr  502  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584664329629518953
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B5" "B11" "B23" "B32" "B29" "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  534  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-66579|0xfffffffffffefbed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-71699|0xfffffffffffee7ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  554  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-72723|0xfffffffffffee3ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-73747|0xfffffffffffedfed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24627|0xffffffffffff9fcd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  584  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:5|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction MOV x: [r15|QWORD + 1156] y: -74771 size: DWORD <|@ <|@
      nr  604  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  606  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - rcx|QWORD[.] vstack:0|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r9|QWORD[.] vstack:0|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r8|QWORD[.] vstack:0|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r11|QWORD[.] vstack:0|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r10|QWORD[.] vstack:0|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rsi|QWORD[.] vstack:0|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-67603|0xfffffffffffef7ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-70675|0xfffffffffffeebed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  626  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-19763|0xffffffffffffb2cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  636  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-10035|0xffffffffffffd8cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-68627|0xfffffffffffef3ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-69651|0xfffffffffffeefed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  666  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-14899|0xffffffffffffc5cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  676  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-64531|0xffffffffffff03ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  686  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-65555|0xfffffffffffeffed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  696  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-5171|0xffffffffffffebcd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  706  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" "B38" "B4" "B8" "B37" "B10" "B14" "B36" "B16" "B20" "B35" "B22" "B26" "B34" "B28" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  726  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  728  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // arg$1:java.util.regex.Pattern$CharPredicate
     4: aload_0       
     5: getfield      #2          // arg$2:java.util.regex.Pattern$CharPredicate
     8: iload_1       
     9: invokestatic  #3          // java.util.regex.Pattern.lambda$union$3:(java.util.regex.Pattern$CharPredicate, java.util.regex.Pattern$CharPredicate, int)boolean
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@62ed65ef slotKind: QWORD <|@ <|@
      nr   48  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction r8|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   54  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   56  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r11|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B0 -> B1, B0 -> B6] defaultTarget: B0 -> B38 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r10|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B12" "B37" 
    xhandlers
    flags 
    probability 4602678800965844112
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  126  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  128  <|@ instruction r9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  130  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  132  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r8|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B6 -> B7, B6 -> B12] defaultTarget: B6 -> B37 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r11|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r11|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B33" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" "B18" "B36" 
    xhandlers
    flags 
    probability 4598175183131707619
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  202  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  204  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  206  <|@ instruction r9|QWORD = UNCOMPRESSPOINTER (input: r9|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  208  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r9|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B12 -> B13, B12 -> B18] defaultTarget: B12 -> B36 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r8|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r8|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B33" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B24" "B35" 
    xhandlers
    flags 
    probability 4593671565297607928
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction r9|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  278  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction rcx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  280  <|@ instruction rbx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  282  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  284  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rcx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B18 -> B19, B18 -> B24] defaultTarget: B18 -> B35 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r9|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r9|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B33" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B30" "B34" 
    xhandlers
    flags 
    probability 4589167947463545039
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction rcx|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction rbx|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  356  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  358  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  360  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B24 -> B25, B24 -> B30] defaultTarget: B24 -> B34 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rcx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4584664329629518953
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction rbx|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  466  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rbx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  468  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  470  <|@ instruction r9|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  472  <|@ instruction r8|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  474  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  476  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  478  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  480  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  482  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  484  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  486  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  488  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  490  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  492  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  496  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  498  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - vstack:2|QWORD[.] vstack:0|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - vstack:3|QWORD[.] vstack:0|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - vstack:4|QWORD[.] vstack:0|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - vstack:5|QWORD[.] vstack:0|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - vstack:6|QWORD[.] vstack:0|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - vstack:1|QWORD[.] vstack:0|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9] <|@ <|@
      nr  502  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584664329629518953
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B5" "B11" "B23" "B32" "B29" "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  534  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-66579|0xfffffffffffefbed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-71699|0xfffffffffffee7ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  554  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-72723|0xfffffffffffee3ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-73747|0xfffffffffffedfed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24627|0xffffffffffff9fcd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  584  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:5|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction MOV x: [r15|QWORD + 1156] y: -74771 size: DWORD <|@ <|@
      nr  604  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  606  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - rcx|QWORD[.] vstack:0|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r9|QWORD[.] vstack:0|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r8|QWORD[.] vstack:0|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r11|QWORD[.] vstack:0|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r10|QWORD[.] vstack:0|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rsi|QWORD[.] vstack:0|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-67603|0xfffffffffffef7ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-70675|0xfffffffffffeebed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  626  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-19763|0xffffffffffffb2cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  636  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-10035|0xffffffffffffd8cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-68627|0xfffffffffffef3ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-69651|0xfffffffffffeefed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  666  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-14899|0xffffffffffffc5cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  676  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-64531|0xffffffffffff03ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  686  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-65555|0xfffffffffffeffed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  696  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-5171|0xffffffffffffebcd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  706  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" "B38" "B4" "B8" "B37" "B10" "B14" "B36" "B16" "B20" "B35" "B22" "B26" "B34" "B28" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  726  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  728  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // arg$1:java.util.regex.Pattern$CharPredicate
     4: aload_0       
     5: getfield      #2          // arg$2:java.util.regex.Pattern$CharPredicate
     8: iload_1       
     9: invokestatic  #3          // java.util.regex.Pattern.lambda$union$3:(java.util.regex.Pattern$CharPredicate, java.util.regex.Pattern$CharPredicate, int)boolean
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@62ed65ef slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction r8|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   50  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   52  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r11|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B0 -> B1, B0 -> B6] defaultTarget: B0 -> B38 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r10|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B12" "B37" 
    xhandlers
    flags 
    probability 4602678800965844112
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  158  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  160  <|@ instruction r9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  162  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  164  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r8|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B6 -> B7, B6 -> B12] defaultTarget: B6 -> B37 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r11|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r11|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B33" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" "B18" "B36" 
    xhandlers
    flags 
    probability 4598175183131707619
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  272  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  274  <|@ instruction r9|QWORD = UNCOMPRESSPOINTER (input: r9|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  276  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r9|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B12 -> B13, B12 -> B18] defaultTarget: B12 -> B36 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r8|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r8|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B33" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B24" "B35" 
    xhandlers
    flags 
    probability 4593671565297607928
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction r9|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  382  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction rcx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  384  <|@ instruction rbx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  386  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  388  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rcx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B18 -> B19, B18 -> B24] defaultTarget: B18 -> B35 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r9|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r9|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B33" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B30" "B34" 
    xhandlers
    flags 
    probability 4589167947463545039
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction rcx|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  494  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction rbx|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  496  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  498  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  500  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B24 -> B25, B24 -> B30] defaultTarget: B24 -> B34 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rcx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4584664329629518953
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction rbx|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rbx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  644  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  646  <|@ instruction r9|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  648  <|@ instruction r8|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  650  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  652  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  654  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  656  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  658  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  660  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  662  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  664  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  666  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  668  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  670  <|@ instruction vstack:1|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction rbx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction vstack:6|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction vstack:5|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction vstack:3|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction vstack:2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction vstack:0|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  690  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - vstack:2|QWORD[.] vstack:0|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - vstack:3|QWORD[.] vstack:0|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - vstack:4|QWORD[.] vstack:0|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - vstack:5|QWORD[.] vstack:0|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - vstack:6|QWORD[.] vstack:0|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - vstack:1|QWORD[.] vstack:0|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9] <|@ <|@
      nr  692  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584664329629518953
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B5" "B11" "B23" "B32" "B29" "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  758  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  190  <|@ instruction r10|DWORD = MOVE input: int[-66579|0xfffffffffffefbed] <|@ <|@
      nr  192  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  444  <|@ instruction r10|DWORD = MOVE input: int[-71699|0xfffffffffffee7ed] <|@ <|@
      nr  446  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  526  <|@ instruction r10|DWORD = MOVE input: int[-72723|0xfffffffffffee3ed] <|@ <|@
      nr  528  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  556  <|@ instruction r10|DWORD = MOVE input: int[-73747|0xfffffffffffedfed] <|@ <|@
      nr  558  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  772  <|@ instruction r10|DWORD = MOVE input: int[-24627|0xffffffffffff9fcd] <|@ <|@
      nr  774  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction r9|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction r11|QWORD[.] = MOVE input: vstack:5|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction r10|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction MOV x: [r15|QWORD + 1156] y: -74771 size: DWORD <|@ <|@
      nr  724  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  726  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - rcx|QWORD[.] vstack:0|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r9|QWORD[.] vstack:0|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r8|QWORD[.] vstack:0|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r11|QWORD[.] vstack:0|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r10|QWORD[.] vstack:0|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rsi|QWORD[.] vstack:0|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  220  <|@ instruction r10|DWORD = MOVE input: int[-67603|0xfffffffffffef7ed] <|@ <|@
      nr  222  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  414  <|@ instruction r10|DWORD = MOVE input: int[-70675|0xfffffffffffeebed] <|@ <|@
      nr  416  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  790  <|@ instruction r10|DWORD = MOVE input: int[-19763|0xffffffffffffb2cd] <|@ <|@
      nr  792  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr  794  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  826  <|@ instruction r10|DWORD = MOVE input: int[-10035|0xffffffffffffd8cd] <|@ <|@
      nr  828  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  302  <|@ instruction r10|DWORD = MOVE input: int[-68627|0xfffffffffffef3ed] <|@ <|@
      nr  304  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  332  <|@ instruction r10|DWORD = MOVE input: int[-69651|0xfffffffffffeefed] <|@ <|@
      nr  334  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  808  <|@ instruction r10|DWORD = MOVE input: int[-14899|0xffffffffffffc5cd] <|@ <|@
      nr  810  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr  812  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   78  <|@ instruction r10|DWORD = MOVE input: int[-64531|0xffffffffffff03ed] <|@ <|@
      nr   80  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  108  <|@ instruction r10|DWORD = MOVE input: int[-65555|0xfffffffffffeffed] <|@ <|@
      nr  110  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  844  <|@ instruction r10|DWORD = MOVE input: int[-5171|0xffffffffffffebcd] <|@ <|@
      nr  846  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr  848  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" "B38" "B4" "B8" "B37" "B10" "B14" "B36" "B16" "B20" "B35" "B22" "B26" "B34" "B28" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  868  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  870  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // arg$1:java.util.regex.Pattern$CharPredicate
     4: aload_0       
     5: getfield      #2          // arg$2:java.util.regex.Pattern$CharPredicate
     8: iload_1       
     9: invokestatic  #3          // java.util.regex.Pattern.lambda$union$3:(java.util.regex.Pattern$CharPredicate, java.util.regex.Pattern$CharPredicate, int)boolean
    12: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|d DWORD "[vstack:0|d]" vstack:0|d -1 [68, 846[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[vstack:1|q]" vstack:1|q -1 [670, 706[ "NOT_SUPPORTED"
  vstack:2|q QWORD "[vstack:2|q]" vstack:2|q -1 [686, 696[ "NOT_SUPPORTED"
  vstack:3|q QWORD "[vstack:3|q]" vstack:3|q -1 [684, 698[ "NOT_SUPPORTED"
  vstack:4|q QWORD "[vstack:4|q]" vstack:4|q -1 [682, 700[ "NOT_SUPPORTED"
  vstack:5|q QWORD "[vstack:5|q]" vstack:5|q -1 [680, 702[ "NOT_SUPPORTED"
  vstack:6|q QWORD "[vstack:6|q]" vstack:6|q -1 [678, 704[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|d DWORD "[stack:28|d]" vstack:0|d -1 [68, 846[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[stack:40|q]" vstack:1|q -1 [670, 706[ "NOT_SUPPORTED"
  vstack:2|q QWORD "[stack:80|q]" vstack:2|q -1 [686, 696[ "NOT_SUPPORTED"
  vstack:3|q QWORD "[stack:72|q]" vstack:3|q -1 [684, 698[ "NOT_SUPPORTED"
  vstack:4|q QWORD "[stack:64|q]" vstack:4|q -1 [682, 700[ "NOT_SUPPORTED"
  vstack:5|q QWORD "[stack:56|q]" vstack:5|q -1 [680, 702[ "NOT_SUPPORTED"
  vstack:6|q QWORD "[stack:48|q]" vstack:6|q -1 [678, 704[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@62ed65ef slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction r8|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   50  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   52  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r11|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B0 -> B1, B0 -> B6] defaultTarget: B0 -> B38 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r10|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B12" "B37" 
    xhandlers
    flags 
    probability 4602678800965844112
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  158  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  160  <|@ instruction r9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  162  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  164  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r8|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B6 -> B7, B6 -> B12] defaultTarget: B6 -> B37 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r11|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r11|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B33" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" "B18" "B36" 
    xhandlers
    flags 
    probability 4598175183131707619
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  272  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  274  <|@ instruction r9|QWORD = UNCOMPRESSPOINTER (input: r9|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  276  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r9|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B12 -> B13, B12 -> B18] defaultTarget: B12 -> B36 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r8|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r8|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B33" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B24" "B35" 
    xhandlers
    flags 
    probability 4593671565297607928
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction r9|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  382  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction rcx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  384  <|@ instruction rbx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  386  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  388  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rcx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B18 -> B19, B18 -> B24] defaultTarget: B18 -> B35 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r9|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r9|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B33" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B30" "B34" 
    xhandlers
    flags 
    probability 4589167947463545039
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction rcx|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  494  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction rbx|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  496  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  498  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  500  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B24 -> B25, B24 -> B30] defaultTarget: B24 -> B34 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rcx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4584664329629518953
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction rbx|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rbx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  644  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  646  <|@ instruction r9|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  648  <|@ instruction r8|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  650  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  652  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  654  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  656  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  658  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  660  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  662  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  664  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  666  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  668  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  670  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction rbx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction stack:72|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction stack:80|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  690  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:80|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:72|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:64|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:56|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:48|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:40|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9] <|@ <|@
      nr  692  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584664329629518953
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B5" "B11" "B23" "B32" "B29" "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  758  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  190  <|@ instruction r10|DWORD = MOVE input: int[-66579|0xfffffffffffefbed] <|@ <|@
      nr  192  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  444  <|@ instruction r10|DWORD = MOVE input: int[-71699|0xfffffffffffee7ed] <|@ <|@
      nr  446  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  526  <|@ instruction r10|DWORD = MOVE input: int[-72723|0xfffffffffffee3ed] <|@ <|@
      nr  528  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  556  <|@ instruction r10|DWORD = MOVE input: int[-73747|0xfffffffffffedfed] <|@ <|@
      nr  558  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  772  <|@ instruction r10|DWORD = MOVE input: int[-24627|0xffffffffffff9fcd] <|@ <|@
      nr  774  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction r9|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction r11|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction MOV x: [r15|QWORD + 1156] y: -74771 size: DWORD <|@ <|@
      nr  724  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  726  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - rcx|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r9|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r8|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r11|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r10|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rsi|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  220  <|@ instruction r10|DWORD = MOVE input: int[-67603|0xfffffffffffef7ed] <|@ <|@
      nr  222  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  414  <|@ instruction r10|DWORD = MOVE input: int[-70675|0xfffffffffffeebed] <|@ <|@
      nr  416  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  790  <|@ instruction r10|DWORD = MOVE input: int[-19763|0xffffffffffffb2cd] <|@ <|@
      nr  792  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  794  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  826  <|@ instruction r10|DWORD = MOVE input: int[-10035|0xffffffffffffd8cd] <|@ <|@
      nr  828  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  302  <|@ instruction r10|DWORD = MOVE input: int[-68627|0xfffffffffffef3ed] <|@ <|@
      nr  304  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  332  <|@ instruction r10|DWORD = MOVE input: int[-69651|0xfffffffffffeefed] <|@ <|@
      nr  334  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  808  <|@ instruction r10|DWORD = MOVE input: int[-14899|0xffffffffffffc5cd] <|@ <|@
      nr  810  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  812  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   78  <|@ instruction r10|DWORD = MOVE input: int[-64531|0xffffffffffff03ed] <|@ <|@
      nr   80  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  108  <|@ instruction r10|DWORD = MOVE input: int[-65555|0xfffffffffffeffed] <|@ <|@
      nr  110  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  844  <|@ instruction r10|DWORD = MOVE input: int[-5171|0xffffffffffffebcd] <|@ <|@
      nr  846  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  848  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" "B38" "B4" "B8" "B37" "B10" "B14" "B36" "B16" "B20" "B35" "B22" "B26" "B34" "B28" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  868  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  870  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // arg$1:java.util.regex.Pattern$CharPredicate
     4: aload_0       
     5: getfield      #2          // arg$2:java.util.regex.Pattern$CharPredicate
     8: iload_1       
     9: invokestatic  #3          // java.util.regex.Pattern.lambda$union$3:(java.util.regex.Pattern$CharPredicate, java.util.regex.Pattern$CharPredicate, int)boolean
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@62ed65ef slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction r8|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   50  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   52  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r11|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B0 -> B1, B0 -> B6] defaultTarget: B0 -> B38 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r10|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B12" "B37" 
    xhandlers
    flags 
    probability 4602678800965844112
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  158  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  160  <|@ instruction r9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  162  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  164  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r8|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B6 -> B7, B6 -> B12] defaultTarget: B6 -> B37 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r11|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r11|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B33" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" "B18" "B36" 
    xhandlers
    flags 
    probability 4598175183131707619
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  272  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  274  <|@ instruction r9|QWORD = UNCOMPRESSPOINTER (input: r9|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  276  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r9|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B12 -> B13, B12 -> B18] defaultTarget: B12 -> B36 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r8|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r8|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B33" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B24" "B35" 
    xhandlers
    flags 
    probability 4593671565297607928
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction r9|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  382  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction rcx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  384  <|@ instruction rbx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  386  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  388  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rcx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B18 -> B19, B18 -> B24] defaultTarget: B18 -> B35 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r9|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r9|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B33" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B30" "B34" 
    xhandlers
    flags 
    probability 4589167947463545039
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction rcx|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  494  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction rbx|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  496  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  498  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  500  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B24 -> B25, B24 -> B30] defaultTarget: B24 -> B34 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rcx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4584664329629518953
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction rbx|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rbx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  644  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  646  <|@ instruction r9|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  648  <|@ instruction r8|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  650  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  652  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  654  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  656  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  658  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  660  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  662  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  664  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  666  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  668  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  670  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction rbx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction stack:72|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction stack:80|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  690  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:80|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:72|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:64|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:56|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:48|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:40|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9] <|@ <|@
      nr  692  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584664329629518953
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B5" "B11" "B23" "B32" "B29" "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  758  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  190  <|@ instruction r10|DWORD = MOVE input: int[-66579|0xfffffffffffefbed] <|@ <|@
      nr  192  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  444  <|@ instruction r10|DWORD = MOVE input: int[-71699|0xfffffffffffee7ed] <|@ <|@
      nr  446  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  526  <|@ instruction r10|DWORD = MOVE input: int[-72723|0xfffffffffffee3ed] <|@ <|@
      nr  528  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  556  <|@ instruction r10|DWORD = MOVE input: int[-73747|0xfffffffffffedfed] <|@ <|@
      nr  558  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  772  <|@ instruction r10|DWORD = MOVE input: int[-24627|0xffffffffffff9fcd] <|@ <|@
      nr  774  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction r9|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction r11|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction MOV x: [r15|QWORD + 1156] y: -74771 size: DWORD <|@ <|@
      nr  724  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  726  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - rcx|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r9|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r8|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r11|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r10|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rsi|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  220  <|@ instruction r10|DWORD = MOVE input: int[-67603|0xfffffffffffef7ed] <|@ <|@
      nr  222  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  414  <|@ instruction r10|DWORD = MOVE input: int[-70675|0xfffffffffffeebed] <|@ <|@
      nr  416  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  790  <|@ instruction r10|DWORD = MOVE input: int[-19763|0xffffffffffffb2cd] <|@ <|@
      nr  792  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  794  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  826  <|@ instruction r10|DWORD = MOVE input: int[-10035|0xffffffffffffd8cd] <|@ <|@
      nr  828  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  302  <|@ instruction r10|DWORD = MOVE input: int[-68627|0xfffffffffffef3ed] <|@ <|@
      nr  304  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  332  <|@ instruction r10|DWORD = MOVE input: int[-69651|0xfffffffffffeefed] <|@ <|@
      nr  334  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  808  <|@ instruction r10|DWORD = MOVE input: int[-14899|0xffffffffffffc5cd] <|@ <|@
      nr  810  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  812  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   78  <|@ instruction r10|DWORD = MOVE input: int[-64531|0xffffffffffff03ed] <|@ <|@
      nr   80  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  108  <|@ instruction r10|DWORD = MOVE input: int[-65555|0xfffffffffffeffed] <|@ <|@
      nr  110  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  844  <|@ instruction r10|DWORD = MOVE input: int[-5171|0xffffffffffffebcd] <|@ <|@
      nr  846  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  848  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" "B38" "B4" "B8" "B37" "B10" "B14" "B36" "B16" "B20" "B35" "B22" "B26" "B34" "B28" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  868  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  870  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // arg$1:java.util.regex.Pattern$CharPredicate
     4: aload_0       
     5: getfield      #2          // arg$2:java.util.regex.Pattern$CharPredicate
     8: iload_1       
     9: invokestatic  #3          // java.util.regex.Pattern.lambda$union$3:(java.util.regex.Pattern$CharPredicate, java.util.regex.Pattern$CharPredicate, int)boolean
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@62ed65ef slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction r8|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   50  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   52  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r11|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B0 -> B1, B0 -> B6] defaultTarget: B0 -> B38 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r10|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B12" "B37" 
    xhandlers
    flags 
    probability 4602678800965844112
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  158  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  160  <|@ instruction r9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  162  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  164  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r8|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B6 -> B7, B6 -> B12] defaultTarget: B6 -> B37 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r11|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r11|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B33" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" "B18" "B36" 
    xhandlers
    flags 
    probability 4598175183131707619
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  272  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  274  <|@ instruction r9|QWORD = UNCOMPRESSPOINTER (input: r9|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  276  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r9|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B12 -> B13, B12 -> B18] defaultTarget: B12 -> B36 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r8|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r8|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B33" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B24" "B35" 
    xhandlers
    flags 
    probability 4593671565297607928
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction r9|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  382  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction rcx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  384  <|@ instruction rbx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  386  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  388  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rcx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B18 -> B19, B18 -> B24] defaultTarget: B18 -> B35 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r9|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r9|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B33" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B30" "B34" 
    xhandlers
    flags 
    probability 4589167947463545039
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction rcx|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  494  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction rbx|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  496  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  498  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  500  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B24 -> B25, B24 -> B30] defaultTarget: B24 -> B34 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rcx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4584664329629518953
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction rbx|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rbx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  644  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  646  <|@ instruction r9|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  648  <|@ instruction r8|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  650  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  652  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  654  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  656  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  658  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  660  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  662  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  664  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  666  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  668  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  670  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction rbx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction stack:72|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction stack:80|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  690  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:80|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:72|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:64|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:56|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:48|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:40|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9] <|@ <|@
      nr  692  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584664329629518953
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B5" "B11" "B23" "B32" "B29" "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  758  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  190  <|@ instruction r10|DWORD = MOVE input: int[-66579|0xfffffffffffefbed] <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  444  <|@ instruction r10|DWORD = MOVE input: int[-71699|0xfffffffffffee7ed] <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  526  <|@ instruction r10|DWORD = MOVE input: int[-72723|0xfffffffffffee3ed] <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  556  <|@ instruction r10|DWORD = MOVE input: int[-73747|0xfffffffffffedfed] <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  772  <|@ instruction r10|DWORD = MOVE input: int[-24627|0xffffffffffff9fcd] <|@ <|@
      nr  776  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction r9|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction r11|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction MOV x: [r15|QWORD + 1156] y: -74771 size: DWORD <|@ <|@
      nr  724  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  726  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - rcx|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r9|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r8|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r11|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r10|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rsi|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  220  <|@ instruction r10|DWORD = MOVE input: int[-67603|0xfffffffffffef7ed] <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  414  <|@ instruction r10|DWORD = MOVE input: int[-70675|0xfffffffffffeebed] <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  790  <|@ instruction r10|DWORD = MOVE input: int[-19763|0xffffffffffffb2cd] <|@ <|@
      nr  794  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  826  <|@ instruction r10|DWORD = MOVE input: int[-10035|0xffffffffffffd8cd] <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  302  <|@ instruction r10|DWORD = MOVE input: int[-68627|0xfffffffffffef3ed] <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  332  <|@ instruction r10|DWORD = MOVE input: int[-69651|0xfffffffffffeefed] <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  808  <|@ instruction r10|DWORD = MOVE input: int[-14899|0xffffffffffffc5cd] <|@ <|@
      nr  812  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   78  <|@ instruction r10|DWORD = MOVE input: int[-64531|0xffffffffffff03ed] <|@ <|@
      nr   82  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  108  <|@ instruction r10|DWORD = MOVE input: int[-65555|0xfffffffffffeffed] <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  844  <|@ instruction r10|DWORD = MOVE input: int[-5171|0xffffffffffffebcd] <|@ <|@
      nr  848  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" "B38" "B4" "B8" "B37" "B10" "B14" "B36" "B16" "B20" "B35" "B22" "B26" "B34" "B28" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   80  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  868  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  870  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // arg$1:java.util.regex.Pattern$CharPredicate
     4: aload_0       
     5: getfield      #2          // arg$2:java.util.regex.Pattern$CharPredicate
     8: iload_1       
     9: invokestatic  #3          // java.util.regex.Pattern.lambda$union$3:(java.util.regex.Pattern$CharPredicate, java.util.regex.Pattern$CharPredicate, int)boolean
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@62ed65ef slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction r8|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   50  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   52  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r11|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B0 -> B1, B0 -> B6] defaultTarget: B0 -> B38 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r10|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B12" "B37" 
    xhandlers
    flags 
    probability 4602678800965844112
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  158  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  160  <|@ instruction r9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  162  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  164  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r8|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B6 -> B7, B6 -> B12] defaultTarget: B6 -> B37 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r11|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r11|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B33" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" "B18" "B36" 
    xhandlers
    flags 
    probability 4598175183131707619
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  272  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  274  <|@ instruction r9|QWORD = UNCOMPRESSPOINTER (input: r9|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  276  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r9|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B12 -> B13, B12 -> B18] defaultTarget: B12 -> B36 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r8|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r8|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B33" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B24" "B35" 
    xhandlers
    flags 
    probability 4593671565297607928
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction r9|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  382  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction rcx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  384  <|@ instruction rbx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  386  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  388  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rcx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B18 -> B19, B18 -> B24] defaultTarget: B18 -> B35 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r9|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r9|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B33" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B30" "B34" 
    xhandlers
    flags 
    probability 4589167947463545039
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction rcx|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  494  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction rbx|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  496  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  498  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  500  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B24 -> B25, B24 -> B30] defaultTarget: B24 -> B34 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rcx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4584664329629518953
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction rbx|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rbx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  644  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  646  <|@ instruction r9|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  648  <|@ instruction r8|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  650  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  652  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  654  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  656  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  658  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  660  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  662  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  664  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  666  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  668  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  670  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction rbx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction stack:72|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction stack:80|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  690  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:80|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:72|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:64|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:56|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:48|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:40|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9] <|@ <|@
      nr  692  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584664329629518953
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B5" "B11" "B23" "B32" "B29" "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  758  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  190  <|@ instruction r10|DWORD = MOVE input: int[-66579|0xfffffffffffefbed] <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  444  <|@ instruction r10|DWORD = MOVE input: int[-71699|0xfffffffffffee7ed] <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  526  <|@ instruction r10|DWORD = MOVE input: int[-72723|0xfffffffffffee3ed] <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  556  <|@ instruction r10|DWORD = MOVE input: int[-73747|0xfffffffffffedfed] <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  772  <|@ instruction r10|DWORD = MOVE input: int[-24627|0xffffffffffff9fcd] <|@ <|@
      nr  776  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction r9|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction r11|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction MOV x: [r15|QWORD + 1156] y: -74771 size: DWORD <|@ <|@
      nr  724  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  726  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - rcx|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r9|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r8|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r11|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r10|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rsi|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  220  <|@ instruction r10|DWORD = MOVE input: int[-67603|0xfffffffffffef7ed] <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  414  <|@ instruction r10|DWORD = MOVE input: int[-70675|0xfffffffffffeebed] <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  790  <|@ instruction r10|DWORD = MOVE input: int[-19763|0xffffffffffffb2cd] <|@ <|@
      nr  794  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  826  <|@ instruction r10|DWORD = MOVE input: int[-10035|0xffffffffffffd8cd] <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  302  <|@ instruction r10|DWORD = MOVE input: int[-68627|0xfffffffffffef3ed] <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  332  <|@ instruction r10|DWORD = MOVE input: int[-69651|0xfffffffffffeefed] <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  808  <|@ instruction r10|DWORD = MOVE input: int[-14899|0xffffffffffffc5cd] <|@ <|@
      nr  812  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   78  <|@ instruction r10|DWORD = MOVE input: int[-64531|0xffffffffffff03ed] <|@ <|@
      nr   82  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  108  <|@ instruction r10|DWORD = MOVE input: int[-65555|0xfffffffffffeffed] <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  844  <|@ instruction r10|DWORD = MOVE input: int[-5171|0xffffffffffffebcd] <|@ <|@
      nr  848  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" "B38" "B4" "B8" "B37" "B10" "B14" "B36" "B16" "B20" "B35" "B22" "B26" "B34" "B28" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  868  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  870  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // arg$1:java.util.regex.Pattern$CharPredicate
     4: aload_0       
     5: getfield      #2          // arg$2:java.util.regex.Pattern$CharPredicate
     8: iload_1       
     9: invokestatic  #3          // java.util.regex.Pattern.lambda$union$3:(java.util.regex.Pattern$CharPredicate, java.util.regex.Pattern$CharPredicate, int)boolean
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@62ed65ef slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction r8|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   50  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   52  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r11|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B0 -> B1, B0 -> B6] defaultTarget: B0 -> B38 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r10|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B12" "B37" 
    xhandlers
    flags 
    probability 4602678800965844112
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  158  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  160  <|@ instruction r9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  162  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  164  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r8|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B6 -> B7, B6 -> B12] defaultTarget: B6 -> B37 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r11|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r11|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B33" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" "B18" "B36" 
    xhandlers
    flags 
    probability 4598175183131707619
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  272  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  274  <|@ instruction r9|QWORD = UNCOMPRESSPOINTER (input: r9|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  276  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r9|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B12 -> B13, B12 -> B18] defaultTarget: B12 -> B36 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r8|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r8|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B33" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B24" "B35" 
    xhandlers
    flags 
    probability 4593671565297607928
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction r9|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  382  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction rcx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  384  <|@ instruction rbx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  386  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  388  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rcx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B18 -> B19, B18 -> B24] defaultTarget: B18 -> B35 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r9|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r9|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B33" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B30" "B34" 
    xhandlers
    flags 
    probability 4589167947463545039
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction rcx|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  494  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction rbx|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  496  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  498  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  500  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B24 -> B25, B24 -> B30] defaultTarget: B24 -> B34 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rcx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4584664329629518953
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction rbx|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rbx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  644  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  646  <|@ instruction r9|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  648  <|@ instruction r8|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  650  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  652  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  654  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  656  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  658  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  660  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  662  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  664  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  666  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  668  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  670  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction rbx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction stack:72|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction stack:80|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  690  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:80|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:72|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:64|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:56|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:48|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:40|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9] <|@ <|@
      nr  692  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584664329629518953
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B5" "B11" "B23" "B32" "B29" "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  758  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  190  <|@ instruction r10|DWORD = MOVE input: int[-66579|0xfffffffffffefbed] <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  444  <|@ instruction r10|DWORD = MOVE input: int[-71699|0xfffffffffffee7ed] <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  526  <|@ instruction r10|DWORD = MOVE input: int[-72723|0xfffffffffffee3ed] <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  556  <|@ instruction r10|DWORD = MOVE input: int[-73747|0xfffffffffffedfed] <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  772  <|@ instruction r10|DWORD = MOVE input: int[-24627|0xffffffffffff9fcd] <|@ <|@
      nr  776  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction r9|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction r11|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction MOV x: [r15|QWORD + 1156] y: -74771 size: DWORD <|@ <|@
      nr  724  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  726  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - rcx|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r9|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r8|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r11|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r10|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rsi|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  220  <|@ instruction r10|DWORD = MOVE input: int[-67603|0xfffffffffffef7ed] <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  414  <|@ instruction r10|DWORD = MOVE input: int[-70675|0xfffffffffffeebed] <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  790  <|@ instruction r10|DWORD = MOVE input: int[-19763|0xffffffffffffb2cd] <|@ <|@
      nr  794  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  826  <|@ instruction r10|DWORD = MOVE input: int[-10035|0xffffffffffffd8cd] <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  302  <|@ instruction r10|DWORD = MOVE input: int[-68627|0xfffffffffffef3ed] <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  332  <|@ instruction r10|DWORD = MOVE input: int[-69651|0xfffffffffffeefed] <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  808  <|@ instruction r10|DWORD = MOVE input: int[-14899|0xffffffffffffc5cd] <|@ <|@
      nr  812  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   78  <|@ instruction r10|DWORD = MOVE input: int[-64531|0xffffffffffff03ed] <|@ <|@
      nr   82  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  108  <|@ instruction r10|DWORD = MOVE input: int[-65555|0xfffffffffffeffed] <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  844  <|@ instruction r10|DWORD = MOVE input: int[-5171|0xffffffffffffebcd] <|@ <|@
      nr  848  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" "B38" "B4" "B8" "B37" "B10" "B14" "B36" "B16" "B20" "B35" "B22" "B26" "B34" "B28" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  868  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  870  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // arg$1:java.util.regex.Pattern$CharPredicate
     4: aload_0       
     5: getfield      #2          // arg$2:java.util.regex.Pattern$CharPredicate
     8: iload_1       
     9: invokestatic  #3          // java.util.regex.Pattern.lambda$union$3:(java.util.regex.Pattern$CharPredicate, java.util.regex.Pattern$CharPredicate, int)boolean
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@62ed65ef slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction r8|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   50  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   52  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r11|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B0 -> B1, B0 -> B6] defaultTarget: B0 -> B38 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r10|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B12" "B37" 
    xhandlers
    flags 
    probability 4602678800965844112
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  158  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  160  <|@ instruction r9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  162  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  164  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r8|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B6 -> B7, B6 -> B12] defaultTarget: B6 -> B37 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r11|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r11|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B33" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" "B18" "B36" 
    xhandlers
    flags 
    probability 4598175183131707619
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  272  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  274  <|@ instruction r9|QWORD = UNCOMPRESSPOINTER (input: r9|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  276  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r9|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B12 -> B13, B12 -> B18] defaultTarget: B12 -> B36 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r8|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r8|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B33" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B24" "B35" 
    xhandlers
    flags 
    probability 4593671565297607928
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction r9|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  382  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction rcx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  384  <|@ instruction rbx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  386  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  388  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rcx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B18 -> B19, B18 -> B24] defaultTarget: B18 -> B35 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r9|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r9|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B33" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B30" "B34" 
    xhandlers
    flags 
    probability 4589167947463545039
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction rcx|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  494  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction rbx|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  496  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  498  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  500  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B24 -> B25, B24 -> B30] defaultTarget: B24 -> B34 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rcx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4584664329629518953
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction rbx|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rbx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  644  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  646  <|@ instruction r9|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  648  <|@ instruction r8|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  650  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  652  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  654  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  656  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  658  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  660  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  662  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  664  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  666  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  668  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  670  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction rbx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction stack:72|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction stack:80|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  690  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:80|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:72|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:64|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:56|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:48|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:40|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9] <|@ <|@
      nr  692  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584664329629518953
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B5" "B11" "B23" "B32" "B29" "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  758  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  190  <|@ instruction r10|DWORD = MOVE input: int[-66579|0xfffffffffffefbed] <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  444  <|@ instruction r10|DWORD = MOVE input: int[-71699|0xfffffffffffee7ed] <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  526  <|@ instruction r10|DWORD = MOVE input: int[-72723|0xfffffffffffee3ed] <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  556  <|@ instruction r10|DWORD = MOVE input: int[-73747|0xfffffffffffedfed] <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  772  <|@ instruction r10|DWORD = MOVE input: int[-24627|0xffffffffffff9fcd] <|@ <|@
      nr  776  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction r9|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction r11|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction MOV x: [r15|QWORD + 1156] y: -74771 size: DWORD <|@ <|@
      nr  724  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  726  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - rcx|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r9|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r8|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r11|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r10|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rsi|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  220  <|@ instruction r10|DWORD = MOVE input: int[-67603|0xfffffffffffef7ed] <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  414  <|@ instruction r10|DWORD = MOVE input: int[-70675|0xfffffffffffeebed] <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  790  <|@ instruction r10|DWORD = MOVE input: int[-19763|0xffffffffffffb2cd] <|@ <|@
      nr  794  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  826  <|@ instruction r10|DWORD = MOVE input: int[-10035|0xffffffffffffd8cd] <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  302  <|@ instruction r10|DWORD = MOVE input: int[-68627|0xfffffffffffef3ed] <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  332  <|@ instruction r10|DWORD = MOVE input: int[-69651|0xfffffffffffeefed] <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  808  <|@ instruction r10|DWORD = MOVE input: int[-14899|0xffffffffffffc5cd] <|@ <|@
      nr  812  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   78  <|@ instruction r10|DWORD = MOVE input: int[-64531|0xffffffffffff03ed] <|@ <|@
      nr   82  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  108  <|@ instruction r10|DWORD = MOVE input: int[-65555|0xfffffffffffeffed] <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  844  <|@ instruction r10|DWORD = MOVE input: int[-5171|0xffffffffffffebcd] <|@ <|@
      nr  848  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" "B38" "B4" "B8" "B37" "B10" "B14" "B36" "B16" "B20" "B35" "B22" "B26" "B34" "B28" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  868  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  870  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // arg$1:java.util.regex.Pattern$CharPredicate
     4: aload_0       
     5: getfield      #2          // arg$2:java.util.regex.Pattern$CharPredicate
     8: iload_1       
     9: invokestatic  #3          // java.util.regex.Pattern.lambda$union$3:(java.util.regex.Pattern$CharPredicate, java.util.regex.Pattern$CharPredicate, int)boolean
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@62ed65ef slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction r8|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   50  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   52  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r11|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B0 -> B1, B0 -> B6] defaultTarget: B0 -> B38 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r10|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B5" "B11" "B23" "B32" "B29" "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  758  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B12" "B37" 
    xhandlers
    flags 
    probability 4602678800965844112
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  158  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  160  <|@ instruction r9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  162  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  164  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r8|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B6 -> B7, B6 -> B12] defaultTarget: B6 -> B37 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r11|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r11|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B33" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" "B18" "B36" 
    xhandlers
    flags 
    probability 4598175183131707619
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  272  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  274  <|@ instruction r9|QWORD = UNCOMPRESSPOINTER (input: r9|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  276  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r9|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B12 -> B13, B12 -> B18] defaultTarget: B12 -> B36 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r8|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r8|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B33" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B24" "B35" 
    xhandlers
    flags 
    probability 4593671565297607928
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction r9|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  382  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction rcx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  384  <|@ instruction rbx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  386  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  388  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rcx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B18 -> B19, B18 -> B24] defaultTarget: B18 -> B35 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r9|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r9|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B33" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B30" "B34" 
    xhandlers
    flags 
    probability 4589167947463545039
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction rcx|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  494  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction rbx|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  496  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  498  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  500  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B24 -> B25, B24 -> B30] defaultTarget: B24 -> B34 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rcx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4584664329629518953
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction rbx|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rbx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  644  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  646  <|@ instruction r9|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  648  <|@ instruction r8|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  650  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  652  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  654  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  656  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  658  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  660  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  662  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  664  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  666  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  668  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  670  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction rbx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction stack:72|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction stack:80|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  690  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:80|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:72|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:64|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:56|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:48|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:40|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9] <|@ <|@
      nr  692  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584664329629518953
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  190  <|@ instruction r10|DWORD = MOVE input: int[-66579|0xfffffffffffefbed] <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" "B38" "B4" "B8" "B37" "B10" "B14" "B36" "B16" "B20" "B35" "B22" "B26" "B34" "B28" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  868  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  870  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  444  <|@ instruction r10|DWORD = MOVE input: int[-71699|0xfffffffffffee7ed] <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  526  <|@ instruction r10|DWORD = MOVE input: int[-72723|0xfffffffffffee3ed] <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  556  <|@ instruction r10|DWORD = MOVE input: int[-73747|0xfffffffffffedfed] <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  772  <|@ instruction r10|DWORD = MOVE input: int[-24627|0xffffffffffff9fcd] <|@ <|@
      nr  776  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction r9|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction r11|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction MOV x: [r15|QWORD + 1156] y: -74771 size: DWORD <|@ <|@
      nr  724  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  726  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - rcx|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r9|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r8|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r11|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r10|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rsi|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  220  <|@ instruction r10|DWORD = MOVE input: int[-67603|0xfffffffffffef7ed] <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  414  <|@ instruction r10|DWORD = MOVE input: int[-70675|0xfffffffffffeebed] <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  790  <|@ instruction r10|DWORD = MOVE input: int[-19763|0xffffffffffffb2cd] <|@ <|@
      nr  794  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  826  <|@ instruction r10|DWORD = MOVE input: int[-10035|0xffffffffffffd8cd] <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  302  <|@ instruction r10|DWORD = MOVE input: int[-68627|0xfffffffffffef3ed] <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  332  <|@ instruction r10|DWORD = MOVE input: int[-69651|0xfffffffffffeefed] <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  808  <|@ instruction r10|DWORD = MOVE input: int[-14899|0xffffffffffffc5cd] <|@ <|@
      nr  812  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   78  <|@ instruction r10|DWORD = MOVE input: int[-64531|0xffffffffffff03ed] <|@ <|@
      nr   82  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  108  <|@ instruction r10|DWORD = MOVE input: int[-65555|0xfffffffffffeffed] <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  844  <|@ instruction r10|DWORD = MOVE input: int[-5171|0xffffffffffffebcd] <|@ <|@
      nr  848  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // arg$1:java.util.regex.Pattern$CharPredicate
     4: aload_0       
     5: getfield      #2          // arg$2:java.util.regex.Pattern$CharPredicate
     8: iload_1       
     9: invokestatic  #3          // java.util.regex.Pattern.lambda$union$3:(java.util.regex.Pattern$CharPredicate, java.util.regex.Pattern$CharPredicate, int)boolean
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@62ed65ef slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction r8|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   50  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   52  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r11|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B0 -> B1, B0 -> B6] defaultTarget: B0 -> B38 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r10|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B5" "B11" "B23" "B32" "B29" "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  758  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B12" "B37" 
    xhandlers
    flags 
    probability 4602678800965844112
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  158  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  160  <|@ instruction r9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  162  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  164  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r8|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B6 -> B7, B6 -> B12] defaultTarget: B6 -> B37 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r11|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r11|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B33" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" "B18" "B36" 
    xhandlers
    flags 
    probability 4598175183131707619
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  272  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  274  <|@ instruction r9|QWORD = UNCOMPRESSPOINTER (input: r9|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  276  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r9|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B12 -> B13, B12 -> B18] defaultTarget: B12 -> B36 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r8|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r8|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B33" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B24" "B35" 
    xhandlers
    flags 
    probability 4593671565297607928
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction r9|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  382  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction rcx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  384  <|@ instruction rbx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  386  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  388  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rcx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B18 -> B19, B18 -> B24] defaultTarget: B18 -> B35 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r9|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r9|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B33" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B30" "B34" 
    xhandlers
    flags 
    probability 4589167947463545039
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction rcx|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  494  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction rbx|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  496  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  498  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  500  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B24 -> B25, B24 -> B30] defaultTarget: B24 -> B34 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rcx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4584664329629518953
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction rbx|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rbx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  644  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  646  <|@ instruction r9|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  648  <|@ instruction r8|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  650  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  652  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  654  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  656  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  658  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  660  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  662  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  664  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  666  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  668  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  670  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction rbx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction stack:72|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction stack:80|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  690  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:80|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:72|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:64|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:56|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:48|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:40|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9] <|@ <|@
      nr  692  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584664329629518953
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  190  <|@ instruction r10|DWORD = MOVE input: int[-66579|0xfffffffffffefbed] <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" "B38" "B4" "B8" "B37" "B10" "B14" "B36" "B16" "B20" "B35" "B22" "B26" "B34" "B28" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  868  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  870  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  444  <|@ instruction r10|DWORD = MOVE input: int[-71699|0xfffffffffffee7ed] <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  526  <|@ instruction r10|DWORD = MOVE input: int[-72723|0xfffffffffffee3ed] <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  556  <|@ instruction r10|DWORD = MOVE input: int[-73747|0xfffffffffffedfed] <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  772  <|@ instruction r10|DWORD = MOVE input: int[-24627|0xffffffffffff9fcd] <|@ <|@
      nr  776  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction r9|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction r11|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction MOV x: [r15|QWORD + 1156] y: -74771 size: DWORD <|@ <|@
      nr  724  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  726  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - rcx|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r9|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r8|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r11|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r10|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rsi|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  220  <|@ instruction r10|DWORD = MOVE input: int[-67603|0xfffffffffffef7ed] <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  414  <|@ instruction r10|DWORD = MOVE input: int[-70675|0xfffffffffffeebed] <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  790  <|@ instruction r10|DWORD = MOVE input: int[-19763|0xffffffffffffb2cd] <|@ <|@
      nr  794  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  826  <|@ instruction r10|DWORD = MOVE input: int[-10035|0xffffffffffffd8cd] <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  302  <|@ instruction r10|DWORD = MOVE input: int[-68627|0xfffffffffffef3ed] <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  332  <|@ instruction r10|DWORD = MOVE input: int[-69651|0xfffffffffffeefed] <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  808  <|@ instruction r10|DWORD = MOVE input: int[-14899|0xffffffffffffc5cd] <|@ <|@
      nr  812  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   78  <|@ instruction r10|DWORD = MOVE input: int[-64531|0xffffffffffff03ed] <|@ <|@
      nr   82  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  108  <|@ instruction r10|DWORD = MOVE input: int[-65555|0xfffffffffffeffed] <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  844  <|@ instruction r10|DWORD = MOVE input: int[-5171|0xffffffffffffebcd] <|@ <|@
      nr  848  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // arg$1:java.util.regex.Pattern$CharPredicate
     4: aload_0       
     5: getfield      #2          // arg$2:java.util.regex.Pattern$CharPredicate
     8: iload_1       
     9: invokestatic  #3          // java.util.regex.Pattern.lambda$union$3:(java.util.regex.Pattern$CharPredicate, java.util.regex.Pattern$CharPredicate, int)boolean
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@62ed65ef slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction r8|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   50  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   52  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r11|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B0 -> B1, B0 -> B6] defaultTarget: B0 -> B38 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r10|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B5" "B11" "B23" "B32" "B29" "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  758  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B12" "B37" 
    xhandlers
    flags 
    probability 4602678800965844112
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  158  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  160  <|@ instruction r9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  162  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  164  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r8|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B6 -> B7, B6 -> B12] defaultTarget: B6 -> B37 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r11|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r11|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B33" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" "B18" "B36" 
    xhandlers
    flags 
    probability 4598175183131707619
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  272  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  274  <|@ instruction r9|QWORD = UNCOMPRESSPOINTER (input: r9|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  276  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r9|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B12 -> B13, B12 -> B18] defaultTarget: B12 -> B36 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r8|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r8|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B33" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B24" "B35" 
    xhandlers
    flags 
    probability 4593671565297607928
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction r9|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  382  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction rcx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  384  <|@ instruction rbx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  386  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  388  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rcx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B18 -> B19, B18 -> B24] defaultTarget: B18 -> B35 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r9|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r9|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B33" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B30" "B34" 
    xhandlers
    flags 
    probability 4589167947463545039
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction rcx|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  494  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction rbx|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  496  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  498  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  500  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B24 -> B25, B24 -> B30] defaultTarget: B24 -> B34 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rcx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4584664329629518953
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction rbx|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rbx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  644  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  646  <|@ instruction r9|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  648  <|@ instruction r8|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  650  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  652  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  654  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  656  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  658  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  660  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  662  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  664  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  666  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  668  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  670  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction rbx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction stack:72|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction stack:80|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  690  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:80|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:72|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:64|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:56|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:48|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:40|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9] <|@ <|@
      nr  692  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584664329629518953
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  190  <|@ instruction r10|DWORD = MOVE input: int[-66579|0xfffffffffffefbed] <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" "B38" "B4" "B8" "B37" "B10" "B14" "B36" "B16" "B20" "B35" "B22" "B26" "B34" "B28" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  868  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  870  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  444  <|@ instruction r10|DWORD = MOVE input: int[-71699|0xfffffffffffee7ed] <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  526  <|@ instruction r10|DWORD = MOVE input: int[-72723|0xfffffffffffee3ed] <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  556  <|@ instruction r10|DWORD = MOVE input: int[-73747|0xfffffffffffedfed] <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  772  <|@ instruction r10|DWORD = MOVE input: int[-24627|0xffffffffffff9fcd] <|@ <|@
      nr  776  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction r9|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction r11|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction MOV x: [r15|QWORD + 1156] y: -74771 size: DWORD <|@ <|@
      nr  724  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  726  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - rcx|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r9|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r8|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r11|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r10|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rsi|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  220  <|@ instruction r10|DWORD = MOVE input: int[-67603|0xfffffffffffef7ed] <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  414  <|@ instruction r10|DWORD = MOVE input: int[-70675|0xfffffffffffeebed] <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  790  <|@ instruction r10|DWORD = MOVE input: int[-19763|0xffffffffffffb2cd] <|@ <|@
      nr  794  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  826  <|@ instruction r10|DWORD = MOVE input: int[-10035|0xffffffffffffd8cd] <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  302  <|@ instruction r10|DWORD = MOVE input: int[-68627|0xfffffffffffef3ed] <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  332  <|@ instruction r10|DWORD = MOVE input: int[-69651|0xfffffffffffeefed] <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  808  <|@ instruction r10|DWORD = MOVE input: int[-14899|0xffffffffffffc5cd] <|@ <|@
      nr  812  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   78  <|@ instruction r10|DWORD = MOVE input: int[-64531|0xffffffffffff03ed] <|@ <|@
      nr   82  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  108  <|@ instruction r10|DWORD = MOVE input: int[-65555|0xfffffffffffeffed] <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  844  <|@ instruction r10|DWORD = MOVE input: int[-5171|0xffffffffffffebcd] <|@ <|@
      nr  848  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // arg$1:java.util.regex.Pattern$CharPredicate
     4: aload_0       
     5: getfield      #2          // arg$2:java.util.regex.Pattern$CharPredicate
     8: iload_1       
     9: invokestatic  #3          // java.util.regex.Pattern.lambda$union$3:(java.util.regex.Pattern$CharPredicate, java.util.regex.Pattern$CharPredicate, int)boolean
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@62ed65ef slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction r8|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   50  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   52  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r11|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B0 -> B1, B0 -> B6] defaultTarget: B0 -> B38 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r10|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B5" "B11" "B23" "B32" "B29" "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  758  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B12" "B37" 
    xhandlers
    flags 
    probability 4602678800965844112
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  158  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0]
live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  160  <|@ instruction r9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  162  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  164  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r8|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B6 -> B7, B6 -> B12] defaultTarget: B6 -> B37 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r11|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r11|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B33" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" "B18" "B36" 
    xhandlers
    flags 
    probability 4598175183131707619
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  270  <|@ st <@st|@reference-map: [rsi:0, r8:0, r10:0, r11:0]
live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  272  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  274  <|@ instruction r9|QWORD = UNCOMPRESSPOINTER (input: r9|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  276  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r9|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B12 -> B13, B12 -> B18] defaultTarget: B12 -> B36 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r8|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r8|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B33" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B24" "B35" 
    xhandlers
    flags 
    probability 4593671565297607928
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction r9|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  382  <|@ st <@st|@reference-map: [rsi:0, r8:0, r9:0, r10:0, r11:0]
live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction rcx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  384  <|@ instruction rbx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  386  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  388  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rcx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B18 -> B19, B18 -> B24] defaultTarget: B18 -> B35 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r9|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r9|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B33" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B30" "B34" 
    xhandlers
    flags 
    probability 4589167947463545039
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction rcx|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  494  <|@ st <@st|@reference-map: [rcx:0, rsi:0, r8:0, r9:0, r10:0, r11:0]
live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction rbx|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  496  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  498  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  500  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B24 -> B25, B24 -> B30] defaultTarget: B24 -> B34 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rcx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4584664329629518953
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction rbx|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  642  <|@ st <@st|@reference-map: [rcx:0, rbx:0, rsi:0, r8:0, r9:0, r10:0, r11:0]
live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rbx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  644  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  646  <|@ instruction r9|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  648  <|@ instruction r8|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  650  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  652  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  654  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  656  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  658  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  660  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  662  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  664  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  666  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  668  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  670  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction rbx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction stack:72|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction stack:80|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  690  <|@ st <@st|@reference-map: [stack:0, stack:8, stack:16, stack:24, stack:32, stack:40]
live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:80|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:72|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:64|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:56|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:48|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:40|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9] <|@ <|@
      nr  692  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584664329629518953
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  190  <|@ instruction r10|DWORD = MOVE input: int[-66579|0xfffffffffffefbed] <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" "B38" "B4" "B8" "B37" "B10" "B14" "B36" "B16" "B20" "B35" "B22" "B26" "B34" "B28" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  868  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  870  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  444  <|@ instruction r10|DWORD = MOVE input: int[-71699|0xfffffffffffee7ed] <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  526  <|@ instruction r10|DWORD = MOVE input: int[-72723|0xfffffffffffee3ed] <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  556  <|@ instruction r10|DWORD = MOVE input: int[-73747|0xfffffffffffedfed] <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  772  <|@ instruction r10|DWORD = MOVE input: int[-24627|0xffffffffffff9fcd] <|@ <|@
      nr  776  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction r9|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction r11|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction MOV x: [r15|QWORD + 1156] y: -74771 size: DWORD <|@ <|@
      nr  724  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  726  <|@ st <@st|@reference-map: [rcx:0, rsi:0, r8:0, r9:0, r10:0, r11:0]
live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - rcx|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r9|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r8|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r11|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r10|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rsi|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  220  <|@ instruction r10|DWORD = MOVE input: int[-67603|0xfffffffffffef7ed] <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  414  <|@ instruction r10|DWORD = MOVE input: int[-70675|0xfffffffffffeebed] <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  790  <|@ instruction r10|DWORD = MOVE input: int[-19763|0xffffffffffffb2cd] <|@ <|@
      nr  794  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  826  <|@ instruction r10|DWORD = MOVE input: int[-10035|0xffffffffffffd8cd] <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  302  <|@ instruction r10|DWORD = MOVE input: int[-68627|0xfffffffffffef3ed] <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  332  <|@ instruction r10|DWORD = MOVE input: int[-69651|0xfffffffffffeefed] <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  808  <|@ instruction r10|DWORD = MOVE input: int[-14899|0xffffffffffffc5cd] <|@ <|@
      nr  812  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   78  <|@ instruction r10|DWORD = MOVE input: int[-64531|0xffffffffffff03ed] <|@ <|@
      nr   82  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  108  <|@ instruction r10|DWORD = MOVE input: int[-65555|0xfffffffffffeffed] <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  844  <|@ instruction r10|DWORD = MOVE input: int[-5171|0xffffffffffffebcd] <|@ <|@
      nr  848  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // arg$1:java.util.regex.Pattern$CharPredicate
     4: aload_0       
     5: getfield      #2          // arg$2:java.util.regex.Pattern$CharPredicate
     8: iload_1       
     9: invokestatic  #3          // java.util.regex.Pattern.lambda$union$3:(java.util.regex.Pattern$CharPredicate, java.util.regex.Pattern$CharPredicate, int)boolean
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@62ed65ef slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction r8|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   50  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   52  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r11|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B0 -> B1, B0 -> B6] defaultTarget: B0 -> B38 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r10|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602678828276048312
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B5" "B11" "B23" "B32" "B29" "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  758  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B12" "B37" 
    xhandlers
    flags 
    probability 4602678800965844112
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  158  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0]
live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  160  <|@ instruction r9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  162  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  164  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r8|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B6 -> B7, B6 -> B12] defaultTarget: B6 -> B37 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r11|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r11|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B33" 
    xhandlers
    flags 
    probability 4598175219545239613
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" "B18" "B36" 
    xhandlers
    flags 
    probability 4598175183131707619
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  270  <|@ st <@st|@reference-map: [rsi:0, r8:0, r10:0, r11:0]
live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  272  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  274  <|@ instruction r9|QWORD = UNCOMPRESSPOINTER (input: r9|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  276  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r9|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B12 -> B13, B12 -> B18] defaultTarget: B12 -> B36 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r8|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r8|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B33" 
    xhandlers
    flags 
    probability 4593671601711066318
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B24" "B35" 
    xhandlers
    flags 
    probability 4593671565297607928
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction r9|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  382  <|@ st <@st|@reference-map: [rsi:0, r8:0, r9:0, r10:0, r11:0]
live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction rcx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  384  <|@ instruction rbx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  386  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  388  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rcx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B18 -> B19, B18 -> B24] defaultTarget: B18 -> B35 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r9|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r9|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B33" 
    xhandlers
    flags 
    probability 4589167983876929825
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B30" "B34" 
    xhandlers
    flags 
    probability 4589167947463545039
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction rcx|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  494  <|@ st <@st|@reference-map: [rcx:0, rsi:0, r8:0, r9:0, r10:0, r11:0]
live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction rbx|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  496  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  498  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  500  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B24 -> B25, B24 -> B30] defaultTarget: B24 -> B34 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rcx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584664366042830133
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4584664329629518953
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction rbx|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  642  <|@ st <@st|@reference-map: [rcx:0, rbx:0, rsi:0, r8:0, r9:0, r10:0, r11:0]
live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rbx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  644  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  646  <|@ instruction r9|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  648  <|@ instruction r8|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  650  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  652  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  654  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  656  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  658  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  660  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  662  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  664  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  666  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  668  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3 <|@ <|@
      nr  670  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction rbx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction stack:72|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction stack:80|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  690  <|@ st <@st|@reference-map: [stack:0, stack:8, stack:16, stack:24, stack:32, stack:40]
live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:80|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:72|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:64|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:56|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:48|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:40|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9] <|@ <|@
      nr  692  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584664329629518953
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  190  <|@ instruction r10|DWORD = MOVE input: int[-66579|0xfffffffffffefbed] <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" "B38" "B4" "B8" "B37" "B10" "B14" "B36" "B16" "B20" "B35" "B22" "B26" "B34" "B28" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  868  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  870  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  444  <|@ instruction r10|DWORD = MOVE input: int[-71699|0xfffffffffffee7ed] <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  526  <|@ instruction r10|DWORD = MOVE input: int[-72723|0xfffffffffffee3ed] <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  556  <|@ instruction r10|DWORD = MOVE input: int[-73747|0xfffffffffffedfed] <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  772  <|@ instruction r10|DWORD = MOVE input: int[-24627|0xffffffffffff9fcd] <|@ <|@
      nr  776  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction r9|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction r11|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction MOV x: [r15|QWORD + 1156] y: -74771 size: DWORD <|@ <|@
      nr  724  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  726  <|@ st <@st|@reference-map: [rcx:0, rsi:0, r8:0, r9:0, r10:0, r11:0]
live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - rcx|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r9|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r8|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r11|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r10|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rsi|QWORD[.] stack:28|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  220  <|@ instruction r10|DWORD = MOVE input: int[-67603|0xfffffffffffef7ed] <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  414  <|@ instruction r10|DWORD = MOVE input: int[-70675|0xfffffffffffeebed] <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  790  <|@ instruction r10|DWORD = MOVE input: int[-19763|0xffffffffffffb2cd] <|@ <|@
      nr  794  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  826  <|@ instruction r10|DWORD = MOVE input: int[-10035|0xffffffffffffd8cd] <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  302  <|@ instruction r10|DWORD = MOVE input: int[-68627|0xfffffffffffef3ed] <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  332  <|@ instruction r10|DWORD = MOVE input: int[-69651|0xfffffffffffeefed] <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  808  <|@ instruction r10|DWORD = MOVE input: int[-14899|0xffffffffffffc5cd] <|@ <|@
      nr  812  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   78  <|@ instruction r10|DWORD = MOVE input: int[-64531|0xffffffffffff03ed] <|@ <|@
      nr   82  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  108  <|@ instruction r10|DWORD = MOVE input: int[-65555|0xfffffffffffeffed] <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  844  <|@ instruction r10|DWORD = MOVE input: int[-5171|0xffffffffffffebcd] <|@ <|@
      nr  848  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // arg$1:java.util.regex.Pattern$CharPredicate
     4: aload_0       
     5: getfield      #2          // arg$2:java.util.regex.Pattern$CharPredicate
     8: iload_1       
     9: invokestatic  #3          // java.util.regex.Pattern.lambda$union$3:(java.util.regex.Pattern$CharPredicate, java.util.regex.Pattern$CharPredicate, int)boolean
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec489041817f20000000000f850d0500009090909090909090909090909090909090909048896c2440448b560c468b1cd50800000049b80000002b787f00004f8d1c184c3b1d000000000f84120000004c3b1d000000000f8450000000e9a304000090909090423b14d50c0000000f8c5f04000090909090423b14d5100000000f8f660400009090909090909090909090b801000000488b6c24404883c448493ba7500400000f8782040000c3909090909090909090909090909090468b1cd50c000000468b04dd0800000049b90000002b787f00004f8d04014c3b05000000000f84120000004c3b05000000000f8431000000e97603000090909090423b14dd0c0000000f8c4402000090909090423b14dd100000000f8f07030000909090e964ffffff909090909090909090909090909090468b04dd0c000000468b0cc50800000048b90000002b787f00004e8d0c094c3b0d000000000f84120000004c3b0d000000000f8431000000e94903000090909090423b14c50c0000000f8c0503000090909090423b14c5100000000f8f0c030000909090e9ecfeffff909090909090909090909090909090468b0cc50c000000428b0ccd0800000048bb0000002b787f0000488d0c0b483b0d000000000f8412000000483b0d000000000f8431000000e96d02000090909090423b14cd0c0000000f8c4202000090909090423b14cd100000000f8f78010000909090e974feffff909090909090909090909090909090428b0ccd0c0000008b1ccd0800000048bf0000002b787f0000488d1c1f483b1d000000000f8412000000483b1d000000000f842f000000e967010000909090903b14cd0c0000000f8c2a010000909090903b14cd100000000f8f2f010000909090e9fffdffff9090909090909090909090909090909090909090909090909090909090909090908b1ccd0c0000008504dd000000008b0ccd10000000468b0ccd10000000468b04c510000000468b1cdd10000000468b14d5100000008b761048c1e30348c1e60349c1e20349c1e30349c1e00349c1e10348c1e1034889742428488bf38bda4c895424204c895c24184c894424104c894c240848890c24895c243466669048b8ffffffffffffffffe8000000000f1f84000000000085c00f8496000000909090e93afdffff8954243490909049c7c31405000041baedfbfeff90909090909090458997840400004d899f90040000e8000000000f1f8400000000008954243490909049c7c31405000041baede7feffebc88954243490909049c7c31405000041baede3feffebb28954243490909049c7c31405000041baeddffeffeb9c8954243490909049c7c39402000041bacd9fffffeb86488b0c244c8b4c24084c8b4424104c8b5c24184c8b542420488b7424289090909090909041c78784040000eddbfeff49c7879004000014000000e8000000000f1f8400000000008954243490909049c7c31405000041baedf7feffe926ffffff8954243490909049c7c31405000041baedebfeffe90dffffff8954243490909049c7c39402000041bacdb2ffffe9f4feffff8954243490909049c7c39402000041bacdd8ffffe9dbfeffff8954243490909049c7c31405000041baedf3feffe9c2feffff8954243490909049c7c31405000041baedeffeffe9a9feffff8954243490909049c7c39402000041bacdc5ffffe990feffff8954243490909049c7c31405000041baed03ffffe977feffff8954243490909049c7c31405000041baedfffeffe95efeffff8954243490909049c7c39402000041bacdebffffe945feffff48896c2440e800000000e9e4fafffff4488d0d6afbffff49898f68040000e996fafffff441c78784040000f572ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f567ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f55cffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f551ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f546ffff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 NOP  <||@
  Comment 72 30 NOP  <||@
  Comment 73 32 NOP  <||@
  Comment 74 34 NOP  <||@
  Comment 75 36 NOP  <||@
  Comment 76 38 NOP  <||@
  Comment 77 40 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 82 42 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@62ed65ef slotKind: QWORD  <||@
  Comment 82 44 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 86 46 r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 86 [rsi:0, r10:0]at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 86 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 94 48 r8|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 104 50 r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0  <||@
  Comment 108 52 AMD64HOTSPOTSTRATEGYSWITCH ~key: r11|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B0 -> B1, B0 -> B6] defaultTarget: B0 -> B38 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 108 {DataSection[0x0]}  <||@
  Comment 121 {DataSection[0x8]}  <||@
  Comment 139 block B1 null  <||@
  Comment 139 54 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 139 56 NOP  <||@
  Comment 140 58 NOP  <||@
  Comment 141 60 NOP  <||@
  Comment 142 62 NOP  <||@
  Comment 143 64 CMPBRANCH (x: rdx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD  <||@
  Comment 157 block B3 null  <||@
  Comment 157 84 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 157 86 NOP  <||@
  Comment 158 88 NOP  <||@
  Comment 159 90 NOP  <||@
  Comment 160 92 NOP  <||@
  Comment 161 94 CMPBRANCH (x: rdx|DWORD, y: [r10|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD  <||@
  Comment 175 block B5 null  <||@
  Comment 175 114 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 175 116 NOP  <||@
  Comment 176 118 NOP  <||@
  Comment 177 120 NOP  <||@
  Comment 178 122 JUMP ~outgoingValues: [] destination: B5 -> B33  <||@
  Comment 178 block B33 null  <||@
  Comment 178 738 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 178 740 NOP  <||@
  Comment 179 742 NOP  <||@
  Comment 180 744 NOP  <||@
  Comment 181 746 NOP  <||@
  Comment 182 748 NOP  <||@
  Comment 183 750 NOP  <||@
  Comment 184 752 NOP  <||@
  Comment 185 754 NOP  <||@
  Comment 186 756 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 191 758 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 200 POLL_RETURN_FAR  <||@
  Comment 214 block B6 null  <||@
  Comment 214 124 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 214 126 NOP  <||@
  Comment 215 128 NOP  <||@
  Comment 216 130 NOP  <||@
  Comment 217 132 NOP  <||@
  Comment 218 134 NOP  <||@
  Comment 219 136 NOP  <||@
  Comment 220 138 NOP  <||@
  Comment 221 140 NOP  <||@
  Comment 222 142 NOP  <||@
  Comment 223 144 NOP  <||@
  Comment 224 146 NOP  <||@
  Comment 225 148 NOP  <||@
  Comment 226 150 NOP  <||@
  Comment 227 152 NOP  <||@
  Comment 228 154 NOP  <||@
  Comment 229 156 r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 237 158 r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 237 [rsi:0, r10:0, r11:0]at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 237 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 245 160 r9|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 255 162 r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0  <||@
  Comment 259 164 AMD64HOTSPOTSTRATEGYSWITCH ~key: r8|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B6 -> B7, B6 -> B12] defaultTarget: B6 -> B37 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 259 {DataSection[0x0]}  <||@
  Comment 272 {DataSection[0x8]}  <||@
  Comment 290 block B7 null  <||@
  Comment 290 166 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 290 168 NOP  <||@
  Comment 291 170 NOP  <||@
  Comment 292 172 NOP  <||@
  Comment 293 174 NOP  <||@
  Comment 294 176 CMPBRANCH (x: rdx|DWORD, y: [r11|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD  <||@
  Comment 308 block B9 null  <||@
  Comment 308 196 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 308 198 NOP  <||@
  Comment 309 200 NOP  <||@
  Comment 310 202 NOP  <||@
  Comment 311 204 NOP  <||@
  Comment 312 206 CMPBRANCH (x: rdx|DWORD, y: [r11|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD  <||@
  Comment 326 block B11 null  <||@
  Comment 326 226 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 326 228 NOP  <||@
  Comment 327 230 NOP  <||@
  Comment 328 232 NOP  <||@
  Comment 329 234 JUMP ~outgoingValues: [] destination: B11 -> B33  <||@
  Comment 334 block B12 null  <||@
  Comment 334 236 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 334 238 NOP  <||@
  Comment 335 240 NOP  <||@
  Comment 336 242 NOP  <||@
  Comment 337 244 NOP  <||@
  Comment 338 246 NOP  <||@
  Comment 339 248 NOP  <||@
  Comment 340 250 NOP  <||@
  Comment 341 252 NOP  <||@
  Comment 342 254 NOP  <||@
  Comment 343 256 NOP  <||@
  Comment 344 258 NOP  <||@
  Comment 345 260 NOP  <||@
  Comment 346 262 NOP  <||@
  Comment 347 264 NOP  <||@
  Comment 348 266 NOP  <||@
  Comment 349 268 r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 357 270 r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 357 [rsi:0, r8:0, r10:0, r11:0]at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 357 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 365 272 rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 375 274 r9|QWORD = UNCOMPRESSPOINTER (input: r9|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0  <||@
  Comment 379 276 AMD64HOTSPOTSTRATEGYSWITCH ~key: r9|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B12 -> B13, B12 -> B18] defaultTarget: B12 -> B36 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 379 {DataSection[0x0]}  <||@
  Comment 392 {DataSection[0x8]}  <||@
  Comment 410 block B13 null  <||@
  Comment 410 278 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 410 280 NOP  <||@
  Comment 411 282 NOP  <||@
  Comment 412 284 NOP  <||@
  Comment 413 286 NOP  <||@
  Comment 414 288 CMPBRANCH (x: rdx|DWORD, y: [r8|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD  <||@
  Comment 428 block B15 null  <||@
  Comment 428 308 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 428 310 NOP  <||@
  Comment 429 312 NOP  <||@
  Comment 430 314 NOP  <||@
  Comment 431 316 NOP  <||@
  Comment 432 318 CMPBRANCH (x: rdx|DWORD, y: [r8|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD  <||@
  Comment 446 block B17 null  <||@
  Comment 446 338 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 446 340 NOP  <||@
  Comment 447 342 NOP  <||@
  Comment 448 344 NOP  <||@
  Comment 449 346 JUMP ~outgoingValues: [] destination: B17 -> B33  <||@
  Comment 454 block B18 null  <||@
  Comment 454 348 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 454 350 NOP  <||@
  Comment 455 352 NOP  <||@
  Comment 456 354 NOP  <||@
  Comment 457 356 NOP  <||@
  Comment 458 358 NOP  <||@
  Comment 459 360 NOP  <||@
  Comment 460 362 NOP  <||@
  Comment 461 364 NOP  <||@
  Comment 462 366 NOP  <||@
  Comment 463 368 NOP  <||@
  Comment 464 370 NOP  <||@
  Comment 465 372 NOP  <||@
  Comment 466 374 NOP  <||@
  Comment 467 376 NOP  <||@
  Comment 468 378 NOP  <||@
  Comment 469 380 r9|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 477 382 rcx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 477 [rsi:0, r8:0, r9:0, r10:0, r11:0]at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 477 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 485 384 rbx|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 495 386 rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0  <||@
  Comment 499 388 AMD64HOTSPOTSTRATEGYSWITCH ~key: rcx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B18 -> B19, B18 -> B24] defaultTarget: B18 -> B35 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 499 {DataSection[0x0]}  <||@
  Comment 512 {DataSection[0x8]}  <||@
  Comment 530 block B19 null  <||@
  Comment 530 390 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 530 392 NOP  <||@
  Comment 531 394 NOP  <||@
  Comment 532 396 NOP  <||@
  Comment 533 398 NOP  <||@
  Comment 534 400 CMPBRANCH (x: rdx|DWORD, y: [r9|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD  <||@
  Comment 548 block B21 null  <||@
  Comment 548 420 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 548 422 NOP  <||@
  Comment 549 424 NOP  <||@
  Comment 550 426 NOP  <||@
  Comment 551 428 NOP  <||@
  Comment 552 430 CMPBRANCH (x: rdx|DWORD, y: [r9|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD  <||@
  Comment 566 block B23 null  <||@
  Comment 566 450 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 566 452 NOP  <||@
  Comment 567 454 NOP  <||@
  Comment 568 456 NOP  <||@
  Comment 569 458 JUMP ~outgoingValues: [] destination: B23 -> B33  <||@
  Comment 574 block B24 null  <||@
  Comment 574 460 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 574 462 NOP  <||@
  Comment 575 464 NOP  <||@
  Comment 576 466 NOP  <||@
  Comment 577 468 NOP  <||@
  Comment 578 470 NOP  <||@
  Comment 579 472 NOP  <||@
  Comment 580 474 NOP  <||@
  Comment 581 476 NOP  <||@
  Comment 582 478 NOP  <||@
  Comment 583 480 NOP  <||@
  Comment 584 482 NOP  <||@
  Comment 585 484 NOP  <||@
  Comment 586 486 NOP  <||@
  Comment 587 488 NOP  <||@
  Comment 588 490 NOP  <||@
  Comment 589 492 rcx|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 597 494 rbx|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 597 [rcx:0, rsi:0, r8:0, r9:0, r10:0, r11:0]at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 597 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 604 496 rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 614 498 rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0  <||@
  Comment 618 500 AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B24 -> B25, B24 -> B30] defaultTarget: B24 -> B34 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 618 {DataSection[0x0]}  <||@
  Comment 631 {DataSection[0x8]}  <||@
  Comment 649 block B25 null  <||@
  Comment 649 502 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 649 504 NOP  <||@
  Comment 650 506 NOP  <||@
  Comment 651 508 NOP  <||@
  Comment 652 510 NOP  <||@
  Comment 653 512 CMPBRANCH (x: rdx|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD  <||@
  Comment 666 block B27 null  <||@
  Comment 666 532 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 666 534 NOP  <||@
  Comment 667 536 NOP  <||@
  Comment 668 538 NOP  <||@
  Comment 669 540 NOP  <||@
  Comment 670 542 CMPBRANCH (x: rdx|DWORD, y: [rcx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD  <||@
  Comment 683 block B29 null  <||@
  Comment 683 562 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 683 564 NOP  <||@
  Comment 684 566 NOP  <||@
  Comment 685 568 NOP  <||@
  Comment 686 570 JUMP ~outgoingValues: [] destination: B29 -> B33  <||@
  Comment 691 block B30 null  <||@
  Comment 691 572 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 691 574 NOP  <||@
  Comment 692 576 NOP  <||@
  Comment 693 578 NOP  <||@
  Comment 694 580 NOP  <||@
  Comment 695 582 NOP  <||@
  Comment 696 584 NOP  <||@
  Comment 697 586 NOP  <||@
  Comment 698 588 NOP  <||@
  Comment 699 590 NOP  <||@
  Comment 700 592 NOP  <||@
  Comment 701 594 NOP  <||@
  Comment 702 596 NOP  <||@
  Comment 703 598 NOP  <||@
  Comment 704 600 NOP  <||@
  Comment 705 602 NOP  <||@
  Comment 706 604 NOP  <||@
  Comment 707 606 NOP  <||@
  Comment 708 608 NOP  <||@
  Comment 709 610 NOP  <||@
  Comment 710 612 NOP  <||@
  Comment 711 614 NOP  <||@
  Comment 712 616 NOP  <||@
  Comment 713 618 NOP  <||@
  Comment 714 620 NOP  <||@
  Comment 715 622 NOP  <||@
  Comment 716 624 NOP  <||@
  Comment 717 626 NOP  <||@
  Comment 718 628 NOP  <||@
  Comment 719 630 NOP  <||@
  Comment 720 632 NOP  <||@
  Comment 721 634 NOP  <||@
  Comment 722 636 NOP  <||@
  Comment 723 638 NOP  <||@
  Comment 724 640 rbx|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 731 642 NULLCHECK address: [rbx|DWORD[_] * 8] state [bci:0]  <||@
  Comment 731 [rcx:0, rbx:0, rsi:0, r8:0, r9:0, r10:0, r11:0]at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 731 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 738 644 rcx|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 745 646 r9|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 753 648 r8|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 761 650 r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 769 652 r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 777 654 rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 780 656 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3  <||@
  Comment 784 658 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3  <||@
  Comment 788 660 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3  <||@
  Comment 792 662 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3  <||@
  Comment 796 664 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3  <||@
  Comment 800 666 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3  <||@
  Comment 804 668 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3  <||@
  Comment 808 670 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 813 672 rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 816 674 rbx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 818 678 stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 823 680 stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 828 682 stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 833 684 stack:72|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 838 686 stack:80|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 842 688 stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 846 690 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9]  <||@
  Comment 849 INVOKEINTERFACE  <||@
  Comment 859 {HotSpotMethod<Pattern$CharPredicate.is(int)>}  <||@
  Comment 864 [stack:0, stack:8, stack:16, stack:24, stack:32, stack:40]at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1                  |2              
     locals:  |-  |stack:80|QWORD[.]  |stack:28|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1                  |2              
     locals:  |-  |stack:72|QWORD[.]  |stack:28|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1                  |2              
     locals:  |-  |stack:64|QWORD[.]  |stack:28|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1                  |2              
     locals:  |-  |stack:56|QWORD[.]  |stack:28|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1                  |2              
     locals:  |-  |stack:48|QWORD[.]  |stack:28|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1                  |2              
     locals:  |-  |stack:40|QWORD[.]  |stack:28|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 872 692 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD  <||@
  Comment 880 block B32 null  <||@
  Comment 880 728 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 880 730 NOP  <||@
  Comment 881 732 NOP  <||@
  Comment 882 734 NOP  <||@
  Comment 883 736 JUMP ~outgoingValues: [] destination: B32 -> B33  <||@
  Comment 888 block B8 null  <||@
  Comment 888 178 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 888 180 stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 892 182 NOP  <||@
  Comment 893 184 NOP  <||@
  Comment 894 186 NOP  <||@
  Comment 895 188 r11|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 902 190 r10|DWORD = MOVE input: int[-66579|0xfffffffffffefbed]  <||@
  Comment 908 194 JUMP ~outgoingValues: [] destination: B8 -> B39  <||@
  Comment 908 block B39 null  <||@
  Comment 908 850 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 908 852 NOP  <||@
  Comment 909 854 NOP  <||@
  Comment 910 856 NOP  <||@
  Comment 911 858 NOP  <||@
  Comment 912 860 NOP  <||@
  Comment 913 862 NOP  <||@
  Comment 914 864 NOP  <||@
  Comment 915 866 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 922 868 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 929 870 DEOPT info [bci:0]  <||@
  Comment 929 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 934 [rsi:0]at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 942 block B22 null  <||@
  Comment 942 432 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 942 434 stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 946 436 NOP  <||@
  Comment 947 438 NOP  <||@
  Comment 948 440 NOP  <||@
  Comment 949 442 r11|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 956 444 r10|DWORD = MOVE input: int[-71699|0xfffffffffffee7ed]  <||@
  Comment 962 448 JUMP ~outgoingValues: [] destination: B22 -> B39  <||@
  Comment 964 block B26 null  <||@
  Comment 964 514 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 964 516 stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 968 518 NOP  <||@
  Comment 969 520 NOP  <||@
  Comment 970 522 NOP  <||@
  Comment 971 524 r11|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 978 526 r10|DWORD = MOVE input: int[-72723|0xfffffffffffee3ed]  <||@
  Comment 984 530 JUMP ~outgoingValues: [] destination: B26 -> B39  <||@
  Comment 986 block B28 null  <||@
  Comment 986 544 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 986 546 stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 990 548 NOP  <||@
  Comment 991 550 NOP  <||@
  Comment 992 552 NOP  <||@
  Comment 993 554 r11|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 1000 556 r10|DWORD = MOVE input: int[-73747|0xfffffffffffedfed]  <||@
  Comment 1006 560 JUMP ~outgoingValues: [] destination: B28 -> B39  <||@
  Comment 1008 block B34 null  <||@
  Comment 1008 760 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1008 762 stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1012 764 NOP  <||@
  Comment 1013 766 NOP  <||@
  Comment 1014 768 NOP  <||@
  Comment 1015 770 r11|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 1022 772 r10|DWORD = MOVE input: int[-24627|0xffffffffffff9fcd]  <||@
  Comment 1028 776 JUMP ~outgoingValues: [] destination: B34 -> B39  <||@
  Comment 1030 block B31 null  <||@
  Comment 1030 694 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1030 696 rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1034 698 r9|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1039 700 r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1044 702 r11|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1049 704 r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1054 706 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1059 708 NOP  <||@
  Comment 1060 710 NOP  <||@
  Comment 1061 712 NOP  <||@
  Comment 1062 714 NOP  <||@
  Comment 1063 716 NOP  <||@
  Comment 1064 718 NOP  <||@
  Comment 1065 720 NOP  <||@
  Comment 1066 722 MOV x: [r15|QWORD + 1156] y: -74771 size: DWORD  <||@
  Comment 1077 724 MOV x: [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 1088 726 DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9]  <||@
  Comment 1088 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1093 [rcx:0, rsi:0, r8:0, r9:0, r10:0, r11:0]at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7, duringCall: false, rethrow: false]
              |0           |1             |2              
     locals:  |-           |rcx|QWORD[.]  |stack:28|DWORD 
     stack:   |int[0|0x0]  |              |               
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1            |2              
     locals:  |-  |r9|QWORD[.]  |stack:28|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1            |2              
     locals:  |-  |r8|QWORD[.]  |stack:28|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1             |2              
     locals:  |-  |r11|QWORD[.]  |stack:28|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1             |2              
     locals:  |-  |r10|QWORD[.]  |stack:28|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1             |2              
     locals:  |-  |rsi|QWORD[.]  |stack:28|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1101 block B10 null  <||@
  Comment 1101 208 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1101 210 stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1105 212 NOP  <||@
  Comment 1106 214 NOP  <||@
  Comment 1107 216 NOP  <||@
  Comment 1108 218 r11|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 1115 220 r10|DWORD = MOVE input: int[-67603|0xfffffffffffef7ed]  <||@
  Comment 1121 224 JUMP ~outgoingValues: [] destination: B10 -> B39  <||@
  Comment 1126 block B20 null  <||@
  Comment 1126 402 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1126 404 stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1130 406 NOP  <||@
  Comment 1131 408 NOP  <||@
  Comment 1132 410 NOP  <||@
  Comment 1133 412 r11|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 1140 414 r10|DWORD = MOVE input: int[-70675|0xfffffffffffeebed]  <||@
  Comment 1146 418 JUMP ~outgoingValues: [] destination: B20 -> B39  <||@
  Comment 1151 block B35 null  <||@
  Comment 1151 778 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1151 780 stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1155 782 NOP  <||@
  Comment 1156 784 NOP  <||@
  Comment 1157 786 NOP  <||@
  Comment 1158 788 r11|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 1165 790 r10|DWORD = MOVE input: int[-19763|0xffffffffffffb2cd]  <||@
  Comment 1171 794 JUMP ~outgoingValues: [] destination: B35 -> B39  <||@
  Comment 1176 block B37 null  <||@
  Comment 1176 814 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1176 816 stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1180 818 NOP  <||@
  Comment 1181 820 NOP  <||@
  Comment 1182 822 NOP  <||@
  Comment 1183 824 r11|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 1190 826 r10|DWORD = MOVE input: int[-10035|0xffffffffffffd8cd]  <||@
  Comment 1196 830 JUMP ~outgoingValues: [] destination: B37 -> B39  <||@
  Comment 1201 block B14 null  <||@
  Comment 1201 290 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1201 292 stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1205 294 NOP  <||@
  Comment 1206 296 NOP  <||@
  Comment 1207 298 NOP  <||@
  Comment 1208 300 r11|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 1215 302 r10|DWORD = MOVE input: int[-68627|0xfffffffffffef3ed]  <||@
  Comment 1221 306 JUMP ~outgoingValues: [] destination: B14 -> B39  <||@
  Comment 1226 block B16 null  <||@
  Comment 1226 320 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1226 322 stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1230 324 NOP  <||@
  Comment 1231 326 NOP  <||@
  Comment 1232 328 NOP  <||@
  Comment 1233 330 r11|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 1240 332 r10|DWORD = MOVE input: int[-69651|0xfffffffffffeefed]  <||@
  Comment 1246 336 JUMP ~outgoingValues: [] destination: B16 -> B39  <||@
  Comment 1251 block B36 null  <||@
  Comment 1251 796 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1251 798 stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1255 800 NOP  <||@
  Comment 1256 802 NOP  <||@
  Comment 1257 804 NOP  <||@
  Comment 1258 806 r11|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 1265 808 r10|DWORD = MOVE input: int[-14899|0xffffffffffffc5cd]  <||@
  Comment 1271 812 JUMP ~outgoingValues: [] destination: B36 -> B39  <||@
  Comment 1276 block B2 null  <||@
  Comment 1276 66 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1276 68 stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1280 70 NOP  <||@
  Comment 1281 72 NOP  <||@
  Comment 1282 74 NOP  <||@
  Comment 1283 76 r11|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 1290 78 r10|DWORD = MOVE input: int[-64531|0xffffffffffff03ed]  <||@
  Comment 1296 82 JUMP ~outgoingValues: [] destination: B2 -> B39  <||@
  Comment 1301 block B4 null  <||@
  Comment 1301 96 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1301 98 stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1305 100 NOP  <||@
  Comment 1306 102 NOP  <||@
  Comment 1307 104 NOP  <||@
  Comment 1308 106 r11|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 1315 108 r10|DWORD = MOVE input: int[-65555|0xfffffffffffeffed]  <||@
  Comment 1321 112 JUMP ~outgoingValues: [] destination: B4 -> B39  <||@
  Comment 1326 block B38 null  <||@
  Comment 1326 832 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1326 834 stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1330 836 NOP  <||@
  Comment 1331 838 NOP  <||@
  Comment 1332 840 NOP  <||@
  Comment 1333 842 r11|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 1340 844 r10|DWORD = MOVE input: int[-5171|0xffffffffffffebcd]  <||@
  Comment 1346 848 JUMP ~outgoingValues: [] destination: B38 -> B39  <||@
  Comment 1356 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 1381 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 1409 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1414 [rsi:0, r10:0]at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 1444 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1449 [rsi:0, r10:0, r11:0]at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 1479 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1484 [rsi:0, r8:0, r10:0, r11:0]at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 1514 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1519 [rsi:0, r8:0, r9:0, r10:0, r11:0]at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 1549 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1554 [rcx:0, rsi:0, r8:0, r9:0, r10:0, r11:0]at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 1562 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1562 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1568 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 1568 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-5860[java.util.regex.Pattern$$Lambda/0x800000044.is(int)]"
  method "HotSpotCompilation-5860[java.util.regex.Pattern$$Lambda/0x800000044.is(int)]"
  date 1724269748744
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789ae93260 448b560849bc0000002b787f00004d03d44d33e4493bc20f85031e8ffe66669089842400c0feff4883ec489041817f20000000000f850d0500009090909090909090909090909090909090909048896c2440448b560c468b1cd50800000049b80000002b787f00004f8d1c184c3b1d6dffffff0f84120000004c3b1d68ffffff0f8450000000e9a304000090909090423b14d50c0000000f8c5f04000090909090423b14d5100000000f8f660400009090909090909090909090b801000000488b6c24404883c448493ba7500400000f8782040000c3909090909090909090909090909090468b1cd50c000000468b04dd0800000049b90000002b787f00004f8d04014c3b05d6feffff0f84120000004c3b05d1feffff0f8431000000e97603000090909090423b14dd0c0000000f8c4402000090909090423b14dd100000000f8f07030000909090e964ffffff909090909090909090909090909090468b04dd0c000000468b0cc50800000048b90000002b787f00004e8d0c094c3b0d5efeffff0f84120000004c3b0d59feffff0f8431000000e94903000090909090423b14c50c0000000f8c0503000090909090423b14c5100000000f8f0c030000909090e9ecfeffff909090909090909090909090909090468b0cc50c000000428b0ccd0800000048bb0000002b787f0000488d0c0b483b0de6fdffff0f8412000000483b0de1fdffff0f8431000000e96d02000090909090423b14cd0c0000000f8c4202000090909090423b14cd100000000f8f78010000909090e974feffff909090909090909090909090909090428b0ccd0c0000008b1ccd0800000048bf0000002b787f0000488d1c1f483b1d6ffdffff0f8412000000483b1d6afdffff0f842f000000e967010000909090903b14cd0c0000000f8c2a010000909090903b14cd100000000f8f2f010000909090e9fffdffff9090909090909090909090909090909090909090909090909090909090909090908b1ccd0c0000008504dd000000008b0ccd10000000468b0ccd10000000468b04c510000000468b1cdd10000000468b14d5100000008b761048c1e30348c1e60349c1e20349c1e30349c1e00349c1e10348c1e1034889742428488bf38bda4c895424204c895c24184c894424104c894c240848890c24895c243466669048b8ffffffffffffffffe8c0208ffe0f1f84003005000685c00f8496000000909090e93afdffff8954243490909049c7c31405000041baedfbfeff90909090909090458997840400004d899f90040000e8747b8ffe0f1f8400000000008954243490909049c7c31405000041baede7feffebc88954243490909049c7c31405000041baede3feffebb28954243490909049c7c31405000041baeddffeffeb9c8954243490909049c7c39402000041bacd9fffffeb86488b0c244c8b4c24084c8b4424104c8b5c24184c8b542420488b7424289090909090909041c78784040000eddbfeff49c7879004000014000000e8d57a8ffe0f1f8400000000008954243490909049c7c31405000041baedf7feffe926ffffff8954243490909049c7c31405000041baedebfeffe90dffffff8954243490909049c7c39402000041bacdb2ffffe9f4feffff8954243490909049c7c39402000041bacdd8ffffe9dbfeffff8954243490909049c7c31405000041baedf3feffe9c2feffff8954243490909049c7c31405000041baedeffeffe9a9feffff8954243490909049c7c39402000041bacdc5ffffe990feffff8954243490909049c7c31405000041baed03ffffe977feffff8954243490909049c7c31405000041baedfffeffe95efeffff8954243490909049c7c39402000041bacdebffffe945feffff48896c2440e86f7a8dfee9e4fafffff4488d0d6afbffff49898f68040000e936888ffef441c78784040000f572ffff49c7879004000000000000e894798ffe0f1f84000000000041c78784040000f567ffff49c7879004000000000000e871798ffe0f1f84000000000041c78784040000f55cffff49c7879004000000000000e84e798ffe0f1f84000000000041c78784040000f551ffff49c7879004000000000000e82b798ffe0f1f84000000000041c78784040000f546ffff49c7879004000000000000e808798ffe0f1f840000000000e8811aa3fef4e89b768ffef4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 NOP  <||@
  Comment 72 30 NOP  <||@
  Comment 73 32 NOP  <||@
  Comment 74 34 NOP  <||@
  Comment 75 36 NOP  <||@
  Comment 76 38 NOP  <||@
  Comment 77 40 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 82 42 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@62ed65ef slotKind: QWORD  <||@
  Comment 82 44 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 86 46 r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 86 [rsi:0, r10:0]at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 86 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 94 48 r8|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 104 50 r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0  <||@
  Comment 108 52 AMD64HOTSPOTSTRATEGYSWITCH ~key: r11|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B0 -> B1, B0 -> B6] defaultTarget: B0 -> B38 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 108 {DataSection[0x0]}  <||@
  Comment 121 {DataSection[0x8]}  <||@
  Comment 139 block B1 null  <||@
  Comment 139 54 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 139 56 NOP  <||@
  Comment 140 58 NOP  <||@
  Comment 141 60 NOP  <||@
  Comment 142 62 NOP  <||@
  Comment 143 64 CMPBRANCH (x: rdx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD  <||@
  Comment 157 block B3 null  <||@
  Comment 157 84 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 157 86 NOP  <||@
  Comment 158 88 NOP  <||@
  Comment 159 90 NOP  <||@
  Comment 160 92 NOP  <||@
  Comment 161 94 CMPBRANCH (x: rdx|DWORD, y: [r10|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD  <||@
  Comment 175 block B5 null  <||@
  Comment 175 114 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 175 116 NOP  <||@
  Comment 176 118 NOP  <||@
  Comment 177 120 NOP  <||@
  Comment 178 122 JUMP ~outgoingValues: [] destination: B5 -> B33  <||@
  Comment 178 block B33 null  <||@
  Comment 178 738 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 178 740 NOP  <||@
  Comment 179 742 NOP  <||@
  Comment 180 744 NOP  <||@
  Comment 181 746 NOP  <||@
  Comment 182 748 NOP  <||@
  Comment 183 750 NOP  <||@
  Comment 184 752 NOP  <||@
  Comment 185 754 NOP  <||@
  Comment 186 756 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 191 758 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 200 POLL_RETURN_FAR  <||@
  Comment 214 block B6 null  <||@
  Comment 214 124 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 214 126 NOP  <||@
  Comment 215 128 NOP  <||@
  Comment 216 130 NOP  <||@
  Comment 217 132 NOP  <||@
  Comment 218 134 NOP  <||@
  Comment 219 136 NOP  <||@
  Comment 220 138 NOP  <||@
  Comment 221 140 NOP  <||@
  Comment 222 142 NOP  <||@
  Comment 223 144 NOP  <||@
  Comment 224 146 NOP  <||@
  Comment 225 148 NOP  <||@
  Comment 226 150 NOP  <||@
  Comment 227 152 NOP  <||@
  Comment 228 154 NOP  <||@
  Comment 229 156 r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 237 158 r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 237 [rsi:0, r10:0, r11:0]at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 237 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 245 160 r9|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 255 162 r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0  <||@
  Comment 259 164 AMD64HOTSPOTSTRATEGYSWITCH ~key: r8|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B6 -> B7, B6 -> B12] defaultTarget: B6 -> B37 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 259 {DataSection[0x0]}  <||@
  Comment 272 {DataSection[0x8]}  <||@
  Comment 290 block B7 null  <||@
  Comment 290 166 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 290 168 NOP  <||@
  Comment 291 170 NOP  <||@
  Comment 292 172 NOP  <||@
  Comment 293 174 NOP  <||@
  Comment 294 176 CMPBRANCH (x: rdx|DWORD, y: [r11|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD  <||@
  Comment 308 block B9 null  <||@
  Comment 308 196 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 308 198 NOP  <||@
  Comment 309 200 NOP  <||@
  Comment 310 202 NOP  <||@
  Comment 311 204 NOP  <||@
  Comment 312 206 CMPBRANCH (x: rdx|DWORD, y: [r11|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD  <||@
  Comment 326 block B11 null  <||@
  Comment 326 226 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 326 228 NOP  <||@
  Comment 327 230 NOP  <||@
  Comment 328 232 NOP  <||@
  Comment 329 234 JUMP ~outgoingValues: [] destination: B11 -> B33  <||@
  Comment 334 block B12 null  <||@
  Comment 334 236 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 334 238 NOP  <||@
  Comment 335 240 NOP  <||@
  Comment 336 242 NOP  <||@
  Comment 337 244 NOP  <||@
  Comment 338 246 NOP  <||@
  Comment 339 248 NOP  <||@
  Comment 340 250 NOP  <||@
  Comment 341 252 NOP  <||@
  Comment 342 254 NOP  <||@
  Comment 343 256 NOP  <||@
  Comment 344 258 NOP  <||@
  Comment 345 260 NOP  <||@
  Comment 346 262 NOP  <||@
  Comment 347 264 NOP  <||@
  Comment 348 266 NOP  <||@
  Comment 349 268 r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 357 270 r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 357 [rsi:0, r8:0, r10:0, r11:0]at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 357 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 365 272 rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 375 274 r9|QWORD = UNCOMPRESSPOINTER (input: r9|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0  <||@
  Comment 379 276 AMD64HOTSPOTSTRATEGYSWITCH ~key: r9|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B12 -> B13, B12 -> B18] defaultTarget: B12 -> B36 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 379 {DataSection[0x0]}  <||@
  Comment 392 {DataSection[0x8]}  <||@
  Comment 410 block B13 null  <||@
  Comment 410 278 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 410 280 NOP  <||@
  Comment 411 282 NOP  <||@
  Comment 412 284 NOP  <||@
  Comment 413 286 NOP  <||@
  Comment 414 288 CMPBRANCH (x: rdx|DWORD, y: [r8|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD  <||@
  Comment 428 block B15 null  <||@
  Comment 428 308 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 428 310 NOP  <||@
  Comment 429 312 NOP  <||@
  Comment 430 314 NOP  <||@
  Comment 431 316 NOP  <||@
  Comment 432 318 CMPBRANCH (x: rdx|DWORD, y: [r8|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD  <||@
  Comment 446 block B17 null  <||@
  Comment 446 338 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 446 340 NOP  <||@
  Comment 447 342 NOP  <||@
  Comment 448 344 NOP  <||@
  Comment 449 346 JUMP ~outgoingValues: [] destination: B17 -> B33  <||@
  Comment 454 block B18 null  <||@
  Comment 454 348 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 454 350 NOP  <||@
  Comment 455 352 NOP  <||@
  Comment 456 354 NOP  <||@
  Comment 457 356 NOP  <||@
  Comment 458 358 NOP  <||@
  Comment 459 360 NOP  <||@
  Comment 460 362 NOP  <||@
  Comment 461 364 NOP  <||@
  Comment 462 366 NOP  <||@
  Comment 463 368 NOP  <||@
  Comment 464 370 NOP  <||@
  Comment 465 372 NOP  <||@
  Comment 466 374 NOP  <||@
  Comment 467 376 NOP  <||@
  Comment 468 378 NOP  <||@
  Comment 469 380 r9|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 477 382 rcx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 477 [rsi:0, r8:0, r9:0, r10:0, r11:0]at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 477 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 485 384 rbx|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 495 386 rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0  <||@
  Comment 499 388 AMD64HOTSPOTSTRATEGYSWITCH ~key: rcx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B18 -> B19, B18 -> B24] defaultTarget: B18 -> B35 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 499 {DataSection[0x0]}  <||@
  Comment 512 {DataSection[0x8]}  <||@
  Comment 530 block B19 null  <||@
  Comment 530 390 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 530 392 NOP  <||@
  Comment 531 394 NOP  <||@
  Comment 532 396 NOP  <||@
  Comment 533 398 NOP  <||@
  Comment 534 400 CMPBRANCH (x: rdx|DWORD, y: [r9|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD  <||@
  Comment 548 block B21 null  <||@
  Comment 548 420 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 548 422 NOP  <||@
  Comment 549 424 NOP  <||@
  Comment 550 426 NOP  <||@
  Comment 551 428 NOP  <||@
  Comment 552 430 CMPBRANCH (x: rdx|DWORD, y: [r9|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD  <||@
  Comment 566 block B23 null  <||@
  Comment 566 450 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 566 452 NOP  <||@
  Comment 567 454 NOP  <||@
  Comment 568 456 NOP  <||@
  Comment 569 458 JUMP ~outgoingValues: [] destination: B23 -> B33  <||@
  Comment 574 block B24 null  <||@
  Comment 574 460 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 574 462 NOP  <||@
  Comment 575 464 NOP  <||@
  Comment 576 466 NOP  <||@
  Comment 577 468 NOP  <||@
  Comment 578 470 NOP  <||@
  Comment 579 472 NOP  <||@
  Comment 580 474 NOP  <||@
  Comment 581 476 NOP  <||@
  Comment 582 478 NOP  <||@
  Comment 583 480 NOP  <||@
  Comment 584 482 NOP  <||@
  Comment 585 484 NOP  <||@
  Comment 586 486 NOP  <||@
  Comment 587 488 NOP  <||@
  Comment 588 490 NOP  <||@
  Comment 589 492 rcx|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 597 494 rbx|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 597 [rcx:0, rsi:0, r8:0, r9:0, r10:0, r11:0]at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 597 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 604 496 rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 614 498 rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 140154094223360 shift: 0  <||@
  Comment 618 500 AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B24 -> B25, B24 -> B30] defaultTarget: B24 -> B34 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 618 {DataSection[0x0]}  <||@
  Comment 631 {DataSection[0x8]}  <||@
  Comment 649 block B25 null  <||@
  Comment 649 502 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 649 504 NOP  <||@
  Comment 650 506 NOP  <||@
  Comment 651 508 NOP  <||@
  Comment 652 510 NOP  <||@
  Comment 653 512 CMPBRANCH (x: rdx|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD  <||@
  Comment 666 block B27 null  <||@
  Comment 666 532 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 666 534 NOP  <||@
  Comment 667 536 NOP  <||@
  Comment 668 538 NOP  <||@
  Comment 669 540 NOP  <||@
  Comment 670 542 CMPBRANCH (x: rdx|DWORD, y: [rcx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD  <||@
  Comment 683 block B29 null  <||@
  Comment 683 562 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 683 564 NOP  <||@
  Comment 684 566 NOP  <||@
  Comment 685 568 NOP  <||@
  Comment 686 570 JUMP ~outgoingValues: [] destination: B29 -> B33  <||@
  Comment 691 block B30 null  <||@
  Comment 691 572 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 691 574 NOP  <||@
  Comment 692 576 NOP  <||@
  Comment 693 578 NOP  <||@
  Comment 694 580 NOP  <||@
  Comment 695 582 NOP  <||@
  Comment 696 584 NOP  <||@
  Comment 697 586 NOP  <||@
  Comment 698 588 NOP  <||@
  Comment 699 590 NOP  <||@
  Comment 700 592 NOP  <||@
  Comment 701 594 NOP  <||@
  Comment 702 596 NOP  <||@
  Comment 703 598 NOP  <||@
  Comment 704 600 NOP  <||@
  Comment 705 602 NOP  <||@
  Comment 706 604 NOP  <||@
  Comment 707 606 NOP  <||@
  Comment 708 608 NOP  <||@
  Comment 709 610 NOP  <||@
  Comment 710 612 NOP  <||@
  Comment 711 614 NOP  <||@
  Comment 712 616 NOP  <||@
  Comment 713 618 NOP  <||@
  Comment 714 620 NOP  <||@
  Comment 715 622 NOP  <||@
  Comment 716 624 NOP  <||@
  Comment 717 626 NOP  <||@
  Comment 718 628 NOP  <||@
  Comment 719 630 NOP  <||@
  Comment 720 632 NOP  <||@
  Comment 721 634 NOP  <||@
  Comment 722 636 NOP  <||@
  Comment 723 638 NOP  <||@
  Comment 724 640 rbx|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 731 642 NULLCHECK address: [rbx|DWORD[_] * 8] state [bci:0]  <||@
  Comment 731 [rcx:0, rbx:0, rsi:0, r8:0, r9:0, r10:0, r11:0]at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 731 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 738 644 rcx|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 745 646 r9|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 753 648 r8|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 761 650 r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 769 652 r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 777 654 rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 780 656 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3  <||@
  Comment 784 658 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3  <||@
  Comment 788 660 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3  <||@
  Comment 792 662 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3  <||@
  Comment 796 664 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3  <||@
  Comment 800 666 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3  <||@
  Comment 804 668 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@70d24d3a encoding: base: 0 shift: 3  <||@
  Comment 808 670 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 813 672 rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 816 674 rbx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 818 678 stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 823 680 stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 828 682 stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 833 684 stack:72|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 838 686 stack:80|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 842 688 stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 846 690 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9]  <||@
  Comment 849 INVOKEINTERFACE  <||@
  Comment 859 {HotSpotMethod<Pattern$CharPredicate.is(int)>}  <||@
  Comment 864 [stack:0, stack:8, stack:16, stack:24, stack:32, stack:40]at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1                  |2              
     locals:  |-  |stack:80|QWORD[.]  |stack:28|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1                  |2              
     locals:  |-  |stack:72|QWORD[.]  |stack:28|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1                  |2              
     locals:  |-  |stack:64|QWORD[.]  |stack:28|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1                  |2              
     locals:  |-  |stack:56|QWORD[.]  |stack:28|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1                  |2              
     locals:  |-  |stack:48|QWORD[.]  |stack:28|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1                  |2              
     locals:  |-  |stack:40|QWORD[.]  |stack:28|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 872 692 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD  <||@
  Comment 880 block B32 null  <||@
  Comment 880 728 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 880 730 NOP  <||@
  Comment 881 732 NOP  <||@
  Comment 882 734 NOP  <||@
  Comment 883 736 JUMP ~outgoingValues: [] destination: B32 -> B33  <||@
  Comment 888 block B8 null  <||@
  Comment 888 178 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 888 180 stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 892 182 NOP  <||@
  Comment 893 184 NOP  <||@
  Comment 894 186 NOP  <||@
  Comment 895 188 r11|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 902 190 r10|DWORD = MOVE input: int[-66579|0xfffffffffffefbed]  <||@
  Comment 908 194 JUMP ~outgoingValues: [] destination: B8 -> B39  <||@
  Comment 908 block B39 null  <||@
  Comment 908 850 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 908 852 NOP  <||@
  Comment 909 854 NOP  <||@
  Comment 910 856 NOP  <||@
  Comment 911 858 NOP  <||@
  Comment 912 860 NOP  <||@
  Comment 913 862 NOP  <||@
  Comment 914 864 NOP  <||@
  Comment 915 866 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 922 868 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 929 870 DEOPT info [bci:0]  <||@
  Comment 929 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 934 [rsi:0]at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 942 block B22 null  <||@
  Comment 942 432 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 942 434 stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 946 436 NOP  <||@
  Comment 947 438 NOP  <||@
  Comment 948 440 NOP  <||@
  Comment 949 442 r11|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 956 444 r10|DWORD = MOVE input: int[-71699|0xfffffffffffee7ed]  <||@
  Comment 962 448 JUMP ~outgoingValues: [] destination: B22 -> B39  <||@
  Comment 964 block B26 null  <||@
  Comment 964 514 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 964 516 stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 968 518 NOP  <||@
  Comment 969 520 NOP  <||@
  Comment 970 522 NOP  <||@
  Comment 971 524 r11|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 978 526 r10|DWORD = MOVE input: int[-72723|0xfffffffffffee3ed]  <||@
  Comment 984 530 JUMP ~outgoingValues: [] destination: B26 -> B39  <||@
  Comment 986 block B28 null  <||@
  Comment 986 544 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 986 546 stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 990 548 NOP  <||@
  Comment 991 550 NOP  <||@
  Comment 992 552 NOP  <||@
  Comment 993 554 r11|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 1000 556 r10|DWORD = MOVE input: int[-73747|0xfffffffffffedfed]  <||@
  Comment 1006 560 JUMP ~outgoingValues: [] destination: B28 -> B39  <||@
  Comment 1008 block B34 null  <||@
  Comment 1008 760 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1008 762 stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1012 764 NOP  <||@
  Comment 1013 766 NOP  <||@
  Comment 1014 768 NOP  <||@
  Comment 1015 770 r11|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 1022 772 r10|DWORD = MOVE input: int[-24627|0xffffffffffff9fcd]  <||@
  Comment 1028 776 JUMP ~outgoingValues: [] destination: B34 -> B39  <||@
  Comment 1030 block B31 null  <||@
  Comment 1030 694 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1030 696 rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1034 698 r9|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1039 700 r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1044 702 r11|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1049 704 r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1054 706 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1059 708 NOP  <||@
  Comment 1060 710 NOP  <||@
  Comment 1061 712 NOP  <||@
  Comment 1062 714 NOP  <||@
  Comment 1063 716 NOP  <||@
  Comment 1064 718 NOP  <||@
  Comment 1065 720 NOP  <||@
  Comment 1066 722 MOV x: [r15|QWORD + 1156] y: -74771 size: DWORD  <||@
  Comment 1077 724 MOV x: [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 1088 726 DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9]  <||@
  Comment 1088 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1093 [rcx:0, rsi:0, r8:0, r9:0, r10:0, r11:0]at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7, duringCall: false, rethrow: false]
              |0           |1             |2              
     locals:  |-           |rcx|QWORD[.]  |stack:28|DWORD 
     stack:   |int[0|0x0]  |              |               
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1            |2              
     locals:  |-  |r9|QWORD[.]  |stack:28|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1            |2              
     locals:  |-  |r8|QWORD[.]  |stack:28|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1             |2              
     locals:  |-  |r11|QWORD[.]  |stack:28|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1             |2              
     locals:  |-  |r10|QWORD[.]  |stack:28|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1             |2              
     locals:  |-  |rsi|QWORD[.]  |stack:28|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1101 block B10 null  <||@
  Comment 1101 208 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1101 210 stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1105 212 NOP  <||@
  Comment 1106 214 NOP  <||@
  Comment 1107 216 NOP  <||@
  Comment 1108 218 r11|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 1115 220 r10|DWORD = MOVE input: int[-67603|0xfffffffffffef7ed]  <||@
  Comment 1121 224 JUMP ~outgoingValues: [] destination: B10 -> B39  <||@
  Comment 1126 block B20 null  <||@
  Comment 1126 402 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1126 404 stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1130 406 NOP  <||@
  Comment 1131 408 NOP  <||@
  Comment 1132 410 NOP  <||@
  Comment 1133 412 r11|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 1140 414 r10|DWORD = MOVE input: int[-70675|0xfffffffffffeebed]  <||@
  Comment 1146 418 JUMP ~outgoingValues: [] destination: B20 -> B39  <||@
  Comment 1151 block B35 null  <||@
  Comment 1151 778 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1151 780 stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1155 782 NOP  <||@
  Comment 1156 784 NOP  <||@
  Comment 1157 786 NOP  <||@
  Comment 1158 788 r11|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 1165 790 r10|DWORD = MOVE input: int[-19763|0xffffffffffffb2cd]  <||@
  Comment 1171 794 JUMP ~outgoingValues: [] destination: B35 -> B39  <||@
  Comment 1176 block B37 null  <||@
  Comment 1176 814 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1176 816 stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1180 818 NOP  <||@
  Comment 1181 820 NOP  <||@
  Comment 1182 822 NOP  <||@
  Comment 1183 824 r11|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 1190 826 r10|DWORD = MOVE input: int[-10035|0xffffffffffffd8cd]  <||@
  Comment 1196 830 JUMP ~outgoingValues: [] destination: B37 -> B39  <||@
  Comment 1201 block B14 null  <||@
  Comment 1201 290 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1201 292 stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1205 294 NOP  <||@
  Comment 1206 296 NOP  <||@
  Comment 1207 298 NOP  <||@
  Comment 1208 300 r11|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 1215 302 r10|DWORD = MOVE input: int[-68627|0xfffffffffffef3ed]  <||@
  Comment 1221 306 JUMP ~outgoingValues: [] destination: B14 -> B39  <||@
  Comment 1226 block B16 null  <||@
  Comment 1226 320 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1226 322 stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1230 324 NOP  <||@
  Comment 1231 326 NOP  <||@
  Comment 1232 328 NOP  <||@
  Comment 1233 330 r11|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 1240 332 r10|DWORD = MOVE input: int[-69651|0xfffffffffffeefed]  <||@
  Comment 1246 336 JUMP ~outgoingValues: [] destination: B16 -> B39  <||@
  Comment 1251 block B36 null  <||@
  Comment 1251 796 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1251 798 stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1255 800 NOP  <||@
  Comment 1256 802 NOP  <||@
  Comment 1257 804 NOP  <||@
  Comment 1258 806 r11|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 1265 808 r10|DWORD = MOVE input: int[-14899|0xffffffffffffc5cd]  <||@
  Comment 1271 812 JUMP ~outgoingValues: [] destination: B36 -> B39  <||@
  Comment 1276 block B2 null  <||@
  Comment 1276 66 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1276 68 stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1280 70 NOP  <||@
  Comment 1281 72 NOP  <||@
  Comment 1282 74 NOP  <||@
  Comment 1283 76 r11|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 1290 78 r10|DWORD = MOVE input: int[-64531|0xffffffffffff03ed]  <||@
  Comment 1296 82 JUMP ~outgoingValues: [] destination: B2 -> B39  <||@
  Comment 1301 block B4 null  <||@
  Comment 1301 96 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1301 98 stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1305 100 NOP  <||@
  Comment 1306 102 NOP  <||@
  Comment 1307 104 NOP  <||@
  Comment 1308 106 r11|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 1315 108 r10|DWORD = MOVE input: int[-65555|0xfffffffffffeffed]  <||@
  Comment 1321 112 JUMP ~outgoingValues: [] destination: B4 -> B39  <||@
  Comment 1326 block B38 null  <||@
  Comment 1326 832 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1326 834 stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1330 836 NOP  <||@
  Comment 1331 838 NOP  <||@
  Comment 1332 840 NOP  <||@
  Comment 1333 842 r11|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 1340 844 r10|DWORD = MOVE input: int[-5171|0xffffffffffffebcd]  <||@
  Comment 1346 848 JUMP ~outgoingValues: [] destination: B38 -> B39  <||@
  Comment 1356 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 1381 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 1409 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1414 [rsi:0, r10:0]at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 1444 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1449 [rsi:0, r10:0, r11:0]at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 1479 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1484 [rsi:0, r8:0, r10:0, r11:0]at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 1514 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1519 [rsi:0, r8:0, r9:0, r10:0, r11:0]at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 1549 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1554 [rcx:0, rsi:0, r8:0, r9:0, r10:0, r11:0]at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 1562 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1562 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1568 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 1568 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
