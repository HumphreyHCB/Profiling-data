begin_compilation
  name " HotSpotCompilation-5814[java.lang.StringBuilder.append(CharSequence)]"
  method "HotSpotCompilation-5814[java.lang.StringBuilder.append(CharSequence)]"
  date 1724269727658
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a883 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a883  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.lang.StringBuilder
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v9 ?67 v444 ?7 ?244 ?242 v924 ?193 ?634 ?94 ?241 v383 ?634 v931 v922 ?635 v923 v699 v702 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v923 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a883 v332 a893 v449 v697 v699 v700 v702 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a883 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v923 
lastLocationAccess: - 
=== Succesors ===
next: i884 
=== Usages ===
a389 v925 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v923 lastLocationAccess: - #next: i884  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a java.lang.Object
uncheckedStamp: a java.lang.CharSequence
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?7 ?67 v928 v933 ?193 ?94 v919 v921 v932 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence)>
localsSize: 2
locksSize: 0
sourceFile: StringBuilder.java
sourceLine: 91
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
v645 v918 v916 a733 a814 i884 v885 i889 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid v925 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a883 
=== Succesors ===
=== Usages ===
i884 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a883  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i884 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-130827|0xfffffffffffe00f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 134]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v925 
lastLocationAccess: - 
=== Succesors ===
next: v885 
=== Usages ===
v463 j780 i132 i135 i141 v150 v167 i168 i46 v762 a733 
=== Predecessor ===
a883 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v925 lastLocationAccess: - #next: v885  <|@  <|@
f <@~|@floating>@ <|@
tid v933 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v885 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v885 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-138771|0xfffffffffffde1ed]
deoptSpeculation: long[20|0x14]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:628) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v933 
lastLocationAccess: - 
=== Succesors ===
next: i886 
=== Usages ===
v914 v912 
=== Predecessor ===
i884 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v933 lastLocationAccess: - #next: i886  <|@  <|@
f <@~|@floating>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i886 i903 i895 i899 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i886 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v924 
lastLocationAccess: - 
=== Succesors ===
next: i887 
=== Usages ===
v456 i396 
=== Predecessor ===
v885 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v924 lastLocationAccess: - #next: i887  <|@  <|@
f <@~|@floating>@ <|@
tid v922 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i887 i905 i897 v382 v434 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i887 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 16]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v922 
lastLocationAccess: - 
=== Succesors ===
next: v15 
=== Usages ===
i98 i29 ?193 i201 j910 v217 i222 
=== Predecessor ===
i886 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v922 lastLocationAccess: - #next: v15  <|@  <|@
f <@~|@floating>@ <|@
tid i396 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i886 
=== Succesors ===
=== Usages ===
i46 i120 i131 i134 i140 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i886  <|@  <|@
f <@~|@floating>@ <|@
tid i46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 9]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i884 
y: i396 
=== Succesors ===
=== Usages ===
i47 i114 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i884 y: i396  <|@  <|@
f <@~|@floating>@ <|@
tid v913 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:625) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v914 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v914 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:625) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v885 
y: v913 
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v885 y: v913  <|@  <|@
f <@~|@floating>@ <|@
tid a389 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a883 
=== Succesors ===
=== Usages ===
j774 ?634 v447 a254 j854 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a883  <|@  <|@
tid ?7 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
sourceFile: StringBuilder.java
sourceLine: 91
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
?244 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
tid ?244 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence)>
localsSize: 2
locksSize: 0
sourceFile: StringBuilder.java
sourceLine: 209
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?7 
values: a1 
=== Succesors ===
=== Usages ===
?93 ?243 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?7 values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid i76 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 12]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v413 v310 v411 v355 v217 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j642 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v686 v842 j644 j644 j644 j666 j666 j666 j666 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i48 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v49 v115 i236 j228 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v921 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i890 i896 i904 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v919 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a888 a891 a900 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:625) [bci: 13]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: PROFILED designatedSuccessorProbability: 0.6362310003571869
stamp: void
=== Inputs ===
condition: v914 
=== Succesors ===
trueSuccessor: v14 
falseSuccessor: v13 
=== Usages ===
=== Predecessor ===
i887 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v914 #trueSuccessor: v14 #falseSuccessor: v13  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 16]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a888 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a888  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a888 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:586) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v919 
lastLocationAccess: - 
=== Succesors ===
next: i889 
=== Usages ===
v920 
=== Predecessor ===
v14 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v919 lastLocationAccess: - #next: i889  <|@  <|@
f <@~|@floating>@ <|@
tid v920 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a888 
=== Succesors ===
=== Usages ===
i889 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a888  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i889 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-68875|0xfffffffffffef2f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:586) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v920 
lastLocationAccess: - 
=== Succesors ===
next: i890 
=== Usages ===
i108 
=== Predecessor ===
a888 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v920 lastLocationAccess: - #next: i890  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i890 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:586) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v921 
lastLocationAccess: - 
=== Succesors ===
next: v118 
=== Usages ===
i276 v456 
=== Predecessor ===
i889 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v921 lastLocationAccess: - #next: v118  <|@  <|@
f <@~|@floating>@ <|@
tid i276 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:586) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i890 
=== Succesors ===
=== Usages ===
i108 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i890  <|@  <|@
f <@~|@floating>@ <|@
tid i108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 9]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:586) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i889 
y: i276 
=== Succesors ===
=== Usages ===
i98 i101 ?241 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i889 y: i276  <|@  <|@
f <@~|@floating>@ <|@
tid i98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 20]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i108 
y: i887 
=== Succesors ===
=== Usages ===
i114 i131 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i108 y: i887  <|@  <|@
f <@~|@floating>@ <|@
tid i114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 13]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i98 
y: i46 
=== Succesors ===
=== Usages ===
v115 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i98 y: i46  <|@  <|@
f <@~|@floating>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i114 
y: i48 
=== Succesors ===
=== Usages ===
v118 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i114 y: i48  <|@  <|@
f <@~|@floating>@ <|@
tid j225 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j870 j237 j801 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: PROFILED designatedSuccessorProbability: 0.9102668972297561
stamp: void
=== Inputs ===
condition: v115 
=== Succesors ===
trueSuccessor: v117 
falseSuccessor: v116 
=== Usages ===
=== Predecessor ===
i890 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v115 #trueSuccessor: v117 #falseSuccessor: v116  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603391649089349823
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v124 
=== Usages ===
=== Predecessor ===
v118 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v124  <|@  <|@
f <@*|@fixed>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v125 
=== Predecessor ===
v117 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B42" 
    xhandlers
    flags 
    probability 4588388498606785847
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v582 
=== Usages ===
=== Predecessor ===
v118 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v582  <|@  <|@
f <@~|@floating>@ <|@
tid i131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:261) [bci: 11]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i98 
y: i396 
=== Succesors ===
=== Usages ===
i132 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i98 y: i396  <|@  <|@
f <@~|@floating>@ <|@
tid i132 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:262) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i131 
y: i884 
=== Succesors ===
=== Usages ===
v147 i148 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i131 y: i884  <|@  <|@
f <@~|@floating>@ <|@
tid i133 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 22]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i134 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 27]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i133 
y: i396 
=== Succesors ===
=== Usages ===
i135 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i133 y: i396  <|@  <|@
f <@~|@floating>@ <|@
tid i135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i134 
y: i884 
=== Succesors ===
=== Usages ===
v147 i148 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i134 y: i884  <|@  <|@
f <@~|@floating>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:2020) [bci: 2]
at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:740) [bci: 3]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i132 
y: i135 
=== Succesors ===
=== Usages ===
i148 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i132 y: i135  <|@  <|@
f <@~|@floating>@ <|@
tid i148 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:2020) [bci: 2]
at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:740) [bci: 3]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
condition: v147 
trueValue: i135 
falseValue: i132 
=== Succesors ===
=== Usages ===
i141 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v147 trueValue: i135 falseValue: i132  <|@  <|@
f <@~|@floating>@ <|@
tid i141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:740) [bci: 6]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i148 
y: i884 
=== Succesors ===
=== Usages ===
i630 i140 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i148 y: i884  <|@  <|@
f <@~|@floating>@ <|@
tid i629 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 10]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i630 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i630 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 10]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i141 
y: i629 
=== Succesors ===
=== Usages ===
v632 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i141 y: i629  <|@  <|@
f <@~|@floating>@ <|@
tid i631 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 10]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: 2147483639
stableDimension: 0
stamp: i32 [2147483639]
stampKind: i32
value: int[2147483639|0x7ffffff7]
=== Inputs ===
=== Succesors ===
=== Usages ===
v632 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 10]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i630 
y: i631 
=== Succesors ===
=== Usages ===
v582 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i630 y: i631  <|@  <|@
f <@*|@fixed>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 16]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v632 
=== Succesors ===
trueSuccessor: v580 
falseSuccessor: v581 
=== Usages ===
=== Predecessor ===
v116 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v632 #trueSuccessor: v580 #falseSuccessor: v581  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4588388498606785847
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:742) [bci: 19]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v153 
=== Usages ===
=== Predecessor ===
v582 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v153  <|@  <|@
f <@~|@floating>@ <|@
tid i140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:267) [bci: 57]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i141 
y: i396 
=== Succesors ===
=== Usages ===
i120 
=== Predecessor ===
- >@ <|@
instruction <@>>|@jdk.graal.compiler.nodes.calc.RightShiftNode>@ x: i141 y: i396  <|@  <|@
f <@~|@floating>@ <|@
tid i120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i140 
y: i396 
=== Succesors ===
=== Usages ===
v150 v841 v167 i168 v464 j785 a814 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i140 y: i396  <|@  <|@
f <@~|@floating>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3538) [bci: 3]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i120 
y: i884 
=== Succesors ===
=== Usages ===
v153 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i120 y: i884  <|@  <|@
f <@~|@floating>@ <|@
tid v882 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: meta{HotSpotType<[B, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<[B, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v761 v840 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j728 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.defaultPrototypeMarkWord(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:421) [bci: 9]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v758 v837 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: meta{HotSpotType<[B, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[B, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a733 a814 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j742 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: 23
stableDimension: 0
stamp: i64 [23]
stampKind: i64
value: long[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
j743 j821 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j721 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:132) [bci: 23]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j722 j786 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3538) [bci: 3]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: PROFILED designatedSuccessorProbability: 3.433727982038448E-5
stamp: void
=== Inputs ===
condition: v150 
=== Succesors ===
trueSuccessor: v152 
falseSuccessor: v151 
=== Usages ===
=== Predecessor ===
v580 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v150 #trueSuccessor: v152 #falseSuccessor: v151  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4521739169494778405
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 6]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v772 
=== Usages ===
=== Predecessor ===
v153 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v772  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v772 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j717 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j717  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j717 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j755 
=== Usages ===
v934 v935 
=== Predecessor ===
v772 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j755  <|@  <|@
f <@~|@floating>@ <|@
tid v934 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j717 
index: - 
=== Succesors ===
=== Usages ===
j755 v757 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j717 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j755 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v934 
lastLocationAccess: - 
=== Succesors ===
next: j756 
=== Usages ===
j723 v936 v937 a732 v941 v938 v939 v940 
=== Predecessor ===
j717 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v934 lastLocationAccess: - #next: j756  <|@  <|@
f <@~|@floating>@ <|@
tid v935 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j717 
index: - 
=== Succesors ===
=== Usages ===
j756 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j717 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j756 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v935 
lastLocationAccess: - 
=== Succesors ===
next: v727 
=== Usages ===
v724 
=== Predecessor ===
j755 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v935 lastLocationAccess: - #next: v727  <|@  <|@
f <@~|@floating>@ <|@
tid j780 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i884 
=== Succesors ===
=== Usages ===
v781 j743 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i884  <|@  <|@
f <@~|@floating>@ <|@
tid j743 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64 [23 - 2147483670] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j780 
y: j742 
=== Succesors ===
=== Usages ===
j722 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j780 y: j742  <|@  <|@
f <@~|@floating>@ <|@
tid j722 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64 [0 - 2147483664] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j743 
y: j721 
=== Succesors ===
=== Usages ===
j723 v938 v939 v940 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j743 y: j721  <|@  <|@
f <@~|@floating>@ <|@
tid j723 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
=== Inputs ===
x: j722 
y: j755 
=== Succesors ===
=== Usages ===
v724 v757 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j722 y: j755  <|@  <|@
f <@~|@floating>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j756 
y: j723 
=== Succesors ===
=== Usages ===
v727 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j756 y: j723  <|@  <|@
f <@*|@fixed>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v724 
=== Succesors ===
trueSuccessor: v726 
falseSuccessor: v725 
=== Usages ===
=== Predecessor ===
j756 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v724 #trueSuccessor: v726 #falseSuccessor: v725  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4491510020210992795
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a733 
=== Usages ===
=== Predecessor ===
v727 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a733  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a733 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v716 i884 
=== Succesors ===
next: v916 
=== Usages ===
v916 a753 
=== Predecessor ===
v726 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v716 i884 #next: v916  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-196721|0xfffffffffffcff8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a733 
=== Succesors ===
next: v737 
=== Usages ===
=== Predecessor ===
a733 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a733 #next: v737  <|@  <|@
f <@*|@fixed>@ <|@
tid v737 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v736 
=== Predecessor ===
v916 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4521692882062356696
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v725 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v757 
=== Usages ===
=== Predecessor ===
v727 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v757  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v757 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v934 
lastLocationAccess: - 
value: j723 
stateAfter: - 
=== Succesors ===
next: v745 
=== Usages ===
=== Predecessor ===
v725 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v934 lastLocationAccess: - value: j723 stateAfter: - #next: v745  <|@  <|@
f <@~|@floating>@ <|@
tid v938 <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j722 
index: j755 
=== Succesors ===
=== Usages ===
v745 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j722 index: j755  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
address: v938 
=== Succesors ===
next: v748 
=== Usages ===
=== Predecessor ===
v757 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v938 #next: v748  <|@  <|@
f <@~|@floating>@ <|@
tid v939 <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j722 
index: j755 
=== Succesors ===
=== Usages ===
v748 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j722 index: j755  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
address: v939 
=== Succesors ===
next: v751 
=== Usages ===
=== Predecessor ===
v745 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v939 #next: v751  <|@  <|@
f <@~|@floating>@ <|@
tid v940 <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j722 
index: j755 
=== Succesors ===
=== Usages ===
v751 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j722 index: j755  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
address: v940 
=== Succesors ===
next: v758 
=== Usages ===
=== Predecessor ===
v748 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v940 #next: v758  <|@  <|@
f <@~|@floating>@ <|@
tid v936 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j755 
index: - 
=== Succesors ===
=== Usages ===
v758 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j755 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v936 
lastLocationAccess: - 
value: j728 
stateAfter: - 
=== Succesors ===
next: v761 
=== Usages ===
=== Predecessor ===
v751 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v936 lastLocationAccess: - value: j728 stateAfter: - #next: v761  <|@  <|@
f <@~|@floating>@ <|@
tid v941 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j755 
index: - 
=== Succesors ===
=== Usages ===
v761 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j755 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v941 
lastLocationAccess: - 
value: v882 
stateAfter: - 
=== Succesors ===
next: v762 
=== Usages ===
=== Predecessor ===
v758 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v941 lastLocationAccess: - value: v882 stateAfter: - #next: v762  <|@  <|@
f <@~|@floating>@ <|@
tid v937 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j755 
index: - 
=== Succesors ===
=== Usages ===
v762 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j755 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v937 
lastLocationAccess: - 
value: i884 
stateAfter: - 
=== Succesors ===
next: v731 
=== Usages ===
=== Predecessor ===
v761 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v937 lastLocationAccess: - value: i884 stateAfter: - #next: v731  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v731 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a732 
=== Usages ===
=== Predecessor ===
v762 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a732  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a732 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j755 
=== Succesors ===
next: v735 
=== Usages ===
a753 
=== Predecessor ===
v731 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j755 #next: v735  <|@  <|@
f <@*|@fixed>@ <|@
tid v735 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v736 
=== Predecessor ===
a732 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 4521739169494778405
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a753 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v736 
values: a732 a733 
=== Succesors ===
=== Usages ===
j778 a297 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v736 values: a732 a733  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v735 v737 
=== Succesors ===
next: j774 
=== Usages ===
a753 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v735 v737 #next: j774  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j774 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
=== Inputs ===
object: a389 
=== Succesors ===
next: j778 
=== Usages ===
v942 
=== Predecessor ===
v736 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a389 #next: j778  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j778 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
=== Inputs ===
object: a753 
=== Succesors ===
next: v781 
=== Usages ===
v943 
=== Predecessor ===
j774 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a753 #next: v781  <|@  <|@
f <@~|@floating>@ <|@
tid v942 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j774 
index: - 
=== Succesors ===
=== Usages ===
v781 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j774 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v943 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j778 
index: - 
=== Succesors ===
=== Usages ===
v781 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j778 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v781 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}
descriptorName: byteDisjointArraycopyKillInit
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v942 v943 j780 
=== Succesors ===
next: v296 
=== Usages ===
=== Predecessor ===
j778 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v942 v943 j780 #next: v296  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:80) [bci: 39] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a297 
=== Usages ===
=== Predecessor ===
v781 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a297  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a297 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:81) [bci: 43] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: a!# byte[]
=== Inputs ===
object: a753 
=== Succesors ===
next: v172 
=== Usages ===
a173 
=== Predecessor ===
v296 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a753 #next: v172  <|@  <|@
f <@*|@fixed>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v171 
=== Predecessor ===
a297 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4588388216090718820
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 14]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v852 
=== Usages ===
=== Predecessor ===
v153 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v852  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v852 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j782 
=== Usages ===
=== Predecessor ===
v151 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j782  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j782 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j834 
=== Usages ===
v944 v945 
=== Predecessor ===
v852 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j834  <|@  <|@
f <@~|@floating>@ <|@
tid v944 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j782 
index: - 
=== Succesors ===
=== Usages ===
j834 v836 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j782 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j834 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v944 
lastLocationAccess: - 
=== Succesors ===
next: j835 
=== Usages ===
j787 v946 v947 v948 a813 v949 v953 v950 v951 v952 
=== Predecessor ===
j782 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v944 lastLocationAccess: - #next: j835  <|@  <|@
f <@~|@floating>@ <|@
tid v945 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j782 
index: - 
=== Succesors ===
=== Usages ===
j835 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j782 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j835 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v945 
lastLocationAccess: - 
=== Succesors ===
next: v791 
=== Usages ===
v788 
=== Predecessor ===
j834 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v945 lastLocationAccess: - #next: v791  <|@  <|@
f <@~|@floating>@ <|@
tid j785 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i120 
=== Succesors ===
=== Usages ===
j821 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i120  <|@  <|@
f <@~|@floating>@ <|@
tid j821 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64 [23 - 4294967318] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j785 
y: j742 
=== Succesors ===
=== Usages ===
j786 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j785 y: j742  <|@  <|@
f <@~|@floating>@ <|@
tid j786 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64 [0 - 4294967312] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j821 
y: j721 
=== Succesors ===
=== Usages ===
j787 v802 j823 v950 v951 v952 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j821 y: j721  <|@  <|@
f <@~|@floating>@ <|@
tid j787 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
=== Inputs ===
x: j786 
y: j834 
=== Succesors ===
=== Usages ===
v788 v836 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j786 y: j834  <|@  <|@
f <@~|@floating>@ <|@
tid v788 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j835 
y: j787 
=== Succesors ===
=== Usages ===
v791 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j835 y: j787  <|@  <|@
f <@*|@fixed>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v788 
=== Succesors ===
trueSuccessor: v790 
falseSuccessor: v789 
=== Usages ===
=== Predecessor ===
j835 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v788 #trueSuccessor: v790 #falseSuccessor: v789  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4558404756106723069
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v790 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a814 
=== Usages ===
=== Predecessor ===
v791 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a814  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a814 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v716 i120 
=== Succesors ===
next: v918 
=== Usages ===
v918 a832 
=== Predecessor ===
v790 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v716 i120 #next: v918  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v918 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-217201|0xfffffffffffcaf8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a814 
=== Succesors ===
next: v818 
=== Usages ===
=== Predecessor ===
a814 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a814 #next: v818  <|@  <|@
f <@*|@fixed>@ <|@
tid v818 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v817 
=== Predecessor ===
v918 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B16" 
    xhandlers
    flags 
    probability 4588305942140169576
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v789 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v836 
=== Usages ===
=== Predecessor ===
v791 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v836  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v836 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v944 
lastLocationAccess: - 
value: j787 
stateAfter: - 
=== Succesors ===
next: v827 
=== Usages ===
=== Predecessor ===
v789 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v944 lastLocationAccess: - value: j787 stateAfter: - #next: v827  <|@  <|@
f <@~|@floating>@ <|@
tid v950 <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j786 
index: j834 
=== Succesors ===
=== Usages ===
v827 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j786 index: j834  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v827 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
address: v950 
=== Succesors ===
next: v829 
=== Usages ===
=== Predecessor ===
v836 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v950 #next: v829  <|@  <|@
f <@~|@floating>@ <|@
tid v951 <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j786 
index: j834 
=== Succesors ===
=== Usages ===
v829 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j786 index: j834  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v829 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
address: v951 
=== Succesors ===
next: v831 
=== Usages ===
=== Predecessor ===
v827 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v951 #next: v831  <|@  <|@
f <@~|@floating>@ <|@
tid v952 <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j786 
index: j834 
=== Succesors ===
=== Usages ===
v831 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j786 index: j834  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
address: v952 
=== Succesors ===
next: v837 
=== Usages ===
=== Predecessor ===
v829 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v952 #next: v837  <|@  <|@
f <@~|@floating>@ <|@
tid v946 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j834 
index: - 
=== Succesors ===
=== Usages ===
v837 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j834 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v837 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v946 
lastLocationAccess: - 
value: j728 
stateAfter: - 
=== Succesors ===
next: v840 
=== Usages ===
=== Predecessor ===
v831 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v946 lastLocationAccess: - value: j728 stateAfter: - #next: v840  <|@  <|@
f <@~|@floating>@ <|@
tid v953 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j834 
index: - 
=== Succesors ===
=== Usages ===
v840 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j834 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v840 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v953 
lastLocationAccess: - 
value: v882 
stateAfter: - 
=== Succesors ===
next: v841 
=== Usages ===
=== Predecessor ===
v837 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v953 lastLocationAccess: - value: v882 stateAfter: - #next: v841  <|@  <|@
f <@~|@floating>@ <|@
tid v947 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j834 
index: - 
=== Succesors ===
=== Usages ===
v841 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j834 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v841 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v947 
lastLocationAccess: - 
value: i120 
stateAfter: - 
=== Succesors ===
next: v797 
=== Usages ===
=== Predecessor ===
v840 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v947 lastLocationAccess: - value: i120 stateAfter: - #next: v797  <|@  <|@
f <@~|@floating>@ <|@
tid j822 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: -16
stableDimension: 0
stamp: i64 [-16]
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j823 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j823 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64 [-16 - 4294967296] bits:x...x000
=== Inputs ===
x: j786 
y: j822 
=== Succesors ===
=== Usages ===
v794 v798 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j786 y: j822  <|@  <|@
f <@~|@floating>@ <|@
tid j824 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: 2048
stableDimension: 0
stamp: i64 [2048]
stampKind: i64
value: long[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v794 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v794 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j823 
y: j824 
=== Succesors ===
=== Usages ===
v797 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j823 y: j824  <|@  <|@
f <@*|@fixed>@ <|@
tid v797 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 28]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v794 
=== Succesors ===
trueSuccessor: v796 
falseSuccessor: v795 
=== Usages ===
=== Predecessor ===
v841 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v794 #trueSuccessor: v796 #falseSuccessor: v795  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4588224490929125824
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v796 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:228) [bci: 62]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v799 
=== Usages ===
=== Predecessor ===
v797 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v799  <|@  <|@
f <@~|@floating>@ <|@
tid j711 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:628) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: 8
stableDimension: 0
stamp: i64 [8]
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j810 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v799 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v800 
=== Predecessor ===
v796 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617985760531553049
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j801 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v800 
values: j225 j810 
=== Succesors ===
=== Usages ===
v802 v948 j810 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v800 values: j225 j810  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v800 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 56
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v799 
=== Succesors ===
next: v808 
=== Usages ===
j801 v807 v811 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v799 #next: v808  <|@  <|@
f <@~|@floating>@ <|@
tid v802 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 119]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j801 
y: j786 
=== Succesors ===
=== Usages ===
v808 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j801 y: j786  <|@  <|@
f <@*|@fixed>@ <|@
tid v808 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 127]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v802 
=== Succesors ===
trueSuccessor: v803 
falseSuccessor: v807 
=== Usages ===
=== Predecessor ===
v800 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v802 #trueSuccessor: v803 #falseSuccessor: v807  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617922763110511397
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v803 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 130]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v842 
=== Usages ===
=== Predecessor ===
v808 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v842  <|@  <|@
f <@~|@floating>@ <|@
tid v948 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j834 
index: j801 
=== Succesors ===
=== Usages ===
v842 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j834 index: j801  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v842 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v948 
lastLocationAccess: - 
value: j642 
stateAfter: - 
=== Succesors ===
next: v811 
=== Usages ===
=== Predecessor ===
v803 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v948 lastLocationAccess: - value: j642 stateAfter: - #next: v811  <|@  <|@
f <@~|@floating>@ <|@
tid j810 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 144]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
=== Inputs ===
x: j801 
y: j711 
=== Succesors ===
=== Usages ===
j801 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j801 y: j711  <|@  <|@
f <@*|@fixed>@ <|@
tid v811 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
loopBegin: v800 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v842 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v800  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588224490929125825
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v807 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v800 
=== Succesors ===
next: v806 
=== Usages ===
=== Predecessor ===
v808 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v800 #next: v806  <|@  <|@
f <@*|@fixed>@ <|@
tid v806 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v805 
=== Predecessor ===
v807 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B17" 
    xhandlers
    flags 
    probability 4558352100778371553
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v795 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:225) [bci: 31]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v798 
=== Usages ===
=== Predecessor ===
v797 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v798  <|@  <|@
f <@~|@floating>@ <|@
tid v949 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j834 
index: - 
=== Succesors ===
=== Usages ===
v798 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j834 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v798 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
isAligned: true
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ZeroMemoryNode.zero(Word, long, boolean, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:226) [bci: 56]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v949 
lastLocationAccess: - 
length: j823 
=== Succesors ===
next: v804 
=== Usages ===
=== Predecessor ===
v795 >@ <|@
instruction <@ZeroMemory|@jdk.graal.compiler.replacements.nodes.ZeroMemoryNode>@ stateBefore: - guard: - address: v949 lastLocationAccess: - length: j823 #next: v804  <|@  <|@
f <@*|@fixed>@ <|@
tid v804 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v805 
=== Predecessor ===
v798 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588305942140169577
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v805 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v804 v806 
=== Succesors ===
next: v812 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v804 v806 #next: v812  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v812 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a813 
=== Usages ===
=== Predecessor ===
v805 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a813  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a813 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j834 
=== Succesors ===
next: v816 
=== Usages ===
a832 
=== Predecessor ===
v812 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j834 #next: v816  <|@  <|@
f <@*|@fixed>@ <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v817 
=== Predecessor ===
a813 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a832 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v817 
values: a813 a814 
=== Succesors ===
=== Usages ===
j856 a173 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v817 values: a813 a814  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v817 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v816 v818 
=== Succesors ===
next: v586 
=== Usages ===
a832 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v816 v818 #next: v586  <|@  <|@
f <@~|@floating>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at java.util.Arrays.copyOf(Arrays.java:3543) [bci: 25]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i120 
y: i884 
=== Succesors ===
=== Usages ===
i168 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i120 y: i884  <|@  <|@
f <@~|@floating>@ <|@
tid i168 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at java.util.Arrays.copyOf(Arrays.java:3543) [bci: 25]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
condition: v167 
trueValue: i120 
falseValue: i884 
=== Succesors ===
=== Usages ===
j858 v310 v463 v464 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v167 trueValue: i120 falseValue: i884  <|@  <|@
f <@~|@floating>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 89]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i168 
y: i76 
=== Succesors ===
=== Usages ===
v586 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i168 y: i76  <|@  <|@
f <@*|@fixed>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v310 
=== Succesors ===
trueSuccessor: v584 
falseSuccessor: v585 
=== Usages ===
=== Predecessor ===
v817 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v310 #trueSuccessor: v584 #falseSuccessor: v585  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v656 
=== Usages ===
=== Predecessor ===
v586 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v656  <|@  <|@
f <@~|@floating>@ <|@
tid i657 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: -149273
stableDimension: 0
stamp: i32 [-149273]
stampKind: i32
value: int[-149273|0xfffffffffffdb8e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i643 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v639 
=== Predecessor ===
v584 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:409) [bci: 120]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v590 
=== Usages ===
=== Predecessor ===
v586 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v590  <|@  <|@
f <@~|@floating>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 140]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i884 
y: i168 
=== Succesors ===
=== Usages ===
v590 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i884 y: i168  <|@  <|@
f <@*|@fixed>@ <|@
tid v590 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v463 
=== Succesors ===
trueSuccessor: v588 
falseSuccessor: v589 
=== Usages ===
=== Predecessor ===
v585 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v463 #trueSuccessor: v588 #falseSuccessor: v589  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v658 
=== Usages ===
=== Predecessor ===
v590 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v658  <|@  <|@
f <@~|@floating>@ <|@
tid i659 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: -150297
stableDimension: 0
stamp: i32 [-150297]
stampKind: i32
value: int[-150297|0xfffffffffffdb4e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i643 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v639 
=== Predecessor ===
v588 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 171]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v594 
=== Usages ===
=== Predecessor ===
v590 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v594  <|@  <|@
f <@~|@floating>@ <|@
tid v464 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 181]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i120 
y: i168 
=== Succesors ===
=== Usages ===
v594 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i120 y: i168  <|@  <|@
f <@*|@fixed>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v464 
=== Succesors ===
trueSuccessor: v592 
falseSuccessor: v593 
=== Usages ===
=== Predecessor ===
v589 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v464 #trueSuccessor: v592 #falseSuccessor: v593  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v660 
=== Usages ===
=== Predecessor ===
v594 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v660  <|@  <|@
f <@~|@floating>@ <|@
tid i661 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: -151321
stableDimension: 0
stamp: i32 [-151321]
stampKind: i32
value: int[-151321|0xfffffffffffdb0e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i643 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v639 
=== Predecessor ===
v592 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:418) [bci: 212]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j854 
=== Usages ===
=== Predecessor ===
v594 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j854  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j854 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
=== Inputs ===
object: a389 
=== Succesors ===
next: j856 
=== Usages ===
v954 
=== Predecessor ===
v593 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a389 #next: j856  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j856 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
=== Inputs ===
object: a832 
=== Succesors ===
next: v859 
=== Usages ===
v955 
=== Predecessor ===
j854 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a832 #next: v859  <|@  <|@
f <@~|@floating>@ <|@
tid v954 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j854 
index: - 
=== Succesors ===
=== Usages ===
v859 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j854 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v955 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j856 
index: - 
=== Succesors ===
=== Usages ===
v859 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j856 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j858 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i168 
=== Succesors ===
=== Usages ===
v859 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i168  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v859 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}
descriptorName: byteDisjointArraycopy
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v954 v955 j858 
=== Succesors ===
next: v174 
=== Usages ===
=== Predecessor ===
j856 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v954 v955 j858 #next: v174  <|@  <|@
f <@*|@fixed>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v171 
=== Predecessor ===
v859 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B8" "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588388498606785848
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a173 <|@
d <@d|@=== Debug Properties ===
stamp: a!# byte[]
valueDescription: a java.lang.Object
=== Inputs ===
merge: v171 
values: a297 a832 
=== Succesors ===
=== Usages ===
a331 v699 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v171 values: a297 a832  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v172 v174 
=== Succesors ===
next: v697 
=== Usages ===
a173 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v172 v174 #next: v697  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
precise: true
stamp: void
=== Inputs ===
address: v923 
value: - 
stateBefore: - 
=== Succesors ===
next: v332 
=== Usages ===
=== Predecessor ===
v171 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v923 value: - stateBefore: - #next: v332  <|@  <|@
f <@~|@floating>@ <|@
tid a331 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: Compress
stamp: n!# byte[]
=== Inputs ===
value: a173 
=== Succesors ===
=== Usages ===
v332 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a173  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractStringBuilder.value
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v923 
lastLocationAccess: - 
value: a331 
stateAfter: - 
=== Succesors ===
next: v699 
=== Usages ===
=== Predecessor ===
v697 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v923 lastLocationAccess: - value: a331 stateAfter: - #next: v699  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
precise: false
stamp: void
=== Inputs ===
address: v923 
value: a173 
object: a1 
=== Succesors ===
next: v126 
=== Usages ===
=== Predecessor ===
v332 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v923 value: a173 object: a1 #next: v126  <|@  <|@
f <@*|@fixed>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v125 
=== Predecessor ===
v699 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B2" "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v124 v126 
=== Succesors ===
next: v182 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v124 v126 #next: v182  <|@  <|@
tid ?243 <|@
d <@d|@=== Debug Properties ===
bci: 21
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(CharSequence)>
localsSize: 2
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 626
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?244 
=== Succesors ===
=== Usages ===
?94 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?244  <|@  <|@
tid ?94 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StringBuilder.append(String)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
sourceFile: StringBuilder.java
sourceLine: 91
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?243 
values: a1 a2 
=== Succesors ===
=== Usages ===
?242 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?243 values: a1 a2  <|@  <|@
tid ?242 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<StringBuilder.append(String)>
localsSize: 2
locksSize: 0
sourceFile: StringBuilder.java
sourceLine: 179
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?94 
values: a1 
=== Succesors ===
=== Usages ===
?241 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?94 values: a1  <|@  <|@
tid ?241 <|@
d <@d|@=== Debug Properties ===
bci: 30
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 588
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?242 
values: a1 - i108 
=== Succesors ===
=== Usages ===
?193 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?242 values: a1 - i108  <|@  <|@
tid ?193 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.putStringAt(int, String)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 1750
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?241 
values: a1 i887 a2 
=== Succesors ===
=== Usages ===
?636 ?189 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?241 values: a1 i887 a2  <|@  <|@
f <@~|@floating>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1733) [bci: 14]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i886 
y: i890 
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i886 y: i890  <|@  <|@
f <@*|@fixed>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1733) [bci: 14]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: PROFILED designatedSuccessorProbability: 0.998717015375415
stamp: void
=== Inputs ===
condition: v456 
=== Succesors ===
trueSuccessor: v181 
falseSuccessor: v180 
=== Usages ===
=== Predecessor ===
v125 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v456 #trueSuccessor: v181 #falseSuccessor: v180  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4603898526589647782
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v186 
=== Usages ===
=== Predecessor ===
v182 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v186  <|@  <|@
f <@*|@fixed>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v187 
=== Predecessor ===
v181 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4560668027509911113
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 17]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v184 
=== Usages ===
=== Predecessor ===
v182 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v184  <|@  <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/lang/AbstractStringBuilder;, resolved>]
stamp: void
targetMethod: HotSpotMethod<AbstractStringBuilder.inflate()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v184 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?636 <|@
d <@d|@=== Debug Properties ===
bci: 18
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.inflateIfNeededFor(String)>
localsSize: 2
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 1734
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?193 
=== Succesors ===
=== Usages ===
v184 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?193  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
bci: 18
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
polymorphic: false
stamp: void
targetMethod: Direct#AbstractStringBuilder.inflate
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v383 
stateDuring: ?636 
=== Succesors ===
next: v188 
=== Usages ===
=== Predecessor ===
v180 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v383 stateDuring: ?636 #next: v188  <|@  <|@
f <@*|@fixed>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v187 
=== Predecessor ===
v184 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" "B35" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v186 v188 
=== Succesors ===
next: a891 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v186 v188 #next: a891  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a891 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.getBytes(String.java:4726) [bci: 9]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v919 
lastLocationAccess: - 
=== Succesors ===
next: i892 
=== Usages ===
a345 v926 
=== Predecessor ===
v187 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v919 lastLocationAccess: - #next: i892  <|@  <|@
tid ?189 <|@
d <@d|@=== Debug Properties ===
bci: 21
bytecode: return
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.inflateIfNeededFor(String)>
localsSize: 2
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 1736
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?193 
=== Succesors ===
=== Usages ===
v686 i892 i894 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?193  <|@  <|@
f <@~|@floating>@ <|@
tid v926 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a891 
=== Succesors ===
=== Usages ===
i892 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a891  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i892 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-89867|0xfffffffffffea0f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.getBytes(String.java:4726) [bci: 21]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?189 
guard: - 
address: v926 
lastLocationAccess: - 
=== Succesors ===
next: a893 
=== Usages ===
j867 v230 i222 i363 
=== Predecessor ===
a891 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?189 guard: - address: v926 lastLocationAccess: - #next: a893  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a893 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v923 
lastLocationAccess: - 
=== Succesors ===
next: i894 
=== Usages ===
a339 v927 
=== Predecessor ===
i892 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v923 lastLocationAccess: - #next: i894  <|@  <|@
f <@~|@floating>@ <|@
tid v927 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a893 
=== Succesors ===
=== Usages ===
i894 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a893  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i894 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-131339|0xfffffffffffdfef5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?189 
guard: - 
address: v927 
lastLocationAccess: - 
=== Succesors ===
next: i895 
=== Usages ===
i236 i363 
=== Predecessor ===
a893 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?189 guard: - address: v927 lastLocationAccess: - #next: i895  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i895 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 12]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v924 
lastLocationAccess: - 
=== Succesors ===
next: i896 
=== Usages ===
i341 v458 
=== Predecessor ===
i894 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v924 lastLocationAccess: - #next: i896  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i896 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.getBytes(String.java:4725) [bci: 1]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v921 
lastLocationAccess: - 
=== Succesors ===
next: v199 
=== Usages ===
v458 
=== Predecessor ===
i895 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v921 lastLocationAccess: - #next: v199  <|@  <|@
f <@~|@floating>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.getBytes(String.java:4725) [bci: 5]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i895 
y: i896 
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i895 y: i896  <|@  <|@
f <@~|@floating>@ <|@
tid a339 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a893 
=== Succesors ===
=== Usages ===
j871 j862 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a893  <|@  <|@
f <@~|@floating>@ <|@
tid a345 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.getBytes(String.java:4726) [bci: 9]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a891 
=== Succesors ===
=== Usages ===
j860 j869 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a891  <|@  <|@
f <@*|@fixed>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getBytes(String.java:4725) [bci: 5]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: PROFILED designatedSuccessorProbability: 0.9987687249012156
stamp: void
=== Inputs ===
condition: v458 
=== Succesors ===
trueSuccessor: v198 
falseSuccessor: v197 
=== Usages ===
=== Predecessor ===
i896 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v458 #trueSuccessor: v198 #falseSuccessor: v197  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.getBytes(String.java:4726) [bci: 8]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v562 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v562  <|@  <|@
f <@~|@floating>@ <|@
tid i341 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 12]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i895 
=== Succesors ===
=== Usages ===
i201 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i895  <|@  <|@
f <@~|@floating>@ <|@
tid i201 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getBytes(String.java:4726) [bci: 16]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i887 
y: i341 
=== Succesors ===
=== Usages ===
j863 v355 v364 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i887 y: i341  <|@  <|@
f <@~|@floating>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 45]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i201 
y: i76 
=== Succesors ===
=== Usages ===
v562 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i201 y: i76  <|@  <|@
f <@*|@fixed>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v355 
=== Succesors ===
trueSuccessor: v560 
falseSuccessor: v561 
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v355 #trueSuccessor: v560 #falseSuccessor: v561  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v689 
=== Usages ===
=== Predecessor ===
v562 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v689  <|@  <|@
f <@~|@floating>@ <|@
tid i690 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: -143129
stableDimension: 0
stamp: i32 [-143129]
stampKind: i32
value: int[-143129|0xfffffffffffdd0e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i684 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v689 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v681 
=== Predecessor ===
v560 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:404) [bci: 76]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v566 
=== Usages ===
=== Predecessor ===
v562 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v566  <|@  <|@
f <@~|@floating>@ <|@
tid i363 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 180]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32 [-2147483647 - 2147483647]
=== Inputs ===
x: i894 
y: i892 
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i894 y: i892  <|@  <|@
f <@~|@floating>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 181]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i363 
y: i201 
=== Succesors ===
=== Usages ===
v566 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i363 y: i201  <|@  <|@
f <@*|@fixed>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v364 
=== Succesors ===
trueSuccessor: v564 
falseSuccessor: v565 
=== Usages ===
=== Predecessor ===
v561 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v364 #trueSuccessor: v564 #falseSuccessor: v565  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v693 
=== Usages ===
=== Predecessor ===
v566 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v693  <|@  <|@
f <@~|@floating>@ <|@
tid i694 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: -144153
stableDimension: 0
stamp: i32 [-144153]
stampKind: i32
value: int[-144153|0xfffffffffffdcce7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i684 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v693 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v681 
=== Predecessor ===
v564 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:418) [bci: 212]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j860 
=== Usages ===
=== Predecessor ===
v566 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j860  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j860 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
=== Inputs ===
object: a345 
=== Succesors ===
next: j862 
=== Usages ===
v956 
=== Predecessor ===
v565 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a345 #next: j862  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j862 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
=== Inputs ===
object: a339 
=== Succesors ===
next: v868 
=== Usages ===
v957 
=== Predecessor ===
j860 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a339 #next: v868  <|@  <|@
f <@~|@floating>@ <|@
tid v956 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j860 
index: - 
=== Succesors ===
=== Usages ===
v868 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j860 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j863 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i201 
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i201  <|@  <|@
f <@~|@floating>@ <|@
tid v957 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j862 
index: j863 
=== Succesors ===
=== Usages ===
v868 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j862 index: j863  <|@  <|@
f <@~|@floating>@ <|@
tid j867 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i892 
=== Succesors ===
=== Usages ===
v868 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i892  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v868 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}
descriptorName: byteArraycopy
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v956 v957 j867 
=== Succesors ===
next: v232 
=== Usages ===
=== Predecessor ===
j862 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v956 v957 j867 #next: v232  <|@  <|@
f <@*|@fixed>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getBytes(String.java:4730) [bci: 43]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v233 
=== Predecessor ===
v868 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.getBytes(String.java:4728) [bci: 28]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v570 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v570  <|@  <|@
f <@~|@floating>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i887 
y: i76 
=== Succesors ===
=== Usages ===
v570 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i887 y: i76  <|@  <|@
f <@*|@fixed>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v217 
=== Succesors ===
trueSuccessor: v568 
falseSuccessor: v569 
=== Usages ===
=== Predecessor ===
v197 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v217 #trueSuccessor: v568 #falseSuccessor: v569  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v691 
=== Usages ===
=== Predecessor ===
v570 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v691  <|@  <|@
f <@~|@floating>@ <|@
tid i692 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: -145177
stableDimension: 0
stamp: i32 [-145177]
stampKind: i32
value: int[-145177|0xfffffffffffdc8e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i684 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v681 
=== Predecessor ===
v568 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B40" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v574 
=== Usages ===
=== Predecessor ===
v570 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v574  <|@  <|@
f <@~|@floating>@ <|@
tid i236 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32 [0 - 1073741823] bits:00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i894 
y: i48 
=== Succesors ===
=== Usages ===
v223 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i894 y: i48  <|@  <|@
f <@~|@floating>@ <|@
tid i222 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i887 
y: i892 
=== Succesors ===
=== Usages ===
v223 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i887 y: i892  <|@  <|@
f <@~|@floating>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i236 
y: i222 
=== Succesors ===
=== Usages ===
v574 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i236 y: i222  <|@  <|@
f <@*|@fixed>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v223 
=== Succesors ===
trueSuccessor: v572 
falseSuccessor: v573 
=== Usages ===
=== Predecessor ===
v569 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v223 #trueSuccessor: v572 #falseSuccessor: v573  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v695 
=== Usages ===
=== Predecessor ===
v574 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v695  <|@  <|@
f <@~|@floating>@ <|@
tid i696 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: -146201
stableDimension: 0
stamp: i32 [-146201]
stampKind: i32
value: int[-146201|0xfffffffffffdc4e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i684 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v695 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v681 
=== Predecessor ===
v572 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B31" "B36" "B33" "B38" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i684 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32 [-146201 - -143129] bits:1...101110xxx0011100111
valueDescription: i32
=== Inputs ===
merge: v681 
values: i690 i692 i694 i696 
=== Succesors ===
=== Usages ===
v686 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v681 values: i690 i692 i694 i696  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v689 v691 v693 v695 
=== Succesors ===
next: v686 
=== Usages ===
i684 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v689 v691 v693 v695 #next: v686  <|@  <|@
f <@*|@fixed>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
stateBefore: ?189 
actionAndReason: i684 
speculation: j642 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v681 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?189 actionAndReason: i684 speculation: j642  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j869 
=== Usages ===
=== Predecessor ===
v574 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j869  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j869 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
=== Inputs ===
object: a345 
=== Succesors ===
next: j871 
=== Usages ===
j870 
=== Predecessor ===
v573 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a345 #next: j871  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j871 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
=== Inputs ===
object: a339 
=== Succesors ===
next: v230 
=== Usages ===
j872 
=== Predecessor ===
j869 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a339 #next: v230  <|@  <|@
f <@~|@floating>@ <|@
tid j870 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
=== Inputs ===
x: j869 
y: j225 
=== Succesors ===
=== Usages ===
v230 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j869 y: j225  <|@  <|@
f <@~|@floating>@ <|@
tid j910 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i887 
=== Succesors ===
=== Usages ===
j228 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i887  <|@  <|@
f <@~|@floating>@ <|@
tid j228 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64 [0 - 8589934590] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0
=== Inputs ===
x: j910 
y: i48 
=== Succesors ===
=== Usages ===
j237 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j910 y: i48  <|@  <|@
f <@~|@floating>@ <|@
tid j237 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64 [16 - 8589934606] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0
=== Inputs ===
x: j228 
y: j225 
=== Succesors ===
=== Usages ===
j872 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j228 y: j225  <|@  <|@
f <@~|@floating>@ <|@
tid j872 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
=== Inputs ===
x: j237 
y: j871 
=== Succesors ===
=== Usages ===
v230 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j237 y: j871  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
killedLocations: [Array: byte]
locationIdentity: Array: byte
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
runtimeCheckedCPUFeatures: [null]
stamp: void
=== Inputs ===
stateAfter: - 
lastLocationAccess: - 
src: j870 
dst: j872 
len: i892 
=== Succesors ===
next: v234 
=== Usages ===
=== Predecessor ===
j871 >@ <|@
instruction <@StringLatin1Inflate|@jdk.graal.compiler.replacements.StringLatin1InflateNode>@ stateAfter: - lastLocationAccess: - src: j870 dst: j872 len: i892 #next: v234  <|@  <|@
f <@*|@fixed>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getBytes(String.java:4730) [bci: 43]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v233 
=== Predecessor ===
v230 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B34" "B40" 
    successors "B57" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.getBytes(String.java:4730) [bci: 43]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v232 v234 
=== Succesors ===
next: i897 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v232 v234 #next: i897  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i897 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:589) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v922 
lastLocationAccess: - 
=== Succesors ===
next: v382 
=== Usages ===
i101 
=== Predecessor ===
v233 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v922 lastLocationAccess: - #next: v382  <|@  <|@
f <@~|@floating>@ <|@
tid i101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:589) [bci: 39]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i108 
y: i897 
=== Succesors ===
=== Usages ===
v382 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i108 y: i897  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractStringBuilder.count
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:589) [bci: 40]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v922 
lastLocationAccess: - 
value: i101 
stateAfter: - 
=== Succesors ===
next: v246 
=== Usages ===
=== Predecessor ===
i897 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v922 lastLocationAccess: - value: i101 stateAfter: - #next: v246  <|@  <|@
f <@*|@fixed>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
v382 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 16]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v653 
=== Usages ===
=== Predecessor ===
v582 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v653  <|@  <|@
f <@~|@floating>@ <|@
tid j655 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: 5140
stableDimension: 0
stamp: i64 [5140]
stampKind: i64
value: long[5140|0x1414]
=== Inputs ===
=== Succesors ===
=== Usages ===
j644 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i654 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: -148243
stableDimension: 0
stamp: i32 [-148243]
stampKind: i32
value: int[-148243|0xfffffffffffdbced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i643 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v653 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v639 
=== Predecessor ===
v581 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B44" "B60" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:628) [bci: 25]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v533 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v533  <|@  <|@
f <@~|@floating>@ <|@
tid v911 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:628) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v912 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v912 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:628) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v885 
y: v911 
=== Succesors ===
=== Usages ===
v533 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v885 y: v911  <|@  <|@
f <@*|@fixed>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:628) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v912 
=== Succesors ===
trueSuccessor: v530 
falseSuccessor: v532 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v912 #trueSuccessor: v530 #falseSuccessor: v532  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:628) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i898 
=== Usages ===
=== Predecessor ===
v533 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i898  <|@  <|@
f <@~|@floating>@ <|@
tid v928 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i898 i906 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i898 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.length(AbstractStringBuilder.java:195) [bci: 1]
at java.lang.StringBuilder.length(StringBuilder.java:91) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:610) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v928 
lastLocationAccess: - 
=== Succesors ===
next: v52 
=== Usages ===
i29 i34 ?67 
=== Predecessor ===
v530 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v928 lastLocationAccess: - #next: v52  <|@  <|@
tid ?93 <|@
d <@d|@=== Debug Properties ===
bci: 37
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(CharSequence)>
localsSize: 2
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 629
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?244 
=== Succesors ===
=== Usages ===
?67 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?244  <|@  <|@
tid ?67 <|@
d <@d|@=== Debug Properties ===
bci: 21
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(AbstractStringBuilder)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 611
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?93 
values: a1 a2 i898 
=== Succesors ===
=== Usages ===
?66 ?634 ?635 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?93 values: a1 a2 i898  <|@  <|@
f <@~|@floating>@ <|@
tid i29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i887 
y: i898 
=== Succesors ===
=== Usages ===
i47 v444 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i887 y: i898  <|@  <|@
f <@~|@floating>@ <|@
tid i47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 13]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i29 
y: i46 
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i29 y: i46  <|@  <|@
f <@~|@floating>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i47 
y: i48 
=== Succesors ===
=== Usages ===
v52 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i47 y: i48  <|@  <|@
f <@*|@fixed>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: PROFILED designatedSuccessorProbability: 0.9102668972297561
stamp: void
=== Inputs ===
condition: v49 
=== Succesors ===
trueSuccessor: v51 
falseSuccessor: v50 
=== Usages ===
=== Predecessor ===
i898 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v49 #trueSuccessor: v51 #falseSuccessor: v50  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599636671466445615
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v63 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v63  <|@  <|@
f <@*|@fixed>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
v51 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4584865046447166825
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i54 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i54  <|@  <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Ljava/lang/AbstractStringBuilder;, resolved>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<AbstractStringBuilder.newCapacity(int)>
=== Inputs ===
arguments: a1 i29 
=== Succesors ===
=== Usages ===
i54 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i29  <|@  <|@
tid ?634 <|@
d <@d|@=== Debug Properties ===
bci: 24
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 243
stackSize: 2
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?67 
values: a1 a389 a1 
=== Succesors ===
=== Usages ===
i54 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?67 values: a1 a389 a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i54 <|@
d <@d|@=== Debug Properties ===
bci: 24
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
polymorphic: false
stamp: i32
targetMethod: Direct#AbstractStringBuilder.newCapacity
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v444 
stateDuring: ?634 
=== Succesors ===
next: i899 
=== Usages ===
i57 
=== Predecessor ===
v50 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v444 stateDuring: ?634 #next: i899  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i899 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 28]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v924 
lastLocationAccess: - 
=== Succesors ===
next: a59 
=== Usages ===
i446 
=== Predecessor ===
i54 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v924 lastLocationAccess: - #next: a59  <|@  <|@
f <@~|@floating>@ <|@
tid i446 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 28]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i899 
=== Succesors ===
=== Usages ===
i57 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i899  <|@  <|@
f <@~|@floating>@ <|@
tid i57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i54 
y: i446 
=== Succesors ===
=== Usages ===
v447 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i54 y: i446  <|@  <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
referencedType: [null]
returnStamp: a# byte[]
signature: [UnresolvedJavaType<[B>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<Arrays.copyOf(byte[], int)>
=== Inputs ===
arguments: a389 i57 
=== Succesors ===
=== Usages ===
a59 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a389 i57  <|@  <|@
tid ?635 <|@
d <@d|@=== Debug Properties ===
bci: 32
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 242
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?67 
values: a1 
=== Succesors ===
=== Usages ===
a59 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?67 values: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a59 <|@
d <@d|@=== Debug Properties ===
bci: 32
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
polymorphic: false
stamp: a# byte[]
targetMethod: Direct#Arrays.copyOf
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v447 
stateDuring: ?635 
=== Succesors ===
next: v700 
=== Usages ===
a254 a448 v702 
=== Predecessor ===
i899 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v447 stateDuring: ?635 #next: v700  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
precise: true
stamp: void
=== Inputs ===
address: v923 
value: - 
stateBefore: - 
=== Succesors ===
next: v449 
=== Usages ===
=== Predecessor ===
a59 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v923 value: - stateBefore: - #next: v449  <|@  <|@
f <@~|@floating>@ <|@
tid a448 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: Compress
stamp: n# byte[]
=== Inputs ===
value: a59 
=== Succesors ===
=== Usages ===
v449 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a59  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractStringBuilder.value
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v923 
lastLocationAccess: - 
value: a448 
stateAfter: - 
=== Succesors ===
next: v702 
=== Usages ===
=== Predecessor ===
v700 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v923 lastLocationAccess: - value: a448 stateAfter: - #next: v702  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v702 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
precise: false
stamp: void
=== Inputs ===
address: v923 
value: a59 
object: a1 
=== Succesors ===
next: v65 
=== Usages ===
=== Predecessor ===
v449 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v923 value: a59 object: a1 #next: v65  <|@  <|@
f <@*|@fixed>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
v702 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" "B58" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a254 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: a# byte[]
valueDescription: a java.lang.Object
=== Inputs ===
merge: v64 
values: a389 a59 
=== Succesors ===
=== Usages ===
v930 j875 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v64 values: a389 a59  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v63 v65 
=== Succesors ===
next: a900 
=== Usages ===
a254 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v63 v65 #next: a900  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a900 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 9]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v919 
lastLocationAccess: - 
=== Succesors ===
next: i901 
=== Usages ===
a405 v929 
=== Predecessor ===
v64 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v919 lastLocationAccess: - #next: i901  <|@  <|@
tid ?66 <|@
d <@d|@=== Debug Properties ===
bci: 38
bytecode: return
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 245
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?67 
=== Succesors ===
=== Usages ===
v667 i901 i902 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?67  <|@  <|@
f <@~|@floating>@ <|@
tid v929 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a900 
=== Succesors ===
=== Usages ===
i901 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a900  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i901 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-104203|0xfffffffffffe68f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 134]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?66 
guard: - 
address: v929 
lastLocationAccess: - 
=== Succesors ===
next: i902 
=== Usages ===
v466 
=== Predecessor ===
a900 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?66 guard: - address: v929 lastLocationAccess: - #next: i902  <|@  <|@
f <@~|@floating>@ <|@
tid v930 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a254 
index: - 
=== Succesors ===
=== Usages ===
i902 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a254 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i902 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-104459|0xfffffffffffe67f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 175]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?66 
guard: - 
address: v930 
lastLocationAccess: - 
=== Succesors ===
next: i903 
=== Usages ===
i419 
=== Predecessor ===
i901 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?66 guard: - address: v930 lastLocationAccess: - #next: i903  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i903 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1739) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:612) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v924 
lastLocationAccess: - 
=== Succesors ===
next: i904 
=== Usages ===
i398 v460 
=== Predecessor ===
i902 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v924 lastLocationAccess: - #next: i904  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i904 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.getCoder(AbstractStringBuilder.java:1689) [bci: 7]
at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1739) [bci: 11]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:612) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v921 
lastLocationAccess: - 
=== Succesors ===
next: v611 
=== Usages ===
v460 
=== Predecessor ===
i903 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v921 lastLocationAccess: - #next: v611  <|@  <|@
f <@~|@floating>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1739) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:612) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i903 
y: i904 
=== Succesors ===
=== Usages ===
v611 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i903 y: i904  <|@  <|@
f <@*|@fixed>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1739) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:612) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v460 
=== Succesors ===
trueSuccessor: v609 
falseSuccessor: v610 
=== Usages ===
=== Predecessor ===
i904 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v460 #trueSuccessor: v609 #falseSuccessor: v610  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1742) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:612) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i905 
=== Usages ===
=== Predecessor ===
v611 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i905  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i905 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v922 
lastLocationAccess: - 
=== Succesors ===
next: v615 
=== Usages ===
i77 i34 
=== Predecessor ===
v609 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v922 lastLocationAccess: - #next: v615  <|@  <|@
f <@~|@floating>@ <|@
tid i398 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1739) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:612) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i903 
=== Succesors ===
=== Usages ===
i79 i77 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i903  <|@  <|@
f <@~|@floating>@ <|@
tid i77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 16]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i905 
y: i398 
=== Succesors ===
=== Usages ===
j876 v411 v420 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i905 y: i398  <|@  <|@
f <@~|@floating>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 45]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i77 
y: i76 
=== Succesors ===
=== Usages ===
v615 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i77 y: i76  <|@  <|@
f <@*|@fixed>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v411 
=== Succesors ===
trueSuccessor: v613 
falseSuccessor: v614 
=== Usages ===
=== Predecessor ===
i905 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v411 #trueSuccessor: v613 #falseSuccessor: v614  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v670 
=== Usages ===
=== Predecessor ===
v615 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v670  <|@  <|@
f <@~|@floating>@ <|@
tid i671 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: -156697
stableDimension: 0
stamp: i32 [-156697]
stampKind: i32
value: int[-156697|0xfffffffffffd9be7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i665 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v670 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v662 
=== Predecessor ===
v613 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:404) [bci: 76]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i906 
=== Usages ===
=== Predecessor ===
v615 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i906  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i906 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 18]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v928 
lastLocationAccess: - 
=== Succesors ===
next: v619 
=== Usages ===
i79 
=== Predecessor ===
v614 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v928 lastLocationAccess: - #next: v619  <|@  <|@
f <@~|@floating>@ <|@
tid i79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 22]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i906 
y: i398 
=== Succesors ===
=== Usages ===
j880 v413 v466 i419 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i906 y: i398  <|@  <|@
f <@~|@floating>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 89]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i79 
y: i76 
=== Succesors ===
=== Usages ===
v619 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i79 y: i76  <|@  <|@
f <@*|@fixed>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v413 
=== Succesors ===
trueSuccessor: v617 
falseSuccessor: v618 
=== Usages ===
=== Predecessor ===
i906 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v413 #trueSuccessor: v617 #falseSuccessor: v618  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v675 
=== Usages ===
=== Predecessor ===
v619 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v675  <|@  <|@
f <@~|@floating>@ <|@
tid i676 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: -157721
stableDimension: 0
stamp: i32 [-157721]
stampKind: i32
value: int[-157721|0xfffffffffffd97e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i665 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v675 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v662 
=== Predecessor ===
v617 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:409) [bci: 120]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v623 
=== Usages ===
=== Predecessor ===
v619 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v623  <|@  <|@
f <@~|@floating>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 140]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i901 
y: i79 
=== Succesors ===
=== Usages ===
v623 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i901 y: i79  <|@  <|@
f <@*|@fixed>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v466 
=== Succesors ===
trueSuccessor: v621 
falseSuccessor: v622 
=== Usages ===
=== Predecessor ===
v618 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v466 #trueSuccessor: v621 #falseSuccessor: v622  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v677 
=== Usages ===
=== Predecessor ===
v623 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v677  <|@  <|@
f <@~|@floating>@ <|@
tid i678 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: -158745
stableDimension: 0
stamp: i32 [-158745]
stampKind: i32
value: int[-158745|0xfffffffffffd93e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i665 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v677 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v662 
=== Predecessor ===
v621 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v622 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 171]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v627 
=== Usages ===
=== Predecessor ===
v623 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v627  <|@  <|@
f <@~|@floating>@ <|@
tid i419 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 180]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i902 
y: i79 
=== Succesors ===
=== Usages ===
v420 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i902 y: i79  <|@  <|@
f <@~|@floating>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 181]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i419 
y: i77 
=== Succesors ===
=== Usages ===
v627 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i419 y: i77  <|@  <|@
f <@*|@fixed>@ <|@
tid v627 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v420 
=== Succesors ===
trueSuccessor: v625 
falseSuccessor: v626 
=== Usages ===
=== Predecessor ===
v622 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v420 #trueSuccessor: v625 #falseSuccessor: v626  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v679 
=== Usages ===
=== Predecessor ===
v627 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v679  <|@  <|@
f <@~|@floating>@ <|@
tid i680 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: -159769
stableDimension: 0
stamp: i32 [-159769]
stampKind: i32
value: int[-159769|0xfffffffffffd8fe7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i665 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v662 
=== Predecessor ===
v625 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:418) [bci: 212]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j873 
=== Usages ===
=== Predecessor ===
v627 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j873  <|@  <|@
f <@~|@floating>@ <|@
tid a405 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 9]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a900 
=== Succesors ===
=== Usages ===
j873 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a900  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j873 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
=== Inputs ===
object: a405 
=== Succesors ===
next: j875 
=== Usages ===
v958 
=== Predecessor ===
v626 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a405 #next: j875  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j875 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
=== Inputs ===
object: a254 
=== Succesors ===
next: v881 
=== Usages ===
v959 
=== Predecessor ===
j873 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a254 #next: v881  <|@  <|@
f <@~|@floating>@ <|@
tid v958 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j873 
index: - 
=== Succesors ===
=== Usages ===
v881 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j873 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j876 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i77 
=== Succesors ===
=== Usages ===
v959 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i77  <|@  <|@
f <@~|@floating>@ <|@
tid v959 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j875 
index: j876 
=== Succesors ===
=== Usages ===
v881 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j875 index: j876  <|@  <|@
f <@~|@floating>@ <|@
tid j880 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i79 
=== Succesors ===
=== Usages ===
v881 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i79  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v881 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}
descriptorName: byteArraycopy
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v958 v959 j880 
=== Succesors ===
next: v434 
=== Usages ===
=== Predecessor ===
j875 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v958 v959 j880 #next: v434  <|@  <|@
f <@~|@floating>@ <|@
tid i34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:614) [bci: 51]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i898 
y: i905 
=== Succesors ===
=== Usages ===
v434 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i898 y: i905  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractStringBuilder.count
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:614) [bci: 52]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v922 
lastLocationAccess: - 
value: i34 
stateAfter: - 
=== Succesors ===
next: i907 
=== Usages ===
=== Predecessor ===
v881 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v922 lastLocationAccess: - value: i34 stateAfter: - #next: i907  <|@  <|@
f <@~|@floating>@ <|@
tid v931 <|@
d <@d|@=== Debug Properties ===
displacement: 17
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i907 v443 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i907 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8 [0 - 1] bits:0000000x
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.maybeLatin1
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 57]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i8 [0 - 1] bits:0000000x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v931 
lastLocationAccess: - 
=== Succesors ===
next: i908 
=== Usages ===
i438 
=== Predecessor ===
v434 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v931 lastLocationAccess: - #next: i908  <|@  <|@
f <@~|@floating>@ <|@
tid v932 <|@
d <@d|@=== Debug Properties ===
displacement: 17
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i908 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i908 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8 [0 - 1] bits:0000000x
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.maybeLatin1
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 61]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i8 [0 - 1] bits:0000000x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v932 
lastLocationAccess: - 
=== Succesors ===
next: v443 
=== Usages ===
i441 
=== Predecessor ===
i907 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v932 lastLocationAccess: - #next: v443  <|@  <|@
f <@~|@floating>@ <|@
tid i438 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 57]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
resultBits: 32
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
value: i907 
=== Succesors ===
=== Usages ===
i39 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i907  <|@  <|@
f <@~|@floating>@ <|@
tid i441 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 61]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
resultBits: 32
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
value: i908 
=== Succesors ===
=== Usages ===
i39 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i908  <|@  <|@
f <@~|@floating>@ <|@
tid i39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 64]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
x: i438 
y: i441 
=== Succesors ===
=== Usages ===
i442 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i438 y: i441  <|@  <|@
f <@~|@floating>@ <|@
tid i442 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 65]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
resultBits: 8
stamp: i8 [0 - 1] bits:0000000x
=== Inputs ===
value: i39 
=== Succesors ===
=== Usages ===
v443 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: i39  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractStringBuilder.maybeLatin1
location: AbstractStringBuilder.maybeLatin1
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 65]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v931 
lastLocationAccess: - 
value: i442 
stateAfter: - 
=== Succesors ===
next: v247 
=== Usages ===
=== Predecessor ===
i908 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v931 lastLocationAccess: - value: i442 stateAfter: - #next: v247  <|@  <|@
f <@*|@fixed>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
v443 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B41" "B56" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v246 v247 
=== Succesors ===
next: v9 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v246 v247 #next: v9  <|@  <|@
f <@*|@fixed>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 5]
stamp: void
=== Inputs ===
memoryMap: - 
result: a1 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v245 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a1  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1739) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:612) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v672 
=== Usages ===
=== Predecessor ===
v611 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v672  <|@  <|@
f <@~|@floating>@ <|@
tid j674 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: 3220
stableDimension: 0
stamp: i64 [3220]
stampKind: i64
value: long[3220|0xc94]
=== Inputs ===
=== Succesors ===
=== Usages ===
j666 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i673 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: -155667
stableDimension: 0
stamp: i32 [-155667]
stampKind: i32
value: int[-155667|0xfffffffffffd9fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i665 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v672 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v662 
=== Predecessor ===
v610 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B49" "B58" "B51" "B53" "B55" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i665 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32 [-159769 - -155667] bits:1...101100xxx111110x1x1
valueDescription: i32
=== Inputs ===
merge: v662 
values: i671 i673 i676 i678 i680 
=== Succesors ===
=== Usages ===
v667 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v662 values: i671 i673 i676 i678 i680  <|@  <|@
f <@~|@floating>@ <|@
tid j666 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64 [0 - 3220] bits:0...0xx00x00x0x00
valueDescription: i64
=== Inputs ===
merge: v662 
values: j642 j674 j642 j642 j642 
=== Succesors ===
=== Usages ===
v667 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v662 values: j642 j674 j642 j642 j642  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v670 v672 v675 v677 v679 
=== Succesors ===
next: v667 
=== Usages ===
i665 j666 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v670 v672 v675 v677 v679 #next: v667  <|@  <|@
f <@*|@fixed>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
stateBefore: ?66 
actionAndReason: i665 
speculation: j666 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v662 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?66 actionAndReason: i665 speculation: j666  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:628) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v650 
=== Usages ===
=== Predecessor ===
v533 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v650  <|@  <|@
f <@~|@floating>@ <|@
tid j652 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j644 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i651 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: -98355
stableDimension: 0
stamp: i32 [-98355]
stampKind: i32
value: int[-98355|0xfffffffffffe7fcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i643 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v639 
=== Predecessor ===
v532 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B42" "B19" "B21" "B23" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i643 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32 [-151321 - -98355] bits:1...1xxxx11xxxx11x0x1x1
valueDescription: i32
=== Inputs ===
merge: v639 
values: i651 i654 i657 i659 i661 
=== Succesors ===
=== Usages ===
v645 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v639 values: i651 i654 i657 i659 i661  <|@  <|@
f <@~|@floating>@ <|@
tid j644 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64 [0 - 5140] bits:0...0x0xx0x00x0x00
valueDescription: i64
=== Inputs ===
merge: v639 
values: j652 j655 j642 j642 j642 
=== Succesors ===
=== Usages ===
v645 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v639 values: j652 j655 j642 j642 j642  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v650 v653 v656 v658 v660 
=== Succesors ===
next: v645 
=== Usages ===
i643 j644 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v650 v653 v656 v658 v660 #next: v645  <|@  <|@
f <@*|@fixed>@ <|@
tid v645 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i643 
speculation: j644 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v639 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i643 speculation: j644  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@24799e10 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVSXB value: v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHR (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.6362310003571869 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B43 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v11|DWORD = MOV input: [v10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVSXB value: v12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = SHR (x: v11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = ADD (x: v6|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = SUB (x: v15|DWORD, ~y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v16|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603391649089349823
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B2" "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v12|DWORD, y: v5|DWORD) trueDestinationProbability: 0.998717015375415 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4603898526589647782
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" "B35" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v61|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v6|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v62|DWORD = MOV input: [v61|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr   -1  <|@ instruction v63|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v6|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v64|DWORD = MOV input: [v63|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v63|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v61|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v65|DWORD, y: [v1|QWORD[.] + 16]) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B35 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = MOVSXB value: v65|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v68|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = SHL (x: v6|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = SUB (x: v64|DWORD, ~y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v69|DWORD, y: v70|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[*] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[*] = MOVE input: v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v71|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v72|QWORD[*] + v69|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v73|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B34" "B40" 
    successors "B57" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v0|QWORD[.] + 12], y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B44" "B60" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B60 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = ADD (x: v84|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = SUB (x: v85|DWORD, ~y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v86|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599636671466445615
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|QWORD[.]] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" "B58" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr   -1  <|@ instruction [v96|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v97|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v98|DWORD = MOV input: [v97|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v99|DWORD = MOV input: [v96|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2] <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v100|DWORD, y: [v1|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B58 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = MOVSXB value: v100|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v102|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = SHL (x: v101|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v103|DWORD, y: v103|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v102|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = SHL (x: v104|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v105|DWORD, y: v105|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v105|DWORD, y: v98|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = SUB (x: v99|DWORD, ~y: v105|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v103|DWORD, y: v106|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[.] = UNCOMPRESSPOINTER (input: v97|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[*] = MOVE input: v107|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[*] = MOVE input: v96|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v110|QWORD = MOVE input: v105|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v108|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v109|QWORD[*] + v103|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v110|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = ADD (x: v84|DWORD, y: v101|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v111|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = MOVZXB input: [v0|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = MOVZXB input: [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = OR (x: v112|DWORD, y: v113|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 17], y: reinterpret: v114|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B41" "B56" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B42" 
    xhandlers
    flags 
    probability 4588388498606785847
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SHL (x: v15|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SUB (x: v17|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = SHL (x: v20|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = ADD (x: v19|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = CMOVE (falseValue: v18|DWORD, ~trueValue: v21|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = DEC value: v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B42 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4588388498606785847
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = SAR (x: v23|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = SHL (x: v25|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v26|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4588388216090718820
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA address: [v40|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = AND x: v41|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = ADD (x: v42|QWORD, y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v43|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B16" 
    xhandlers
    flags 
    probability 4588305942140169576
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v43|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v39|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v39|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v39|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v39|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v39|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v39|QWORD + 12], y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA address: [v42|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v45|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4588224490929125824
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617985760531553049
    begin_IR
      LIR
      nr   -1  <|@ instruction [v46|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v42|QWORD, y: v46|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617922763110511397
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v39|QWORD + v46|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = LEA address: [v46|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v47|QWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588224490929125825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588305942140169577
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v49|QWORD[.]] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v26|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v51|DWORD, y: v51|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v51|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v51|DWORD, y: v26|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[*] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[*] = MOVE input: v50|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOVE input: v51|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v52|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v53|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v50|QWORD[.]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B8" "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588388498606785848
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v56|QWORD, temp2: v57|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[_] = COMPRESSPOINTER (input: v55|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v58|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v55|QWORD[.]) {temp: v59|QWORD, temp2: v60|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4584865046447166825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v85|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v0|QWORD[.] v9|QWORD[.] 
locals: v0|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:24, 21, 37, 2, 2] <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v88|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = SHL (x: v87|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v89|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v0|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:32, 21, 37, 2, 2] <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v91|QWORD, temp2: v92|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr   -1  <|@ instruction v93|DWORD[_] = COMPRESSPOINTER (input: v90|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v93|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v90|QWORD[.]) {temp: v94|QWORD, temp2: v95|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v90|QWORD[.]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4560668027509911113
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v6|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:18, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v6|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B40" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = SHR value: v64|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = ADD (x: v6|DWORD, y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v75|DWORD, y: v74|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[*] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[*] = MOVE input: v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[*] = LEA address: [v77|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = SHL value: v80|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = LEA address: [v81|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[*] = ADD (x: v82|QWORD, y: v78|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v79|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v83|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4558404756106723069
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v27|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v44|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B17" 
    xhandlers
    flags 
    probability 4558352100778371553
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v39|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4521739169494778405
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA address: [v29|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = AND x: v30|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = ADD (x: v31|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v32|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4521692882062356696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v31|QWORD + v28|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v31|QWORD + v28|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v31|QWORD + v28|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v28|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v28|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v28|QWORD + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 4521739169494778405
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[*] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[*] = MOVE input: v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v37|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v38|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v29|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v36|QWORD[.]] destination: B8 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4491510020210992795
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v27|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v33|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v33|QWORD[.]] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-151321|0xfffffffffffdb0e7], long[0|0x0]] destination: B23 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-149273|0xfffffffffffdb8e7], long[0|0x0]] destination: B19 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-145177|0xfffffffffffdc8e7]] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-159769|0xfffffffffffd8fe7], long[0|0x0]] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-146201|0xfffffffffffdc4e7]] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-148243|0xfffffffffffdbced], long[5140|0x1414]] destination: B42 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-150297|0xfffffffffffdb4e7], long[0|0x0]] destination: B21 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-157721|0xfffffffffffd97e7], long[0|0x0]] destination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-155667|0xfffffffffffd9fed], long[3220|0xc94]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-98355|0xfffffffffffe7fcd], long[660|0x294]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B42" "B19" "B21" "B23" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v117|DWORD, v118|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v117|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v118|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-144153|0xfffffffffffdcce7]] destination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-158745|0xfffffffffffd93e7], long[0|0x0]] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-143129|0xfffffffffffdd0e7]] destination: B31 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B31" "B36" "B33" "B38" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v76|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v76|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v6|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-156697|0xfffffffffffd9be7], long[0|0x0]] destination: B49 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B49" "B58" "B51" "B53" "B55" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v115|DWORD, v116|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v115|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v116|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #89         // append:(java.lang.CharSequence)java.lang.StringBuilder
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a883 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a883  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.lang.StringBuilder
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v9 ?67 v444 ?7 ?244 ?242 v924 ?193 ?634 ?94 ?241 v383 ?634 v931 v922 ?635 v923 v699 v702 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v923 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a883 v332 a893 v449 v697 v699 v700 v702 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a883 <|@
result v2|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v923 
lastLocationAccess: - 
=== Succesors ===
next: i884 
=== Usages ===
a389 v925 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v923 lastLocationAccess: - #next: i884  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a java.lang.Object
uncheckedStamp: a java.lang.CharSequence
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?7 ?67 v928 v933 ?193 ?94 v919 v921 v932 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence)>
localsSize: 2
locksSize: 0
sourceFile: StringBuilder.java
sourceLine: 91
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
v645 v918 v916 a733 a814 i884 v885 i889 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid v925 <|@
result [v2|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a883 
=== Succesors ===
=== Usages ===
i884 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a883  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i884 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-130827|0xfffffffffffe00f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 134]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v925 
lastLocationAccess: - 
=== Succesors ===
next: v885 
=== Usages ===
v463 j780 i132 i135 i141 v150 v167 i168 i46 v762 a733 
=== Predecessor ===
a883 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v925 lastLocationAccess: - #next: v885  <|@  <|@
f <@~|@floating>@ <|@
tid v933 <|@
result [v1|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v885 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v885 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-138771|0xfffffffffffde1ed]
deoptSpeculation: long[20|0x14]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:628) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v933 
lastLocationAccess: - 
=== Succesors ===
next: i886 
=== Usages ===
v914 v912 
=== Predecessor ===
i884 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v933 lastLocationAccess: - #next: i886  <|@  <|@
f <@~|@floating>@ <|@
tid v924 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i886 i903 i895 i899 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i886 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v924 
lastLocationAccess: - 
=== Succesors ===
next: i887 
=== Usages ===
v456 i396 
=== Predecessor ===
v885 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v924 lastLocationAccess: - #next: i887  <|@  <|@
f <@~|@floating>@ <|@
tid v922 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i887 i905 i897 v382 v434 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i887 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 16]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v922 
lastLocationAccess: - 
=== Succesors ===
next: v15 
=== Usages ===
i98 i29 ?193 i201 j910 v217 i222 
=== Predecessor ===
i886 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v922 lastLocationAccess: - #next: v15  <|@  <|@
f <@~|@floating>@ <|@
tid i396 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i886 
=== Succesors ===
=== Usages ===
i46 i120 i131 i134 i140 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i886  <|@  <|@
f <@~|@floating>@ <|@
tid i46 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 9]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i884 
y: i396 
=== Succesors ===
=== Usages ===
i47 i114 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i884 y: i396  <|@  <|@
f <@~|@floating>@ <|@
tid v913 <|@
result meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:625) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v914 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v914 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:625) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v885 
y: v913 
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v885 y: v913  <|@  <|@
f <@~|@floating>@ <|@
tid a389 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a883 
=== Succesors ===
=== Usages ===
j774 ?634 v447 a254 j854 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a883  <|@  <|@
tid ?7 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
sourceFile: StringBuilder.java
sourceLine: 91
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
?244 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
tid ?244 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence)>
localsSize: 2
locksSize: 0
sourceFile: StringBuilder.java
sourceLine: 209
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?7 
values: a1 
=== Succesors ===
=== Usages ===
?93 ?243 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?7 values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid i76 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 12]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v413 v310 v411 v355 v217 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j642 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v686 v842 j644 j644 j644 j666 j666 j666 j666 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i48 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v49 v115 i236 j228 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v921 <|@
result [v1|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i890 i896 i904 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v919 <|@
result [v1|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a888 a891 a900 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:625) [bci: 13]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: PROFILED designatedSuccessorProbability: 0.6362310003571869
stamp: void
=== Inputs ===
condition: v914 
=== Succesors ===
trueSuccessor: v14 
falseSuccessor: v13 
=== Usages ===
=== Predecessor ===
i887 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v914 #trueSuccessor: v14 #falseSuccessor: v13  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@24799e10 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVSXB value: v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHR (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.6362310003571869 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B43 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 16]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a888 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a888  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a888 <|@
result v10|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:586) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v919 
lastLocationAccess: - 
=== Succesors ===
next: i889 
=== Usages ===
v920 
=== Predecessor ===
v14 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v919 lastLocationAccess: - #next: i889  <|@  <|@
f <@~|@floating>@ <|@
tid v920 <|@
result [v10|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a888 
=== Succesors ===
=== Usages ===
i889 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a888  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i889 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-68875|0xfffffffffffef2f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:586) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v920 
lastLocationAccess: - 
=== Succesors ===
next: i890 
=== Usages ===
i108 
=== Predecessor ===
a888 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v920 lastLocationAccess: - #next: i890  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i890 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:586) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v921 
lastLocationAccess: - 
=== Succesors ===
next: v118 
=== Usages ===
i276 v456 
=== Predecessor ===
i889 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v921 lastLocationAccess: - #next: v118  <|@  <|@
f <@~|@floating>@ <|@
tid i276 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:586) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i890 
=== Succesors ===
=== Usages ===
i108 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i890  <|@  <|@
f <@~|@floating>@ <|@
tid i108 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 9]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:586) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i889 
y: i276 
=== Succesors ===
=== Usages ===
i98 i101 ?241 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i889 y: i276  <|@  <|@
f <@~|@floating>@ <|@
tid i98 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 20]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i108 
y: i887 
=== Succesors ===
=== Usages ===
i114 i131 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i108 y: i887  <|@  <|@
f <@~|@floating>@ <|@
tid i114 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 13]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i98 
y: i46 
=== Succesors ===
=== Usages ===
v115 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i98 y: i46  <|@  <|@
f <@~|@floating>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i114 
y: i48 
=== Succesors ===
=== Usages ===
v118 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i114 y: i48  <|@  <|@
f <@~|@floating>@ <|@
tid j225 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j870 j237 j801 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: PROFILED designatedSuccessorProbability: 0.9102668972297561
stamp: void
=== Inputs ===
condition: v115 
=== Succesors ===
trueSuccessor: v117 
falseSuccessor: v116 
=== Usages ===
=== Predecessor ===
i890 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v115 #trueSuccessor: v117 #falseSuccessor: v116  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v11|DWORD = MOV input: [v10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVSXB value: v12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = SHR (x: v11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = ADD (x: v6|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = SUB (x: v15|DWORD, ~y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v16|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603391649089349823
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v124 
=== Usages ===
=== Predecessor ===
v118 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v124  <|@  <|@
f <@*|@fixed>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v125 
=== Predecessor ===
v117 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B42" 
    xhandlers
    flags 
    probability 4588388498606785847
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v582 
=== Usages ===
=== Predecessor ===
v118 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v582  <|@  <|@
f <@~|@floating>@ <|@
tid i131 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:261) [bci: 11]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i98 
y: i396 
=== Succesors ===
=== Usages ===
i132 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i98 y: i396  <|@  <|@
f <@~|@floating>@ <|@
tid i132 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:262) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i131 
y: i884 
=== Succesors ===
=== Usages ===
v147 i148 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i131 y: i884  <|@  <|@
f <@~|@floating>@ <|@
tid i133 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 22]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i134 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i134 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 27]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i133 
y: i396 
=== Succesors ===
=== Usages ===
i135 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i133 y: i396  <|@  <|@
f <@~|@floating>@ <|@
tid i135 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i134 
y: i884 
=== Succesors ===
=== Usages ===
v147 i148 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i134 y: i884  <|@  <|@
f <@~|@floating>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:2020) [bci: 2]
at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:740) [bci: 3]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i132 
y: i135 
=== Succesors ===
=== Usages ===
i148 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i132 y: i135  <|@  <|@
f <@~|@floating>@ <|@
tid i148 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:2020) [bci: 2]
at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:740) [bci: 3]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
condition: v147 
trueValue: i135 
falseValue: i132 
=== Succesors ===
=== Usages ===
i141 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v147 trueValue: i135 falseValue: i132  <|@  <|@
f <@~|@floating>@ <|@
tid i141 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:740) [bci: 6]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i148 
y: i884 
=== Succesors ===
=== Usages ===
i630 i140 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i148 y: i884  <|@  <|@
f <@~|@floating>@ <|@
tid i629 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 10]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i630 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i630 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 10]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i141 
y: i629 
=== Succesors ===
=== Usages ===
v632 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i141 y: i629  <|@  <|@
f <@~|@floating>@ <|@
tid i631 <|@
result int[2147483639|0x7ffffff7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 10]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: 2147483639
stableDimension: 0
stamp: i32 [2147483639]
stampKind: i32
value: int[2147483639|0x7ffffff7]
=== Inputs ===
=== Succesors ===
=== Usages ===
v632 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 10]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i630 
y: i631 
=== Succesors ===
=== Usages ===
v582 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i630 y: i631  <|@  <|@
f <@*|@fixed>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 16]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v632 
=== Succesors ===
trueSuccessor: v580 
falseSuccessor: v581 
=== Usages ===
=== Predecessor ===
v116 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v632 #trueSuccessor: v580 #falseSuccessor: v581  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SHL (x: v15|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SUB (x: v17|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = SHL (x: v20|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = ADD (x: v19|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = CMOVE (falseValue: v18|DWORD, ~trueValue: v21|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = DEC value: v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B42 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4588388498606785847
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:742) [bci: 19]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v153 
=== Usages ===
=== Predecessor ===
v582 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v153  <|@  <|@
f <@~|@floating>@ <|@
tid i140 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:267) [bci: 57]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i141 
y: i396 
=== Succesors ===
=== Usages ===
i120 
=== Predecessor ===
- >@ <|@
instruction <@>>|@jdk.graal.compiler.nodes.calc.RightShiftNode>@ x: i141 y: i396  <|@  <|@
f <@~|@floating>@ <|@
tid i120 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i140 
y: i396 
=== Succesors ===
=== Usages ===
v150 v841 v167 i168 v464 j785 a814 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i140 y: i396  <|@  <|@
f <@~|@floating>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3538) [bci: 3]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i120 
y: i884 
=== Succesors ===
=== Usages ===
v153 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i120 y: i884  <|@  <|@
f <@~|@floating>@ <|@
tid v882 <|@
result meta{HotSpotType<[B, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: meta{HotSpotType<[B, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<[B, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v761 v840 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j728 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.defaultPrototypeMarkWord(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:421) [bci: 9]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v758 v837 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v716 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: meta{HotSpotType<[B, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[B, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a733 a814 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j742 <|@
result long[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: 23
stableDimension: 0
stamp: i64 [23]
stampKind: i64
value: long[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
j743 j821 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j721 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:132) [bci: 23]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j722 j786 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3538) [bci: 3]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: PROFILED designatedSuccessorProbability: 3.433727982038448E-5
stamp: void
=== Inputs ===
condition: v150 
=== Succesors ===
trueSuccessor: v152 
falseSuccessor: v151 
=== Usages ===
=== Predecessor ===
v580 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v150 #trueSuccessor: v152 #falseSuccessor: v151  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = SAR (x: v23|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = SHL (x: v25|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v26|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4521739169494778405
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 6]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v772 
=== Usages ===
=== Predecessor ===
v153 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v772  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v772 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j717 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j717  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j717 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j755 
=== Usages ===
v934 v935 
=== Predecessor ===
v772 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j755  <|@  <|@
f <@~|@floating>@ <|@
tid v934 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j717 
index: - 
=== Succesors ===
=== Usages ===
j755 v757 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j717 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j755 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v934 
lastLocationAccess: - 
=== Succesors ===
next: j756 
=== Usages ===
j723 v936 v937 a732 v941 v938 v939 v940 
=== Predecessor ===
j717 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v934 lastLocationAccess: - #next: j756  <|@  <|@
f <@~|@floating>@ <|@
tid v935 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j717 
index: - 
=== Succesors ===
=== Usages ===
j756 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j717 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j756 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v935 
lastLocationAccess: - 
=== Succesors ===
next: v727 
=== Usages ===
v724 
=== Predecessor ===
j755 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v935 lastLocationAccess: - #next: v727  <|@  <|@
f <@~|@floating>@ <|@
tid j780 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i884 
=== Succesors ===
=== Usages ===
v781 j743 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i884  <|@  <|@
f <@~|@floating>@ <|@
tid j743 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64 [23 - 2147483670] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j780 
y: j742 
=== Succesors ===
=== Usages ===
j722 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j780 y: j742  <|@  <|@
f <@~|@floating>@ <|@
tid j722 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64 [0 - 2147483664] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j743 
y: j721 
=== Succesors ===
=== Usages ===
j723 v938 v939 v940 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j743 y: j721  <|@  <|@
f <@~|@floating>@ <|@
tid j723 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
=== Inputs ===
x: j722 
y: j755 
=== Succesors ===
=== Usages ===
v724 v757 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j722 y: j755  <|@  <|@
f <@~|@floating>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j756 
y: j723 
=== Succesors ===
=== Usages ===
v727 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j756 y: j723  <|@  <|@
f <@*|@fixed>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v724 
=== Succesors ===
trueSuccessor: v726 
falseSuccessor: v725 
=== Usages ===
=== Predecessor ===
j756 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v724 #trueSuccessor: v726 #falseSuccessor: v725  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA address: [v29|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = AND x: v30|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = ADD (x: v31|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v32|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4491510020210992795
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a733 
=== Usages ===
=== Predecessor ===
v727 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a733  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a733 <|@
result v33|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v716 i884 
=== Succesors ===
next: v916 
=== Usages ===
v916 a753 
=== Predecessor ===
v726 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v716 i884 #next: v916  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-196721|0xfffffffffffcff8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a733 
=== Succesors ===
next: v737 
=== Usages ===
=== Predecessor ===
a733 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a733 #next: v737  <|@  <|@
f <@*|@fixed>@ <|@
tid v737 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v736 
=== Predecessor ===
v916 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v27|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v33|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v33|QWORD[.]] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4521692882062356696
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v725 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v757 
=== Usages ===
=== Predecessor ===
v727 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v757  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v757 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v934 
lastLocationAccess: - 
value: j723 
stateAfter: - 
=== Succesors ===
next: v745 
=== Usages ===
=== Predecessor ===
v725 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v934 lastLocationAccess: - value: j723 stateAfter: - #next: v745  <|@  <|@
f <@~|@floating>@ <|@
tid v938 <|@
result [v31|QWORD + v28|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j722 
index: j755 
=== Succesors ===
=== Usages ===
v745 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j722 index: j755  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
address: v938 
=== Succesors ===
next: v748 
=== Usages ===
=== Predecessor ===
v757 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v938 #next: v748  <|@  <|@
f <@~|@floating>@ <|@
tid v939 <|@
result [v31|QWORD + v28|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j722 
index: j755 
=== Succesors ===
=== Usages ===
v748 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j722 index: j755  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
address: v939 
=== Succesors ===
next: v751 
=== Usages ===
=== Predecessor ===
v745 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v939 #next: v751  <|@  <|@
f <@~|@floating>@ <|@
tid v940 <|@
result [v31|QWORD + v28|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j722 
index: j755 
=== Succesors ===
=== Usages ===
v751 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j722 index: j755  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
address: v940 
=== Succesors ===
next: v758 
=== Usages ===
=== Predecessor ===
v748 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v940 #next: v758  <|@  <|@
f <@~|@floating>@ <|@
tid v936 <|@
result [v28|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j755 
index: - 
=== Succesors ===
=== Usages ===
v758 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j755 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v936 
lastLocationAccess: - 
value: j728 
stateAfter: - 
=== Succesors ===
next: v761 
=== Usages ===
=== Predecessor ===
v751 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v936 lastLocationAccess: - value: j728 stateAfter: - #next: v761  <|@  <|@
f <@~|@floating>@ <|@
tid v941 <|@
result [v28|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j755 
index: - 
=== Succesors ===
=== Usages ===
v761 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j755 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v941 
lastLocationAccess: - 
value: v882 
stateAfter: - 
=== Succesors ===
next: v762 
=== Usages ===
=== Predecessor ===
v758 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v941 lastLocationAccess: - value: v882 stateAfter: - #next: v762  <|@  <|@
f <@~|@floating>@ <|@
tid v937 <|@
result [v28|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j755 
index: - 
=== Succesors ===
=== Usages ===
v762 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j755 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v937 
lastLocationAccess: - 
value: i884 
stateAfter: - 
=== Succesors ===
next: v731 
=== Usages ===
=== Predecessor ===
v761 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v937 lastLocationAccess: - value: i884 stateAfter: - #next: v731  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v731 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a732 
=== Usages ===
=== Predecessor ===
v762 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a732  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a732 <|@
result v35|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j755 
=== Succesors ===
next: v735 
=== Usages ===
a753 
=== Predecessor ===
v731 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j755 #next: v735  <|@  <|@
f <@*|@fixed>@ <|@
tid v735 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v736 
=== Predecessor ===
a732 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v31|QWORD + v28|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v31|QWORD + v28|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v31|QWORD + v28|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v28|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v28|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v28|QWORD + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 4521739169494778405
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a753 <|@
result v36|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v736 
values: a732 a733 
=== Succesors ===
=== Usages ===
j778 a297 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v736 values: a732 a733  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v735 v737 
=== Succesors ===
next: j774 
=== Usages ===
a753 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v735 v737 #next: j774  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j774 <|@
result v37|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
=== Inputs ===
object: a389 
=== Succesors ===
next: j778 
=== Usages ===
v942 
=== Predecessor ===
v736 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a389 #next: j778  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j778 <|@
result v38|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
=== Inputs ===
object: a753 
=== Succesors ===
next: v781 
=== Usages ===
v943 
=== Predecessor ===
j774 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a753 #next: v781  <|@  <|@
f <@~|@floating>@ <|@
tid v942 <|@
result [v37|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j774 
index: - 
=== Succesors ===
=== Usages ===
v781 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j774 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v943 <|@
result [v38|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j778 
index: - 
=== Succesors ===
=== Usages ===
v781 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j778 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v781 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}
descriptorName: byteDisjointArraycopyKillInit
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v942 v943 j780 
=== Succesors ===
next: v296 
=== Usages ===
=== Predecessor ===
j778 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v942 v943 j780 #next: v296  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:80) [bci: 39] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a297 
=== Usages ===
=== Predecessor ===
v781 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a297  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a297 <|@
result v36|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:81) [bci: 43] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: a!# byte[]
=== Inputs ===
object: a753 
=== Succesors ===
next: v172 
=== Usages ===
a173 
=== Predecessor ===
v296 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a753 #next: v172  <|@  <|@
f <@*|@fixed>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v171 
=== Predecessor ===
a297 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[*] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[*] = MOVE input: v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v37|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v38|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v29|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v36|QWORD[.]] destination: B8 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4588388216090718820
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 14]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v852 
=== Usages ===
=== Predecessor ===
v153 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v852  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v852 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j782 
=== Usages ===
=== Predecessor ===
v151 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j782  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j782 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j834 
=== Usages ===
v944 v945 
=== Predecessor ===
v852 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j834  <|@  <|@
f <@~|@floating>@ <|@
tid v944 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j782 
index: - 
=== Succesors ===
=== Usages ===
j834 v836 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j782 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j834 <|@
result v39|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v944 
lastLocationAccess: - 
=== Succesors ===
next: j835 
=== Usages ===
j787 v946 v947 v948 a813 v949 v953 v950 v951 v952 
=== Predecessor ===
j782 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v944 lastLocationAccess: - #next: j835  <|@  <|@
f <@~|@floating>@ <|@
tid v945 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j782 
index: - 
=== Succesors ===
=== Usages ===
j835 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j782 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j835 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v945 
lastLocationAccess: - 
=== Succesors ===
next: v791 
=== Usages ===
v788 
=== Predecessor ===
j834 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v945 lastLocationAccess: - #next: v791  <|@  <|@
f <@~|@floating>@ <|@
tid j785 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i120 
=== Succesors ===
=== Usages ===
j821 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i120  <|@  <|@
f <@~|@floating>@ <|@
tid j821 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64 [23 - 4294967318] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j785 
y: j742 
=== Succesors ===
=== Usages ===
j786 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j785 y: j742  <|@  <|@
f <@~|@floating>@ <|@
tid j786 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64 [0 - 4294967312] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j821 
y: j721 
=== Succesors ===
=== Usages ===
j787 v802 j823 v950 v951 v952 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j821 y: j721  <|@  <|@
f <@~|@floating>@ <|@
tid j787 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
=== Inputs ===
x: j786 
y: j834 
=== Succesors ===
=== Usages ===
v788 v836 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j786 y: j834  <|@  <|@
f <@~|@floating>@ <|@
tid v788 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j835 
y: j787 
=== Succesors ===
=== Usages ===
v791 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j835 y: j787  <|@  <|@
f <@*|@fixed>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v788 
=== Succesors ===
trueSuccessor: v790 
falseSuccessor: v789 
=== Usages ===
=== Predecessor ===
j835 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v788 #trueSuccessor: v790 #falseSuccessor: v789  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA address: [v40|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = AND x: v41|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = ADD (x: v42|QWORD, y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v43|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4558404756106723069
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v790 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a814 
=== Usages ===
=== Predecessor ===
v791 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a814  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a814 <|@
result v44|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v716 i120 
=== Succesors ===
next: v918 
=== Usages ===
v918 a832 
=== Predecessor ===
v790 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v716 i120 #next: v918  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v918 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-217201|0xfffffffffffcaf8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a814 
=== Succesors ===
next: v818 
=== Usages ===
=== Predecessor ===
a814 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a814 #next: v818  <|@  <|@
f <@*|@fixed>@ <|@
tid v818 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v817 
=== Predecessor ===
v918 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v27|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v44|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B16" 
    xhandlers
    flags 
    probability 4588305942140169576
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v789 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v836 
=== Usages ===
=== Predecessor ===
v791 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v836  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v836 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v944 
lastLocationAccess: - 
value: j787 
stateAfter: - 
=== Succesors ===
next: v827 
=== Usages ===
=== Predecessor ===
v789 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v944 lastLocationAccess: - value: j787 stateAfter: - #next: v827  <|@  <|@
f <@~|@floating>@ <|@
tid v950 <|@
result [v42|QWORD + v39|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j786 
index: j834 
=== Succesors ===
=== Usages ===
v827 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j786 index: j834  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v827 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
address: v950 
=== Succesors ===
next: v829 
=== Usages ===
=== Predecessor ===
v836 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v950 #next: v829  <|@  <|@
f <@~|@floating>@ <|@
tid v951 <|@
result [v42|QWORD + v39|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j786 
index: j834 
=== Succesors ===
=== Usages ===
v829 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j786 index: j834  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v829 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
address: v951 
=== Succesors ===
next: v831 
=== Usages ===
=== Predecessor ===
v827 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v951 #next: v831  <|@  <|@
f <@~|@floating>@ <|@
tid v952 <|@
result [v42|QWORD + v39|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j786 
index: j834 
=== Succesors ===
=== Usages ===
v831 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j786 index: j834  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
address: v952 
=== Succesors ===
next: v837 
=== Usages ===
=== Predecessor ===
v829 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v952 #next: v837  <|@  <|@
f <@~|@floating>@ <|@
tid v946 <|@
result [v39|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j834 
index: - 
=== Succesors ===
=== Usages ===
v837 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j834 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v837 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v946 
lastLocationAccess: - 
value: j728 
stateAfter: - 
=== Succesors ===
next: v840 
=== Usages ===
=== Predecessor ===
v831 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v946 lastLocationAccess: - value: j728 stateAfter: - #next: v840  <|@  <|@
f <@~|@floating>@ <|@
tid v953 <|@
result [v39|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j834 
index: - 
=== Succesors ===
=== Usages ===
v840 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j834 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v840 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v953 
lastLocationAccess: - 
value: v882 
stateAfter: - 
=== Succesors ===
next: v841 
=== Usages ===
=== Predecessor ===
v837 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v953 lastLocationAccess: - value: v882 stateAfter: - #next: v841  <|@  <|@
f <@~|@floating>@ <|@
tid v947 <|@
result [v39|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j834 
index: - 
=== Succesors ===
=== Usages ===
v841 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j834 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v841 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v947 
lastLocationAccess: - 
value: i120 
stateAfter: - 
=== Succesors ===
next: v797 
=== Usages ===
=== Predecessor ===
v840 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v947 lastLocationAccess: - value: i120 stateAfter: - #next: v797  <|@  <|@
f <@~|@floating>@ <|@
tid j822 <|@
result long[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: -16
stableDimension: 0
stamp: i64 [-16]
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j823 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j823 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64 [-16 - 4294967296] bits:x...x000
=== Inputs ===
x: j786 
y: j822 
=== Succesors ===
=== Usages ===
v794 v798 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j786 y: j822  <|@  <|@
f <@~|@floating>@ <|@
tid j824 <|@
result long[2048|0x800] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: 2048
stableDimension: 0
stamp: i64 [2048]
stampKind: i64
value: long[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v794 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v794 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j823 
y: j824 
=== Succesors ===
=== Usages ===
v797 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j823 y: j824  <|@  <|@
f <@*|@fixed>@ <|@
tid v797 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 28]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v794 
=== Succesors ===
trueSuccessor: v796 
falseSuccessor: v795 
=== Usages ===
=== Predecessor ===
v841 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v794 #trueSuccessor: v796 #falseSuccessor: v795  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v43|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v39|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v39|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v39|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v39|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v39|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v39|QWORD + 12], y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA address: [v42|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v45|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4588224490929125824
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v796 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:228) [bci: 62]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v799 
=== Usages ===
=== Predecessor ===
v797 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v799  <|@  <|@
f <@~|@floating>@ <|@
tid j711 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:628) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: 8
stableDimension: 0
stamp: i64 [8]
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j810 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v799 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v800 
=== Predecessor ===
v796 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617985760531553049
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j801 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v800 
values: j225 j810 
=== Succesors ===
=== Usages ===
v802 v948 j810 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v800 values: j225 j810  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v800 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 56
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v799 
=== Succesors ===
next: v808 
=== Usages ===
j801 v807 v811 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v799 #next: v808  <|@  <|@
f <@~|@floating>@ <|@
tid v802 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 119]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j801 
y: j786 
=== Succesors ===
=== Usages ===
v808 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j801 y: j786  <|@  <|@
f <@*|@fixed>@ <|@
tid v808 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 127]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v802 
=== Succesors ===
trueSuccessor: v803 
falseSuccessor: v807 
=== Usages ===
=== Predecessor ===
v800 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v802 #trueSuccessor: v803 #falseSuccessor: v807  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v46|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v42|QWORD, y: v46|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617922763110511397
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v803 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 130]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v842 
=== Usages ===
=== Predecessor ===
v808 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v842  <|@  <|@
f <@~|@floating>@ <|@
tid v948 <|@
result [v39|QWORD + v46|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j834 
index: j801 
=== Succesors ===
=== Usages ===
v842 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j834 index: j801  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v842 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v948 
lastLocationAccess: - 
value: j642 
stateAfter: - 
=== Succesors ===
next: v811 
=== Usages ===
=== Predecessor ===
v803 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v948 lastLocationAccess: - value: j642 stateAfter: - #next: v811  <|@  <|@
f <@~|@floating>@ <|@
tid j810 <|@
result v47|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 144]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
=== Inputs ===
x: j801 
y: j711 
=== Succesors ===
=== Usages ===
j801 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j801 y: j711  <|@  <|@
f <@*|@fixed>@ <|@
tid v811 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
loopBegin: v800 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v842 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v800  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v39|QWORD + v46|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = LEA address: [v46|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v47|QWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588224490929125825
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v807 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v800 
=== Succesors ===
next: v806 
=== Usages ===
=== Predecessor ===
v808 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v800 #next: v806  <|@  <|@
f <@*|@fixed>@ <|@
tid v806 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v805 
=== Predecessor ===
v807 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B17" 
    xhandlers
    flags 
    probability 4558352100778371553
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v795 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:225) [bci: 31]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v798 
=== Usages ===
=== Predecessor ===
v797 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v798  <|@  <|@
f <@~|@floating>@ <|@
tid v949 <|@
result [v39|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j834 
index: - 
=== Succesors ===
=== Usages ===
v798 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j834 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v798 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
isAligned: true
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ZeroMemoryNode.zero(Word, long, boolean, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:226) [bci: 56]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v949 
lastLocationAccess: - 
length: j823 
=== Succesors ===
next: v804 
=== Usages ===
=== Predecessor ===
v795 >@ <|@
instruction <@ZeroMemory|@jdk.graal.compiler.replacements.nodes.ZeroMemoryNode>@ stateBefore: - guard: - address: v949 lastLocationAccess: - length: j823 #next: v804  <|@  <|@
f <@*|@fixed>@ <|@
tid v804 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v805 
=== Predecessor ===
v798 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v39|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588305942140169577
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v805 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v804 v806 
=== Succesors ===
next: v812 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v804 v806 #next: v812  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v812 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a813 
=== Usages ===
=== Predecessor ===
v805 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a813  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a813 <|@
result v49|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j834 
=== Succesors ===
next: v816 
=== Usages ===
a832 
=== Predecessor ===
v812 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j834 #next: v816  <|@  <|@
f <@*|@fixed>@ <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v817 
=== Predecessor ===
a813 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v49|QWORD[.]] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a832 <|@
result v50|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v817 
values: a813 a814 
=== Succesors ===
=== Usages ===
j856 a173 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v817 values: a813 a814  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v817 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v816 v818 
=== Succesors ===
next: v586 
=== Usages ===
a832 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v816 v818 #next: v586  <|@  <|@
f <@~|@floating>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at java.util.Arrays.copyOf(Arrays.java:3543) [bci: 25]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i120 
y: i884 
=== Succesors ===
=== Usages ===
i168 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i120 y: i884  <|@  <|@
f <@~|@floating>@ <|@
tid i168 <|@
result v51|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at java.util.Arrays.copyOf(Arrays.java:3543) [bci: 25]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
condition: v167 
trueValue: i120 
falseValue: i884 
=== Succesors ===
=== Usages ===
j858 v310 v463 v464 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v167 trueValue: i120 falseValue: i884  <|@  <|@
f <@~|@floating>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 89]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i168 
y: i76 
=== Succesors ===
=== Usages ===
v586 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i168 y: i76  <|@  <|@
f <@*|@fixed>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v310 
=== Succesors ===
trueSuccessor: v584 
falseSuccessor: v585 
=== Usages ===
=== Predecessor ===
v817 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v310 #trueSuccessor: v584 #falseSuccessor: v585  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v26|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v51|DWORD, y: v51|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v656 
=== Usages ===
=== Predecessor ===
v586 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v656  <|@  <|@
f <@~|@floating>@ <|@
tid i657 <|@
result int[-149273|0xfffffffffffdb8e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: -149273
stableDimension: 0
stamp: i32 [-149273]
stampKind: i32
value: int[-149273|0xfffffffffffdb8e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i643 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v639 
=== Predecessor ===
v584 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-149273|0xfffffffffffdb8e7], long[0|0x0]] destination: B19 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:409) [bci: 120]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v590 
=== Usages ===
=== Predecessor ===
v586 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v590  <|@  <|@
f <@~|@floating>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 140]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i884 
y: i168 
=== Succesors ===
=== Usages ===
v590 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i884 y: i168  <|@  <|@
f <@*|@fixed>@ <|@
tid v590 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v463 
=== Succesors ===
trueSuccessor: v588 
falseSuccessor: v589 
=== Usages ===
=== Predecessor ===
v585 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v463 #trueSuccessor: v588 #falseSuccessor: v589  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v51|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v658 
=== Usages ===
=== Predecessor ===
v590 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v658  <|@  <|@
f <@~|@floating>@ <|@
tid i659 <|@
result int[-150297|0xfffffffffffdb4e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: -150297
stableDimension: 0
stamp: i32 [-150297]
stampKind: i32
value: int[-150297|0xfffffffffffdb4e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i643 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v639 
=== Predecessor ===
v588 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-150297|0xfffffffffffdb4e7], long[0|0x0]] destination: B21 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 171]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v594 
=== Usages ===
=== Predecessor ===
v590 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v594  <|@  <|@
f <@~|@floating>@ <|@
tid v464 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 181]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i120 
y: i168 
=== Succesors ===
=== Usages ===
v594 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i120 y: i168  <|@  <|@
f <@*|@fixed>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v464 
=== Succesors ===
trueSuccessor: v592 
falseSuccessor: v593 
=== Usages ===
=== Predecessor ===
v589 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v464 #trueSuccessor: v592 #falseSuccessor: v593  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v51|DWORD, y: v26|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v660 
=== Usages ===
=== Predecessor ===
v594 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v660  <|@  <|@
f <@~|@floating>@ <|@
tid i661 <|@
result int[-151321|0xfffffffffffdb0e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: -151321
stableDimension: 0
stamp: i32 [-151321]
stampKind: i32
value: int[-151321|0xfffffffffffdb0e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i643 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v639 
=== Predecessor ===
v592 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-151321|0xfffffffffffdb0e7], long[0|0x0]] destination: B23 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:418) [bci: 212]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j854 
=== Usages ===
=== Predecessor ===
v594 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j854  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j854 <|@
result v52|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
=== Inputs ===
object: a389 
=== Succesors ===
next: j856 
=== Usages ===
v954 
=== Predecessor ===
v593 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a389 #next: j856  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j856 <|@
result v53|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
=== Inputs ===
object: a832 
=== Succesors ===
next: v859 
=== Usages ===
v955 
=== Predecessor ===
j854 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a832 #next: v859  <|@  <|@
f <@~|@floating>@ <|@
tid v954 <|@
result [v52|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j854 
index: - 
=== Succesors ===
=== Usages ===
v859 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j854 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v955 <|@
result [v53|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j856 
index: - 
=== Succesors ===
=== Usages ===
v859 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j856 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j858 <|@
result v54|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i168 
=== Succesors ===
=== Usages ===
v859 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i168  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v859 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}
descriptorName: byteDisjointArraycopy
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v954 v955 j858 
=== Succesors ===
next: v174 
=== Usages ===
=== Predecessor ===
j856 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v954 v955 j858 #next: v174  <|@  <|@
f <@*|@fixed>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v171 
=== Predecessor ===
v859 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[*] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[*] = MOVE input: v50|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOVE input: v51|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v52|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v53|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v50|QWORD[.]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B8" "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588388498606785848
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a173 <|@
result v55|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# byte[]
valueDescription: a java.lang.Object
=== Inputs ===
merge: v171 
values: a297 a832 
=== Succesors ===
=== Usages ===
a331 v699 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v171 values: a297 a832  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v172 v174 
=== Succesors ===
next: v697 
=== Usages ===
a173 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v172 v174 #next: v697  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
precise: true
stamp: void
=== Inputs ===
address: v923 
value: - 
stateBefore: - 
=== Succesors ===
next: v332 
=== Usages ===
=== Predecessor ===
v171 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v923 value: - stateBefore: - #next: v332  <|@  <|@
f <@~|@floating>@ <|@
tid a331 <|@
result v58|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: Compress
stamp: n!# byte[]
=== Inputs ===
value: a173 
=== Succesors ===
=== Usages ===
v332 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a173  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractStringBuilder.value
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v923 
lastLocationAccess: - 
value: a331 
stateAfter: - 
=== Succesors ===
next: v699 
=== Usages ===
=== Predecessor ===
v697 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v923 lastLocationAccess: - value: a331 stateAfter: - #next: v699  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
precise: false
stamp: void
=== Inputs ===
address: v923 
value: a173 
object: a1 
=== Succesors ===
next: v126 
=== Usages ===
=== Predecessor ===
v332 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v923 value: a173 object: a1 #next: v126  <|@  <|@
f <@*|@fixed>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v125 
=== Predecessor ===
v699 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v56|QWORD, temp2: v57|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[_] = COMPRESSPOINTER (input: v55|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v58|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v55|QWORD[.]) {temp: v59|QWORD, temp2: v60|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B2" "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v124 v126 
=== Succesors ===
next: v182 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v124 v126 #next: v182  <|@  <|@
tid ?243 <|@
d <@d|@=== Debug Properties ===
bci: 21
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(CharSequence)>
localsSize: 2
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 626
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?244 
=== Succesors ===
=== Usages ===
?94 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?244  <|@  <|@
tid ?94 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StringBuilder.append(String)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
sourceFile: StringBuilder.java
sourceLine: 91
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?243 
values: a1 a2 
=== Succesors ===
=== Usages ===
?242 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?243 values: a1 a2  <|@  <|@
tid ?242 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<StringBuilder.append(String)>
localsSize: 2
locksSize: 0
sourceFile: StringBuilder.java
sourceLine: 179
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?94 
values: a1 
=== Succesors ===
=== Usages ===
?241 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?94 values: a1  <|@  <|@
tid ?241 <|@
d <@d|@=== Debug Properties ===
bci: 30
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 588
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?242 
values: a1 - i108 
=== Succesors ===
=== Usages ===
?193 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?242 values: a1 - i108  <|@  <|@
tid ?193 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.putStringAt(int, String)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 1750
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?241 
values: a1 i887 a2 
=== Succesors ===
=== Usages ===
?636 ?189 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?241 values: a1 i887 a2  <|@  <|@
f <@~|@floating>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1733) [bci: 14]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i886 
y: i890 
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i886 y: i890  <|@  <|@
f <@*|@fixed>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1733) [bci: 14]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: PROFILED designatedSuccessorProbability: 0.998717015375415
stamp: void
=== Inputs ===
condition: v456 
=== Succesors ===
trueSuccessor: v181 
falseSuccessor: v180 
=== Usages ===
=== Predecessor ===
v125 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v456 #trueSuccessor: v181 #falseSuccessor: v180  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v12|DWORD, y: v5|DWORD) trueDestinationProbability: 0.998717015375415 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4603898526589647782
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v186 
=== Usages ===
=== Predecessor ===
v182 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v186  <|@  <|@
f <@*|@fixed>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v187 
=== Predecessor ===
v181 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4560668027509911113
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 17]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v184 
=== Usages ===
=== Predecessor ===
v182 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v184  <|@  <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/lang/AbstractStringBuilder;, resolved>]
stamp: void
targetMethod: HotSpotMethod<AbstractStringBuilder.inflate()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v184 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?636 <|@
d <@d|@=== Debug Properties ===
bci: 18
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.inflateIfNeededFor(String)>
localsSize: 2
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 1734
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?193 
=== Succesors ===
=== Usages ===
v184 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?193  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
bci: 18
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
polymorphic: false
stamp: void
targetMethod: Direct#AbstractStringBuilder.inflate
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v383 
stateDuring: ?636 
=== Succesors ===
next: v188 
=== Usages ===
=== Predecessor ===
v180 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v383 stateDuring: ?636 #next: v188  <|@  <|@
f <@*|@fixed>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v187 
=== Predecessor ===
v184 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v6|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:18, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" "B35" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v186 v188 
=== Succesors ===
next: a891 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v186 v188 #next: a891  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a891 <|@
result v61|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.getBytes(String.java:4726) [bci: 9]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v919 
lastLocationAccess: - 
=== Succesors ===
next: i892 
=== Usages ===
a345 v926 
=== Predecessor ===
v187 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v919 lastLocationAccess: - #next: i892  <|@  <|@
tid ?189 <|@
d <@d|@=== Debug Properties ===
bci: 21
bytecode: return
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.inflateIfNeededFor(String)>
localsSize: 2
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 1736
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?193 
=== Succesors ===
=== Usages ===
v686 i892 i894 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?193  <|@  <|@
f <@~|@floating>@ <|@
tid v926 <|@
result [v61|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a891 
=== Succesors ===
=== Usages ===
i892 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a891  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i892 <|@
result v62|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-89867|0xfffffffffffea0f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.getBytes(String.java:4726) [bci: 21]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?189 
guard: - 
address: v926 
lastLocationAccess: - 
=== Succesors ===
next: a893 
=== Usages ===
j867 v230 i222 i363 
=== Predecessor ===
a891 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?189 guard: - address: v926 lastLocationAccess: - #next: a893  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a893 <|@
result v63|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v923 
lastLocationAccess: - 
=== Succesors ===
next: i894 
=== Usages ===
a339 v927 
=== Predecessor ===
i892 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v923 lastLocationAccess: - #next: i894  <|@  <|@
f <@~|@floating>@ <|@
tid v927 <|@
result [v63|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a893 
=== Succesors ===
=== Usages ===
i894 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a893  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i894 <|@
result v64|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-131339|0xfffffffffffdfef5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?189 
guard: - 
address: v927 
lastLocationAccess: - 
=== Succesors ===
next: i895 
=== Usages ===
i236 i363 
=== Predecessor ===
a893 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?189 guard: - address: v927 lastLocationAccess: - #next: i895  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i895 <|@
result v65|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 12]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v924 
lastLocationAccess: - 
=== Succesors ===
next: i896 
=== Usages ===
i341 v458 
=== Predecessor ===
i894 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v924 lastLocationAccess: - #next: i896  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i896 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.getBytes(String.java:4725) [bci: 1]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v921 
lastLocationAccess: - 
=== Succesors ===
next: v199 
=== Usages ===
v458 
=== Predecessor ===
i895 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v921 lastLocationAccess: - #next: v199  <|@  <|@
f <@~|@floating>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.getBytes(String.java:4725) [bci: 5]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i895 
y: i896 
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i895 y: i896  <|@  <|@
f <@~|@floating>@ <|@
tid a339 <|@
result v66|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a893 
=== Succesors ===
=== Usages ===
j871 j862 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a893  <|@  <|@
f <@~|@floating>@ <|@
tid a345 <|@
result v67|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.getBytes(String.java:4726) [bci: 9]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a891 
=== Succesors ===
=== Usages ===
j860 j869 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a891  <|@  <|@
f <@*|@fixed>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getBytes(String.java:4725) [bci: 5]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: PROFILED designatedSuccessorProbability: 0.9987687249012156
stamp: void
=== Inputs ===
condition: v458 
=== Succesors ===
trueSuccessor: v198 
falseSuccessor: v197 
=== Usages ===
=== Predecessor ===
i896 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v458 #trueSuccessor: v198 #falseSuccessor: v197  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v61|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v6|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v62|DWORD = MOV input: [v61|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr   -1  <|@ instruction v63|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v6|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v64|DWORD = MOV input: [v63|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v63|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v61|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v65|DWORD, y: [v1|QWORD[.] + 16]) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B35 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.getBytes(String.java:4726) [bci: 8]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v562 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v562  <|@  <|@
f <@~|@floating>@ <|@
tid i341 <|@
result v68|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 12]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i895 
=== Succesors ===
=== Usages ===
i201 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i895  <|@  <|@
f <@~|@floating>@ <|@
tid i201 <|@
result v69|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getBytes(String.java:4726) [bci: 16]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i887 
y: i341 
=== Succesors ===
=== Usages ===
j863 v355 v364 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i887 y: i341  <|@  <|@
f <@~|@floating>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 45]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i201 
y: i76 
=== Succesors ===
=== Usages ===
v562 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i201 y: i76  <|@  <|@
f <@*|@fixed>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v355 
=== Succesors ===
trueSuccessor: v560 
falseSuccessor: v561 
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v355 #trueSuccessor: v560 #falseSuccessor: v561  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = MOVSXB value: v65|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v68|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = SHL (x: v6|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v689 
=== Usages ===
=== Predecessor ===
v562 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v689  <|@  <|@
f <@~|@floating>@ <|@
tid i690 <|@
result int[-143129|0xfffffffffffdd0e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: -143129
stableDimension: 0
stamp: i32 [-143129]
stampKind: i32
value: int[-143129|0xfffffffffffdd0e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i684 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v689 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v681 
=== Predecessor ===
v560 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-143129|0xfffffffffffdd0e7]] destination: B31 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:404) [bci: 76]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v566 
=== Usages ===
=== Predecessor ===
v562 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v566  <|@  <|@
f <@~|@floating>@ <|@
tid i363 <|@
result v70|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 180]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32 [-2147483647 - 2147483647]
=== Inputs ===
x: i894 
y: i892 
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i894 y: i892  <|@  <|@
f <@~|@floating>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 181]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i363 
y: i201 
=== Succesors ===
=== Usages ===
v566 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i363 y: i201  <|@  <|@
f <@*|@fixed>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v364 
=== Succesors ===
trueSuccessor: v564 
falseSuccessor: v565 
=== Usages ===
=== Predecessor ===
v561 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v364 #trueSuccessor: v564 #falseSuccessor: v565  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = SUB (x: v64|DWORD, ~y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v69|DWORD, y: v70|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v693 
=== Usages ===
=== Predecessor ===
v566 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v693  <|@  <|@
f <@~|@floating>@ <|@
tid i694 <|@
result int[-144153|0xfffffffffffdcce7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: -144153
stableDimension: 0
stamp: i32 [-144153]
stampKind: i32
value: int[-144153|0xfffffffffffdcce7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i684 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v693 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v681 
=== Predecessor ===
v564 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-144153|0xfffffffffffdcce7]] destination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:418) [bci: 212]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j860 
=== Usages ===
=== Predecessor ===
v566 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j860  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j860 <|@
result v71|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
=== Inputs ===
object: a345 
=== Succesors ===
next: j862 
=== Usages ===
v956 
=== Predecessor ===
v565 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a345 #next: j862  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j862 <|@
result v72|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
=== Inputs ===
object: a339 
=== Succesors ===
next: v868 
=== Usages ===
v957 
=== Predecessor ===
j860 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a339 #next: v868  <|@  <|@
f <@~|@floating>@ <|@
tid v956 <|@
result [v71|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j860 
index: - 
=== Succesors ===
=== Usages ===
v868 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j860 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j863 <|@
result v69|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i201 
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i201  <|@  <|@
f <@~|@floating>@ <|@
tid v957 <|@
result [v72|QWORD[*] + v69|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j862 
index: j863 
=== Succesors ===
=== Usages ===
v868 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j862 index: j863  <|@  <|@
f <@~|@floating>@ <|@
tid j867 <|@
result v73|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i892 
=== Succesors ===
=== Usages ===
v868 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i892  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v868 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}
descriptorName: byteArraycopy
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v956 v957 j867 
=== Succesors ===
next: v232 
=== Usages ===
=== Predecessor ===
j862 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v956 v957 j867 #next: v232  <|@  <|@
f <@*|@fixed>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getBytes(String.java:4730) [bci: 43]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v233 
=== Predecessor ===
v868 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[*] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[*] = MOVE input: v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v71|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v72|QWORD[*] + v69|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v73|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.getBytes(String.java:4728) [bci: 28]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v570 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v570  <|@  <|@
f <@~|@floating>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i887 
y: i76 
=== Succesors ===
=== Usages ===
v570 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i887 y: i76  <|@  <|@
f <@*|@fixed>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v217 
=== Succesors ===
trueSuccessor: v568 
falseSuccessor: v569 
=== Usages ===
=== Predecessor ===
v197 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v217 #trueSuccessor: v568 #falseSuccessor: v569  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v6|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v691 
=== Usages ===
=== Predecessor ===
v570 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v691  <|@  <|@
f <@~|@floating>@ <|@
tid i692 <|@
result int[-145177|0xfffffffffffdc8e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: -145177
stableDimension: 0
stamp: i32 [-145177]
stampKind: i32
value: int[-145177|0xfffffffffffdc8e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i684 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v681 
=== Predecessor ===
v568 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-145177|0xfffffffffffdc8e7]] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B40" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v574 
=== Usages ===
=== Predecessor ===
v570 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v574  <|@  <|@
f <@~|@floating>@ <|@
tid i236 <|@
result v74|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32 [0 - 1073741823] bits:00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i894 
y: i48 
=== Succesors ===
=== Usages ===
v223 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i894 y: i48  <|@  <|@
f <@~|@floating>@ <|@
tid i222 <|@
result v75|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i887 
y: i892 
=== Succesors ===
=== Usages ===
v223 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i887 y: i892  <|@  <|@
f <@~|@floating>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i236 
y: i222 
=== Succesors ===
=== Usages ===
v574 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i236 y: i222  <|@  <|@
f <@*|@fixed>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v223 
=== Succesors ===
trueSuccessor: v572 
falseSuccessor: v573 
=== Usages ===
=== Predecessor ===
v569 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v223 #trueSuccessor: v572 #falseSuccessor: v573  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = SHR value: v64|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = ADD (x: v6|DWORD, y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v75|DWORD, y: v74|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v695 
=== Usages ===
=== Predecessor ===
v574 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v695  <|@  <|@
f <@~|@floating>@ <|@
tid i696 <|@
result int[-146201|0xfffffffffffdc4e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: -146201
stableDimension: 0
stamp: i32 [-146201]
stampKind: i32
value: int[-146201|0xfffffffffffdc4e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i684 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v695 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v681 
=== Predecessor ===
v572 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-146201|0xfffffffffffdc4e7]] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B31" "B36" "B33" "B38" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i684 <|@
result v76|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32 [-146201 - -143129] bits:1...101110xxx0011100111
valueDescription: i32
=== Inputs ===
merge: v681 
values: i690 i692 i694 i696 
=== Succesors ===
=== Usages ===
v686 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v681 values: i690 i692 i694 i696  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v689 v691 v693 v695 
=== Succesors ===
next: v686 
=== Usages ===
i684 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v689 v691 v693 v695 #next: v686  <|@  <|@
f <@*|@fixed>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
stateBefore: ?189 
actionAndReason: i684 
speculation: j642 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v681 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?189 actionAndReason: i684 speculation: j642  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v76|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v76|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v6|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j869 
=== Usages ===
=== Predecessor ===
v574 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j869  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j869 <|@
result v77|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
=== Inputs ===
object: a345 
=== Succesors ===
next: j871 
=== Usages ===
j870 
=== Predecessor ===
v573 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a345 #next: j871  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j871 <|@
result v78|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
=== Inputs ===
object: a339 
=== Succesors ===
next: v230 
=== Usages ===
j872 
=== Predecessor ===
j869 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a339 #next: v230  <|@  <|@
f <@~|@floating>@ <|@
tid j870 <|@
result v79|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
=== Inputs ===
x: j869 
y: j225 
=== Succesors ===
=== Usages ===
v230 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j869 y: j225  <|@  <|@
f <@~|@floating>@ <|@
tid j910 <|@
result v80|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i887 
=== Succesors ===
=== Usages ===
j228 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i887  <|@  <|@
f <@~|@floating>@ <|@
tid j228 <|@
result v81|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64 [0 - 8589934590] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0
=== Inputs ===
x: j910 
y: i48 
=== Succesors ===
=== Usages ===
j237 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j910 y: i48  <|@  <|@
f <@~|@floating>@ <|@
tid j237 <|@
result v82|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64 [16 - 8589934606] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0
=== Inputs ===
x: j228 
y: j225 
=== Succesors ===
=== Usages ===
j872 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j228 y: j225  <|@  <|@
f <@~|@floating>@ <|@
tid j872 <|@
result v83|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
=== Inputs ===
x: j237 
y: j871 
=== Succesors ===
=== Usages ===
v230 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j237 y: j871  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
killedLocations: [Array: byte]
locationIdentity: Array: byte
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
runtimeCheckedCPUFeatures: [null]
stamp: void
=== Inputs ===
stateAfter: - 
lastLocationAccess: - 
src: j870 
dst: j872 
len: i892 
=== Succesors ===
next: v234 
=== Usages ===
=== Predecessor ===
j871 >@ <|@
instruction <@StringLatin1Inflate|@jdk.graal.compiler.replacements.StringLatin1InflateNode>@ stateAfter: - lastLocationAccess: - src: j870 dst: j872 len: i892 #next: v234  <|@  <|@
f <@*|@fixed>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getBytes(String.java:4730) [bci: 43]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v233 
=== Predecessor ===
v230 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[*] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[*] = MOVE input: v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[*] = LEA address: [v77|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = SHL value: v80|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = LEA address: [v81|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[*] = ADD (x: v82|QWORD, y: v78|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v79|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v83|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B34" "B40" 
    successors "B57" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.getBytes(String.java:4730) [bci: 43]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v232 v234 
=== Succesors ===
next: i897 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v232 v234 #next: i897  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i897 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:589) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v922 
lastLocationAccess: - 
=== Succesors ===
next: v382 
=== Usages ===
i101 
=== Predecessor ===
v233 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v922 lastLocationAccess: - #next: v382  <|@  <|@
f <@~|@floating>@ <|@
tid i101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:589) [bci: 39]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i108 
y: i897 
=== Succesors ===
=== Usages ===
v382 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i108 y: i897  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractStringBuilder.count
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:589) [bci: 40]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v922 
lastLocationAccess: - 
value: i101 
stateAfter: - 
=== Succesors ===
next: v246 
=== Usages ===
=== Predecessor ===
i897 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v922 lastLocationAccess: - value: i101 stateAfter: - #next: v246  <|@  <|@
f <@*|@fixed>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
v382 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v0|QWORD[.] + 12], y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 16]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v653 
=== Usages ===
=== Predecessor ===
v582 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v653  <|@  <|@
f <@~|@floating>@ <|@
tid j655 <|@
result long[5140|0x1414] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: 5140
stableDimension: 0
stamp: i64 [5140]
stampKind: i64
value: long[5140|0x1414]
=== Inputs ===
=== Succesors ===
=== Usages ===
j644 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i654 <|@
result int[-148243|0xfffffffffffdbced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: -148243
stableDimension: 0
stamp: i32 [-148243]
stampKind: i32
value: int[-148243|0xfffffffffffdbced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i643 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v653 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v639 
=== Predecessor ===
v581 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-148243|0xfffffffffffdbced], long[5140|0x1414]] destination: B42 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B44" "B60" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:628) [bci: 25]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v533 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v533  <|@  <|@
f <@~|@floating>@ <|@
tid v911 <|@
result meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:628) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v912 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v912 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:628) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v885 
y: v911 
=== Succesors ===
=== Usages ===
v533 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v885 y: v911  <|@  <|@
f <@*|@fixed>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:628) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v912 
=== Succesors ===
trueSuccessor: v530 
falseSuccessor: v532 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v912 #trueSuccessor: v530 #falseSuccessor: v532  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B60 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:628) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i898 
=== Usages ===
=== Predecessor ===
v533 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i898  <|@  <|@
f <@~|@floating>@ <|@
tid v928 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i898 i906 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i898 <|@
result v84|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.length(AbstractStringBuilder.java:195) [bci: 1]
at java.lang.StringBuilder.length(StringBuilder.java:91) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:610) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v928 
lastLocationAccess: - 
=== Succesors ===
next: v52 
=== Usages ===
i29 i34 ?67 
=== Predecessor ===
v530 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v928 lastLocationAccess: - #next: v52  <|@  <|@
tid ?93 <|@
d <@d|@=== Debug Properties ===
bci: 37
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(CharSequence)>
localsSize: 2
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 629
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?244 
=== Succesors ===
=== Usages ===
?67 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?244  <|@  <|@
tid ?67 <|@
d <@d|@=== Debug Properties ===
bci: 21
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(AbstractStringBuilder)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 611
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?93 
values: a1 a2 i898 
=== Succesors ===
=== Usages ===
?66 ?634 ?635 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?93 values: a1 a2 i898  <|@  <|@
f <@~|@floating>@ <|@
tid i29 <|@
result v85|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i887 
y: i898 
=== Succesors ===
=== Usages ===
i47 v444 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i887 y: i898  <|@  <|@
f <@~|@floating>@ <|@
tid i47 <|@
result v86|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 13]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i29 
y: i46 
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i29 y: i46  <|@  <|@
f <@~|@floating>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i47 
y: i48 
=== Succesors ===
=== Usages ===
v52 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i47 y: i48  <|@  <|@
f <@*|@fixed>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: PROFILED designatedSuccessorProbability: 0.9102668972297561
stamp: void
=== Inputs ===
condition: v49 
=== Succesors ===
trueSuccessor: v51 
falseSuccessor: v50 
=== Usages ===
=== Predecessor ===
i898 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v49 #trueSuccessor: v51 #falseSuccessor: v50  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = ADD (x: v84|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = SUB (x: v85|DWORD, ~y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v86|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599636671466445615
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v63 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v63  <|@  <|@
f <@*|@fixed>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
v51 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|QWORD[.]] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4584865046447166825
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i54 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i54  <|@  <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Ljava/lang/AbstractStringBuilder;, resolved>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<AbstractStringBuilder.newCapacity(int)>
=== Inputs ===
arguments: a1 i29 
=== Succesors ===
=== Usages ===
i54 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i29  <|@  <|@
tid ?634 <|@
d <@d|@=== Debug Properties ===
bci: 24
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 243
stackSize: 2
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?67 
values: a1 a389 a1 
=== Succesors ===
=== Usages ===
i54 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?67 values: a1 a389 a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i54 <|@
result v87|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 24
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
polymorphic: false
stamp: i32
targetMethod: Direct#AbstractStringBuilder.newCapacity
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v444 
stateDuring: ?634 
=== Succesors ===
next: i899 
=== Usages ===
i57 
=== Predecessor ===
v50 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v444 stateDuring: ?634 #next: i899  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i899 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 28]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v924 
lastLocationAccess: - 
=== Succesors ===
next: a59 
=== Usages ===
i446 
=== Predecessor ===
i54 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v924 lastLocationAccess: - #next: a59  <|@  <|@
f <@~|@floating>@ <|@
tid i446 <|@
result v88|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 28]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i899 
=== Succesors ===
=== Usages ===
i57 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i899  <|@  <|@
f <@~|@floating>@ <|@
tid i57 <|@
result v89|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i54 
y: i446 
=== Succesors ===
=== Usages ===
v447 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i54 y: i446  <|@  <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
referencedType: [null]
returnStamp: a# byte[]
signature: [UnresolvedJavaType<[B>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<Arrays.copyOf(byte[], int)>
=== Inputs ===
arguments: a389 i57 
=== Succesors ===
=== Usages ===
a59 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a389 i57  <|@  <|@
tid ?635 <|@
d <@d|@=== Debug Properties ===
bci: 32
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 242
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?67 
values: a1 
=== Succesors ===
=== Usages ===
a59 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?67 values: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a59 <|@
result v90|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 32
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
polymorphic: false
stamp: a# byte[]
targetMethod: Direct#Arrays.copyOf
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v447 
stateDuring: ?635 
=== Succesors ===
next: v700 
=== Usages ===
a254 a448 v702 
=== Predecessor ===
i899 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v447 stateDuring: ?635 #next: v700  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
precise: true
stamp: void
=== Inputs ===
address: v923 
value: - 
stateBefore: - 
=== Succesors ===
next: v449 
=== Usages ===
=== Predecessor ===
a59 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v923 value: - stateBefore: - #next: v449  <|@  <|@
f <@~|@floating>@ <|@
tid a448 <|@
result v93|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: Compress
stamp: n# byte[]
=== Inputs ===
value: a59 
=== Succesors ===
=== Usages ===
v449 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a59  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractStringBuilder.value
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v923 
lastLocationAccess: - 
value: a448 
stateAfter: - 
=== Succesors ===
next: v702 
=== Usages ===
=== Predecessor ===
v700 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v923 lastLocationAccess: - value: a448 stateAfter: - #next: v702  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v702 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
precise: false
stamp: void
=== Inputs ===
address: v923 
value: a59 
object: a1 
=== Succesors ===
next: v65 
=== Usages ===
=== Predecessor ===
v449 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v923 value: a59 object: a1 #next: v65  <|@  <|@
f <@*|@fixed>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
v702 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v85|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v0|QWORD[.] v9|QWORD[.] 
locals: v0|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:24, 21, 37, 2, 2] <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v88|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = SHL (x: v87|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v89|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v0|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:32, 21, 37, 2, 2] <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v91|QWORD, temp2: v92|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr   -1  <|@ instruction v93|DWORD[_] = COMPRESSPOINTER (input: v90|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v93|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v90|QWORD[.]) {temp: v94|QWORD, temp2: v95|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v90|QWORD[.]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" "B58" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a254 <|@
result v96|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: a# byte[]
valueDescription: a java.lang.Object
=== Inputs ===
merge: v64 
values: a389 a59 
=== Succesors ===
=== Usages ===
v930 j875 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v64 values: a389 a59  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v63 v65 
=== Succesors ===
next: a900 
=== Usages ===
a254 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v63 v65 #next: a900  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a900 <|@
result v97|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 9]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v919 
lastLocationAccess: - 
=== Succesors ===
next: i901 
=== Usages ===
a405 v929 
=== Predecessor ===
v64 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v919 lastLocationAccess: - #next: i901  <|@  <|@
tid ?66 <|@
d <@d|@=== Debug Properties ===
bci: 38
bytecode: return
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 245
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?67 
=== Succesors ===
=== Usages ===
v667 i901 i902 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?67  <|@  <|@
f <@~|@floating>@ <|@
tid v929 <|@
result [v97|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a900 
=== Succesors ===
=== Usages ===
i901 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a900  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i901 <|@
result v98|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-104203|0xfffffffffffe68f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 134]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?66 
guard: - 
address: v929 
lastLocationAccess: - 
=== Succesors ===
next: i902 
=== Usages ===
v466 
=== Predecessor ===
a900 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?66 guard: - address: v929 lastLocationAccess: - #next: i902  <|@  <|@
f <@~|@floating>@ <|@
tid v930 <|@
result [v96|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a254 
index: - 
=== Succesors ===
=== Usages ===
i902 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a254 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i902 <|@
result v99|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-104459|0xfffffffffffe67f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 175]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?66 
guard: - 
address: v930 
lastLocationAccess: - 
=== Succesors ===
next: i903 
=== Usages ===
i419 
=== Predecessor ===
i901 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?66 guard: - address: v930 lastLocationAccess: - #next: i903  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i903 <|@
result v100|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1739) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:612) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v924 
lastLocationAccess: - 
=== Succesors ===
next: i904 
=== Usages ===
i398 v460 
=== Predecessor ===
i902 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v924 lastLocationAccess: - #next: i904  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i904 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.getCoder(AbstractStringBuilder.java:1689) [bci: 7]
at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1739) [bci: 11]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:612) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v921 
lastLocationAccess: - 
=== Succesors ===
next: v611 
=== Usages ===
v460 
=== Predecessor ===
i903 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v921 lastLocationAccess: - #next: v611  <|@  <|@
f <@~|@floating>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1739) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:612) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i903 
y: i904 
=== Succesors ===
=== Usages ===
v611 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i903 y: i904  <|@  <|@
f <@*|@fixed>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1739) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:612) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v460 
=== Succesors ===
trueSuccessor: v609 
falseSuccessor: v610 
=== Usages ===
=== Predecessor ===
i904 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v460 #trueSuccessor: v609 #falseSuccessor: v610  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v96|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v97|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v98|DWORD = MOV input: [v97|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v99|DWORD = MOV input: [v96|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2] <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v100|DWORD, y: [v1|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B58 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1742) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:612) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i905 
=== Usages ===
=== Predecessor ===
v611 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i905  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i905 <|@
result v101|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v922 
lastLocationAccess: - 
=== Succesors ===
next: v615 
=== Usages ===
i77 i34 
=== Predecessor ===
v609 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v922 lastLocationAccess: - #next: v615  <|@  <|@
f <@~|@floating>@ <|@
tid i398 <|@
result v102|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1739) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:612) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i903 
=== Succesors ===
=== Usages ===
i79 i77 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i903  <|@  <|@
f <@~|@floating>@ <|@
tid i77 <|@
result v103|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 16]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i905 
y: i398 
=== Succesors ===
=== Usages ===
j876 v411 v420 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i905 y: i398  <|@  <|@
f <@~|@floating>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 45]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i77 
y: i76 
=== Succesors ===
=== Usages ===
v615 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i77 y: i76  <|@  <|@
f <@*|@fixed>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v411 
=== Succesors ===
trueSuccessor: v613 
falseSuccessor: v614 
=== Usages ===
=== Predecessor ===
i905 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v411 #trueSuccessor: v613 #falseSuccessor: v614  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = MOVSXB value: v100|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v102|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = SHL (x: v101|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v103|DWORD, y: v103|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v670 
=== Usages ===
=== Predecessor ===
v615 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v670  <|@  <|@
f <@~|@floating>@ <|@
tid i671 <|@
result int[-156697|0xfffffffffffd9be7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: -156697
stableDimension: 0
stamp: i32 [-156697]
stampKind: i32
value: int[-156697|0xfffffffffffd9be7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i665 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v670 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v662 
=== Predecessor ===
v613 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-156697|0xfffffffffffd9be7], long[0|0x0]] destination: B49 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:404) [bci: 76]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i906 
=== Usages ===
=== Predecessor ===
v615 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i906  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i906 <|@
result v104|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 18]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v928 
lastLocationAccess: - 
=== Succesors ===
next: v619 
=== Usages ===
i79 
=== Predecessor ===
v614 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v928 lastLocationAccess: - #next: v619  <|@  <|@
f <@~|@floating>@ <|@
tid i79 <|@
result v105|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 22]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i906 
y: i398 
=== Succesors ===
=== Usages ===
j880 v413 v466 i419 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i906 y: i398  <|@  <|@
f <@~|@floating>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 89]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i79 
y: i76 
=== Succesors ===
=== Usages ===
v619 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i79 y: i76  <|@  <|@
f <@*|@fixed>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v413 
=== Succesors ===
trueSuccessor: v617 
falseSuccessor: v618 
=== Usages ===
=== Predecessor ===
i906 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v413 #trueSuccessor: v617 #falseSuccessor: v618  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v102|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = SHL (x: v104|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v105|DWORD, y: v105|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v675 
=== Usages ===
=== Predecessor ===
v619 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v675  <|@  <|@
f <@~|@floating>@ <|@
tid i676 <|@
result int[-157721|0xfffffffffffd97e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: -157721
stableDimension: 0
stamp: i32 [-157721]
stampKind: i32
value: int[-157721|0xfffffffffffd97e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i665 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v675 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v662 
=== Predecessor ===
v617 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-157721|0xfffffffffffd97e7], long[0|0x0]] destination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:409) [bci: 120]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v623 
=== Usages ===
=== Predecessor ===
v619 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v623  <|@  <|@
f <@~|@floating>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 140]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i901 
y: i79 
=== Succesors ===
=== Usages ===
v623 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i901 y: i79  <|@  <|@
f <@*|@fixed>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v466 
=== Succesors ===
trueSuccessor: v621 
falseSuccessor: v622 
=== Usages ===
=== Predecessor ===
v618 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v466 #trueSuccessor: v621 #falseSuccessor: v622  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v105|DWORD, y: v98|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v677 
=== Usages ===
=== Predecessor ===
v623 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v677  <|@  <|@
f <@~|@floating>@ <|@
tid i678 <|@
result int[-158745|0xfffffffffffd93e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: -158745
stableDimension: 0
stamp: i32 [-158745]
stampKind: i32
value: int[-158745|0xfffffffffffd93e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i665 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v677 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v662 
=== Predecessor ===
v621 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-158745|0xfffffffffffd93e7], long[0|0x0]] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v622 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 171]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v627 
=== Usages ===
=== Predecessor ===
v623 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v627  <|@  <|@
f <@~|@floating>@ <|@
tid i419 <|@
result v106|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 180]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i902 
y: i79 
=== Succesors ===
=== Usages ===
v420 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i902 y: i79  <|@  <|@
f <@~|@floating>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 181]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i419 
y: i77 
=== Succesors ===
=== Usages ===
v627 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i419 y: i77  <|@  <|@
f <@*|@fixed>@ <|@
tid v627 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v420 
=== Succesors ===
trueSuccessor: v625 
falseSuccessor: v626 
=== Usages ===
=== Predecessor ===
v622 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v420 #trueSuccessor: v625 #falseSuccessor: v626  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = SUB (x: v99|DWORD, ~y: v105|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v103|DWORD, y: v106|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v679 
=== Usages ===
=== Predecessor ===
v627 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v679  <|@  <|@
f <@~|@floating>@ <|@
tid i680 <|@
result int[-159769|0xfffffffffffd8fe7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: -159769
stableDimension: 0
stamp: i32 [-159769]
stampKind: i32
value: int[-159769|0xfffffffffffd8fe7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i665 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v662 
=== Predecessor ===
v625 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-159769|0xfffffffffffd8fe7], long[0|0x0]] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:418) [bci: 212]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j873 
=== Usages ===
=== Predecessor ===
v627 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j873  <|@  <|@
f <@~|@floating>@ <|@
tid a405 <|@
result v107|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 9]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a900 
=== Succesors ===
=== Usages ===
j873 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a900  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j873 <|@
result v108|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
=== Inputs ===
object: a405 
=== Succesors ===
next: j875 
=== Usages ===
v958 
=== Predecessor ===
v626 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a405 #next: j875  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j875 <|@
result v109|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
=== Inputs ===
object: a254 
=== Succesors ===
next: v881 
=== Usages ===
v959 
=== Predecessor ===
j873 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a254 #next: v881  <|@  <|@
f <@~|@floating>@ <|@
tid v958 <|@
result [v108|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j873 
index: - 
=== Succesors ===
=== Usages ===
v881 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j873 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j876 <|@
result v103|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i77 
=== Succesors ===
=== Usages ===
v959 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i77  <|@  <|@
f <@~|@floating>@ <|@
tid v959 <|@
result [v109|QWORD[*] + v103|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j875 
index: j876 
=== Succesors ===
=== Usages ===
v881 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j875 index: j876  <|@  <|@
f <@~|@floating>@ <|@
tid j880 <|@
result v110|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i79 
=== Succesors ===
=== Usages ===
v881 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i79  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v881 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}
descriptorName: byteArraycopy
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v958 v959 j880 
=== Succesors ===
next: v434 
=== Usages ===
=== Predecessor ===
j875 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v958 v959 j880 #next: v434  <|@  <|@
f <@~|@floating>@ <|@
tid i34 <|@
result v111|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:614) [bci: 51]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i898 
y: i905 
=== Succesors ===
=== Usages ===
v434 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i898 y: i905  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractStringBuilder.count
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:614) [bci: 52]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v922 
lastLocationAccess: - 
value: i34 
stateAfter: - 
=== Succesors ===
next: i907 
=== Usages ===
=== Predecessor ===
v881 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v922 lastLocationAccess: - value: i34 stateAfter: - #next: i907  <|@  <|@
f <@~|@floating>@ <|@
tid v931 <|@
result [v0|QWORD[.] + 17] <|@
d <@d|@=== Debug Properties ===
displacement: 17
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i907 v443 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i907 <|@
result v112|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8 [0 - 1] bits:0000000x
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.maybeLatin1
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 57]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i8 [0 - 1] bits:0000000x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v931 
lastLocationAccess: - 
=== Succesors ===
next: i908 
=== Usages ===
i438 
=== Predecessor ===
v434 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v931 lastLocationAccess: - #next: i908  <|@  <|@
f <@~|@floating>@ <|@
tid v932 <|@
result [v1|QWORD[.] + 17] <|@
d <@d|@=== Debug Properties ===
displacement: 17
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i908 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i908 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8 [0 - 1] bits:0000000x
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.maybeLatin1
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 61]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i8 [0 - 1] bits:0000000x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v932 
lastLocationAccess: - 
=== Succesors ===
next: v443 
=== Usages ===
i441 
=== Predecessor ===
i907 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v932 lastLocationAccess: - #next: v443  <|@  <|@
f <@~|@floating>@ <|@
tid i438 <|@
result v112|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 57]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
resultBits: 32
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
value: i907 
=== Succesors ===
=== Usages ===
i39 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i907  <|@  <|@
f <@~|@floating>@ <|@
tid i441 <|@
result v113|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 61]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
resultBits: 32
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
value: i908 
=== Succesors ===
=== Usages ===
i39 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i908  <|@  <|@
f <@~|@floating>@ <|@
tid i39 <|@
result v114|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 64]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
x: i438 
y: i441 
=== Succesors ===
=== Usages ===
i442 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i438 y: i441  <|@  <|@
f <@~|@floating>@ <|@
tid i442 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 65]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
resultBits: 8
stamp: i8 [0 - 1] bits:0000000x
=== Inputs ===
value: i39 
=== Succesors ===
=== Usages ===
v443 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: i39  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractStringBuilder.maybeLatin1
location: AbstractStringBuilder.maybeLatin1
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 65]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v931 
lastLocationAccess: - 
value: i442 
stateAfter: - 
=== Succesors ===
next: v247 
=== Usages ===
=== Predecessor ===
i908 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v931 lastLocationAccess: - value: i442 stateAfter: - #next: v247  <|@  <|@
f <@*|@fixed>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
v443 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[.] = UNCOMPRESSPOINTER (input: v97|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[*] = MOVE input: v107|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[*] = MOVE input: v96|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v110|QWORD = MOVE input: v105|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v108|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v109|QWORD[*] + v103|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v110|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = ADD (x: v84|DWORD, y: v101|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v111|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = MOVZXB input: [v0|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = MOVZXB input: [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = OR (x: v112|DWORD, y: v113|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 17], y: reinterpret: v114|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B41" "B56" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v246 v247 
=== Succesors ===
next: v9 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v246 v247 #next: v9  <|@  <|@
f <@*|@fixed>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 5]
stamp: void
=== Inputs ===
memoryMap: - 
result: a1 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v245 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a1  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1739) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:612) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v672 
=== Usages ===
=== Predecessor ===
v611 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v672  <|@  <|@
f <@~|@floating>@ <|@
tid j674 <|@
result long[3220|0xc94] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: 3220
stableDimension: 0
stamp: i64 [3220]
stampKind: i64
value: long[3220|0xc94]
=== Inputs ===
=== Succesors ===
=== Usages ===
j666 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i673 <|@
result int[-155667|0xfffffffffffd9fed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: -155667
stableDimension: 0
stamp: i32 [-155667]
stampKind: i32
value: int[-155667|0xfffffffffffd9fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i665 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v672 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v662 
=== Predecessor ===
v610 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-155667|0xfffffffffffd9fed], long[3220|0xc94]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B49" "B58" "B51" "B53" "B55" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i665 <|@
result v115|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32 [-159769 - -155667] bits:1...101100xxx111110x1x1
valueDescription: i32
=== Inputs ===
merge: v662 
values: i671 i673 i676 i678 i680 
=== Succesors ===
=== Usages ===
v667 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v662 values: i671 i673 i676 i678 i680  <|@  <|@
f <@~|@floating>@ <|@
tid j666 <|@
result v116|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64 [0 - 3220] bits:0...0xx00x00x0x00
valueDescription: i64
=== Inputs ===
merge: v662 
values: j642 j674 j642 j642 j642 
=== Succesors ===
=== Usages ===
v667 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v662 values: j642 j674 j642 j642 j642  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v670 v672 v675 v677 v679 
=== Succesors ===
next: v667 
=== Usages ===
i665 j666 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v670 v672 v675 v677 v679 #next: v667  <|@  <|@
f <@*|@fixed>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
stateBefore: ?66 
actionAndReason: i665 
speculation: j666 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v662 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?66 actionAndReason: i665 speculation: j666  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v115|DWORD, v116|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v115|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v116|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:628) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v650 
=== Usages ===
=== Predecessor ===
v533 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v650  <|@  <|@
f <@~|@floating>@ <|@
tid j652 <|@
result long[660|0x294] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j644 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i651 <|@
result int[-98355|0xfffffffffffe7fcd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: -98355
stableDimension: 0
stamp: i32 [-98355]
stampKind: i32
value: int[-98355|0xfffffffffffe7fcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i643 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v639 
=== Predecessor ===
v532 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-98355|0xfffffffffffe7fcd], long[660|0x294]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B42" "B19" "B21" "B23" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i643 <|@
result v117|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32 [-151321 - -98355] bits:1...1xxxx11xxxx11x0x1x1
valueDescription: i32
=== Inputs ===
merge: v639 
values: i651 i654 i657 i659 i661 
=== Succesors ===
=== Usages ===
v645 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v639 values: i651 i654 i657 i659 i661  <|@  <|@
f <@~|@floating>@ <|@
tid j644 <|@
result v118|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64 [0 - 5140] bits:0...0x0xx0x00x0x00
valueDescription: i64
=== Inputs ===
merge: v639 
values: j652 j655 j642 j642 j642 
=== Succesors ===
=== Usages ===
v645 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v639 values: j652 j655 j642 j642 j642  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v650 v653 v656 v658 v660 
=== Succesors ===
next: v645 
=== Usages ===
i643 j644 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v650 v653 v656 v658 v660 #next: v645  <|@  <|@
f <@*|@fixed>@ <|@
tid v645 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i643 
speculation: j644 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v639 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i643 speculation: j644  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v117|DWORD, v118|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v117|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v118|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@24799e10 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVSXB value: v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHR (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.6362310003571869 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B43 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v11|DWORD = MOV input: [v10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVSXB value: v12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = SHR (x: v11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = ADD (x: v6|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = SUB (x: v15|DWORD, ~y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v16|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603391649089349823
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B2" "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v12|DWORD, y: v5|DWORD) trueDestinationProbability: 0.998717015375415 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4603898526589647782
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" "B35" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v6|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v62|DWORD = MOV input: [v61|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr   -1  <|@ instruction v63|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v6|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v64|DWORD = MOV input: [v63|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v63|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v61|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v65|DWORD, y: [v1|QWORD[.] + 16]) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B35 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = MOVSXB value: v65|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v68|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = SHL (x: v6|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = SUB (x: v64|DWORD, ~y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v69|DWORD, y: v70|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[*] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[*] = MOVE input: v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v71|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v72|QWORD[*] + v69|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v73|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B34" "B40" 
    successors "B57" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v0|QWORD[.] + 12], y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B44" "B60" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B60 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = ADD (x: v84|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = SUB (x: v85|DWORD, ~y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v86|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599636671466445615
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|QWORD[.]] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" "B58" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr   -1  <|@ instruction [v96|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v97|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v98|DWORD = MOV input: [v97|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v99|DWORD = MOV input: [v96|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2] <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v100|DWORD, y: [v1|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B58 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = MOVSXB value: v100|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v102|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = SHL (x: v101|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v103|DWORD, y: v103|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v102|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = SHL (x: v104|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v105|DWORD, y: v105|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v105|DWORD, y: v98|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = SUB (x: v99|DWORD, ~y: v105|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v103|DWORD, y: v106|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[.] = UNCOMPRESSPOINTER (input: v97|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[*] = MOVE input: v107|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[*] = MOVE input: v96|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v110|QWORD = MOVE input: v105|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v108|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v109|QWORD[*] + v103|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v110|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = ADD (x: v84|DWORD, y: v101|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v111|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = MOVZXB input: [v0|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = MOVZXB input: [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = OR (x: v112|DWORD, y: v113|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 17], y: reinterpret: v114|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B41" "B56" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B42" 
    xhandlers
    flags 
    probability 4588388498606785847
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SHL (x: v15|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SUB (x: v17|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = SHL (x: v20|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = ADD (x: v19|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = CMOVE (falseValue: v18|DWORD, ~trueValue: v21|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = DEC value: v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B42 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4588388498606785847
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = SAR (x: v23|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = SHL (x: v25|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v26|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4588388216090718820
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA address: [v40|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = AND x: v41|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = ADD (x: v42|QWORD, y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v43|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B16" 
    xhandlers
    flags 
    probability 4588305942140169576
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v43|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v39|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v39|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v39|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v39|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v39|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v39|QWORD + 12], y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA address: [v42|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v45|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4588224490929125824
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617985760531553049
    begin_IR
      LIR
      nr   -1  <|@ instruction [v46|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v42|QWORD, y: v46|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617922763110511397
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v39|QWORD + v46|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = LEA address: [v46|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v47|QWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588224490929125825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588305942140169577
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v49|QWORD[.]] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v26|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v51|DWORD, y: v51|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v51|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v51|DWORD, y: v26|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[*] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[*] = MOVE input: v50|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOVE input: v51|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v52|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v53|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v50|QWORD[.]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B8" "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588388498606785848
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v56|QWORD, temp2: v57|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[_] = COMPRESSPOINTER (input: v55|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v58|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v55|QWORD[.]) {temp: v59|QWORD, temp2: v60|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4584865046447166825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v85|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v0|QWORD[.] v9|QWORD[.] 
locals: v0|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:24, 21, 37, 2, 2] <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v88|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = SHL (x: v87|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v89|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v0|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:32, 21, 37, 2, 2] <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v91|QWORD, temp2: v92|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr   -1  <|@ instruction v93|DWORD[_] = COMPRESSPOINTER (input: v90|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v93|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v90|QWORD[.]) {temp: v94|QWORD, temp2: v95|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v90|QWORD[.]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4560668027509911113
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v6|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:18, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v6|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B40" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = SHR value: v64|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = ADD (x: v6|DWORD, y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v75|DWORD, y: v74|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[*] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[*] = MOVE input: v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[*] = LEA address: [v77|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = SHL value: v80|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = LEA address: [v81|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[*] = ADD (x: v82|QWORD, y: v78|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v79|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v83|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4558404756106723069
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v27|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v44|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B17" 
    xhandlers
    flags 
    probability 4558352100778371553
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v39|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4521739169494778405
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA address: [v29|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = AND x: v30|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = ADD (x: v31|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v32|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4521692882062356696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v31|QWORD + v28|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v31|QWORD + v28|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v31|QWORD + v28|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v28|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v28|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v28|QWORD + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 4521739169494778405
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[*] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[*] = MOVE input: v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v37|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v38|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v29|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v36|QWORD[.]] destination: B8 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4491510020210992795
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v27|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v33|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v33|QWORD[.]] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-151321|0xfffffffffffdb0e7], long[0|0x0]] destination: B23 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-149273|0xfffffffffffdb8e7], long[0|0x0]] destination: B19 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-145177|0xfffffffffffdc8e7]] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-159769|0xfffffffffffd8fe7], long[0|0x0]] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-146201|0xfffffffffffdc4e7]] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-148243|0xfffffffffffdbced], long[5140|0x1414]] destination: B42 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-150297|0xfffffffffffdb4e7], long[0|0x0]] destination: B21 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-157721|0xfffffffffffd97e7], long[0|0x0]] destination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-155667|0xfffffffffffd9fed], long[3220|0xc94]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-98355|0xfffffffffffe7fcd], long[660|0x294]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B42" "B19" "B21" "B23" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v117|DWORD, v118|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v117|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v118|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-144153|0xfffffffffffdcce7]] destination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-158745|0xfffffffffffd93e7], long[0|0x0]] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-143129|0xfffffffffffdd0e7]] destination: B31 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B31" "B36" "B33" "B38" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v76|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v76|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v6|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-156697|0xfffffffffffd9be7], long[0|0x0]] destination: B49 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B49" "B58" "B51" "B53" "B55" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v115|DWORD, v116|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v115|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v116|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #89         // append:(java.lang.CharSequence)java.lang.StringBuilder
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@24799e10 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVSXB value: v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHR (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.6362310003571869 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B43 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v11|DWORD = MOV input: [v10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVSXB value: v12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = SHR (x: v11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = ADD (x: v6|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = SUB (x: v15|DWORD, ~y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v16|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603391649089349823
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B2" "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v12|DWORD, y: v5|DWORD) trueDestinationProbability: 0.998717015375415 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4603898526589647782
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" "B35" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v6|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v62|DWORD = MOV input: [v61|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr   -1  <|@ instruction v63|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v6|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v64|DWORD = MOV input: [v63|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v63|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v61|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v65|DWORD, y: [v1|QWORD[.] + 16]) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B35 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = MOVSXB value: v65|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v68|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = SHL (x: v6|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = SUB (x: v64|DWORD, ~y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v69|DWORD, y: v70|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[*] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[*] = MOVE input: v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v71|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v72|QWORD[*] + v69|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v73|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B34" "B40" 
    successors "B57" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v0|QWORD[.] + 12], y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B44" "B60" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B60 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = ADD (x: v84|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = SUB (x: v85|DWORD, ~y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v86|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599636671466445615
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|QWORD[.]] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" "B58" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr   -1  <|@ instruction [v96|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v97|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v98|DWORD = MOV input: [v97|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v99|DWORD = MOV input: [v96|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2] <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v100|DWORD, y: [v1|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B58 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = MOVSXB value: v100|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v102|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = SHL (x: v101|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v103|DWORD, y: v103|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v102|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = SHL (x: v104|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v105|DWORD, y: v105|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v105|DWORD, y: v98|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = SUB (x: v99|DWORD, ~y: v105|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v103|DWORD, y: v106|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[.] = UNCOMPRESSPOINTER (input: v97|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[*] = MOVE input: v107|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[*] = MOVE input: v96|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v110|QWORD = MOVE input: v105|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v108|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v109|QWORD[*] + v103|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v110|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = ADD (x: v84|DWORD, y: v101|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v111|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = MOVZXB input: [v0|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = MOVZXB input: [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = OR (x: v112|DWORD, y: v113|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 17], y: reinterpret: v114|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B41" "B56" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B42" 
    xhandlers
    flags 
    probability 4588388498606785847
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SHL (x: v15|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SUB (x: v17|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = SHL (x: v20|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = ADD (x: v19|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = CMOVE (falseValue: v18|DWORD, ~trueValue: v21|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = DEC value: v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B42 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4588388498606785847
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = SAR (x: v23|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = SHL (x: v25|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v26|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4588388216090718820
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA address: [v40|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = AND x: v41|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = ADD (x: v42|QWORD, y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v43|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B16" 
    xhandlers
    flags 
    probability 4588305942140169576
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v43|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v39|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v39|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v39|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v39|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v39|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v39|QWORD + 12], y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA address: [v42|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v45|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4588224490929125824
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617985760531553049
    begin_IR
      LIR
      nr   -1  <|@ instruction [v46|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v42|QWORD, y: v46|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617922763110511397
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v39|QWORD + v46|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = LEA address: [v46|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v47|QWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588224490929125825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588305942140169577
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v49|QWORD[.]] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v26|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v51|DWORD, y: v51|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v51|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v51|DWORD, y: v26|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[*] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[*] = MOVE input: v50|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOVE input: v51|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v52|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v53|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v50|QWORD[.]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B8" "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588388498606785848
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v56|QWORD, temp2: v57|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[_] = COMPRESSPOINTER (input: v55|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v58|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v55|QWORD[.]) {temp: v59|QWORD, temp2: v60|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4584865046447166825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v85|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v0|QWORD[.] v9|QWORD[.] 
locals: v0|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:24, 21, 37, 2, 2] <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v88|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = SHL (x: v87|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v89|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v0|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:32, 21, 37, 2, 2] <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v91|QWORD, temp2: v92|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr   -1  <|@ instruction v93|DWORD[_] = COMPRESSPOINTER (input: v90|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v93|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v90|QWORD[.]) {temp: v94|QWORD, temp2: v95|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v90|QWORD[.]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4560668027509911113
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v6|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:18, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v6|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B40" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = SHR value: v64|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = ADD (x: v6|DWORD, y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v75|DWORD, y: v74|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[*] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[*] = MOVE input: v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[*] = LEA address: [v77|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = SHL value: v80|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = LEA address: [v81|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[*] = ADD (x: v82|QWORD, y: v78|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v79|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v83|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4558404756106723069
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v119|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v119|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v44|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B17" 
    xhandlers
    flags 
    probability 4558352100778371553
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v39|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4521739169494778405
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA address: [v29|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = AND x: v30|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = ADD (x: v31|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v32|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4521692882062356696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v31|QWORD + v28|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v31|QWORD + v28|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v31|QWORD + v28|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v28|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v28|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v28|QWORD + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 4521739169494778405
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[*] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[*] = MOVE input: v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v37|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v38|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v29|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v36|QWORD[.]] destination: B8 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4491510020210992795
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v120|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v120|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v33|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v33|QWORD[.]] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-151321|0xfffffffffffdb0e7], long[0|0x0]] destination: B23 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-149273|0xfffffffffffdb8e7], long[0|0x0]] destination: B19 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-145177|0xfffffffffffdc8e7]] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-159769|0xfffffffffffd8fe7], long[0|0x0]] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-146201|0xfffffffffffdc4e7]] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-148243|0xfffffffffffdbced], long[5140|0x1414]] destination: B42 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-150297|0xfffffffffffdb4e7], long[0|0x0]] destination: B21 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-157721|0xfffffffffffd97e7], long[0|0x0]] destination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-155667|0xfffffffffffd9fed], long[3220|0xc94]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-98355|0xfffffffffffe7fcd], long[660|0x294]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B42" "B19" "B21" "B23" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v117|DWORD, v118|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v117|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v118|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-144153|0xfffffffffffdcce7]] destination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-158745|0xfffffffffffd93e7], long[0|0x0]] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-143129|0xfffffffffffdd0e7]] destination: B31 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B31" "B36" "B33" "B38" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v76|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v76|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v6|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-156697|0xfffffffffffd9be7], long[0|0x0]] destination: B49 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B49" "B58" "B51" "B53" "B55" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v115|DWORD, v116|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v115|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v116|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #89         // append:(java.lang.CharSequence)java.lang.StringBuilder
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@24799e10 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVSXB value: v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHR (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.6362310003571869 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B43 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v11|DWORD = MOV input: [v10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVSXB value: v12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = SHR (x: v11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = ADD (x: v6|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = SUB (x: v15|DWORD, ~y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v16|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603391649089349823
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B2" "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v12|DWORD, y: v5|DWORD) trueDestinationProbability: 0.998717015375415 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4603898526589647782
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" "B35" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v6|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v62|DWORD = MOV input: [v61|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr   -1  <|@ instruction v63|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v6|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v64|DWORD = MOV input: [v63|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v63|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v61|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v65|DWORD, y: [v1|QWORD[.] + 16]) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B35 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = MOVSXB value: v65|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v68|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = SHL (x: v6|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = SUB (x: v64|DWORD, ~y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v69|DWORD, y: v70|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[*] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[*] = MOVE input: v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v71|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v72|QWORD[*] + v69|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v73|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B34" "B40" 
    successors "B57" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v0|QWORD[.] + 12], y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B44" "B60" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B60 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = ADD (x: v84|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = SUB (x: v85|DWORD, ~y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v86|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599636671466445615
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|QWORD[.]] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" "B58" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr   -1  <|@ instruction [v96|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v97|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v98|DWORD = MOV input: [v97|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v99|DWORD = MOV input: [v96|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2] <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v100|DWORD, y: [v1|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B58 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = MOVSXB value: v100|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v102|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = SHL (x: v101|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v103|DWORD, y: v103|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v102|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = SHL (x: v104|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v105|DWORD, y: v105|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v105|DWORD, y: v98|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = SUB (x: v99|DWORD, ~y: v105|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v103|DWORD, y: v106|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[.] = UNCOMPRESSPOINTER (input: v97|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[*] = MOVE input: v107|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[*] = MOVE input: v96|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v110|QWORD = MOVE input: v105|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v108|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v109|QWORD[*] + v103|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v110|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = ADD (x: v84|DWORD, y: v101|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v111|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = MOVZXB input: [v0|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = MOVZXB input: [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = OR (x: v112|DWORD, y: v113|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 17], y: reinterpret: v114|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B41" "B56" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B42" 
    xhandlers
    flags 
    probability 4588388498606785847
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SHL (x: v15|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SUB (x: v17|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = SHL (x: v20|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = ADD (x: v19|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = CMOVE (falseValue: v18|DWORD, ~trueValue: v21|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = DEC value: v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B42 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4588388498606785847
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = SAR (x: v23|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = SHL (x: v25|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v26|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4588388216090718820
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA address: [v40|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = AND x: v41|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = ADD (x: v42|QWORD, y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v43|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B16" 
    xhandlers
    flags 
    probability 4588305942140169576
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v43|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v39|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v39|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v39|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v39|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v39|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v39|QWORD + 12], y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA address: [v42|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v45|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4588224490929125824
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617985760531553049
    begin_IR
      LIR
      nr   -1  <|@ instruction [v46|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v42|QWORD, y: v46|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617922763110511397
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v39|QWORD + v46|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = LEA address: [v46|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v47|QWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588224490929125825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588305942140169577
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v49|QWORD[.]] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v26|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v51|DWORD, y: v51|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v51|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v51|DWORD, y: v26|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[*] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[*] = MOVE input: v50|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOVE input: v51|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v52|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v53|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v50|QWORD[.]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B8" "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588388498606785848
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v56|QWORD, temp2: v57|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[_] = COMPRESSPOINTER (input: v55|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v58|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v55|QWORD[.]) {temp: v59|QWORD, temp2: v60|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4584865046447166825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v85|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v0|QWORD[.] v9|QWORD[.] 
locals: v0|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:24, 21, 37, 2, 2] <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v88|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = SHL (x: v87|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v89|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v0|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:32, 21, 37, 2, 2] <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v91|QWORD, temp2: v92|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr   -1  <|@ instruction v93|DWORD[_] = COMPRESSPOINTER (input: v90|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v93|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v90|QWORD[.]) {temp: v94|QWORD, temp2: v95|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v90|QWORD[.]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4560668027509911113
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v6|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:18, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v6|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B40" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = SHR value: v64|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = ADD (x: v6|DWORD, y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v75|DWORD, y: v74|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[*] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[*] = MOVE input: v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[*] = LEA address: [v77|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = SHL value: v80|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = LEA address: [v81|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[*] = ADD (x: v82|QWORD, y: v78|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v79|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v83|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4558404756106723069
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v119|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v119|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v44|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B17" 
    xhandlers
    flags 
    probability 4558352100778371553
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v39|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4521739169494778405
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA address: [v29|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = AND x: v30|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = ADD (x: v31|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v32|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4521692882062356696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v31|QWORD + v28|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v31|QWORD + v28|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v31|QWORD + v28|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v28|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v28|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v28|QWORD + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 4521739169494778405
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[*] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[*] = MOVE input: v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v37|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v38|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v29|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v36|QWORD[.]] destination: B8 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4491510020210992795
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v120|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v120|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v33|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v33|QWORD[.]] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-151321|0xfffffffffffdb0e7], long[0|0x0]] destination: B23 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-149273|0xfffffffffffdb8e7], long[0|0x0]] destination: B19 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-145177|0xfffffffffffdc8e7]] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-159769|0xfffffffffffd8fe7], long[0|0x0]] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-146201|0xfffffffffffdc4e7]] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-148243|0xfffffffffffdbced], long[5140|0x1414]] destination: B42 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-150297|0xfffffffffffdb4e7], long[0|0x0]] destination: B21 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-157721|0xfffffffffffd97e7], long[0|0x0]] destination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-155667|0xfffffffffffd9fed], long[3220|0xc94]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-98355|0xfffffffffffe7fcd], long[660|0x294]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B42" "B19" "B21" "B23" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v117|DWORD, v118|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v117|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v118|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-144153|0xfffffffffffdcce7]] destination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-158745|0xfffffffffffd93e7], long[0|0x0]] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-143129|0xfffffffffffdd0e7]] destination: B31 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B31" "B36" "B33" "B38" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v76|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v76|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v6|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-156697|0xfffffffffffd9be7], long[0|0x0]] destination: B49 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B49" "B58" "B51" "B53" "B55" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v115|DWORD, v116|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v115|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v116|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #89         // append:(java.lang.CharSequence)java.lang.StringBuilder
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@24799e10 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVSXB value: v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHR (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.6362310003571869 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B43 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v11|DWORD = MOV input: [v10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVSXB value: v12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = SHR (x: v11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = ADD (x: v6|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = SUB (x: v15|DWORD, ~y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v16|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603391649089349823
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B2" "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v12|DWORD, y: v5|DWORD) trueDestinationProbability: 0.998717015375415 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4603898526589647782
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" "B35" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v6|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v62|DWORD = MOV input: [v61|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr   -1  <|@ instruction v63|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v6|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v64|DWORD = MOV input: [v63|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v63|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v61|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v65|DWORD, y: [v1|QWORD[.] + 16]) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B35 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = MOVSXB value: v65|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v68|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = SHL (x: v6|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = SUB (x: v64|DWORD, ~y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v69|DWORD, y: v70|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[*] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[*] = MOVE input: v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v71|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v72|QWORD[*] + v69|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v73|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B34" "B40" 
    successors "B57" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v0|QWORD[.] + 12], y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B44" "B60" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B60 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = ADD (x: v84|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = SUB (x: v85|DWORD, ~y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v86|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599636671466445615
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|QWORD[.]] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" "B58" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr   -1  <|@ instruction [v96|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v97|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v98|DWORD = MOV input: [v97|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v99|DWORD = MOV input: [v96|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2] <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v100|DWORD, y: [v1|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B58 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = MOVSXB value: v100|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v102|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = SHL (x: v101|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v103|DWORD, y: v103|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v102|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = SHL (x: v104|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v105|DWORD, y: v105|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v105|DWORD, y: v98|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = SUB (x: v99|DWORD, ~y: v105|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v103|DWORD, y: v106|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[.] = UNCOMPRESSPOINTER (input: v97|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[*] = MOVE input: v107|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[*] = MOVE input: v96|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v110|QWORD = MOVE input: v105|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v108|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v109|QWORD[*] + v103|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v110|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = ADD (x: v84|DWORD, y: v101|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v111|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = MOVZXB input: [v0|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = MOVZXB input: [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = OR (x: v112|DWORD, y: v113|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 17], y: reinterpret: v114|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B41" "B56" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B42" 
    xhandlers
    flags 
    probability 4588388498606785847
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SHL (x: v15|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SUB (x: v17|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = SHL (x: v20|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = ADD (x: v19|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = CMOVE (falseValue: v18|DWORD, ~trueValue: v21|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = DEC value: v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B42 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4588388498606785847
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = SAR (x: v23|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = SHL (x: v25|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v26|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4588388216090718820
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA address: [v40|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = AND x: v41|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = ADD (x: v42|QWORD, y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v43|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B16" 
    xhandlers
    flags 
    probability 4588305942140169576
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v43|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v39|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v39|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v39|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v39|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v39|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v39|QWORD + 12], y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA address: [v42|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v45|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4588224490929125824
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617985760531553049
    begin_IR
      LIR
      nr   -1  <|@ instruction [v46|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v42|QWORD, y: v46|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617922763110511397
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v39|QWORD + v46|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = LEA address: [v46|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v47|QWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588224490929125825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588305942140169577
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v49|QWORD[.]] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v26|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v51|DWORD, y: v51|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v51|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v51|DWORD, y: v26|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[*] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[*] = MOVE input: v50|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOVE input: v51|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v52|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v53|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v50|QWORD[.]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B8" "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588388498606785848
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v56|QWORD, temp2: v57|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[_] = COMPRESSPOINTER (input: v55|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v58|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v55|QWORD[.]) {temp: v59|QWORD, temp2: v60|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4584865046447166825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v85|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v0|QWORD[.] v9|QWORD[.] 
locals: v0|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:24, 21, 37, 2, 2] <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v88|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = SHL (x: v87|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v89|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v0|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:32, 21, 37, 2, 2] <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v91|QWORD, temp2: v92|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr   -1  <|@ instruction v93|DWORD[_] = COMPRESSPOINTER (input: v90|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v93|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v90|QWORD[.]) {temp: v94|QWORD, temp2: v95|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v90|QWORD[.]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4560668027509911113
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v6|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:18, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v6|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B40" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = SHR value: v64|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = ADD (x: v6|DWORD, y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v75|DWORD, y: v74|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[*] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[*] = MOVE input: v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[*] = LEA address: [v77|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = SHL value: v80|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = LEA address: [v81|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[*] = ADD (x: v82|QWORD, y: v78|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v79|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v83|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4558404756106723069
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v119|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v119|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v44|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B17" 
    xhandlers
    flags 
    probability 4558352100778371553
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v39|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4521739169494778405
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA address: [v29|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = AND x: v30|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = ADD (x: v31|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v32|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4521692882062356696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v31|QWORD + v28|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v31|QWORD + v28|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v31|QWORD + v28|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v28|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v28|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v28|QWORD + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 4521739169494778405
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[*] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[*] = MOVE input: v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v37|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v38|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v29|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v36|QWORD[.]] destination: B8 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4491510020210992795
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v120|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v120|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v33|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v33|QWORD[.]] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-151321|0xfffffffffffdb0e7], long[0|0x0]] destination: B23 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-149273|0xfffffffffffdb8e7], long[0|0x0]] destination: B19 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-145177|0xfffffffffffdc8e7]] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-159769|0xfffffffffffd8fe7], long[0|0x0]] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-146201|0xfffffffffffdc4e7]] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-148243|0xfffffffffffdbced], long[5140|0x1414]] destination: B42 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-150297|0xfffffffffffdb4e7], long[0|0x0]] destination: B21 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-157721|0xfffffffffffd97e7], long[0|0x0]] destination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-155667|0xfffffffffffd9fed], long[3220|0xc94]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-98355|0xfffffffffffe7fcd], long[660|0x294]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B42" "B19" "B21" "B23" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v117|DWORD, v118|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v117|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v118|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-144153|0xfffffffffffdcce7]] destination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-158745|0xfffffffffffd93e7], long[0|0x0]] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-143129|0xfffffffffffdd0e7]] destination: B31 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B31" "B36" "B33" "B38" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v76|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v76|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v6|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-156697|0xfffffffffffd9be7], long[0|0x0]] destination: B49 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B49" "B58" "B51" "B53" "B55" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v115|DWORD, v116|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v115|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v116|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #89         // append:(java.lang.CharSequence)java.lang.StringBuilder
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@24799e10 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVSXB value: v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHR (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.6362310003571869 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B43 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v11|DWORD = MOV input: [v10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVSXB value: v12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = SHR (x: v11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = ADD (x: v6|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = SUB (x: v15|DWORD, ~y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v16|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603391649089349823
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B2" "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v12|DWORD, y: v5|DWORD) trueDestinationProbability: 0.998717015375415 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4603898526589647782
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" "B35" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v6|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v62|DWORD = MOV input: [v61|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr   -1  <|@ instruction v63|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v6|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v64|DWORD = MOV input: [v63|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v63|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v61|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v65|DWORD, y: [v1|QWORD[.] + 16]) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B35 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = MOVSXB value: v65|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v68|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = SHL (x: v6|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = SUB (x: v64|DWORD, ~y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v69|DWORD, y: v70|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[*] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[*] = MOVE input: v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v71|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v72|QWORD[*] + v69|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v73|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B34" "B40" 
    successors "B57" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v0|QWORD[.] + 12], y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B44" "B60" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B60 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = ADD (x: v84|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = SUB (x: v85|DWORD, ~y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v86|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599636671466445615
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|QWORD[.]] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" "B58" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr   -1  <|@ instruction [v96|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v97|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v98|DWORD = MOV input: [v97|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v99|DWORD = MOV input: [v96|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2] <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v100|DWORD, y: [v1|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B58 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = MOVSXB value: v100|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v102|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = SHL (x: v101|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v103|DWORD, y: v103|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v102|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = SHL (x: v104|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v105|DWORD, y: v105|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v105|DWORD, y: v98|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = SUB (x: v99|DWORD, ~y: v105|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v103|DWORD, y: v106|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[.] = UNCOMPRESSPOINTER (input: v97|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[*] = MOVE input: v107|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[*] = MOVE input: v96|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v110|QWORD = MOVE input: v105|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v108|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v109|QWORD[*] + v103|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v110|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = ADD (x: v84|DWORD, y: v101|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v111|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = MOVZXB input: [v0|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = MOVZXB input: [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = OR (x: v112|DWORD, y: v113|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 17], y: reinterpret: v114|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B41" "B56" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B42" 
    xhandlers
    flags 
    probability 4588388498606785847
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SHL (x: v15|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SUB (x: v17|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = SHL (x: v20|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = ADD (x: v19|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = CMOVE (falseValue: v18|DWORD, ~trueValue: v21|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = DEC value: v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B42 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4588388498606785847
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = SAR (x: v23|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = SHL (x: v25|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v26|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4588388216090718820
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA address: [v40|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = AND x: v41|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = ADD (x: v42|QWORD, y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v43|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B16" 
    xhandlers
    flags 
    probability 4588305942140169576
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v43|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v39|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v39|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v39|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v39|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v39|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v39|QWORD + 12], y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA address: [v42|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v45|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4588224490929125824
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617985760531553049
    begin_IR
      LIR
      nr   -1  <|@ instruction [v46|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v42|QWORD, y: v46|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617922763110511397
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v39|QWORD + v46|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = LEA address: [v46|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v47|QWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588224490929125825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588305942140169577
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v49|QWORD[.]] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v26|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v51|DWORD, y: v51|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v51|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v51|DWORD, y: v26|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[*] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[*] = MOVE input: v50|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOVE input: v51|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v52|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v53|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v50|QWORD[.]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B8" "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588388498606785848
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v56|QWORD, temp2: v57|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[_] = COMPRESSPOINTER (input: v55|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v58|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v55|QWORD[.]) {temp: v59|QWORD, temp2: v60|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4584865046447166825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v85|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v0|QWORD[.] v9|QWORD[.] 
locals: v0|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:24, 21, 37, 2, 2] <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v88|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = SHL (x: v87|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v89|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v0|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:32, 21, 37, 2, 2] <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v91|QWORD, temp2: v92|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr   -1  <|@ instruction v93|DWORD[_] = COMPRESSPOINTER (input: v90|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v93|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v90|QWORD[.]) {temp: v94|QWORD, temp2: v95|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v90|QWORD[.]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4560668027509911113
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v6|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:18, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v6|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B40" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = SHR value: v64|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = ADD (x: v6|DWORD, y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v75|DWORD, y: v74|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[*] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[*] = MOVE input: v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[*] = LEA address: [v77|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = SHL value: v80|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = LEA address: [v81|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[*] = ADD (x: v82|QWORD, y: v78|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v79|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v83|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4558404756106723069
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v119|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v119|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v44|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B17" 
    xhandlers
    flags 
    probability 4558352100778371553
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v39|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4521739169494778405
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA address: [v29|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = AND x: v30|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = ADD (x: v31|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v32|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4521692882062356696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v31|QWORD + v28|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v31|QWORD + v28|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v31|QWORD + v28|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v28|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v28|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v28|QWORD + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 4521739169494778405
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[*] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[*] = MOVE input: v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v37|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v38|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v29|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v36|QWORD[.]] destination: B8 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4491510020210992795
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v120|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v120|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v33|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v33|QWORD[.]] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-151321|0xfffffffffffdb0e7], long[0|0x0]] destination: B23 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-149273|0xfffffffffffdb8e7], long[0|0x0]] destination: B19 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-145177|0xfffffffffffdc8e7]] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-159769|0xfffffffffffd8fe7], long[0|0x0]] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-146201|0xfffffffffffdc4e7]] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-148243|0xfffffffffffdbced], long[5140|0x1414]] destination: B42 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-150297|0xfffffffffffdb4e7], long[0|0x0]] destination: B21 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-157721|0xfffffffffffd97e7], long[0|0x0]] destination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-155667|0xfffffffffffd9fed], long[3220|0xc94]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-98355|0xfffffffffffe7fcd], long[660|0x294]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B42" "B19" "B21" "B23" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v117|DWORD, v118|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v117|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v118|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-144153|0xfffffffffffdcce7]] destination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-158745|0xfffffffffffd93e7], long[0|0x0]] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-143129|0xfffffffffffdd0e7]] destination: B31 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B31" "B36" "B33" "B38" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v76|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v76|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v6|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-156697|0xfffffffffffd9be7], long[0|0x0]] destination: B49 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B49" "B58" "B51" "B53" "B55" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v115|DWORD, v116|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v115|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v116|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #89         // append:(java.lang.CharSequence)java.lang.StringBuilder
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@24799e10 slotKind: QWORD <|@ <|@
      nr   42  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction v5|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction v6|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   56  <|@ instruction v7|DWORD = MOVSXB value: v5|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction v8|DWORD = SHR (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   64  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.6362310003571869 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B43 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction v10|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v11|DWORD = MOV input: [v10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   96  <|@ instruction v12|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   98  <|@ instruction v13|DWORD = MOVSXB value: v12|DWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction rcx|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction v14|DWORD = SHR (x: v11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  104  <|@ instruction v15|DWORD = ADD (x: v6|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction v16|DWORD = SUB (x: v15|DWORD, ~y: v8|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction CMPCONSTBRANCH x: v16|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603391649089349823
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B2" "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction CMPBRANCH (x: v12|DWORD, y: v5|DWORD) trueDestinationProbability: 0.998717015375415 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4603898526589647782
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" "B35" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction v61|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  172  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v6|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v62|DWORD = MOV input: [v61|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr  174  <|@ instruction v63|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  176  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v6|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v64|DWORD = MOV input: [v63|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr  178  <|@ instruction v65|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  180  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v63|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  182  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v61|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: v65|DWORD, y: [v1|QWORD[.] + 16]) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B35 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction v68|DWORD = MOVSXB value: v65|DWORD size: DWORD <|@ <|@
      nr  204  <|@ instruction rcx|DWORD = MOVE input: v68|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction v69|DWORD = SHL (x: v6|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  208  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction v70|DWORD = SUB (x: v64|DWORD, ~y: v62|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction CMPBRANCH (x: v69|DWORD, y: v70|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction v71|QWORD[*] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction v72|QWORD[*] = MOVE input: v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction v73|QWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction rdi|QWORD = LEA address: [v71|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  266  <|@ instruction rsi|QWORD = LEA address: [v72|QWORD[*] + v69|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  268  <|@ instruction rdx|QWORD = MOVE input: v73|QWORD moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  272  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B34" "B40" 
    successors "B57" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction ADD (x: [v0|QWORD[.] + 12], y: v14|DWORD) size: DWORD <|@ <|@
      nr  286  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B44" "B60" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B60 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction v84|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  318  <|@ instruction v85|DWORD = ADD (x: v84|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr  320  <|@ instruction v86|DWORD = SUB (x: v85|DWORD, ~y: v8|DWORD) size: DWORD <|@ <|@
      nr  322  <|@ instruction CMPCONSTBRANCH x: v86|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599636671466445615
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction JUMP ~outgoingValues: [v9|QWORD[.]] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" "B58" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  334  <|@ instruction [v96|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction v97|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v98|DWORD = MOV input: [v97|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2] <|@ <|@
      nr  356  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v99|DWORD = MOV input: [v96|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2] <|@ <|@
      nr  358  <|@ instruction v100|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  360  <|@ instruction CMPBRANCH (x: v100|DWORD, y: [v1|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B58 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction v101|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  382  <|@ instruction v102|DWORD = MOVSXB value: v100|DWORD size: DWORD <|@ <|@
      nr  384  <|@ instruction rcx|DWORD = MOVE input: v102|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction v103|DWORD = SHL (x: v101|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  388  <|@ instruction TESTBRANCH (x: v103|DWORD, y: v103|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction v104|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  408  <|@ instruction rcx|DWORD = MOVE input: v102|DWORD moveKind: DWORD <|@ <|@
      nr  410  <|@ instruction v105|DWORD = SHL (x: v104|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: v105|DWORD, y: v105|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: v105|DWORD, y: v98|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction v106|DWORD = SUB (x: v99|DWORD, ~y: v105|DWORD) size: DWORD <|@ <|@
      nr  440  <|@ instruction CMPBRANCH (x: v103|DWORD, y: v106|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction v107|QWORD[.] = UNCOMPRESSPOINTER (input: v97|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  492  <|@ instruction v108|QWORD[*] = MOVE input: v107|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction v109|QWORD[*] = MOVE input: v96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction v110|QWORD = MOVE input: v105|DWORD moveKind: DWORD <|@ <|@
      nr  498  <|@ instruction rdi|QWORD = LEA address: [v108|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  500  <|@ instruction rsi|QWORD = LEA address: [v109|QWORD[*] + v103|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  502  <|@ instruction rdx|QWORD = MOVE input: v110|QWORD moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  506  <|@ instruction v111|DWORD = ADD (x: v84|DWORD, y: v101|DWORD) size: DWORD <|@ <|@
      nr  508  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v111|DWORD) size: DWORD <|@ <|@
      nr  510  <|@ instruction v112|DWORD = MOVZXB input: [v0|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  512  <|@ instruction v113|DWORD = MOVZXB input: [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  514  <|@ instruction v114|DWORD = OR (x: v112|DWORD, y: v113|DWORD) size: DWORD <|@ <|@
      nr  516  <|@ instruction MOVB (x: [v0|QWORD[.] + 17], y: reinterpret: v114|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B41" "B56" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B42" 
    xhandlers
    flags 
    probability 4588388498606785847
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  576  <|@ instruction v17|DWORD = SHL (x: v15|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  578  <|@ instruction v18|DWORD = SUB (x: v17|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr  580  <|@ instruction v20|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  582  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  584  <|@ instruction v19|DWORD = SHL (x: v20|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  586  <|@ instruction v21|DWORD = ADD (x: v19|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr  588  <|@ instruction CMP (x: v21|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr  590  <|@ instruction v22|DWORD = CMOVE (falseValue: v18|DWORD, ~trueValue: v21|DWORD) condition: > <|@ <|@
      nr  592  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr  594  <|@ instruction v24|DWORD = DEC value: v23|DWORD size: DWORD <|@ <|@
      nr  596  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B42 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4588388498606785847
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  620  <|@ instruction v25|DWORD = SAR (x: v23|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  622  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction v26|DWORD = SHL (x: v25|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  626  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v26|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4588388216090718820
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction v39|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  654  <|@ instruction v40|QWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction v41|QWORD = LEA address: [v40|QWORD + 23] size: QWORD <|@ <|@
      nr  658  <|@ instruction v42|QWORD = AND x: v41|QWORD y: -8 size: QWORD <|@ <|@
      nr  660  <|@ instruction v43|QWORD = ADD (x: v42|QWORD, y: v39|QWORD) size: QWORD <|@ <|@
      nr  662  <|@ instruction CMPBRANCH (x: v43|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B16" 
    xhandlers
    flags 
    probability 4588305942140169576
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction MOV (x: [r15|QWORD + 440], y: v43|QWORD) size: QWORD <|@ <|@
      nr  696  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v39|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  698  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v39|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  700  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v39|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  702  <|@ instruction MOV x: [v39|QWORD] y: 1 size: QWORD <|@ <|@
      nr  704  <|@ instruction MOV x: [v39|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  706  <|@ instruction MOV (x: [v39|QWORD + 12], y: v26|DWORD) size: DWORD <|@ <|@
      nr  708  <|@ instruction v45|QWORD = LEA address: [v42|QWORD - 16] size: QWORD <|@ <|@
      nr  710  <|@ instruction CMPCONSTBRANCH x: v45|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4588224490929125824
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617985760531553049
    begin_IR
      LIR
      nr  722  <|@ instruction [v46|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction CMPBRANCH (x: v42|QWORD, y: v46|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617922763110511397
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction MOV x: [v39|QWORD + v46|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  752  <|@ instruction v47|QWORD = LEA address: [v46|QWORD + 8] size: QWORD <|@ <|@
      nr  754  <|@ instruction JUMP ~outgoingValues: [v47|QWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588224490929125825
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588305942140169577
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction v49|QWORD[.] = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [v49|QWORD[.]] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  780  <|@ instruction [v50|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction CMP (x: v3|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr  796  <|@ instruction v51|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v26|DWORD) condition: > <|@ <|@
      nr  798  <|@ instruction TESTBRANCH (x: v51|DWORD, y: v51|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction CMPBRANCH (x: v51|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction CMPBRANCH (x: v51|DWORD, y: v26|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction v52|QWORD[*] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction v53|QWORD[*] = MOVE input: v50|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction v54|QWORD = MOVE input: v51|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction rdi|QWORD = LEA address: [v52|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  864  <|@ instruction rsi|QWORD = LEA address: [v53|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  866  <|@ instruction rdx|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  870  <|@ instruction JUMP ~outgoingValues: [v50|QWORD[.]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B8" "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588388498606785848
    begin_IR
      LIR
      nr  872  <|@ instruction [v55|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v56|QWORD, temp2: v57|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr  988  <|@ instruction v58|DWORD[_] = COMPRESSPOINTER (input: v55|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  990  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v58|DWORD[_]) size: DWORD <|@ <|@
      nr  992  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v55|QWORD[.]) {temp: v59|QWORD, temp2: v60|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr  994  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4584865046447166825
    begin_IR
      LIR
      nr  996  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1142  <|@ instruction rdx|DWORD = MOVE input: v85|DWORD moveKind: DWORD <|@ <|@
      nr 1144  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v0|QWORD[.] v9|QWORD[.] 
locals: v0|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:24, 21, 37, 2, 2] <|@ <|@
      nr 1146  <|@ instruction v87|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1148  <|@ instruction v88|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1150  <|@ instruction rcx|DWORD = MOVE input: v88|DWORD moveKind: DWORD <|@ <|@
      nr 1152  <|@ instruction v89|DWORD = SHL (x: v87|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1154  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1156  <|@ instruction rdx|DWORD = MOVE input: v89|DWORD moveKind: DWORD <|@ <|@
      nr 1158  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v0|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:32, 21, 37, 2, 2] <|@ <|@
      nr 1160  <|@ instruction v90|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1162  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v91|QWORD, temp2: v92|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr 1164  <|@ instruction v93|DWORD[_] = COMPRESSPOINTER (input: v90|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr 1166  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v93|DWORD[_]) size: DWORD <|@ <|@
      nr 1168  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v90|QWORD[.]) {temp: v94|QWORD, temp2: v95|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr 1170  <|@ instruction JUMP ~outgoingValues: [v90|QWORD[.]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4560668027509911113
    begin_IR
      LIR
      nr 1172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1190  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v6|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:18, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr 1192  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction TESTBRANCH (x: v6|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B40" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction v74|DWORD = SHR value: v64|DWORD size: DWORD <|@ <|@
      nr 1222  <|@ instruction v75|DWORD = ADD (x: v6|DWORD, y: v62|DWORD) size: DWORD <|@ <|@
      nr 1224  <|@ instruction CMPBRANCH (x: v75|DWORD, y: v74|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction v77|QWORD[*] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1268  <|@ instruction v78|QWORD[*] = MOVE input: v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1270  <|@ instruction v79|QWORD[*] = LEA address: [v77|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1272  <|@ instruction v80|QWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr 1274  <|@ instruction v81|QWORD = SHL value: v80|QWORD size: QWORD <|@ <|@
      nr 1276  <|@ instruction v82|QWORD = LEA address: [v81|QWORD + 16] size: QWORD <|@ <|@
      nr 1278  <|@ instruction v83|QWORD[*] = ADD (x: v82|QWORD, y: v78|QWORD[*]) size: QWORD <|@ <|@
      nr 1280  <|@ instruction rsi|QWORD = MOVE input: v79|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1282  <|@ instruction rdx|QWORD = MOVE input: v83|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1284  <|@ instruction rcx|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr 1286  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr 1288  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4558404756106723069
    begin_IR
      LIR
      nr 1290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1292  <|@ instruction v119|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction rsi|QWORD = MOVE input: v119|QWORD moveKind: QWORD <|@ <|@
      nr 1314  <|@ instruction rdx|DWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr 1316  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr 1318  <|@ instruction v44|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1320  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v44|QWORD[.]] state [bci:0] <|@ <|@
      nr 1322  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B17" 
    xhandlers
    flags 
    probability 4558352100778371553
    begin_IR
      LIR
      nr 1324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction rcx|QWORD = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr 1346  <|@ instruction ZERO_MEMORY (pointer: [v39|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1348  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4521739169494778405
    begin_IR
      LIR
      nr 1350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction v28|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1376  <|@ instruction v29|QWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr 1378  <|@ instruction v30|QWORD = LEA address: [v29|QWORD + 23] size: QWORD <|@ <|@
      nr 1380  <|@ instruction v31|QWORD = AND x: v30|QWORD y: -8 size: QWORD <|@ <|@
      nr 1382  <|@ instruction v32|QWORD = ADD (x: v31|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr 1384  <|@ instruction CMPBRANCH (x: v32|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4521692882062356696
    begin_IR
      LIR
      nr 1386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction MOV (x: [r15|QWORD + 440], y: v32|QWORD) size: QWORD <|@ <|@
      nr 1412  <|@ instruction AMD64PREFETCH ~address: [v31|QWORD + v28|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1414  <|@ instruction AMD64PREFETCH ~address: [v31|QWORD + v28|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1416  <|@ instruction AMD64PREFETCH ~address: [v31|QWORD + v28|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1418  <|@ instruction MOV x: [v28|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1420  <|@ instruction MOV x: [v28|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr 1422  <|@ instruction MOV (x: [v28|QWORD + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr 1424  <|@ instruction v35|QWORD[.] = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr 1426  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 4521739169494778405
    begin_IR
      LIR
      nr 1428  <|@ instruction [v36|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction v37|QWORD[*] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1460  <|@ instruction v38|QWORD[*] = MOVE input: v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1462  <|@ instruction rdi|QWORD = LEA address: [v37|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1464  <|@ instruction rsi|QWORD = LEA address: [v38|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1466  <|@ instruction rdx|QWORD = MOVE input: v29|QWORD moveKind: QWORD <|@ <|@
      nr 1468  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1470  <|@ instruction JUMP ~outgoingValues: [v36|QWORD[.]] destination: B8 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4491510020210992795
    begin_IR
      LIR
      nr 1472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1474  <|@ instruction v120|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction rsi|QWORD = MOVE input: v120|QWORD moveKind: QWORD <|@ <|@
      nr 1496  <|@ instruction rdx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr 1498  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr 1500  <|@ instruction v33|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1502  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v33|QWORD[.]] state [bci:0] <|@ <|@
      nr 1504  <|@ instruction JUMP ~outgoingValues: [v33|QWORD[.]] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction JUMP ~outgoingValues: [int[-151321|0xfffffffffffdb0e7], long[0|0x0]] destination: B23 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction JUMP ~outgoingValues: [int[-149273|0xfffffffffffdb8e7], long[0|0x0]] destination: B19 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction JUMP ~outgoingValues: [int[-145177|0xfffffffffffdc8e7]] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction JUMP ~outgoingValues: [int[-159769|0xfffffffffffd8fe7], long[0|0x0]] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction JUMP ~outgoingValues: [int[-146201|0xfffffffffffdc4e7]] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction JUMP ~outgoingValues: [int[-148243|0xfffffffffffdbced], long[5140|0x1414]] destination: B42 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction JUMP ~outgoingValues: [int[-150297|0xfffffffffffdb4e7], long[0|0x0]] destination: B21 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction JUMP ~outgoingValues: [int[-157721|0xfffffffffffd97e7], long[0|0x0]] destination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction JUMP ~outgoingValues: [int[-155667|0xfffffffffffd9fed], long[3220|0xc94]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction JUMP ~outgoingValues: [int[-98355|0xfffffffffffe7fcd], long[660|0x294]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B42" "B19" "B21" "B23" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1606  <|@ instruction [v117|DWORD, v118|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v117|DWORD) size: DWORD <|@ <|@
      nr 1624  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v118|QWORD) size: QWORD <|@ <|@
      nr 1626  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction JUMP ~outgoingValues: [int[-144153|0xfffffffffffdcce7]] destination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction JUMP ~outgoingValues: [int[-158745|0xfffffffffffd93e7], long[0|0x0]] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction JUMP ~outgoingValues: [int[-143129|0xfffffffffffdd0e7]] destination: B31 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B31" "B36" "B33" "B38" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1658  <|@ instruction [v76|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v76|DWORD) size: DWORD <|@ <|@
      nr 1676  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1678  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v6|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction JUMP ~outgoingValues: [int[-156697|0xfffffffffffd9be7], long[0|0x0]] destination: B49 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B49" "B58" "B51" "B53" "B55" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1690  <|@ instruction [v115|DWORD, v116|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v115|DWORD) size: DWORD <|@ <|@
      nr 1708  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v116|QWORD) size: QWORD <|@ <|@
      nr 1710  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #89         // append:(java.lang.CharSequence)java.lang.StringBuilder
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@24799e10 slotKind: QWORD <|@ <|@
      nr   42  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction v5|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction v6|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   56  <|@ instruction v7|DWORD = MOVSXB value: v5|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction v8|DWORD = SHR (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   64  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.6362310003571869 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B43 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction v10|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v11|DWORD = MOV input: [v10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   96  <|@ instruction v12|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   98  <|@ instruction v13|DWORD = MOVSXB value: v12|DWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction rcx|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction v14|DWORD = SHR (x: v11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  104  <|@ instruction v15|DWORD = ADD (x: v6|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction v16|DWORD = SUB (x: v15|DWORD, ~y: v8|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction CMPCONSTBRANCH x: v16|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603391649089349823
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B2" "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction CMPBRANCH (x: v12|DWORD, y: v5|DWORD) trueDestinationProbability: 0.998717015375415 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4603898526589647782
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" "B35" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction v61|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  172  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v6|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v62|DWORD = MOV input: [v61|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr  174  <|@ instruction v63|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  176  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v6|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v64|DWORD = MOV input: [v63|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr  178  <|@ instruction v65|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  180  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v63|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  182  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v61|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: v65|DWORD, y: [v1|QWORD[.] + 16]) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B35 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction v68|DWORD = MOVSXB value: v65|DWORD size: DWORD <|@ <|@
      nr  204  <|@ instruction rcx|DWORD = MOVE input: v68|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction v69|DWORD = SHL (x: v6|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  208  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction v70|DWORD = SUB (x: v64|DWORD, ~y: v62|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction CMPBRANCH (x: v69|DWORD, y: v70|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction v71|QWORD[*] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction v72|QWORD[*] = MOVE input: v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction v73|QWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction rdi|QWORD = LEA address: [v71|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  266  <|@ instruction rsi|QWORD = LEA address: [v72|QWORD[*] + v69|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  268  <|@ instruction rdx|QWORD = MOVE input: v73|QWORD moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  272  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B34" "B40" 
    successors "B57" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction ADD (x: [v0|QWORD[.] + 12], y: v14|DWORD) size: DWORD <|@ <|@
      nr  286  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B44" "B60" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B60 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction v84|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  318  <|@ instruction v85|DWORD = ADD (x: v84|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr  320  <|@ instruction v86|DWORD = SUB (x: v85|DWORD, ~y: v8|DWORD) size: DWORD <|@ <|@
      nr  322  <|@ instruction CMPCONSTBRANCH x: v86|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599636671466445615
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction JUMP ~outgoingValues: [v9|QWORD[.]] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" "B58" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  334  <|@ instruction [v96|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction v97|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v98|DWORD = MOV input: [v97|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2] <|@ <|@
      nr  356  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v99|DWORD = MOV input: [v96|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2] <|@ <|@
      nr  358  <|@ instruction v100|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  360  <|@ instruction CMPBRANCH (x: v100|DWORD, y: [v1|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B58 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction v101|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  382  <|@ instruction v102|DWORD = MOVSXB value: v100|DWORD size: DWORD <|@ <|@
      nr  384  <|@ instruction rcx|DWORD = MOVE input: v102|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction v103|DWORD = SHL (x: v101|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  388  <|@ instruction TESTBRANCH (x: v103|DWORD, y: v103|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction v104|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  408  <|@ instruction rcx|DWORD = MOVE input: v102|DWORD moveKind: DWORD <|@ <|@
      nr  410  <|@ instruction v105|DWORD = SHL (x: v104|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: v105|DWORD, y: v105|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: v105|DWORD, y: v98|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction v106|DWORD = SUB (x: v99|DWORD, ~y: v105|DWORD) size: DWORD <|@ <|@
      nr  440  <|@ instruction CMPBRANCH (x: v103|DWORD, y: v106|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction v107|QWORD[.] = UNCOMPRESSPOINTER (input: v97|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  492  <|@ instruction v108|QWORD[*] = MOVE input: v107|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction v109|QWORD[*] = MOVE input: v96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction v110|QWORD = MOVE input: v105|DWORD moveKind: DWORD <|@ <|@
      nr  498  <|@ instruction rdi|QWORD = LEA address: [v108|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  500  <|@ instruction rsi|QWORD = LEA address: [v109|QWORD[*] + v103|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  502  <|@ instruction rdx|QWORD = MOVE input: v110|QWORD moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  506  <|@ instruction v111|DWORD = ADD (x: v84|DWORD, y: v101|DWORD) size: DWORD <|@ <|@
      nr  508  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v111|DWORD) size: DWORD <|@ <|@
      nr  510  <|@ instruction v112|DWORD = MOVZXB input: [v0|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  512  <|@ instruction v113|DWORD = MOVZXB input: [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  514  <|@ instruction v114|DWORD = OR (x: v112|DWORD, y: v113|DWORD) size: DWORD <|@ <|@
      nr  516  <|@ instruction MOVB (x: [v0|QWORD[.] + 17], y: reinterpret: v114|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B41" "B56" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B42" 
    xhandlers
    flags 
    probability 4588388498606785847
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  576  <|@ instruction v17|DWORD = SHL (x: v15|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  578  <|@ instruction v18|DWORD = SUB (x: v17|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr  580  <|@ instruction v20|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  582  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  584  <|@ instruction v19|DWORD = SHL (x: v20|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  586  <|@ instruction v21|DWORD = ADD (x: v19|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr  588  <|@ instruction CMP (x: v21|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr  590  <|@ instruction v22|DWORD = CMOVE (falseValue: v18|DWORD, ~trueValue: v21|DWORD) condition: > <|@ <|@
      nr  592  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr  594  <|@ instruction v24|DWORD = DEC value: v23|DWORD size: DWORD <|@ <|@
      nr  596  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B42 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4588388498606785847
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  620  <|@ instruction v25|DWORD = SAR (x: v23|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  622  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction v26|DWORD = SHL (x: v25|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  626  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v26|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4588388216090718820
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction v39|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  654  <|@ instruction v40|QWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction v41|QWORD = LEA address: [v40|QWORD + 23] size: QWORD <|@ <|@
      nr  658  <|@ instruction v42|QWORD = AND x: v41|QWORD y: -8 size: QWORD <|@ <|@
      nr  660  <|@ instruction v43|QWORD = ADD (x: v42|QWORD, y: v39|QWORD) size: QWORD <|@ <|@
      nr  662  <|@ instruction CMPBRANCH (x: v43|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B16" 
    xhandlers
    flags 
    probability 4588305942140169576
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction MOV (x: [r15|QWORD + 440], y: v43|QWORD) size: QWORD <|@ <|@
      nr  696  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v39|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  698  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v39|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  700  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v39|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  702  <|@ instruction MOV x: [v39|QWORD] y: 1 size: QWORD <|@ <|@
      nr  704  <|@ instruction MOV x: [v39|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  706  <|@ instruction MOV (x: [v39|QWORD + 12], y: v26|DWORD) size: DWORD <|@ <|@
      nr  708  <|@ instruction v45|QWORD = LEA address: [v42|QWORD - 16] size: QWORD <|@ <|@
      nr  710  <|@ instruction CMPCONSTBRANCH x: v45|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4588224490929125824
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617985760531553049
    begin_IR
      LIR
      nr  722  <|@ instruction [v46|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction CMPBRANCH (x: v42|QWORD, y: v46|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617922763110511397
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction MOV x: [v39|QWORD + v46|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  752  <|@ instruction v47|QWORD = LEA address: [v46|QWORD + 8] size: QWORD <|@ <|@
      nr  754  <|@ instruction JUMP ~outgoingValues: [v47|QWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588224490929125825
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588305942140169577
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction v49|QWORD[.] = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [v49|QWORD[.]] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  780  <|@ instruction [v50|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction CMP (x: v3|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr  796  <|@ instruction v51|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v26|DWORD) condition: > <|@ <|@
      nr  798  <|@ instruction TESTBRANCH (x: v51|DWORD, y: v51|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction CMPBRANCH (x: v51|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction CMPBRANCH (x: v51|DWORD, y: v26|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction v52|QWORD[*] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction v53|QWORD[*] = MOVE input: v50|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction v54|QWORD = MOVE input: v51|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction rdi|QWORD = LEA address: [v52|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  864  <|@ instruction rsi|QWORD = LEA address: [v53|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  866  <|@ instruction rdx|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  870  <|@ instruction JUMP ~outgoingValues: [v50|QWORD[.]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B8" "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588388498606785848
    begin_IR
      LIR
      nr  872  <|@ instruction [v55|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v56|QWORD, temp2: v57|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr  988  <|@ instruction v58|DWORD[_] = COMPRESSPOINTER (input: v55|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  990  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v58|DWORD[_]) size: DWORD <|@ <|@
      nr  992  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v55|QWORD[.]) {temp: v59|QWORD, temp2: v60|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr  994  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4584865046447166825
    begin_IR
      LIR
      nr  996  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1142  <|@ instruction rdx|DWORD = MOVE input: v85|DWORD moveKind: DWORD <|@ <|@
      nr 1144  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v0|QWORD[.] v9|QWORD[.] 
locals: v0|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:24, 21, 37, 2, 2] <|@ <|@
      nr 1146  <|@ instruction v87|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1148  <|@ instruction v88|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1150  <|@ instruction rcx|DWORD = MOVE input: v88|DWORD moveKind: DWORD <|@ <|@
      nr 1152  <|@ instruction v89|DWORD = SHL (x: v87|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1154  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1156  <|@ instruction rdx|DWORD = MOVE input: v89|DWORD moveKind: DWORD <|@ <|@
      nr 1158  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v0|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:32, 21, 37, 2, 2] <|@ <|@
      nr 1160  <|@ instruction v90|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1162  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v91|QWORD, temp2: v92|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr 1164  <|@ instruction v93|DWORD[_] = COMPRESSPOINTER (input: v90|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr 1166  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v93|DWORD[_]) size: DWORD <|@ <|@
      nr 1168  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v90|QWORD[.]) {temp: v94|QWORD, temp2: v95|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr 1170  <|@ instruction JUMP ~outgoingValues: [v90|QWORD[.]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4560668027509911113
    begin_IR
      LIR
      nr 1172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1190  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v6|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:18, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr 1192  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction TESTBRANCH (x: v6|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B40" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction v74|DWORD = SHR value: v64|DWORD size: DWORD <|@ <|@
      nr 1222  <|@ instruction v75|DWORD = ADD (x: v6|DWORD, y: v62|DWORD) size: DWORD <|@ <|@
      nr 1224  <|@ instruction CMPBRANCH (x: v75|DWORD, y: v74|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction v77|QWORD[*] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1268  <|@ instruction v78|QWORD[*] = MOVE input: v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1270  <|@ instruction v79|QWORD[*] = LEA address: [v77|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1272  <|@ instruction v80|QWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr 1274  <|@ instruction v81|QWORD = SHL value: v80|QWORD size: QWORD <|@ <|@
      nr 1276  <|@ instruction v82|QWORD = LEA address: [v81|QWORD + 16] size: QWORD <|@ <|@
      nr 1278  <|@ instruction v83|QWORD[*] = ADD (x: v82|QWORD, y: v78|QWORD[*]) size: QWORD <|@ <|@
      nr 1280  <|@ instruction rsi|QWORD = MOVE input: v79|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1282  <|@ instruction rdx|QWORD = MOVE input: v83|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1284  <|@ instruction rcx|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr 1286  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr 1288  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4558404756106723069
    begin_IR
      LIR
      nr 1290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1292  <|@ instruction v119|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction rsi|QWORD = MOVE input: v119|QWORD moveKind: QWORD <|@ <|@
      nr 1314  <|@ instruction rdx|DWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr 1316  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr 1318  <|@ instruction v44|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1320  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v44|QWORD[.]] state [bci:0] <|@ <|@
      nr 1322  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B17" 
    xhandlers
    flags 
    probability 4558352100778371553
    begin_IR
      LIR
      nr 1324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction rcx|QWORD = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr 1346  <|@ instruction ZERO_MEMORY (pointer: [v39|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1348  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4521739169494778405
    begin_IR
      LIR
      nr 1350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction v28|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1376  <|@ instruction v29|QWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr 1378  <|@ instruction v30|QWORD = LEA address: [v29|QWORD + 23] size: QWORD <|@ <|@
      nr 1380  <|@ instruction v31|QWORD = AND x: v30|QWORD y: -8 size: QWORD <|@ <|@
      nr 1382  <|@ instruction v32|QWORD = ADD (x: v31|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr 1384  <|@ instruction CMPBRANCH (x: v32|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4521692882062356696
    begin_IR
      LIR
      nr 1386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction MOV (x: [r15|QWORD + 440], y: v32|QWORD) size: QWORD <|@ <|@
      nr 1412  <|@ instruction AMD64PREFETCH ~address: [v31|QWORD + v28|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1414  <|@ instruction AMD64PREFETCH ~address: [v31|QWORD + v28|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1416  <|@ instruction AMD64PREFETCH ~address: [v31|QWORD + v28|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1418  <|@ instruction MOV x: [v28|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1420  <|@ instruction MOV x: [v28|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr 1422  <|@ instruction MOV (x: [v28|QWORD + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr 1424  <|@ instruction v35|QWORD[.] = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr 1426  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 4521739169494778405
    begin_IR
      LIR
      nr 1428  <|@ instruction [v36|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction v37|QWORD[*] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1460  <|@ instruction v38|QWORD[*] = MOVE input: v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1462  <|@ instruction rdi|QWORD = LEA address: [v37|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1464  <|@ instruction rsi|QWORD = LEA address: [v38|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1466  <|@ instruction rdx|QWORD = MOVE input: v29|QWORD moveKind: QWORD <|@ <|@
      nr 1468  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1470  <|@ instruction JUMP ~outgoingValues: [v36|QWORD[.]] destination: B8 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4491510020210992795
    begin_IR
      LIR
      nr 1472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1474  <|@ instruction v120|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction rsi|QWORD = MOVE input: v120|QWORD moveKind: QWORD <|@ <|@
      nr 1496  <|@ instruction rdx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr 1498  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr 1500  <|@ instruction v33|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1502  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v33|QWORD[.]] state [bci:0] <|@ <|@
      nr 1504  <|@ instruction JUMP ~outgoingValues: [v33|QWORD[.]] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction JUMP ~outgoingValues: [int[-151321|0xfffffffffffdb0e7], long[0|0x0]] destination: B23 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction JUMP ~outgoingValues: [int[-149273|0xfffffffffffdb8e7], long[0|0x0]] destination: B19 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction JUMP ~outgoingValues: [int[-145177|0xfffffffffffdc8e7]] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction JUMP ~outgoingValues: [int[-159769|0xfffffffffffd8fe7], long[0|0x0]] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction JUMP ~outgoingValues: [int[-146201|0xfffffffffffdc4e7]] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction JUMP ~outgoingValues: [int[-148243|0xfffffffffffdbced], long[5140|0x1414]] destination: B42 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction JUMP ~outgoingValues: [int[-150297|0xfffffffffffdb4e7], long[0|0x0]] destination: B21 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction JUMP ~outgoingValues: [int[-157721|0xfffffffffffd97e7], long[0|0x0]] destination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction JUMP ~outgoingValues: [int[-155667|0xfffffffffffd9fed], long[3220|0xc94]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction JUMP ~outgoingValues: [int[-98355|0xfffffffffffe7fcd], long[660|0x294]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B42" "B19" "B21" "B23" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1606  <|@ instruction [v117|DWORD, v118|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v117|DWORD) size: DWORD <|@ <|@
      nr 1624  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v118|QWORD) size: QWORD <|@ <|@
      nr 1626  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction JUMP ~outgoingValues: [int[-144153|0xfffffffffffdcce7]] destination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction JUMP ~outgoingValues: [int[-158745|0xfffffffffffd93e7], long[0|0x0]] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction JUMP ~outgoingValues: [int[-143129|0xfffffffffffdd0e7]] destination: B31 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B31" "B36" "B33" "B38" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1658  <|@ instruction [v76|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v76|DWORD) size: DWORD <|@ <|@
      nr 1676  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1678  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v6|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction JUMP ~outgoingValues: [int[-156697|0xfffffffffffd9be7], long[0|0x0]] destination: B49 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B49" "B58" "B51" "B53" "B55" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1690  <|@ instruction [v115|DWORD, v116|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v115|DWORD) size: DWORD <|@ <|@
      nr 1708  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v116|QWORD) size: QWORD <|@ <|@
      nr 1710  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #89         // append:(java.lang.CharSequence)java.lang.StringBuilder
     5: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q v0|q [0, 1[[270, 271[[504, 505[[538, 540[[868, 869[[1144, 1146[[1158, 1160[[1190, 1191[[1316, 1318[[1346, 1347[[1468, 1469[[1498, 1500[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v7|d [0, 1[[58, 61[[100, 103[[204, 207[[270, 271[[384, 387[[408, 411[[504, 505[[574, 577[[582, 585[[618, 621[[622, 625[[868, 869[[1144, 1145[[1150, 1153[[1158, 1159[[1190, 1191[[1284, 1286[[1344, 1347[[1468, 1469[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v73|q [0, 44[[268, 271[[502, 505[[866, 869[[1142, 1145[[1156, 1159[[1190, 1191[[1282, 1287[[1314, 1316[[1466, 1469[[1496, 1498[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 38[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v0|q [0, 42[[266, 271[[500, 505[[864, 869[[1140, 1145[[1154, 1159[[1188, 1191[[1280, 1287[[1312, 1316[[1464, 1469[[1494, 1498[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[264, 271[[498, 505[[862, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1286, 1287[[1346, 1347[[1462, 1469[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1286, 1287[[1468, 1469[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1286, 1287[[1468, 1469[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|q [42, 538[[542, 1627[[1628, 1679[[1680, 1711[42 MustHaveRegister 46 MustHaveRegister 52 MustHaveRegister 54 MustHaveRegister 174 MustHaveRegister 178 MustHaveRegister 284 MustHaveRegister 358 MustHaveRegister 380 MustHaveRegister 508 MustHaveRegister 510 MustHaveRegister 516 MustHaveRegister 538 ShouldHaveRegister 986 MustHaveRegister 990 MustHaveRegister 992 MustHaveRegister 1140 ShouldHaveRegister 1148 MustHaveRegister 1162 MustHaveRegister 1166 MustHaveRegister 1168 MustHaveRegister 1188 ShouldHaveRegister  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q rdx|d [44, 226[[288, 512[[542, 1226[[1290, 1627[[1628, 1679[[1680, 1711[44 MustHaveRegister 50 MustHaveRegister 92 MustHaveRegister 96 MustHaveRegister 170 MustHaveRegister 184 MustHaveRegister 316 MustHaveRegister 352 MustHaveRegister 360 MustHaveRegister 406 MustHaveRegister 512 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [46, 62[46 MustHaveRegister 48 MustHaveRegister 62 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [48, 110[[542, 810[[1290, 1422[[1472, 1496[48 MustHaveRegister 60 ShouldHaveRegister 578 ShouldHaveRegister 586 ShouldHaveRegister 592 ShouldHaveRegister 626 MustHaveRegister 794 MustHaveRegister 796 ShouldHaveRegister 810 ShouldHaveRegister 1376 ShouldHaveRegister 1422 MustHaveRegister 1496 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [50, 66[[288, 298[50 MustHaveRegister 64 ShouldHaveRegister 298 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [52, 130[[542, 996[[1290, 1506[52 MustHaveRegister 56 ShouldHaveRegister 130 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d -1 [54, 226[[288, 318[[542, 996[[1172, 1272[[1290, 1506[[1526, 1536[[1546, 1556[[1628, 1638[[1648, 1679[54 MustHaveRegister 104 ShouldHaveRegister 206 ShouldHaveRegister 318 ShouldHaveRegister 1204 MustHaveRegister 1222 ShouldHaveRegister 1272 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d -1 [56, 110[[542, 622[56 MustHaveRegister 58 ShouldHaveRegister 574 ShouldHaveRegister 582 ShouldHaveRegister 618 ShouldHaveRegister 622 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d v3|d [60, 107[[288, 321[60 MustHaveRegister 106 ShouldHaveRegister 320 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[v9|q]" v9|q v2|d [62, 110[[288, 333[[542, 856[[996, 1154[[1290, 1458[[1472, 1506[62 MustHaveRegister 332 ShouldHaveRegister 856 ShouldHaveRegister 1154 ShouldHaveRegister 1458 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[v10|d]" v10|d -1 [92, 94[92 MustHaveRegister 94 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d -1 [94, 102[94 MustHaveRegister 102 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d -1 [96, 130[[542, 996[[1290, 1506[96 MustHaveRegister 98 ShouldHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[v13|d]" v13|d -1 [98, 100[98 MustHaveRegister 100 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[v14|d]" v14|d v11|d [102, 284[[542, 996[[1172, 1506[[1526, 1536[[1546, 1556[[1628, 1638[[1648, 1679[102 MustHaveRegister 104 ShouldHaveRegister 284 MustHaveRegister  "NoSpillStore"
  v15|d DWORD "[v15|d]" v15|d v6|d [104, 110[[542, 576[104 MustHaveRegister 106 MustHaveRegister 576 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[v16|d]" v16|d v15|d [106, 108[106 MustHaveRegister 108 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[v17|d]" v17|d v15|d [576, 578[576 MustHaveRegister 578 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[v18|d]" v18|d v17|d [578, 590[578 MustHaveRegister 588 ShouldHaveRegister 590 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[v19|d]" v19|d v20|d [584, 586[584 MustHaveRegister 586 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[v20|d]" v20|d -1 [580, 584[580 MustHaveRegister 584 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[v21|d]" v21|d v19|d [586, 591[586 MustHaveRegister 588 MustHaveRegister 590 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[v22|d]" v22|d v18|d [590, 592[590 MustHaveRegister 592 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[v23|d]" v23|d v22|d [592, 620[592 MustHaveRegister 594 ShouldHaveRegister 620 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[v24|d]" v24|d v23|d [594, 596[594 MustHaveRegister 596 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[v25|d]" v25|d v23|d [620, 624[620 MustHaveRegister 624 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[v26|d]" v26|d v25|d [624, 822[[1290, 1350[624 MustHaveRegister 626 ShouldHaveRegister 654 ShouldHaveRegister 706 MustHaveRegister 794 ShouldHaveRegister 796 MustHaveRegister 822 ShouldHaveRegister 1314 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[v28|q]" v28|q -1 [1374, 1424[1374 MustHaveRegister 1382 ShouldHaveRegister 1412 MustHaveRegister 1414 MustHaveRegister 1416 MustHaveRegister 1418 MustHaveRegister 1420 MustHaveRegister 1422 MustHaveRegister 1424 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[v29|q]" v29|q v3|d [1376, 1466[[1472, 1506[1376 MustHaveRegister 1378 MustHaveRegister 1466 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[v30|q]" v30|q -1 [1378, 1380[1378 MustHaveRegister 1380 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[v31|q]" v31|q v30|q [1380, 1417[1380 MustHaveRegister 1382 ShouldHaveRegister 1412 MustHaveRegister 1414 MustHaveRegister 1416 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[v32|q]" v32|q v31|q [1382, 1410[1382 MustHaveRegister 1384 MustHaveRegister 1410 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[v33|q]" v33|q rax|q [1500, 1505[1500 MustHaveRegister 1502 MustHaveRegister 1504 ShouldHaveRegister  "NoSpillStore"
  v35|q QWORD "[v35|q]" v35|q v28|q [1424, 1427[1424 MustHaveRegister 1426 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[v36|q]" v36|q v35|q [1428, 1471[1460 ShouldHaveRegister 1470 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[v37|q]" v37|q v9|q [1458, 1462[1458 MustHaveRegister 1462 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[v38|q]" v38|q v36|q [1460, 1464[1460 MustHaveRegister 1464 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[v39|q]" v39|q -1 [652, 776[[1324, 1350[652 MustHaveRegister 660 ShouldHaveRegister 696 MustHaveRegister 698 MustHaveRegister 700 MustHaveRegister 702 MustHaveRegister 704 MustHaveRegister 706 MustHaveRegister 750 MustHaveRegister 755 LiveAtLoopEnd 776 ShouldHaveRegister 1346 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[v40|q]" v40|q v26|d [654, 656[654 MustHaveRegister 656 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[v41|q]" v41|q -1 [656, 658[656 MustHaveRegister 658 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[v42|q]" v42|q v41|q [658, 756[658 MustHaveRegister 660 ShouldHaveRegister 696 MustHaveRegister 698 MustHaveRegister 700 MustHaveRegister 708 MustHaveRegister 732 MustHaveRegister 755 LiveAtLoopEnd  "NoSpillStore"
  v43|q QWORD "[v43|q]" v43|q v42|q [660, 694[660 MustHaveRegister 662 MustHaveRegister 694 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[v44|q]" v44|q rax|q [1318, 1323[1318 MustHaveRegister 1320 MustHaveRegister 1322 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[v45|q]" v45|q -1 [708, 712[[1324, 1344[708 MustHaveRegister 710 ShouldHaveRegister 1344 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[v46|q]" v46|q v47|q [722, 752[732 ShouldHaveRegister 750 MustHaveRegister 752 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[v47|q]" v47|q v46|q [752, 755[752 MustHaveRegister 754 ShouldHaveRegister  "NoSpillStore"
  v49|q QWORD "[v49|q]" v49|q v39|q [776, 779[776 MustHaveRegister 778 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[v50|q]" v50|q v49|q [780, 871[858 ShouldHaveRegister 870 ShouldHaveRegister  "NoSpillStore"
  v51|d DWORD "[v51|d]" v51|d v3|d [796, 860[796 MustHaveRegister 798 MustHaveRegister 810 MustHaveRegister 822 MustHaveRegister 860 ShouldHaveRegister  "NoSpillStore"
  v52|q QWORD "[v52|q]" v52|q v9|q [856, 862[856 MustHaveRegister 862 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[v53|q]" v53|q v50|q [858, 864[858 MustHaveRegister 864 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[v54|q]" v54|q v51|d [860, 866[860 MustHaveRegister 866 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[v55|q]" v55|q v50|q [872, 993[988 MustHaveRegister 992 MustHaveRegister  "NoSpillStore"
  v56|q QWORD "[v56|q]" v56|q -1 [986, 987[986 MustHaveRegister  "NoDefinitionFound"
  v57|q QWORD "[v57|q]" v57|q -1 [986, 987[986 MustHaveRegister  "NoDefinitionFound"
  v58|d DWORD "[v58|d]" v58|d v55|q [988, 990[988 MustHaveRegister 990 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[v59|q]" v59|q -1 [992, 993[992 MustHaveRegister  "NoDefinitionFound"
  v60|q QWORD "[v60|q]" v60|q -1 [992, 993[992 MustHaveRegister  "NoDefinitionFound"
  v61|d DWORD "[v61|d]" v61|d -1 [170, 182[170 MustHaveRegister 172 MustHaveRegister 182 MustHaveRegister  "NoSpillStore"
  v62|d DWORD "[v62|d]" v62|d -1 [172, 262[[1194, 1284[172 MustHaveRegister 222 ShouldHaveRegister 262 ShouldHaveRegister 1222 ShouldHaveRegister 1284 ShouldHaveRegister  "NoSpillStore"
  v63|d DWORD "[v63|d]" v63|d -1 [174, 180[174 MustHaveRegister 176 MustHaveRegister 180 MustHaveRegister  "NoSpillStore"
  v64|d DWORD "[v64|d]" v64|d -1 [176, 222[[1194, 1220[176 MustHaveRegister 222 MustHaveRegister 1220 ShouldHaveRegister  "NoSpillStore"
  v65|d DWORD "[v65|d]" v65|d -1 [178, 202[178 MustHaveRegister 184 MustHaveRegister 202 ShouldHaveRegister  "NoSpillStore"
  v66|q QWORD "[v66|q]" v66|q v63|d [180, 260[[1194, 1268[180 MustHaveRegister 260 ShouldHaveRegister 1268 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[v67|q]" v67|q v61|d [182, 258[[1194, 1266[182 MustHaveRegister 258 ShouldHaveRegister 1266 ShouldHaveRegister  "NoSpillStore"
  v68|d DWORD "[v68|d]" v68|d -1 [202, 204[202 MustHaveRegister 204 ShouldHaveRegister  "NoSpillStore"
  v69|d DWORD "[v69|d]" v69|d v6|d [206, 266[206 MustHaveRegister 208 MustHaveRegister 224 MustHaveRegister 266 MustHaveRegister  "NoSpillStore"
  v70|d DWORD "[v70|d]" v70|d v64|d [222, 224[222 MustHaveRegister 224 ShouldHaveRegister  "NoSpillStore"
  v71|q QWORD "[v71|q]" v71|q v67|q [258, 264[258 MustHaveRegister 264 MustHaveRegister  "NoSpillStore"
  v72|q QWORD "[v72|q]" v72|q v66|q [260, 266[260 MustHaveRegister 266 MustHaveRegister  "NoSpillStore"
  v73|q QWORD "[v73|q]" v73|q v62|d [262, 268[262 MustHaveRegister 268 ShouldHaveRegister  "NoSpillStore"
  v74|d DWORD "[v74|d]" v74|d v64|d [1220, 1224[1220 MustHaveRegister 1224 ShouldHaveRegister  "NoSpillStore"
  v75|d DWORD "[v75|d]" v75|d v6|d [1222, 1224[1222 MustHaveRegister 1224 MustHaveRegister  "NoSpillStore"
  v76|d DWORD "[v76|d]" v76|d -1 [1658, 1674[1674 MustHaveRegister  "NoSpillStore"
  v77|q QWORD "[v77|q]" v77|q v67|q [1266, 1270[1266 MustHaveRegister 1270 MustHaveRegister  "NoSpillStore"
  v78|q QWORD "[v78|q]" v78|q v66|q [1268, 1278[1268 MustHaveRegister 1278 ShouldHaveRegister  "NoSpillStore"
  v79|q QWORD "[v79|q]" v79|q -1 [1270, 1280[1270 MustHaveRegister 1280 ShouldHaveRegister  "NoSpillStore"
  v80|q QWORD "[v80|q]" v80|q v6|d [1272, 1274[1272 MustHaveRegister 1274 ShouldHaveRegister  "NoSpillStore"
  v81|q QWORD "[v81|q]" v81|q v80|q [1274, 1276[1274 MustHaveRegister 1276 MustHaveRegister  "NoSpillStore"
  v82|q QWORD "[v82|q]" v82|q -1 [1276, 1278[1276 MustHaveRegister 1278 ShouldHaveRegister  "NoSpillStore"
  v83|q QWORD "[v83|q]" v83|q v82|q [1278, 1282[1278 MustHaveRegister 1282 ShouldHaveRegister  "NoSpillStore"
  v84|d DWORD "[v84|d]" v84|d -1 [316, 506[[996, 1172[[1536, 1546[[1576, 1596[[1638, 1648[[1680, 1711[316 MustHaveRegister 318 ShouldHaveRegister 506 ShouldHaveRegister  "NoSpillStore"
  v85|d DWORD "[v85|d]" v85|d v84|d [318, 324[[996, 1142[318 MustHaveRegister 320 MustHaveRegister 1142 ShouldHaveRegister  "NoSpillStore"
  v86|d DWORD "[v86|d]" v86|d v85|d [320, 322[320 MustHaveRegister 322 ShouldHaveRegister  "NoSpillStore"
  v87|d DWORD "[v87|d]" v87|d rax|q [1146, 1152[1146 MustHaveRegister 1152 ShouldHaveRegister  "NoSpillStore"
  v88|d DWORD "[v88|d]" v88|d -1 [1148, 1150[1148 MustHaveRegister 1150 ShouldHaveRegister  "NoSpillStore"
  v89|d DWORD "[v89|d]" v89|d v87|d [1152, 1156[1152 MustHaveRegister 1156 ShouldHaveRegister  "NoSpillStore"
  v90|q QWORD "[v90|q]" v90|q rax|q [1160, 1171[1160 MustHaveRegister 1164 MustHaveRegister 1168 MustHaveRegister 1170 ShouldHaveRegister  "NoSpillStore"
  v91|q QWORD "[v91|q]" v91|q -1 [1162, 1163[1162 MustHaveRegister  "NoDefinitionFound"
  v92|q QWORD "[v92|q]" v92|q -1 [1162, 1163[1162 MustHaveRegister  "NoDefinitionFound"
  v93|d DWORD "[v93|d]" v93|d v90|q [1164, 1166[1164 MustHaveRegister 1166 MustHaveRegister  "NoSpillStore"
  v94|q QWORD "[v94|q]" v94|q -1 [1168, 1169[1168 MustHaveRegister  "NoDefinitionFound"
  v95|q QWORD "[v95|q]" v95|q -1 [1168, 1169[1168 MustHaveRegister  "NoDefinitionFound"
  v96|q QWORD "[v96|q]" v96|q v9|q [334, 494[356 MustHaveRegister 494 ShouldHaveRegister  "NoSpillStore"
  v97|d DWORD "[v97|d]" v97|d -1 [352, 490[352 MustHaveRegister 354 MustHaveRegister 490 MustHaveRegister  "NoSpillStore"
  v98|d DWORD "[v98|d]" v98|d -1 [354, 424[354 MustHaveRegister 424 ShouldHaveRegister  "NoSpillStore"
  v99|d DWORD "[v99|d]" v99|d -1 [356, 438[356 MustHaveRegister 438 MustHaveRegister  "NoSpillStore"
  v100|d DWORD "[v100|d]" v100|d -1 [358, 382[358 MustHaveRegister 360 MustHaveRegister 382 ShouldHaveRegister  "NoSpillStore"
  v101|d DWORD "[v101|d]" v101|d -1 [380, 506[380 MustHaveRegister 386 ShouldHaveRegister 506 ShouldHaveRegister  "NoSpillStore"
  v102|d DWORD "[v102|d]" v102|d -1 [382, 408[382 MustHaveRegister 384 ShouldHaveRegister 408 ShouldHaveRegister  "NoSpillStore"
  v103|d DWORD "[v103|d]" v103|d v101|d [386, 500[386 MustHaveRegister 388 MustHaveRegister 440 MustHaveRegister 500 MustHaveRegister  "NoSpillStore"
  v104|d DWORD "[v104|d]" v104|d -1 [406, 410[406 MustHaveRegister 410 ShouldHaveRegister  "NoSpillStore"
  v105|d DWORD "[v105|d]" v105|d v104|d [410, 496[410 MustHaveRegister 412 MustHaveRegister 424 MustHaveRegister 438 ShouldHaveRegister 496 ShouldHaveRegister  "NoSpillStore"
  v106|d DWORD "[v106|d]" v106|d v99|d [438, 440[438 MustHaveRegister 440 ShouldHaveRegister  "NoSpillStore"
  v107|q QWORD "[v107|q]" v107|q v97|d [490, 492[490 MustHaveRegister 492 ShouldHaveRegister  "NoSpillStore"
  v108|q QWORD "[v108|q]" v108|q v107|q [492, 498[492 MustHaveRegister 498 MustHaveRegister  "NoSpillStore"
  v109|q QWORD "[v109|q]" v109|q v96|q [494, 500[494 MustHaveRegister 500 MustHaveRegister  "NoSpillStore"
  v110|q QWORD "[v110|q]" v110|q v105|d [496, 502[496 MustHaveRegister 502 ShouldHaveRegister  "NoSpillStore"
  v111|d DWORD "[v111|d]" v111|d v84|d [506, 508[506 MustHaveRegister 508 MustHaveRegister  "NoSpillStore"
  v112|d DWORD "[v112|d]" v112|d -1 [510, 514[510 MustHaveRegister 514 ShouldHaveRegister  "NoSpillStore"
  v113|d DWORD "[v113|d]" v113|d -1 [512, 514[512 MustHaveRegister 514 ShouldHaveRegister  "NoSpillStore"
  v114|d DWORD "[v114|d]" v114|d v112|d [514, 516[514 MustHaveRegister 516 MustHaveRegister  "NoSpillStore"
  v115|d DWORD "[v115|d]" v115|d -1 [1690, 1706[1706 MustHaveRegister  "NoSpillStore"
  v116|q QWORD "[v116|q]" v116|q -1 [1690, 1708[1708 MustHaveRegister  "NoSpillStore"
  v117|d DWORD "[v117|d]" v117|d -1 [1606, 1622[1622 MustHaveRegister  "NoSpillStore"
  v118|q QWORD "[v118|q]" v118|q -1 [1606, 1624[1624 MustHaveRegister  "NoSpillStore"
  v119|q QWORD "[v119|q]" v119|q -1 [1292, 1312[1292 MustHaveRegister 1312 ShouldHaveRegister  "NoSpillStore"
  v120|q QWORD "[v120|q]" v120|q -1 [1474, 1494[1474 MustHaveRegister 1494 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q v0|q [0, 1[[270, 271[[504, 505[[538, 540[[868, 869[[1144, 1146[[1158, 1160[[1190, 1191[[1316, 1318[[1346, 1347[[1468, 1469[[1498, 1500[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v7|d [0, 1[[58, 61[[100, 103[[204, 207[[270, 271[[384, 387[[408, 411[[504, 505[[574, 577[[582, 585[[618, 621[[622, 625[[868, 869[[1144, 1145[[1150, 1153[[1158, 1159[[1190, 1191[[1284, 1286[[1344, 1347[[1468, 1469[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v73|q [0, 44[[268, 271[[502, 505[[866, 869[[1142, 1145[[1156, 1159[[1190, 1191[[1282, 1287[[1314, 1316[[1466, 1469[[1496, 1498[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 38[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v0|q [0, 42[[266, 271[[500, 505[[864, 869[[1140, 1145[[1154, 1159[[1188, 1191[[1280, 1287[[1312, 1316[[1464, 1469[[1494, 1498[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[264, 271[[498, 505[[862, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1286, 1287[[1346, 1347[[1462, 1469[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1286, 1287[[1468, 1469[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1286, 1287[[1468, 1469[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [42, 226[42 MustHaveRegister 46 MustHaveRegister 52 MustHaveRegister 54 MustHaveRegister 174 MustHaveRegister 178 MustHaveRegister  "SpillInDominator"
  v1|q QWORD "[rdx|q]" v1|q rdx|d [44, 226[[288, 442[44 MustHaveRegister 50 MustHaveRegister 92 MustHaveRegister 96 MustHaveRegister 170 MustHaveRegister 184 MustHaveRegister 316 MustHaveRegister 352 MustHaveRegister 360 MustHaveRegister 406 MustHaveRegister  "SpillInDominator"
  v2|d DWORD "[rdi|d]" v2|d -1 [46, 62[46 MustHaveRegister 48 MustHaveRegister 62 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d -1 [48, 110[[542, 810[48 MustHaveRegister 60 ShouldHaveRegister 578 ShouldHaveRegister 586 ShouldHaveRegister 592 ShouldHaveRegister 626 MustHaveRegister 794 MustHaveRegister 796 ShouldHaveRegister 810 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[r11|d]" v4|d -1 [50, 66[[288, 298[50 MustHaveRegister 64 ShouldHaveRegister 298 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[r8|d]" v5|d -1 [52, 130[[542, 824[52 MustHaveRegister 56 ShouldHaveRegister 130 ShouldHaveRegister  "OneSpillStore"
  v6|d DWORD "[r9|d]" v6|d -1 [54, 226[[288, 318[[542, 824[54 MustHaveRegister 104 ShouldHaveRegister 206 ShouldHaveRegister 318 ShouldHaveRegister  "SpillInDominator"
  v7|d DWORD "[rbx|d]" v7|d -1 [56, 110[[542, 622[56 MustHaveRegister 58 ShouldHaveRegister 574 ShouldHaveRegister 582 ShouldHaveRegister 618 ShouldHaveRegister 622 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[rax|d]" v8|d v3|d [60, 107[[288, 321[60 MustHaveRegister 106 ShouldHaveRegister 320 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[rdi|q]" v9|q v2|d [62, 110[[288, 333[[542, 856[62 MustHaveRegister 332 ShouldHaveRegister 856 ShouldHaveRegister  "OneSpillStore"
  v10|d DWORD "[rcx|d]" v10|d -1 [92, 94[92 MustHaveRegister 94 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[r11|d]" v11|d -1 [94, 102[94 MustHaveRegister 102 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[rbp|d]" v12|d -1 [96, 130[[542, 824[96 MustHaveRegister 98 ShouldHaveRegister 130 MustHaveRegister  "OneSpillStore"
  v13|d DWORD "[rcx|d]" v13|d -1 [98, 100[98 MustHaveRegister 100 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[r11|d]" v14|d v11|d [102, 226[102 MustHaveRegister 104 ShouldHaveRegister  "SpillInDominator"
  v15|d DWORD "[r13|d]" v15|d v6|d [104, 110[[542, 576[104 MustHaveRegister 106 MustHaveRegister 576 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[rcx|d]" v16|d v15|d [106, 108[106 MustHaveRegister 108 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[r13|d]" v17|d v15|d [576, 578[576 MustHaveRegister 578 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[r13|d]" v18|d v17|d [578, 590[578 MustHaveRegister 588 ShouldHaveRegister 590 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[rax|d]" v19|d v20|d [584, 586[584 MustHaveRegister 586 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[rax|d]" v20|d -1 [580, 584[580 MustHaveRegister 584 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[rax|d]" v21|d v19|d [586, 591[586 MustHaveRegister 588 MustHaveRegister 590 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[r13|d]" v22|d v18|d [590, 592[590 MustHaveRegister 592 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[r13|d]" v23|d v22|d [592, 620[592 MustHaveRegister 594 ShouldHaveRegister 620 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[rcx|d]" v24|d v23|d [594, 596[594 MustHaveRegister 596 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[r13|d]" v25|d v23|d [620, 624[620 MustHaveRegister 624 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[r13|d]" v26|d v25|d [624, 822[[1290, 1350[624 MustHaveRegister 626 ShouldHaveRegister 654 ShouldHaveRegister 706 MustHaveRegister 794 ShouldHaveRegister 796 MustHaveRegister 822 ShouldHaveRegister 1314 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[rdi|q]" v28|q -1 [1374, 1424[1374 MustHaveRegister 1382 ShouldHaveRegister 1412 MustHaveRegister 1414 MustHaveRegister 1416 MustHaveRegister 1418 MustHaveRegister 1420 MustHaveRegister 1422 MustHaveRegister 1424 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[r11|q]" v29|q v3|d [1376, 1466[[1472, 1506[1376 MustHaveRegister 1378 MustHaveRegister 1466 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[rsi|q]" v30|q -1 [1378, 1380[1378 MustHaveRegister 1380 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[rsi|q]" v31|q v30|q [1380, 1417[1380 MustHaveRegister 1382 ShouldHaveRegister 1412 MustHaveRegister 1414 MustHaveRegister 1416 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[rdx|q]" v32|q v31|q [1382, 1410[1382 MustHaveRegister 1384 MustHaveRegister 1410 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rax|q]" v33|q rax|q [1500, 1505[1500 MustHaveRegister 1502 MustHaveRegister 1504 ShouldHaveRegister  "NoSpillStore"
  v35|q QWORD "[rdi|q]" v35|q v28|q [1424, 1427[1424 MustHaveRegister 1426 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[rdi|q]" v36|q v35|q [1428, 1461[1460 ShouldHaveRegister  "OneSpillStore"
  v37|q QWORD "[rsi|q]" v37|q v9|q [1458, 1462[1458 MustHaveRegister 1462 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[rdx|q]" v38|q v36|q [1460, 1464[1460 MustHaveRegister 1464 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[rbx|q]" v39|q -1 [652, 776[[1324, 1350[652 MustHaveRegister 660 ShouldHaveRegister 696 MustHaveRegister 698 MustHaveRegister 700 MustHaveRegister 702 MustHaveRegister 704 MustHaveRegister 706 MustHaveRegister 750 MustHaveRegister 755 LiveAtLoopEnd 776 ShouldHaveRegister 1346 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rcx|q]" v40|q v26|d [654, 656[654 MustHaveRegister 656 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rcx|q]" v41|q -1 [656, 658[656 MustHaveRegister 658 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[rcx|q]" v42|q v41|q [658, 756[658 MustHaveRegister 660 ShouldHaveRegister 696 MustHaveRegister 698 MustHaveRegister 700 MustHaveRegister 708 MustHaveRegister 732 MustHaveRegister 755 LiveAtLoopEnd  "NoSpillStore"
  v43|q QWORD "[rax|q]" v43|q v42|q [660, 694[660 MustHaveRegister 662 MustHaveRegister 694 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[rax|q]" v44|q rax|q [1318, 1323[1318 MustHaveRegister 1320 MustHaveRegister 1322 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[rax|q]" v45|q -1 [708, 712[[1324, 1344[708 MustHaveRegister 710 ShouldHaveRegister 1344 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[rax|q]" v46|q v47|q [722, 752[732 ShouldHaveRegister 750 MustHaveRegister 752 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[rax|q]" v47|q v46|q [752, 755[752 MustHaveRegister 754 ShouldHaveRegister  "NoSpillStore"
  v49|q QWORD "[rbx|q]" v49|q v39|q [776, 779[776 MustHaveRegister 778 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[rbx|q]" v50|q v49|q [780, 867[858 ShouldHaveRegister  "OneSpillStore"
  v51|d DWORD "[rcx|d]" v51|d v3|d [796, 860[796 MustHaveRegister 798 MustHaveRegister 810 MustHaveRegister 822 MustHaveRegister 860 ShouldHaveRegister  "NoSpillStore"
  v52|q QWORD "[rdi|q]" v52|q v9|q [856, 862[856 MustHaveRegister 862 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[r10|q]" v53|q v50|q [858, 864[858 MustHaveRegister 864 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[rcx|q]" v54|q v51|d [860, 866[860 MustHaveRegister 866 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[rbx|q]" v55|q v50|q [872, 993[988 MustHaveRegister 992 MustHaveRegister  "NoSpillStore"
  v56|q QWORD "[rdx|q]" v56|q -1 [986, 987[986 MustHaveRegister  "NoDefinitionFound"
  v57|q QWORD "[r10|q]" v57|q -1 [986, 987[986 MustHaveRegister  "NoDefinitionFound"
  v58|d DWORD "[rdx|d]" v58|d v55|q [988, 990[988 MustHaveRegister 990 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[rdx|q]" v59|q -1 [992, 993[992 MustHaveRegister  "NoDefinitionFound"
  v60|q QWORD "[r10|q]" v60|q -1 [992, 993[992 MustHaveRegister  "NoDefinitionFound"
  v61|d DWORD "[rcx|d]" v61|d -1 [170, 182[170 MustHaveRegister 172 MustHaveRegister 182 MustHaveRegister  "NoSpillStore"
  v62|d DWORD "[r10|d]" v62|d -1 [172, 262[172 MustHaveRegister 222 ShouldHaveRegister 262 ShouldHaveRegister  "NoSpillStore"
  v63|d DWORD "[rdi|d]" v63|d -1 [174, 180[174 MustHaveRegister 176 MustHaveRegister 180 MustHaveRegister  "NoSpillStore"
  v64|d DWORD "[r8|d]" v64|d -1 [176, 222[[1194, 1220[176 MustHaveRegister 222 MustHaveRegister 1220 ShouldHaveRegister  "NoSpillStore"
  v65|d DWORD "[rbx|d]" v65|d -1 [178, 202[178 MustHaveRegister 184 MustHaveRegister 202 ShouldHaveRegister  "NoSpillStore"
  v66|q QWORD "[rdi|q]" v66|q v63|d [180, 260[[1194, 1268[180 MustHaveRegister 260 ShouldHaveRegister 1268 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[rax|q]" v67|q v61|d [182, 258[[1194, 1266[182 MustHaveRegister 258 ShouldHaveRegister 1266 ShouldHaveRegister  "NoSpillStore"
  v68|d DWORD "[rcx|d]" v68|d -1 [202, 204[202 MustHaveRegister 204 ShouldHaveRegister  "NoSpillStore"
  v69|d DWORD "[rbx|d]" v69|d v6|d [206, 266[206 MustHaveRegister 208 MustHaveRegister 224 MustHaveRegister 266 MustHaveRegister  "NoSpillStore"
  v70|d DWORD "[r8|d]" v70|d v64|d [222, 224[222 MustHaveRegister 224 ShouldHaveRegister  "NoSpillStore"
  v71|q QWORD "[rax|q]" v71|q v67|q [258, 264[258 MustHaveRegister 264 MustHaveRegister  "NoSpillStore"
  v72|q QWORD "[rdx|q]" v72|q v66|q [260, 266[260 MustHaveRegister 266 MustHaveRegister  "NoSpillStore"
  v73|q QWORD "[r10|q]" v73|q v62|d [262, 268[262 MustHaveRegister 268 ShouldHaveRegister  "NoSpillStore"
  v74|d DWORD "[r8|d]" v74|d v64|d [1220, 1224[1220 MustHaveRegister 1224 ShouldHaveRegister  "NoSpillStore"
  v75|d DWORD "[rsi|d]" v75|d v6|d [1222, 1224[1222 MustHaveRegister 1224 MustHaveRegister  "NoSpillStore"
  v76|d DWORD "[r10|d]" v76|d -1 [1658, 1674[1674 MustHaveRegister  "NoSpillStore"
  v77|q QWORD "[rax|q]" v77|q v67|q [1266, 1270[1266 MustHaveRegister 1270 MustHaveRegister  "NoSpillStore"
  v78|q QWORD "[rdi|q]" v78|q v66|q [1268, 1278[1268 MustHaveRegister 1278 ShouldHaveRegister  "NoSpillStore"
  v79|q QWORD "[rsi|q]" v79|q -1 [1270, 1280[1270 MustHaveRegister 1280 ShouldHaveRegister  "NoSpillStore"
  v80|q QWORD "[r9|q]" v80|q v6|d [1272, 1274[1272 MustHaveRegister 1274 ShouldHaveRegister  "NoSpillStore"
  v81|q QWORD "[r9|q]" v81|q v80|q [1274, 1276[1274 MustHaveRegister 1276 MustHaveRegister  "NoSpillStore"
  v82|q QWORD "[rdx|q]" v82|q -1 [1276, 1278[1276 MustHaveRegister 1278 ShouldHaveRegister  "NoSpillStore"
  v83|q QWORD "[rdx|q]" v83|q v82|q [1278, 1282[1278 MustHaveRegister 1282 ShouldHaveRegister  "NoSpillStore"
  v84|d DWORD "[r10|d]" v84|d -1 [316, 442[316 MustHaveRegister 318 ShouldHaveRegister  "OneSpillStore"
  v85|d DWORD "[r11|d]" v85|d v84|d [318, 324[[996, 1142[318 MustHaveRegister 320 MustHaveRegister 1142 ShouldHaveRegister  "NoSpillStore"
  v86|d DWORD "[rcx|d]" v86|d v85|d [320, 322[320 MustHaveRegister 322 ShouldHaveRegister  "NoSpillStore"
  v87|d DWORD "[rax|d]" v87|d rax|q [1146, 1152[1146 MustHaveRegister 1152 ShouldHaveRegister  "NoSpillStore"
  v88|d DWORD "[rcx|d]" v88|d -1 [1148, 1150[1148 MustHaveRegister 1150 ShouldHaveRegister  "NoSpillStore"
  v89|d DWORD "[rax|d]" v89|d v87|d [1152, 1156[1152 MustHaveRegister 1156 ShouldHaveRegister  "NoSpillStore"
  v90|q QWORD "[rax|q]" v90|q rax|q [1160, 1171[1160 MustHaveRegister 1164 MustHaveRegister 1168 MustHaveRegister 1170 ShouldHaveRegister  "NoSpillStore"
  v91|q QWORD "[r10|q]" v91|q -1 [1162, 1163[1162 MustHaveRegister  "NoDefinitionFound"
  v92|q QWORD "[r11|q]" v92|q -1 [1162, 1163[1162 MustHaveRegister  "NoDefinitionFound"
  v93|d DWORD "[r10|d]" v93|d v90|q [1164, 1166[1164 MustHaveRegister 1166 MustHaveRegister  "NoSpillStore"
  v94|q QWORD "[r10|q]" v94|q -1 [1168, 1169[1168 MustHaveRegister  "NoDefinitionFound"
  v95|q QWORD "[r11|q]" v95|q -1 [1168, 1169[1168 MustHaveRegister  "NoDefinitionFound"
  v96|q QWORD "[rdi|q]" v96|q v9|q [334, 494[356 MustHaveRegister 494 ShouldHaveRegister  "NoSpillStore"
  v97|d DWORD "[r11|d]" v97|d -1 [352, 490[352 MustHaveRegister 354 MustHaveRegister 490 MustHaveRegister  "NoSpillStore"
  v98|d DWORD "[r8|d]" v98|d -1 [354, 424[354 MustHaveRegister 424 ShouldHaveRegister  "NoSpillStore"
  v99|d DWORD "[r9|d]" v99|d -1 [356, 438[356 MustHaveRegister 438 MustHaveRegister  "NoSpillStore"
  v100|d DWORD "[rcx|d]" v100|d -1 [358, 382[358 MustHaveRegister 360 MustHaveRegister 382 ShouldHaveRegister  "NoSpillStore"
  v101|d DWORD "[rbx|d]" v101|d -1 [380, 442[380 MustHaveRegister 386 ShouldHaveRegister  "OneSpillStore"
  v102|d DWORD "[rax|d]" v102|d -1 [382, 408[382 MustHaveRegister 384 ShouldHaveRegister 408 ShouldHaveRegister  "NoSpillStore"
  v103|d DWORD "[rbp|d]" v103|d v101|d [386, 500[386 MustHaveRegister 388 MustHaveRegister 440 MustHaveRegister 500 MustHaveRegister  "NoSpillStore"
  v104|d DWORD "[r13|d]" v104|d -1 [406, 410[406 MustHaveRegister 410 ShouldHaveRegister  "NoSpillStore"
  v105|d DWORD "[r13|d]" v105|d v104|d [410, 496[410 MustHaveRegister 412 MustHaveRegister 424 MustHaveRegister 438 ShouldHaveRegister 496 ShouldHaveRegister  "NoSpillStore"
  v106|d DWORD "[r9|d]" v106|d v99|d [438, 440[438 MustHaveRegister 440 ShouldHaveRegister  "NoSpillStore"
  v107|q QWORD "[r11|q]" v107|q v97|d [490, 492[490 MustHaveRegister 492 ShouldHaveRegister  "NoSpillStore"
  v108|q QWORD "[r11|q]" v108|q v107|q [492, 498[492 MustHaveRegister 498 MustHaveRegister  "NoSpillStore"
  v109|q QWORD "[r8|q]" v109|q v96|q [494, 500[494 MustHaveRegister 500 MustHaveRegister  "NoSpillStore"
  v110|q QWORD "[r13|q]" v110|q v105|d [496, 502[496 MustHaveRegister 502 ShouldHaveRegister  "NoSpillStore"
  v111|d DWORD "[r10|d]" v111|d v84|d [506, 508[506 MustHaveRegister 508 MustHaveRegister  "NoSpillStore"
  v112|d DWORD "[rax|d]" v112|d -1 [510, 514[510 MustHaveRegister 514 ShouldHaveRegister  "NoSpillStore"
  v113|d DWORD "[rcx|d]" v113|d -1 [512, 514[512 MustHaveRegister 514 ShouldHaveRegister  "NoSpillStore"
  v114|d DWORD "[rax|d]" v114|d v112|d [514, 516[514 MustHaveRegister 516 MustHaveRegister  "NoSpillStore"
  v115|d DWORD "[r10|d]" v115|d -1 [1690, 1706[1706 MustHaveRegister  "NoSpillStore"
  v116|q QWORD "[r11|q]" v116|q -1 [1690, 1708[1708 MustHaveRegister  "NoSpillStore"
  v117|d DWORD "[r10|d]" v117|d -1 [1606, 1622[1622 MustHaveRegister  "NoSpillStore"
  v118|q QWORD "[r11|q]" v118|q -1 [1606, 1624[1624 MustHaveRegister  "NoSpillStore"
  v119|q QWORD "[rsi|q]" v119|q -1 [1292, 1312[1292 MustHaveRegister 1312 ShouldHaveRegister  "NoSpillStore"
  v120|q QWORD "[rsi|q]" v120|q -1 [1474, 1494[1474 MustHaveRegister 1494 ShouldHaveRegister  "NoSpillStore"
  v121|q QWORD "[vstack:0|q]" v0|q v0|q [226, 265[ "SpillInDominator"
  v122|q QWORD "[vstack:4|q]" v1|q v1|q [442, 501[ "SpillInDominator"
  v123|d DWORD "[vstack:9|d]" v5|d v5|d [824, 867[ "OneSpillStore"
  v124|d DWORD "[vstack:8|d]" v6|d v6|d [824, 867[ "SpillInDominator"
  v125|q QWORD "[vstack:11|q]" v9|q v9|q [996, 1143[ "OneSpillStore"
  v126|d DWORD "[vstack:10|d]" v12|d v12|d [824, 867[ "OneSpillStore"
  v127|d DWORD "[vstack:2|d]" v14|d v14|d [226, 269[ "SpillInDominator"
  v128|d DWORD "[vstack:2|d]" v14|d v14|d [269, 274[ "SpillInDominator"
  v129|q QWORD "[vstack:0|q]" v0|q v0|q [265, 269[ "SpillInDominator"
  v130|q QWORD "[vstack:0|q]" v0|q v0|q [269, 274[ "SpillInDominator"
  v131|q QWORD "[rsi|q]" v0|q v0|q [274, 442[284 MustHaveRegister 358 MustHaveRegister 380 MustHaveRegister  "SpillInDominator"
  v132|d DWORD "[r11|d]" v14|d v14|d [274, 284[[542, 824[284 MustHaveRegister  "SpillInDominator"
  v133|d DWORD "[vstack:2|d]" v14|d v14|d [824, 867[ "SpillInDominator"
  v134|q QWORD "[vstack:0|q]" v0|q v0|q [442, 499[ "SpillInDominator"
  v135|d DWORD "[vstack:5|d]" v84|d v84|d [442, 503[ "OneSpillStore"
  v136|d DWORD "[vstack:6|d]" v101|d v101|d [442, 503[ "OneSpillStore"
  v137|d DWORD "[vstack:6|d]" v101|d v101|d [503, 506[506 ShouldHaveRegister  "OneSpillStore"
  v138|d DWORD "[vstack:5|d]" v84|d v84|d [503, 506[[996, 1172[[1536, 1546[[1576, 1596[[1638, 1648[[1680, 1690[506 ShouldHaveRegister  "OneSpillStore"
  v139|q QWORD "[vstack:0|q]" v0|q v0|q [499, 503[ "SpillInDominator"
  v140|q QWORD "[vstack:4|q]" v1|q v1|q [501, 511[ "SpillInDominator"
  v141|q QWORD "[vstack:0|q]" v0|q v0|q [503, 507[ "SpillInDominator"
  v142|q QWORD "[rdx|q]" v1|q v1|q [511, 512[[542, 824[512 MustHaveRegister  "SpillInDominator"
  v143|d DWORD "[r8|d]" v84|d v84|d [1690, 1711[ "OneSpillStore"
  v144|q QWORD "[rsi|q]" v0|q v0|q [507, 538[[542, 824[508 MustHaveRegister 510 MustHaveRegister 516 MustHaveRegister 538 ShouldHaveRegister  "SpillInDominator"
  v145|q QWORD "[vstack:0|q]" v0|q v0|q [824, 863[ "SpillInDominator"
  v146|q QWORD "[vstack:4|q]" v1|q v1|q [824, 865[ "SpillInDominator"
  v147|q QWORD "[vstack:7|q]" v50|q v50|q [867, 871[870 ShouldHaveRegister  "OneSpillStore"
  v148|q QWORD "[vstack:0|q]" v0|q v0|q [863, 867[ "SpillInDominator"
  v149|d DWORD "[vstack:8|d]" v6|d v6|d [867, 996[[1172, 1194[ "SpillInDominator"
  v150|q QWORD "[vstack:4|q]" v1|q v1|q [865, 1226[[1290, 1627[[1628, 1679[[1680, 1690[ "SpillInDominator"
  v151|d DWORD "[vstack:2|d]" v14|d v14|d [867, 996[[1172, 1506[[1526, 1536[[1546, 1556[[1628, 1638[[1648, 1658[ "SpillInDominator"
  v152|d DWORD "[vstack:10|d]" v12|d v12|d [867, 996[[1290, 1506[ "OneSpillStore"
  v153|d DWORD "[vstack:9|d]" v5|d v5|d [867, 996[[1290, 1506[ "OneSpillStore"
  v154|q QWORD "[vstack:0|q]" v0|q v0|q [867, 872[ "SpillInDominator"
  v155|q QWORD "[rdx|q]" v1|q v1|q [1690, 1711[ "SpillInDominator"
  v156|q QWORD "[rsi|q]" v0|q v0|q [872, 1139[986 MustHaveRegister 990 MustHaveRegister 992 MustHaveRegister  "SpillInDominator"
  v157|d DWORD "[r9|d]" v6|d v6|d [1194, 1272[[1290, 1428[1204 MustHaveRegister 1222 ShouldHaveRegister 1272 ShouldHaveRegister  "SpillInDominator"
  v158|d DWORD "[r11|d]" v14|d v14|d [1658, 1679[ "SpillInDominator"
  v159|q QWORD "[r10|q]" v0|q v0|q [1139, 1143[1140 ShouldHaveRegister  "SpillInDominator"
  v160|q QWORD "[vstack:11|q]" v9|q v9|q [1143, 1154[[1290, 1458[[1472, 1506[1154 ShouldHaveRegister 1458 ShouldHaveRegister  "OneSpillStore"
  v161|q QWORD "[vstack:0|q]" v0|q v0|q [1143, 1147[ "SpillInDominator"
  v162|q QWORD "[rsi|q]" v0|q v0|q [1147, 1153[1148 MustHaveRegister  "SpillInDominator"
  v163|q QWORD "[vstack:0|q]" v0|q v0|q [1153, 1157[ "SpillInDominator"
  v164|q QWORD "[vstack:0|q]" v0|q v0|q [1157, 1161[ "SpillInDominator"
  v165|q QWORD "[rsi|q]" v0|q v0|q [1161, 1187[1162 MustHaveRegister 1166 MustHaveRegister 1168 MustHaveRegister  "SpillInDominator"
  v166|q QWORD "[r10|q]" v0|q v0|q [1187, 1189[1188 ShouldHaveRegister  "SpillInDominator"
  v167|q QWORD "[vstack:0|q]" v0|q v0|q [1189, 1627[[1628, 1679[[1680, 1690[ "SpillInDominator"
  v168|d DWORD "[r10|d]" v62|d v62|d [1194, 1284[1222 ShouldHaveRegister 1284 ShouldHaveRegister  "NoSpillStore"
  v169|d DWORD "[r10|d]" v3|d v3|d [1290, 1422[[1472, 1496[1376 ShouldHaveRegister 1422 MustHaveRegister 1496 ShouldHaveRegister  "NoSpillStore"
  v170|q QWORD "[rsi|q]" v0|q v0|q [1690, 1711[ "SpillInDominator"
  v171|d DWORD "[vstack:8|d]" v6|d v6|d [1428, 1467[ "SpillInDominator"
  v172|q QWORD "[vstack:12|q]" v36|q v36|q [1461, 1467[ "OneSpillStore"
  v173|d DWORD "[vstack:8|d]" v6|d v6|d [1467, 1506[[1526, 1536[[1546, 1556[[1628, 1638[[1648, 1658[ "SpillInDominator"
  v174|q QWORD "[vstack:12|q]" v36|q v36|q [1467, 1471[1470 ShouldHaveRegister  "OneSpillStore"
  v175|d DWORD "[r9|d]" v6|d v6|d [1658, 1679[ "SpillInDominator"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@24799e10 slotKind: QWORD <|@ <|@
      nr   42  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction v5|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction v6|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   56  <|@ instruction v7|DWORD = MOVSXB value: v5|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction v8|DWORD = SHR (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   64  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.6362310003571869 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B43 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction v10|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v11|DWORD = MOV input: [v10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   96  <|@ instruction v12|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   98  <|@ instruction v13|DWORD = MOVSXB value: v12|DWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction rcx|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction v14|DWORD = SHR (x: v11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  104  <|@ instruction v15|DWORD = ADD (x: v6|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction v16|DWORD = SUB (x: v15|DWORD, ~y: v8|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction CMPCONSTBRANCH x: v16|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603391649089349823
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B2" "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction CMPBRANCH (x: v12|DWORD, y: v5|DWORD) trueDestinationProbability: 0.998717015375415 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4603898526589647782
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" "B35" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction v61|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  172  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v6|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v62|DWORD = MOV input: [v61|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr  174  <|@ instruction v63|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  176  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v6|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v64|DWORD = MOV input: [v63|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr  178  <|@ instruction v65|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  180  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v63|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  182  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v61|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: v65|DWORD, y: [v1|QWORD[.] + 16]) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B35 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction v68|DWORD = MOVSXB value: v65|DWORD size: DWORD <|@ <|@
      nr  204  <|@ instruction rcx|DWORD = MOVE input: v68|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction v69|DWORD = SHL (x: v6|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  208  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction v70|DWORD = SUB (x: v64|DWORD, ~y: v62|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction CMPBRANCH (x: v69|DWORD, y: v70|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction v71|QWORD[*] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction v72|QWORD[*] = MOVE input: v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction v73|QWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction rdi|QWORD = LEA address: [v71|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = STACKMOVE (input: v121|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  266  <|@ instruction rsi|QWORD = LEA address: [v72|QWORD[*] + v69|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  268  <|@ instruction rdx|QWORD = MOVE input: v73|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v128|DWORD = STACKMOVE (input: v127|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v130|QWORD[.] = STACKMOVE (input: v129|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  270  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  272  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B34" "B40" 
    successors "B57" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction ADD (x: [v0|QWORD[.] + 12], y: v14|DWORD) size: DWORD <|@ <|@
      nr  286  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B44" "B60" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B60 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction v84|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  318  <|@ instruction v85|DWORD = ADD (x: v84|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr  320  <|@ instruction v86|DWORD = SUB (x: v85|DWORD, ~y: v8|DWORD) size: DWORD <|@ <|@
      nr  322  <|@ instruction CMPCONSTBRANCH x: v86|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599636671466445615
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction JUMP ~outgoingValues: [v9|QWORD[.]] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" "B58" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  334  <|@ instruction [v96|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction v97|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v98|DWORD = MOV input: [v97|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2] <|@ <|@
      nr  356  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v99|DWORD = MOV input: [v96|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2] <|@ <|@
      nr  358  <|@ instruction v100|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  360  <|@ instruction CMPBRANCH (x: v100|DWORD, y: [v1|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B58 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction v101|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  382  <|@ instruction v102|DWORD = MOVSXB value: v100|DWORD size: DWORD <|@ <|@
      nr  384  <|@ instruction rcx|DWORD = MOVE input: v102|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction v103|DWORD = SHL (x: v101|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  388  <|@ instruction TESTBRANCH (x: v103|DWORD, y: v103|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction v104|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  408  <|@ instruction rcx|DWORD = MOVE input: v102|DWORD moveKind: DWORD <|@ <|@
      nr  410  <|@ instruction v105|DWORD = SHL (x: v104|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: v105|DWORD, y: v105|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: v105|DWORD, y: v98|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction v106|DWORD = SUB (x: v99|DWORD, ~y: v105|DWORD) size: DWORD <|@ <|@
      nr  440  <|@ instruction CMPBRANCH (x: v103|DWORD, y: v106|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction v107|QWORD[.] = UNCOMPRESSPOINTER (input: v97|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  492  <|@ instruction v108|QWORD[*] = MOVE input: v107|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction v109|QWORD[*] = MOVE input: v96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction v110|QWORD = MOVE input: v105|DWORD moveKind: DWORD <|@ <|@
      nr  498  <|@ instruction rdi|QWORD = LEA address: [v108|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v139|QWORD[.] = MOVE input: v134|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  500  <|@ instruction rsi|QWORD = LEA address: [v109|QWORD[*] + v103|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v140|QWORD[.] = STACKMOVE (input: v122|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  502  <|@ instruction rdx|QWORD = MOVE input: v110|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v141|QWORD[.] = STACKMOVE (input: v139|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v137|DWORD = STACKMOVE (input: v136|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = STACKMOVE (input: v135|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  504  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  506  <|@ instruction v111|DWORD = ADD (x: v84|DWORD, y: v101|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v144|QWORD[.] = MOVE input: v141|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  508  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v111|DWORD) size: DWORD <|@ <|@
      nr  510  <|@ instruction v112|DWORD = MOVZXB input: [v0|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v142|QWORD[.] = MOVE input: v140|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  512  <|@ instruction v113|DWORD = MOVZXB input: [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  514  <|@ instruction v114|DWORD = OR (x: v112|DWORD, y: v113|DWORD) size: DWORD <|@ <|@
      nr  516  <|@ instruction MOVB (x: [v0|QWORD[.] + 17], y: reinterpret: v114|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B41" "B56" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B42" 
    xhandlers
    flags 
    probability 4588388498606785847
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  576  <|@ instruction v17|DWORD = SHL (x: v15|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  578  <|@ instruction v18|DWORD = SUB (x: v17|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr  580  <|@ instruction v20|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  582  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  584  <|@ instruction v19|DWORD = SHL (x: v20|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  586  <|@ instruction v21|DWORD = ADD (x: v19|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr  588  <|@ instruction CMP (x: v21|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr  590  <|@ instruction v22|DWORD = CMOVE (falseValue: v18|DWORD, ~trueValue: v21|DWORD) condition: > <|@ <|@
      nr  592  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr  594  <|@ instruction v24|DWORD = DEC value: v23|DWORD size: DWORD <|@ <|@
      nr  596  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B42 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4588388498606785847
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  620  <|@ instruction v25|DWORD = SAR (x: v23|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  622  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction v26|DWORD = SHL (x: v25|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  626  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v26|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4588388216090718820
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction v39|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  654  <|@ instruction v40|QWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction v41|QWORD = LEA address: [v40|QWORD + 23] size: QWORD <|@ <|@
      nr  658  <|@ instruction v42|QWORD = AND x: v41|QWORD y: -8 size: QWORD <|@ <|@
      nr  660  <|@ instruction v43|QWORD = ADD (x: v42|QWORD, y: v39|QWORD) size: QWORD <|@ <|@
      nr  662  <|@ instruction CMPBRANCH (x: v43|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B16" 
    xhandlers
    flags 
    probability 4588305942140169576
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction MOV (x: [r15|QWORD + 440], y: v43|QWORD) size: QWORD <|@ <|@
      nr  696  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v39|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  698  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v39|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  700  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v39|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  702  <|@ instruction MOV x: [v39|QWORD] y: 1 size: QWORD <|@ <|@
      nr  704  <|@ instruction MOV x: [v39|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  706  <|@ instruction MOV (x: [v39|QWORD + 12], y: v26|DWORD) size: DWORD <|@ <|@
      nr  708  <|@ instruction v45|QWORD = LEA address: [v42|QWORD - 16] size: QWORD <|@ <|@
      nr  710  <|@ instruction CMPCONSTBRANCH x: v45|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4588224490929125824
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617985760531553049
    begin_IR
      LIR
      nr  722  <|@ instruction [v46|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction CMPBRANCH (x: v42|QWORD, y: v46|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617922763110511397
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction MOV x: [v39|QWORD + v46|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  752  <|@ instruction v47|QWORD = LEA address: [v46|QWORD + 8] size: QWORD <|@ <|@
      nr  754  <|@ instruction JUMP ~outgoingValues: [v47|QWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588224490929125825
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588305942140169577
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction v49|QWORD[.] = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [v49|QWORD[.]] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  780  <|@ instruction [v50|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction CMP (x: v3|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr  796  <|@ instruction v51|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v26|DWORD) condition: > <|@ <|@
      nr  798  <|@ instruction TESTBRANCH (x: v51|DWORD, y: v51|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction CMPBRANCH (x: v51|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction CMPBRANCH (x: v51|DWORD, y: v26|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction v52|QWORD[*] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction v53|QWORD[*] = MOVE input: v50|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction v54|QWORD = MOVE input: v51|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction rdi|QWORD = LEA address: [v52|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v148|QWORD[.] = MOVE input: v145|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  864  <|@ instruction rsi|QWORD = LEA address: [v53|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = STACKMOVE (input: v146|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  866  <|@ instruction rdx|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v151|DWORD = STACKMOVE (input: v133|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v152|DWORD = STACKMOVE (input: v126|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v153|DWORD = STACKMOVE (input: v123|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v149|DWORD = STACKMOVE (input: v124|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v154|QWORD[.] = STACKMOVE (input: v148|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v147|QWORD[.] = MOVE input: v50|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  868  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  870  <|@ instruction JUMP ~outgoingValues: [v50|QWORD[.]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B8" "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588388498606785848
    begin_IR
      LIR
      nr  872  <|@ instruction [v55|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v56|QWORD, temp2: v57|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr  988  <|@ instruction v58|DWORD[_] = COMPRESSPOINTER (input: v55|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  990  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v58|DWORD[_]) size: DWORD <|@ <|@
      nr  992  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v55|QWORD[.]) {temp: v59|QWORD, temp2: v60|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr  994  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4584865046447166825
    begin_IR
      LIR
      nr  996  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v159|QWORD[.] = MOVE input: v156|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1140  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1142  <|@ instruction rdx|DWORD = MOVE input: v85|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v160|QWORD[.] = STACKMOVE (input: v125|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v161|QWORD[.] = MOVE input: v159|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1144  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v0|QWORD[.] v9|QWORD[.] 
locals: v0|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:24, 21, 37, 2, 2] <|@ <|@
      nr 1146  <|@ instruction v87|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v162|QWORD[.] = MOVE input: v161|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1148  <|@ instruction v88|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1150  <|@ instruction rcx|DWORD = MOVE input: v88|DWORD moveKind: DWORD <|@ <|@
      nr 1152  <|@ instruction v89|DWORD = SHL (x: v87|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v163|QWORD[.] = MOVE input: v162|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1154  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1156  <|@ instruction rdx|DWORD = MOVE input: v89|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v164|QWORD[.] = STACKMOVE (input: v163|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1158  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v0|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:32, 21, 37, 2, 2] <|@ <|@
      nr 1160  <|@ instruction v90|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v165|QWORD[.] = MOVE input: v164|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1162  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v91|QWORD, temp2: v92|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr 1164  <|@ instruction v93|DWORD[_] = COMPRESSPOINTER (input: v90|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr 1166  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v93|DWORD[_]) size: DWORD <|@ <|@
      nr 1168  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v90|QWORD[.]) {temp: v94|QWORD, temp2: v95|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr 1170  <|@ instruction JUMP ~outgoingValues: [v90|QWORD[.]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4560668027509911113
    begin_IR
      LIR
      nr 1172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v166|QWORD[.] = MOVE input: v165|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1188  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v167|QWORD[.] = MOVE input: v166|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1190  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v6|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:18, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr 1192  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction TESTBRANCH (x: v6|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B40" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction v74|DWORD = SHR value: v64|DWORD size: DWORD <|@ <|@
      nr 1222  <|@ instruction v75|DWORD = ADD (x: v6|DWORD, y: v62|DWORD) size: DWORD <|@ <|@
      nr 1224  <|@ instruction CMPBRANCH (x: v75|DWORD, y: v74|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction v77|QWORD[*] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1268  <|@ instruction v78|QWORD[*] = MOVE input: v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1270  <|@ instruction v79|QWORD[*] = LEA address: [v77|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1272  <|@ instruction v80|QWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr 1274  <|@ instruction v81|QWORD = SHL value: v80|QWORD size: QWORD <|@ <|@
      nr 1276  <|@ instruction v82|QWORD = LEA address: [v81|QWORD + 16] size: QWORD <|@ <|@
      nr 1278  <|@ instruction v83|QWORD[*] = ADD (x: v82|QWORD, y: v78|QWORD[*]) size: QWORD <|@ <|@
      nr 1280  <|@ instruction rsi|QWORD = MOVE input: v79|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1282  <|@ instruction rdx|QWORD = MOVE input: v83|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1284  <|@ instruction rcx|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr 1286  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr 1288  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4558404756106723069
    begin_IR
      LIR
      nr 1290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1292  <|@ instruction v119|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction rsi|QWORD = MOVE input: v119|QWORD moveKind: QWORD <|@ <|@
      nr 1314  <|@ instruction rdx|DWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr 1316  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr 1318  <|@ instruction v44|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1320  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v44|QWORD[.]] state [bci:0] <|@ <|@
      nr 1322  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B17" 
    xhandlers
    flags 
    probability 4558352100778371553
    begin_IR
      LIR
      nr 1324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction rcx|QWORD = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr 1346  <|@ instruction ZERO_MEMORY (pointer: [v39|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1348  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4521739169494778405
    begin_IR
      LIR
      nr 1350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction v28|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1376  <|@ instruction v29|QWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr 1378  <|@ instruction v30|QWORD = LEA address: [v29|QWORD + 23] size: QWORD <|@ <|@
      nr 1380  <|@ instruction v31|QWORD = AND x: v30|QWORD y: -8 size: QWORD <|@ <|@
      nr 1382  <|@ instruction v32|QWORD = ADD (x: v31|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr 1384  <|@ instruction CMPBRANCH (x: v32|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4521692882062356696
    begin_IR
      LIR
      nr 1386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction MOV (x: [r15|QWORD + 440], y: v32|QWORD) size: QWORD <|@ <|@
      nr 1412  <|@ instruction AMD64PREFETCH ~address: [v31|QWORD + v28|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1414  <|@ instruction AMD64PREFETCH ~address: [v31|QWORD + v28|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1416  <|@ instruction AMD64PREFETCH ~address: [v31|QWORD + v28|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1418  <|@ instruction MOV x: [v28|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1420  <|@ instruction MOV x: [v28|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr 1422  <|@ instruction MOV (x: [v28|QWORD + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr 1424  <|@ instruction v35|QWORD[.] = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr 1426  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 4521739169494778405
    begin_IR
      LIR
      nr 1428  <|@ instruction [v36|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction v37|QWORD[*] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1460  <|@ instruction v38|QWORD[*] = MOVE input: v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v172|QWORD[.] = MOVE input: v36|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1462  <|@ instruction rdi|QWORD = LEA address: [v37|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1464  <|@ instruction rsi|QWORD = LEA address: [v38|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1466  <|@ instruction rdx|QWORD = MOVE input: v29|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v173|DWORD = STACKMOVE (input: v171|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v174|QWORD[.] = STACKMOVE (input: v172|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1468  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1470  <|@ instruction JUMP ~outgoingValues: [v36|QWORD[.]] destination: B8 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4491510020210992795
    begin_IR
      LIR
      nr 1472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1474  <|@ instruction v120|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction rsi|QWORD = MOVE input: v120|QWORD moveKind: QWORD <|@ <|@
      nr 1496  <|@ instruction rdx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr 1498  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr 1500  <|@ instruction v33|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1502  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v33|QWORD[.]] state [bci:0] <|@ <|@
      nr 1504  <|@ instruction JUMP ~outgoingValues: [v33|QWORD[.]] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction JUMP ~outgoingValues: [int[-151321|0xfffffffffffdb0e7], long[0|0x0]] destination: B23 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction JUMP ~outgoingValues: [int[-149273|0xfffffffffffdb8e7], long[0|0x0]] destination: B19 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction JUMP ~outgoingValues: [int[-145177|0xfffffffffffdc8e7]] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction JUMP ~outgoingValues: [int[-159769|0xfffffffffffd8fe7], long[0|0x0]] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction JUMP ~outgoingValues: [int[-146201|0xfffffffffffdc4e7]] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction JUMP ~outgoingValues: [int[-148243|0xfffffffffffdbced], long[5140|0x1414]] destination: B42 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction JUMP ~outgoingValues: [int[-150297|0xfffffffffffdb4e7], long[0|0x0]] destination: B21 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction JUMP ~outgoingValues: [int[-157721|0xfffffffffffd97e7], long[0|0x0]] destination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction JUMP ~outgoingValues: [int[-155667|0xfffffffffffd9fed], long[3220|0xc94]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction JUMP ~outgoingValues: [int[-98355|0xfffffffffffe7fcd], long[660|0x294]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B42" "B19" "B21" "B23" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1606  <|@ instruction [v117|DWORD, v118|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v117|DWORD) size: DWORD <|@ <|@
      nr 1624  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v118|QWORD) size: QWORD <|@ <|@
      nr 1626  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction JUMP ~outgoingValues: [int[-144153|0xfffffffffffdcce7]] destination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction JUMP ~outgoingValues: [int[-158745|0xfffffffffffd93e7], long[0|0x0]] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction JUMP ~outgoingValues: [int[-143129|0xfffffffffffdd0e7]] destination: B31 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B31" "B36" "B33" "B38" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1658  <|@ instruction [v76|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v76|DWORD) size: DWORD <|@ <|@
      nr 1676  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1678  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v6|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction JUMP ~outgoingValues: [int[-156697|0xfffffffffffd9be7], long[0|0x0]] destination: B49 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B49" "B58" "B51" "B53" "B55" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1690  <|@ instruction [v115|DWORD, v116|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v115|DWORD) size: DWORD <|@ <|@
      nr 1708  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v116|QWORD) size: QWORD <|@ <|@
      nr 1710  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #89         // append:(java.lang.CharSequence)java.lang.StringBuilder
     5: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q v0|q [0, 1[[270, 271[[504, 505[[538, 540[[868, 869[[1144, 1146[[1158, 1160[[1190, 1191[[1316, 1318[[1346, 1347[[1468, 1469[[1498, 1500[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v7|d [0, 1[[58, 61[[100, 103[[204, 207[[270, 271[[384, 387[[408, 411[[504, 505[[574, 577[[582, 585[[618, 621[[622, 625[[868, 869[[1144, 1145[[1150, 1153[[1158, 1159[[1190, 1191[[1284, 1286[[1344, 1347[[1468, 1469[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v73|q [0, 44[[268, 271[[502, 505[[866, 869[[1142, 1145[[1156, 1159[[1190, 1191[[1282, 1287[[1314, 1316[[1466, 1469[[1496, 1498[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 38[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v0|q [0, 42[[266, 271[[500, 505[[864, 869[[1140, 1145[[1154, 1159[[1188, 1191[[1280, 1287[[1312, 1316[[1464, 1469[[1494, 1498[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[264, 271[[498, 505[[862, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1286, 1287[[1346, 1347[[1462, 1469[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1286, 1287[[1468, 1469[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1286, 1287[[1468, 1469[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [42, 226[42 MustHaveRegister 46 MustHaveRegister 52 MustHaveRegister 54 MustHaveRegister 174 MustHaveRegister 178 MustHaveRegister  "StoreAtDefinition"
  v1|q QWORD "[rdx|q]" v1|q rdx|d [44, 226[[288, 442[44 MustHaveRegister 50 MustHaveRegister 92 MustHaveRegister 96 MustHaveRegister 170 MustHaveRegister 184 MustHaveRegister 316 MustHaveRegister 352 MustHaveRegister 360 MustHaveRegister 406 MustHaveRegister  "StoreAtDefinition"
  v2|d DWORD "[rdi|d]" v2|d -1 [46, 62[46 MustHaveRegister 48 MustHaveRegister 62 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d -1 [48, 110[[542, 810[48 MustHaveRegister 60 ShouldHaveRegister 578 ShouldHaveRegister 586 ShouldHaveRegister 592 ShouldHaveRegister 626 MustHaveRegister 794 MustHaveRegister 796 ShouldHaveRegister 810 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[r11|d]" v4|d -1 [50, 66[[288, 298[50 MustHaveRegister 64 ShouldHaveRegister 298 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[r8|d]" v5|d -1 [52, 130[[542, 824[52 MustHaveRegister 56 ShouldHaveRegister 130 ShouldHaveRegister  "OneSpillStore"
  v6|d DWORD "[r9|d]" v6|d -1 [54, 226[[288, 318[[542, 824[54 MustHaveRegister 104 ShouldHaveRegister 206 ShouldHaveRegister 318 ShouldHaveRegister  "SpillInDominator"
  v7|d DWORD "[rbx|d]" v7|d -1 [56, 110[[542, 622[56 MustHaveRegister 58 ShouldHaveRegister 574 ShouldHaveRegister 582 ShouldHaveRegister 618 ShouldHaveRegister 622 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[rax|d]" v8|d v3|d [60, 107[[288, 321[60 MustHaveRegister 106 ShouldHaveRegister 320 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[rdi|q]" v9|q v2|d [62, 110[[288, 333[[542, 856[62 MustHaveRegister 332 ShouldHaveRegister 856 ShouldHaveRegister  "OneSpillStore"
  v10|d DWORD "[rcx|d]" v10|d -1 [92, 94[92 MustHaveRegister 94 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[r11|d]" v11|d -1 [94, 102[94 MustHaveRegister 102 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[rbp|d]" v12|d -1 [96, 130[[542, 824[96 MustHaveRegister 98 ShouldHaveRegister 130 MustHaveRegister  "OneSpillStore"
  v13|d DWORD "[rcx|d]" v13|d -1 [98, 100[98 MustHaveRegister 100 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[r11|d]" v14|d v11|d [102, 226[102 MustHaveRegister 104 ShouldHaveRegister  "StoreAtDefinition"
  v15|d DWORD "[r13|d]" v15|d v6|d [104, 110[[542, 576[104 MustHaveRegister 106 MustHaveRegister 576 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[rcx|d]" v16|d v15|d [106, 108[106 MustHaveRegister 108 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[r13|d]" v17|d v15|d [576, 578[576 MustHaveRegister 578 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[r13|d]" v18|d v17|d [578, 590[578 MustHaveRegister 588 ShouldHaveRegister 590 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[rax|d]" v19|d v20|d [584, 586[584 MustHaveRegister 586 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[rax|d]" v20|d -1 [580, 584[580 MustHaveRegister 584 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[rax|d]" v21|d v19|d [586, 591[586 MustHaveRegister 588 MustHaveRegister 590 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[r13|d]" v22|d v18|d [590, 592[590 MustHaveRegister 592 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[r13|d]" v23|d v22|d [592, 620[592 MustHaveRegister 594 ShouldHaveRegister 620 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[rcx|d]" v24|d v23|d [594, 596[594 MustHaveRegister 596 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[r13|d]" v25|d v23|d [620, 624[620 MustHaveRegister 624 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[r13|d]" v26|d v25|d [624, 822[[1290, 1350[624 MustHaveRegister 626 ShouldHaveRegister 654 ShouldHaveRegister 706 MustHaveRegister 794 ShouldHaveRegister 796 MustHaveRegister 822 ShouldHaveRegister 1314 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[rdi|q]" v28|q -1 [1374, 1424[1374 MustHaveRegister 1382 ShouldHaveRegister 1412 MustHaveRegister 1414 MustHaveRegister 1416 MustHaveRegister 1418 MustHaveRegister 1420 MustHaveRegister 1422 MustHaveRegister 1424 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[r11|q]" v29|q v3|d [1376, 1466[[1472, 1506[1376 MustHaveRegister 1378 MustHaveRegister 1466 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[rsi|q]" v30|q -1 [1378, 1380[1378 MustHaveRegister 1380 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[rsi|q]" v31|q v30|q [1380, 1417[1380 MustHaveRegister 1382 ShouldHaveRegister 1412 MustHaveRegister 1414 MustHaveRegister 1416 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[rdx|q]" v32|q v31|q [1382, 1410[1382 MustHaveRegister 1384 MustHaveRegister 1410 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rax|q]" v33|q rax|q [1500, 1505[1500 MustHaveRegister 1502 MustHaveRegister 1504 ShouldHaveRegister  "NoSpillStore"
  v35|q QWORD "[rdi|q]" v35|q v28|q [1424, 1427[1424 MustHaveRegister 1426 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[rdi|q]" v36|q v35|q [1428, 1461[1460 ShouldHaveRegister  "OneSpillStore"
  v37|q QWORD "[rsi|q]" v37|q v9|q [1458, 1462[1458 MustHaveRegister 1462 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[rdx|q]" v38|q v36|q [1460, 1464[1460 MustHaveRegister 1464 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[rbx|q]" v39|q -1 [652, 776[[1324, 1350[652 MustHaveRegister 660 ShouldHaveRegister 696 MustHaveRegister 698 MustHaveRegister 700 MustHaveRegister 702 MustHaveRegister 704 MustHaveRegister 706 MustHaveRegister 750 MustHaveRegister 755 LiveAtLoopEnd 776 ShouldHaveRegister 1346 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rcx|q]" v40|q v26|d [654, 656[654 MustHaveRegister 656 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rcx|q]" v41|q -1 [656, 658[656 MustHaveRegister 658 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[rcx|q]" v42|q v41|q [658, 756[658 MustHaveRegister 660 ShouldHaveRegister 696 MustHaveRegister 698 MustHaveRegister 700 MustHaveRegister 708 MustHaveRegister 732 MustHaveRegister 755 LiveAtLoopEnd  "NoSpillStore"
  v43|q QWORD "[rax|q]" v43|q v42|q [660, 694[660 MustHaveRegister 662 MustHaveRegister 694 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[rax|q]" v44|q rax|q [1318, 1323[1318 MustHaveRegister 1320 MustHaveRegister 1322 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[rax|q]" v45|q -1 [708, 712[[1324, 1344[708 MustHaveRegister 710 ShouldHaveRegister 1344 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[rax|q]" v46|q v47|q [722, 752[732 ShouldHaveRegister 750 MustHaveRegister 752 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[rax|q]" v47|q v46|q [752, 755[752 MustHaveRegister 754 ShouldHaveRegister  "NoSpillStore"
  v49|q QWORD "[rbx|q]" v49|q v39|q [776, 779[776 MustHaveRegister 778 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[rbx|q]" v50|q v49|q [780, 867[858 ShouldHaveRegister  "OneSpillStore"
  v51|d DWORD "[rcx|d]" v51|d v3|d [796, 860[796 MustHaveRegister 798 MustHaveRegister 810 MustHaveRegister 822 MustHaveRegister 860 ShouldHaveRegister  "NoSpillStore"
  v52|q QWORD "[rdi|q]" v52|q v9|q [856, 862[856 MustHaveRegister 862 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[r10|q]" v53|q v50|q [858, 864[858 MustHaveRegister 864 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[rcx|q]" v54|q v51|d [860, 866[860 MustHaveRegister 866 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[rbx|q]" v55|q v50|q [872, 993[988 MustHaveRegister 992 MustHaveRegister  "NoSpillStore"
  v56|q QWORD "[rdx|q]" v56|q -1 [986, 987[986 MustHaveRegister  "NoDefinitionFound"
  v57|q QWORD "[r10|q]" v57|q -1 [986, 987[986 MustHaveRegister  "NoDefinitionFound"
  v58|d DWORD "[rdx|d]" v58|d v55|q [988, 990[988 MustHaveRegister 990 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[rdx|q]" v59|q -1 [992, 993[992 MustHaveRegister  "NoDefinitionFound"
  v60|q QWORD "[r10|q]" v60|q -1 [992, 993[992 MustHaveRegister  "NoDefinitionFound"
  v61|d DWORD "[rcx|d]" v61|d -1 [170, 182[170 MustHaveRegister 172 MustHaveRegister 182 MustHaveRegister  "NoSpillStore"
  v62|d DWORD "[r10|d]" v62|d -1 [172, 262[172 MustHaveRegister 222 ShouldHaveRegister 262 ShouldHaveRegister  "NoSpillStore"
  v63|d DWORD "[rdi|d]" v63|d -1 [174, 180[174 MustHaveRegister 176 MustHaveRegister 180 MustHaveRegister  "NoSpillStore"
  v64|d DWORD "[r8|d]" v64|d -1 [176, 222[[1194, 1220[176 MustHaveRegister 222 MustHaveRegister 1220 ShouldHaveRegister  "NoSpillStore"
  v65|d DWORD "[rbx|d]" v65|d -1 [178, 202[178 MustHaveRegister 184 MustHaveRegister 202 ShouldHaveRegister  "NoSpillStore"
  v66|q QWORD "[rdi|q]" v66|q v63|d [180, 260[[1194, 1268[180 MustHaveRegister 260 ShouldHaveRegister 1268 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[rax|q]" v67|q v61|d [182, 258[[1194, 1266[182 MustHaveRegister 258 ShouldHaveRegister 1266 ShouldHaveRegister  "NoSpillStore"
  v68|d DWORD "[rcx|d]" v68|d -1 [202, 204[202 MustHaveRegister 204 ShouldHaveRegister  "NoSpillStore"
  v69|d DWORD "[rbx|d]" v69|d v6|d [206, 266[206 MustHaveRegister 208 MustHaveRegister 224 MustHaveRegister 266 MustHaveRegister  "NoSpillStore"
  v70|d DWORD "[r8|d]" v70|d v64|d [222, 224[222 MustHaveRegister 224 ShouldHaveRegister  "NoSpillStore"
  v71|q QWORD "[rax|q]" v71|q v67|q [258, 264[258 MustHaveRegister 264 MustHaveRegister  "NoSpillStore"
  v72|q QWORD "[rdx|q]" v72|q v66|q [260, 266[260 MustHaveRegister 266 MustHaveRegister  "NoSpillStore"
  v73|q QWORD "[r10|q]" v73|q v62|d [262, 268[262 MustHaveRegister 268 ShouldHaveRegister  "NoSpillStore"
  v74|d DWORD "[r8|d]" v74|d v64|d [1220, 1224[1220 MustHaveRegister 1224 ShouldHaveRegister  "NoSpillStore"
  v75|d DWORD "[rsi|d]" v75|d v6|d [1222, 1224[1222 MustHaveRegister 1224 MustHaveRegister  "NoSpillStore"
  v76|d DWORD "[r10|d]" v76|d -1 [1658, 1674[1674 MustHaveRegister  "NoSpillStore"
  v77|q QWORD "[rax|q]" v77|q v67|q [1266, 1270[1266 MustHaveRegister 1270 MustHaveRegister  "NoSpillStore"
  v78|q QWORD "[rdi|q]" v78|q v66|q [1268, 1278[1268 MustHaveRegister 1278 ShouldHaveRegister  "NoSpillStore"
  v79|q QWORD "[rsi|q]" v79|q -1 [1270, 1280[1270 MustHaveRegister 1280 ShouldHaveRegister  "NoSpillStore"
  v80|q QWORD "[r9|q]" v80|q v6|d [1272, 1274[1272 MustHaveRegister 1274 ShouldHaveRegister  "NoSpillStore"
  v81|q QWORD "[r9|q]" v81|q v80|q [1274, 1276[1274 MustHaveRegister 1276 MustHaveRegister  "NoSpillStore"
  v82|q QWORD "[rdx|q]" v82|q -1 [1276, 1278[1276 MustHaveRegister 1278 ShouldHaveRegister  "NoSpillStore"
  v83|q QWORD "[rdx|q]" v83|q v82|q [1278, 1282[1278 MustHaveRegister 1282 ShouldHaveRegister  "NoSpillStore"
  v84|d DWORD "[r10|d]" v84|d -1 [316, 442[316 MustHaveRegister 318 ShouldHaveRegister  "OneSpillStore"
  v85|d DWORD "[r11|d]" v85|d v84|d [318, 324[[996, 1142[318 MustHaveRegister 320 MustHaveRegister 1142 ShouldHaveRegister  "NoSpillStore"
  v86|d DWORD "[rcx|d]" v86|d v85|d [320, 322[320 MustHaveRegister 322 ShouldHaveRegister  "NoSpillStore"
  v87|d DWORD "[rax|d]" v87|d rax|q [1146, 1152[1146 MustHaveRegister 1152 ShouldHaveRegister  "NoSpillStore"
  v88|d DWORD "[rcx|d]" v88|d -1 [1148, 1150[1148 MustHaveRegister 1150 ShouldHaveRegister  "NoSpillStore"
  v89|d DWORD "[rax|d]" v89|d v87|d [1152, 1156[1152 MustHaveRegister 1156 ShouldHaveRegister  "NoSpillStore"
  v90|q QWORD "[rax|q]" v90|q rax|q [1160, 1171[1160 MustHaveRegister 1164 MustHaveRegister 1168 MustHaveRegister 1170 ShouldHaveRegister  "NoSpillStore"
  v91|q QWORD "[r10|q]" v91|q -1 [1162, 1163[1162 MustHaveRegister  "NoDefinitionFound"
  v92|q QWORD "[r11|q]" v92|q -1 [1162, 1163[1162 MustHaveRegister  "NoDefinitionFound"
  v93|d DWORD "[r10|d]" v93|d v90|q [1164, 1166[1164 MustHaveRegister 1166 MustHaveRegister  "NoSpillStore"
  v94|q QWORD "[r10|q]" v94|q -1 [1168, 1169[1168 MustHaveRegister  "NoDefinitionFound"
  v95|q QWORD "[r11|q]" v95|q -1 [1168, 1169[1168 MustHaveRegister  "NoDefinitionFound"
  v96|q QWORD "[rdi|q]" v96|q v9|q [334, 494[356 MustHaveRegister 494 ShouldHaveRegister  "NoSpillStore"
  v97|d DWORD "[r11|d]" v97|d -1 [352, 490[352 MustHaveRegister 354 MustHaveRegister 490 MustHaveRegister  "NoSpillStore"
  v98|d DWORD "[r8|d]" v98|d -1 [354, 424[354 MustHaveRegister 424 ShouldHaveRegister  "NoSpillStore"
  v99|d DWORD "[r9|d]" v99|d -1 [356, 438[356 MustHaveRegister 438 MustHaveRegister  "NoSpillStore"
  v100|d DWORD "[rcx|d]" v100|d -1 [358, 382[358 MustHaveRegister 360 MustHaveRegister 382 ShouldHaveRegister  "NoSpillStore"
  v101|d DWORD "[rbx|d]" v101|d -1 [380, 442[380 MustHaveRegister 386 ShouldHaveRegister  "OneSpillStore"
  v102|d DWORD "[rax|d]" v102|d -1 [382, 408[382 MustHaveRegister 384 ShouldHaveRegister 408 ShouldHaveRegister  "NoSpillStore"
  v103|d DWORD "[rbp|d]" v103|d v101|d [386, 500[386 MustHaveRegister 388 MustHaveRegister 440 MustHaveRegister 500 MustHaveRegister  "NoSpillStore"
  v104|d DWORD "[r13|d]" v104|d -1 [406, 410[406 MustHaveRegister 410 ShouldHaveRegister  "NoSpillStore"
  v105|d DWORD "[r13|d]" v105|d v104|d [410, 496[410 MustHaveRegister 412 MustHaveRegister 424 MustHaveRegister 438 ShouldHaveRegister 496 ShouldHaveRegister  "NoSpillStore"
  v106|d DWORD "[r9|d]" v106|d v99|d [438, 440[438 MustHaveRegister 440 ShouldHaveRegister  "NoSpillStore"
  v107|q QWORD "[r11|q]" v107|q v97|d [490, 492[490 MustHaveRegister 492 ShouldHaveRegister  "NoSpillStore"
  v108|q QWORD "[r11|q]" v108|q v107|q [492, 498[492 MustHaveRegister 498 MustHaveRegister  "NoSpillStore"
  v109|q QWORD "[r8|q]" v109|q v96|q [494, 500[494 MustHaveRegister 500 MustHaveRegister  "NoSpillStore"
  v110|q QWORD "[r13|q]" v110|q v105|d [496, 502[496 MustHaveRegister 502 ShouldHaveRegister  "NoSpillStore"
  v111|d DWORD "[r10|d]" v111|d v84|d [506, 508[506 MustHaveRegister 508 MustHaveRegister  "NoSpillStore"
  v112|d DWORD "[rax|d]" v112|d -1 [510, 514[510 MustHaveRegister 514 ShouldHaveRegister  "NoSpillStore"
  v113|d DWORD "[rcx|d]" v113|d -1 [512, 514[512 MustHaveRegister 514 ShouldHaveRegister  "NoSpillStore"
  v114|d DWORD "[rax|d]" v114|d v112|d [514, 516[514 MustHaveRegister 516 MustHaveRegister  "NoSpillStore"
  v115|d DWORD "[r10|d]" v115|d -1 [1690, 1706[1706 MustHaveRegister  "NoSpillStore"
  v116|q QWORD "[r11|q]" v116|q -1 [1690, 1708[1708 MustHaveRegister  "NoSpillStore"
  v117|d DWORD "[r10|d]" v117|d -1 [1606, 1622[1622 MustHaveRegister  "NoSpillStore"
  v118|q QWORD "[r11|q]" v118|q -1 [1606, 1624[1624 MustHaveRegister  "NoSpillStore"
  v119|q QWORD "[rsi|q]" v119|q -1 [1292, 1312[1292 MustHaveRegister 1312 ShouldHaveRegister  "NoSpillStore"
  v120|q QWORD "[rsi|q]" v120|q -1 [1474, 1494[1474 MustHaveRegister 1494 ShouldHaveRegister  "NoSpillStore"
  v121|q QWORD "[vstack:0|q]" v0|q v0|q [226, 265[ "StoreAtDefinition"
  v122|q QWORD "[vstack:4|q]" v1|q v1|q [442, 501[ "StoreAtDefinition"
  v123|d DWORD "[vstack:9|d]" v5|d v5|d [824, 867[ "OneSpillStore"
  v124|d DWORD "[vstack:8|d]" v6|d v6|d [824, 867[ "SpillInDominator"
  v125|q QWORD "[vstack:11|q]" v9|q v9|q [996, 1143[ "OneSpillStore"
  v126|d DWORD "[vstack:10|d]" v12|d v12|d [824, 867[ "OneSpillStore"
  v127|d DWORD "[vstack:2|d]" v14|d v14|d [226, 269[ "StoreAtDefinition"
  v128|d DWORD "[vstack:2|d]" v14|d v14|d [269, 274[ "StoreAtDefinition"
  v129|q QWORD "[vstack:0|q]" v0|q v0|q [265, 269[ "StoreAtDefinition"
  v130|q QWORD "[vstack:0|q]" v0|q v0|q [269, 274[ "StoreAtDefinition"
  v131|q QWORD "[rsi|q]" v0|q v0|q [274, 442[284 MustHaveRegister 358 MustHaveRegister 380 MustHaveRegister  "StoreAtDefinition"
  v132|d DWORD "[r11|d]" v14|d v14|d [274, 284[[542, 824[284 MustHaveRegister  "StoreAtDefinition"
  v133|d DWORD "[vstack:2|d]" v14|d v14|d [824, 867[ "StoreAtDefinition"
  v134|q QWORD "[vstack:0|q]" v0|q v0|q [442, 499[ "StoreAtDefinition"
  v135|d DWORD "[vstack:5|d]" v84|d v84|d [442, 503[ "OneSpillStore"
  v136|d DWORD "[vstack:6|d]" v101|d v101|d [442, 503[ "OneSpillStore"
  v137|d DWORD "[vstack:6|d]" v101|d v101|d [503, 506[506 ShouldHaveRegister  "OneSpillStore"
  v138|d DWORD "[vstack:5|d]" v84|d v84|d [503, 506[[996, 1172[[1536, 1546[[1576, 1596[[1638, 1648[[1680, 1690[506 ShouldHaveRegister  "OneSpillStore"
  v139|q QWORD "[vstack:0|q]" v0|q v0|q [499, 503[ "StoreAtDefinition"
  v140|q QWORD "[vstack:4|q]" v1|q v1|q [501, 511[ "StoreAtDefinition"
  v141|q QWORD "[vstack:0|q]" v0|q v0|q [503, 507[ "StoreAtDefinition"
  v142|q QWORD "[rdx|q]" v1|q v1|q [511, 512[[542, 824[512 MustHaveRegister  "StoreAtDefinition"
  v143|d DWORD "[r8|d]" v84|d v84|d [1690, 1711[ "OneSpillStore"
  v144|q QWORD "[rsi|q]" v0|q v0|q [507, 538[[542, 824[508 MustHaveRegister 510 MustHaveRegister 516 MustHaveRegister 538 ShouldHaveRegister  "StoreAtDefinition"
  v145|q QWORD "[vstack:0|q]" v0|q v0|q [824, 863[ "StoreAtDefinition"
  v146|q QWORD "[vstack:4|q]" v1|q v1|q [824, 865[ "StoreAtDefinition"
  v147|q QWORD "[vstack:7|q]" v50|q v50|q [867, 871[870 ShouldHaveRegister  "OneSpillStore"
  v148|q QWORD "[vstack:0|q]" v0|q v0|q [863, 867[ "StoreAtDefinition"
  v149|d DWORD "[vstack:8|d]" v6|d v6|d [867, 996[[1172, 1194[ "SpillInDominator"
  v150|q QWORD "[vstack:4|q]" v1|q v1|q [865, 1226[[1290, 1627[[1628, 1679[[1680, 1690[ "StoreAtDefinition"
  v151|d DWORD "[vstack:2|d]" v14|d v14|d [867, 996[[1172, 1506[[1526, 1536[[1546, 1556[[1628, 1638[[1648, 1658[ "StoreAtDefinition"
  v152|d DWORD "[vstack:10|d]" v12|d v12|d [867, 996[[1290, 1506[ "OneSpillStore"
  v153|d DWORD "[vstack:9|d]" v5|d v5|d [867, 996[[1290, 1506[ "OneSpillStore"
  v154|q QWORD "[vstack:0|q]" v0|q v0|q [867, 872[ "StoreAtDefinition"
  v155|q QWORD "[rdx|q]" v1|q v1|q [1690, 1711[ "StoreAtDefinition"
  v156|q QWORD "[rsi|q]" v0|q v0|q [872, 1139[986 MustHaveRegister 990 MustHaveRegister 992 MustHaveRegister  "StoreAtDefinition"
  v157|d DWORD "[r9|d]" v6|d v6|d [1194, 1272[[1290, 1428[1204 MustHaveRegister 1222 ShouldHaveRegister 1272 ShouldHaveRegister  "SpillInDominator"
  v158|d DWORD "[r11|d]" v14|d v14|d [1658, 1679[ "StoreAtDefinition"
  v159|q QWORD "[r10|q]" v0|q v0|q [1139, 1143[1140 ShouldHaveRegister  "StoreAtDefinition"
  v160|q QWORD "[vstack:11|q]" v9|q v9|q [1143, 1154[[1290, 1458[[1472, 1506[1154 ShouldHaveRegister 1458 ShouldHaveRegister  "OneSpillStore"
  v161|q QWORD "[vstack:0|q]" v0|q v0|q [1143, 1147[ "StoreAtDefinition"
  v162|q QWORD "[rsi|q]" v0|q v0|q [1147, 1153[1148 MustHaveRegister  "StoreAtDefinition"
  v163|q QWORD "[vstack:0|q]" v0|q v0|q [1153, 1157[ "StoreAtDefinition"
  v164|q QWORD "[vstack:0|q]" v0|q v0|q [1157, 1161[ "StoreAtDefinition"
  v165|q QWORD "[rsi|q]" v0|q v0|q [1161, 1187[1162 MustHaveRegister 1166 MustHaveRegister 1168 MustHaveRegister  "StoreAtDefinition"
  v166|q QWORD "[r10|q]" v0|q v0|q [1187, 1189[1188 ShouldHaveRegister  "StoreAtDefinition"
  v167|q QWORD "[vstack:0|q]" v0|q v0|q [1189, 1627[[1628, 1679[[1680, 1690[ "StoreAtDefinition"
  v168|d DWORD "[r10|d]" v62|d v62|d [1194, 1284[1222 ShouldHaveRegister 1284 ShouldHaveRegister  "NoSpillStore"
  v169|d DWORD "[r10|d]" v3|d v3|d [1290, 1422[[1472, 1496[1376 ShouldHaveRegister 1422 MustHaveRegister 1496 ShouldHaveRegister  "NoSpillStore"
  v170|q QWORD "[rsi|q]" v0|q v0|q [1690, 1711[ "StoreAtDefinition"
  v171|d DWORD "[vstack:8|d]" v6|d v6|d [1428, 1467[ "SpillInDominator"
  v172|q QWORD "[vstack:12|q]" v36|q v36|q [1461, 1467[ "OneSpillStore"
  v173|d DWORD "[vstack:8|d]" v6|d v6|d [1467, 1506[[1526, 1536[[1546, 1556[[1628, 1638[[1648, 1658[ "SpillInDominator"
  v174|q QWORD "[vstack:12|q]" v36|q v36|q [1467, 1471[1470 ShouldHaveRegister  "OneSpillStore"
  v175|d DWORD "[r9|d]" v6|d v6|d [1658, 1679[ "SpillInDominator"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@24799e10 slotKind: QWORD <|@ <|@
      nr   42  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction v5|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction v6|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   56  <|@ instruction v7|DWORD = MOVSXB value: v5|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction v8|DWORD = SHR (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   64  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.6362310003571869 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B43 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:8|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction v10|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v11|DWORD = MOV input: [v10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   96  <|@ instruction v12|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   98  <|@ instruction v13|DWORD = MOVSXB value: v12|DWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction rcx|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction v14|DWORD = SHR (x: v11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  104  <|@ instruction v15|DWORD = ADD (x: v6|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction v16|DWORD = SUB (x: v15|DWORD, ~y: v8|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction CMPCONSTBRANCH x: v16|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603391649089349823
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B2" "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction CMPBRANCH (x: v12|DWORD, y: v5|DWORD) trueDestinationProbability: 0.998717015375415 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4603898526589647782
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" "B35" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction v61|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  172  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v6|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v62|DWORD = MOV input: [v61|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr  174  <|@ instruction v63|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  176  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v6|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v64|DWORD = MOV input: [v63|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr  178  <|@ instruction v65|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  180  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v63|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  182  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v61|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: v65|DWORD, y: [v1|QWORD[.] + 16]) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B35 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction v68|DWORD = MOVSXB value: v65|DWORD size: DWORD <|@ <|@
      nr  204  <|@ instruction rcx|DWORD = MOVE input: v68|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction v69|DWORD = SHL (x: v6|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  208  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction v70|DWORD = SUB (x: v64|DWORD, ~y: v62|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction CMPBRANCH (x: v69|DWORD, y: v70|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction v71|QWORD[*] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction v72|QWORD[*] = MOVE input: v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction v73|QWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction rdi|QWORD = LEA address: [v71|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = STACKMOVE (input: v121|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  266  <|@ instruction rsi|QWORD = LEA address: [v72|QWORD[*] + v69|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  268  <|@ instruction rdx|QWORD = MOVE input: v73|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v128|DWORD = STACKMOVE (input: v127|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v130|QWORD[.] = STACKMOVE (input: v129|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  270  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  272  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B34" "B40" 
    successors "B57" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction ADD (x: [v0|QWORD[.] + 12], y: v14|DWORD) size: DWORD <|@ <|@
      nr  286  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B44" "B60" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B60 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction v84|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  318  <|@ instruction v85|DWORD = ADD (x: v84|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr  320  <|@ instruction v86|DWORD = SUB (x: v85|DWORD, ~y: v8|DWORD) size: DWORD <|@ <|@
      nr  322  <|@ instruction CMPCONSTBRANCH x: v86|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599636671466445615
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction JUMP ~outgoingValues: [v9|QWORD[.]] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" "B58" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  334  <|@ instruction [v96|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction v97|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v98|DWORD = MOV input: [v97|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2] <|@ <|@
      nr  356  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v99|DWORD = MOV input: [v96|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2] <|@ <|@
      nr  358  <|@ instruction v100|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  360  <|@ instruction CMPBRANCH (x: v100|DWORD, y: [v1|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B58 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction v101|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  382  <|@ instruction v102|DWORD = MOVSXB value: v100|DWORD size: DWORD <|@ <|@
      nr  384  <|@ instruction rcx|DWORD = MOVE input: v102|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction v103|DWORD = SHL (x: v101|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  388  <|@ instruction TESTBRANCH (x: v103|DWORD, y: v103|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction v104|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  408  <|@ instruction rcx|DWORD = MOVE input: v102|DWORD moveKind: DWORD <|@ <|@
      nr  410  <|@ instruction v105|DWORD = SHL (x: v104|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: v105|DWORD, y: v105|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: v105|DWORD, y: v98|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction v106|DWORD = SUB (x: v99|DWORD, ~y: v105|DWORD) size: DWORD <|@ <|@
      nr  440  <|@ instruction CMPBRANCH (x: v103|DWORD, y: v106|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction v107|QWORD[.] = UNCOMPRESSPOINTER (input: v97|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  492  <|@ instruction v108|QWORD[*] = MOVE input: v107|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction v109|QWORD[*] = MOVE input: v96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction v110|QWORD = MOVE input: v105|DWORD moveKind: DWORD <|@ <|@
      nr  498  <|@ instruction rdi|QWORD = LEA address: [v108|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v139|QWORD[.] = MOVE input: v134|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  500  <|@ instruction rsi|QWORD = LEA address: [v109|QWORD[*] + v103|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v140|QWORD[.] = STACKMOVE (input: v122|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  502  <|@ instruction rdx|QWORD = MOVE input: v110|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v141|QWORD[.] = STACKMOVE (input: v139|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v137|DWORD = STACKMOVE (input: v136|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = STACKMOVE (input: v135|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  504  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  506  <|@ instruction v111|DWORD = ADD (x: v84|DWORD, y: v101|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v144|QWORD[.] = MOVE input: v141|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  508  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v111|DWORD) size: DWORD <|@ <|@
      nr  510  <|@ instruction v112|DWORD = MOVZXB input: [v0|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v142|QWORD[.] = MOVE input: v140|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  512  <|@ instruction v113|DWORD = MOVZXB input: [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  514  <|@ instruction v114|DWORD = OR (x: v112|DWORD, y: v113|DWORD) size: DWORD <|@ <|@
      nr  516  <|@ instruction MOVB (x: [v0|QWORD[.] + 17], y: reinterpret: v114|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B41" "B56" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B42" 
    xhandlers
    flags 
    probability 4588388498606785847
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  576  <|@ instruction v17|DWORD = SHL (x: v15|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  578  <|@ instruction v18|DWORD = SUB (x: v17|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr  580  <|@ instruction v20|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  582  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  584  <|@ instruction v19|DWORD = SHL (x: v20|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  586  <|@ instruction v21|DWORD = ADD (x: v19|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr  588  <|@ instruction CMP (x: v21|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr  590  <|@ instruction v22|DWORD = CMOVE (falseValue: v18|DWORD, ~trueValue: v21|DWORD) condition: > <|@ <|@
      nr  592  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr  594  <|@ instruction v24|DWORD = DEC value: v23|DWORD size: DWORD <|@ <|@
      nr  596  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B42 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4588388498606785847
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  620  <|@ instruction v25|DWORD = SAR (x: v23|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  622  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction v26|DWORD = SHL (x: v25|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  626  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v26|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4588388216090718820
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction v39|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  654  <|@ instruction v40|QWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction v41|QWORD = LEA address: [v40|QWORD + 23] size: QWORD <|@ <|@
      nr  658  <|@ instruction v42|QWORD = AND x: v41|QWORD y: -8 size: QWORD <|@ <|@
      nr  660  <|@ instruction v43|QWORD = ADD (x: v42|QWORD, y: v39|QWORD) size: QWORD <|@ <|@
      nr  662  <|@ instruction CMPBRANCH (x: v43|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B16" 
    xhandlers
    flags 
    probability 4588305942140169576
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction MOV (x: [r15|QWORD + 440], y: v43|QWORD) size: QWORD <|@ <|@
      nr  696  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v39|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  698  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v39|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  700  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v39|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  702  <|@ instruction MOV x: [v39|QWORD] y: 1 size: QWORD <|@ <|@
      nr  704  <|@ instruction MOV x: [v39|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  706  <|@ instruction MOV (x: [v39|QWORD + 12], y: v26|DWORD) size: DWORD <|@ <|@
      nr  708  <|@ instruction v45|QWORD = LEA address: [v42|QWORD - 16] size: QWORD <|@ <|@
      nr  710  <|@ instruction CMPCONSTBRANCH x: v45|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4588224490929125824
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617985760531553049
    begin_IR
      LIR
      nr  722  <|@ instruction [v46|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction CMPBRANCH (x: v42|QWORD, y: v46|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617922763110511397
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction MOV x: [v39|QWORD + v46|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  752  <|@ instruction v47|QWORD = LEA address: [v46|QWORD + 8] size: QWORD <|@ <|@
      nr  754  <|@ instruction JUMP ~outgoingValues: [v47|QWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588224490929125825
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588305942140169577
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction v49|QWORD[.] = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [v49|QWORD[.]] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  780  <|@ instruction [v50|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction CMP (x: v3|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr  796  <|@ instruction v51|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v26|DWORD) condition: > <|@ <|@
      nr  798  <|@ instruction TESTBRANCH (x: v51|DWORD, y: v51|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction CMPBRANCH (x: v51|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction CMPBRANCH (x: v51|DWORD, y: v26|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction v52|QWORD[*] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction v53|QWORD[*] = MOVE input: v50|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction v54|QWORD = MOVE input: v51|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction rdi|QWORD = LEA address: [v52|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v148|QWORD[.] = MOVE input: v145|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  864  <|@ instruction rsi|QWORD = LEA address: [v53|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = STACKMOVE (input: v146|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  866  <|@ instruction rdx|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v151|DWORD = STACKMOVE (input: v133|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v152|DWORD = STACKMOVE (input: v126|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v153|DWORD = STACKMOVE (input: v123|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v149|DWORD = STACKMOVE (input: v124|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v154|QWORD[.] = STACKMOVE (input: v148|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v147|QWORD[.] = MOVE input: v50|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  868  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  870  <|@ instruction JUMP ~outgoingValues: [v50|QWORD[.]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B8" "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588388498606785848
    begin_IR
      LIR
      nr  872  <|@ instruction [v55|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v56|QWORD, temp2: v57|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr  988  <|@ instruction v58|DWORD[_] = COMPRESSPOINTER (input: v55|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  990  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v58|DWORD[_]) size: DWORD <|@ <|@
      nr  992  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v55|QWORD[.]) {temp: v59|QWORD, temp2: v60|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr  994  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4584865046447166825
    begin_IR
      LIR
      nr  996  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v159|QWORD[.] = MOVE input: v156|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1140  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1142  <|@ instruction rdx|DWORD = MOVE input: v85|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v160|QWORD[.] = STACKMOVE (input: v125|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v161|QWORD[.] = MOVE input: v159|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1144  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v0|QWORD[.] v9|QWORD[.] 
locals: v0|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:24, 21, 37, 2, 2] <|@ <|@
      nr 1146  <|@ instruction v87|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v162|QWORD[.] = MOVE input: v161|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1148  <|@ instruction v88|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1150  <|@ instruction rcx|DWORD = MOVE input: v88|DWORD moveKind: DWORD <|@ <|@
      nr 1152  <|@ instruction v89|DWORD = SHL (x: v87|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v163|QWORD[.] = MOVE input: v162|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1154  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1156  <|@ instruction rdx|DWORD = MOVE input: v89|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v164|QWORD[.] = STACKMOVE (input: v163|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1158  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v0|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:32, 21, 37, 2, 2] <|@ <|@
      nr 1160  <|@ instruction v90|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v165|QWORD[.] = MOVE input: v164|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1162  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v91|QWORD, temp2: v92|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr 1164  <|@ instruction v93|DWORD[_] = COMPRESSPOINTER (input: v90|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr 1166  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v93|DWORD[_]) size: DWORD <|@ <|@
      nr 1168  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v90|QWORD[.]) {temp: v94|QWORD, temp2: v95|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr 1170  <|@ instruction JUMP ~outgoingValues: [v90|QWORD[.]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4560668027509911113
    begin_IR
      LIR
      nr 1172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v166|QWORD[.] = MOVE input: v165|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1188  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v167|QWORD[.] = MOVE input: v166|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1190  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v6|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:18, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr 1192  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction TESTBRANCH (x: v6|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B40" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction v74|DWORD = SHR value: v64|DWORD size: DWORD <|@ <|@
      nr 1222  <|@ instruction v75|DWORD = ADD (x: v6|DWORD, y: v62|DWORD) size: DWORD <|@ <|@
      nr 1224  <|@ instruction CMPBRANCH (x: v75|DWORD, y: v74|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction v77|QWORD[*] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1268  <|@ instruction v78|QWORD[*] = MOVE input: v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1270  <|@ instruction v79|QWORD[*] = LEA address: [v77|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1272  <|@ instruction v80|QWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr 1274  <|@ instruction v81|QWORD = SHL value: v80|QWORD size: QWORD <|@ <|@
      nr 1276  <|@ instruction v82|QWORD = LEA address: [v81|QWORD + 16] size: QWORD <|@ <|@
      nr 1278  <|@ instruction v83|QWORD[*] = ADD (x: v82|QWORD, y: v78|QWORD[*]) size: QWORD <|@ <|@
      nr 1280  <|@ instruction rsi|QWORD = MOVE input: v79|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1282  <|@ instruction rdx|QWORD = MOVE input: v83|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1284  <|@ instruction rcx|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr 1286  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr 1288  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4558404756106723069
    begin_IR
      LIR
      nr 1290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1292  <|@ instruction v119|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction rsi|QWORD = MOVE input: v119|QWORD moveKind: QWORD <|@ <|@
      nr 1314  <|@ instruction rdx|DWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr 1316  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr 1318  <|@ instruction v44|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1320  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v44|QWORD[.]] state [bci:0] <|@ <|@
      nr 1322  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B17" 
    xhandlers
    flags 
    probability 4558352100778371553
    begin_IR
      LIR
      nr 1324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction rcx|QWORD = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr 1346  <|@ instruction ZERO_MEMORY (pointer: [v39|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1348  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4521739169494778405
    begin_IR
      LIR
      nr 1350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction v28|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1376  <|@ instruction v29|QWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr 1378  <|@ instruction v30|QWORD = LEA address: [v29|QWORD + 23] size: QWORD <|@ <|@
      nr 1380  <|@ instruction v31|QWORD = AND x: v30|QWORD y: -8 size: QWORD <|@ <|@
      nr 1382  <|@ instruction v32|QWORD = ADD (x: v31|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr 1384  <|@ instruction CMPBRANCH (x: v32|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4521692882062356696
    begin_IR
      LIR
      nr 1386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction MOV (x: [r15|QWORD + 440], y: v32|QWORD) size: QWORD <|@ <|@
      nr 1412  <|@ instruction AMD64PREFETCH ~address: [v31|QWORD + v28|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1414  <|@ instruction AMD64PREFETCH ~address: [v31|QWORD + v28|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1416  <|@ instruction AMD64PREFETCH ~address: [v31|QWORD + v28|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1418  <|@ instruction MOV x: [v28|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1420  <|@ instruction MOV x: [v28|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr 1422  <|@ instruction MOV (x: [v28|QWORD + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr 1424  <|@ instruction v35|QWORD[.] = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr 1426  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 4521739169494778405
    begin_IR
      LIR
      nr 1428  <|@ instruction [v36|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction v37|QWORD[*] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1460  <|@ instruction v38|QWORD[*] = MOVE input: v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v172|QWORD[.] = MOVE input: v36|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1462  <|@ instruction rdi|QWORD = LEA address: [v37|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1464  <|@ instruction rsi|QWORD = LEA address: [v38|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1466  <|@ instruction rdx|QWORD = MOVE input: v29|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v173|DWORD = STACKMOVE (input: v171|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v174|QWORD[.] = STACKMOVE (input: v172|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1468  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1470  <|@ instruction JUMP ~outgoingValues: [v36|QWORD[.]] destination: B8 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4491510020210992795
    begin_IR
      LIR
      nr 1472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1474  <|@ instruction v120|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction rsi|QWORD = MOVE input: v120|QWORD moveKind: QWORD <|@ <|@
      nr 1496  <|@ instruction rdx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr 1498  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr 1500  <|@ instruction v33|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1502  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v33|QWORD[.]] state [bci:0] <|@ <|@
      nr 1504  <|@ instruction JUMP ~outgoingValues: [v33|QWORD[.]] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction JUMP ~outgoingValues: [int[-151321|0xfffffffffffdb0e7], long[0|0x0]] destination: B23 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction JUMP ~outgoingValues: [int[-149273|0xfffffffffffdb8e7], long[0|0x0]] destination: B19 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction JUMP ~outgoingValues: [int[-145177|0xfffffffffffdc8e7]] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction JUMP ~outgoingValues: [int[-159769|0xfffffffffffd8fe7], long[0|0x0]] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction JUMP ~outgoingValues: [int[-146201|0xfffffffffffdc4e7]] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction JUMP ~outgoingValues: [int[-148243|0xfffffffffffdbced], long[5140|0x1414]] destination: B42 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction JUMP ~outgoingValues: [int[-150297|0xfffffffffffdb4e7], long[0|0x0]] destination: B21 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction JUMP ~outgoingValues: [int[-157721|0xfffffffffffd97e7], long[0|0x0]] destination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction JUMP ~outgoingValues: [int[-155667|0xfffffffffffd9fed], long[3220|0xc94]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction JUMP ~outgoingValues: [int[-98355|0xfffffffffffe7fcd], long[660|0x294]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B42" "B19" "B21" "B23" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1606  <|@ instruction [v117|DWORD, v118|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v117|DWORD) size: DWORD <|@ <|@
      nr 1624  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v118|QWORD) size: QWORD <|@ <|@
      nr 1626  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction JUMP ~outgoingValues: [int[-144153|0xfffffffffffdcce7]] destination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction JUMP ~outgoingValues: [int[-158745|0xfffffffffffd93e7], long[0|0x0]] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction JUMP ~outgoingValues: [int[-143129|0xfffffffffffdd0e7]] destination: B31 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B31" "B36" "B33" "B38" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1658  <|@ instruction [v76|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v76|DWORD) size: DWORD <|@ <|@
      nr 1676  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1678  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v6|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction JUMP ~outgoingValues: [int[-156697|0xfffffffffffd9be7], long[0|0x0]] destination: B49 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B49" "B58" "B51" "B53" "B55" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1690  <|@ instruction [v115|DWORD, v116|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v115|DWORD) size: DWORD <|@ <|@
      nr 1708  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v116|QWORD) size: QWORD <|@ <|@
      nr 1710  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #89         // append:(java.lang.CharSequence)java.lang.StringBuilder
     5: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q v0|q [0, 1[[270, 271[[504, 505[[538, 540[[868, 869[[1144, 1146[[1158, 1160[[1190, 1191[[1316, 1318[[1346, 1347[[1468, 1469[[1498, 1500[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v7|d [0, 1[[58, 61[[100, 103[[204, 207[[270, 271[[384, 387[[408, 411[[504, 505[[574, 577[[582, 585[[618, 621[[622, 625[[868, 869[[1144, 1145[[1150, 1153[[1158, 1159[[1190, 1191[[1284, 1286[[1344, 1347[[1468, 1469[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v73|q [0, 44[[268, 271[[502, 505[[866, 869[[1142, 1145[[1156, 1159[[1190, 1191[[1282, 1287[[1314, 1316[[1466, 1469[[1496, 1498[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 38[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v0|q [0, 42[[266, 271[[500, 505[[864, 869[[1140, 1145[[1154, 1159[[1188, 1191[[1280, 1287[[1312, 1316[[1464, 1469[[1494, 1498[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[264, 271[[498, 505[[862, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1286, 1287[[1346, 1347[[1462, 1469[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1286, 1287[[1468, 1469[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1286, 1287[[1468, 1469[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[270, 271[[504, 505[[868, 869[[1144, 1145[[1158, 1159[[1190, 1191[[1468, 1469[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [42, 226[42 MustHaveRegister 46 MustHaveRegister 52 MustHaveRegister 54 MustHaveRegister 174 MustHaveRegister 178 MustHaveRegister  "StoreAtDefinition"
  v1|q QWORD "[rdx|q]" v1|q rdx|d [44, 226[[288, 442[44 MustHaveRegister 50 MustHaveRegister 92 MustHaveRegister 96 MustHaveRegister 170 MustHaveRegister 184 MustHaveRegister 316 MustHaveRegister 352 MustHaveRegister 360 MustHaveRegister 406 MustHaveRegister  "StoreAtDefinition"
  v2|d DWORD "[rdi|d]" v2|d -1 [46, 62[46 MustHaveRegister 48 MustHaveRegister 62 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d -1 [48, 110[[542, 810[48 MustHaveRegister 60 ShouldHaveRegister 578 ShouldHaveRegister 586 ShouldHaveRegister 592 ShouldHaveRegister 626 MustHaveRegister 794 MustHaveRegister 796 ShouldHaveRegister 810 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[r11|d]" v4|d -1 [50, 66[[288, 298[50 MustHaveRegister 64 ShouldHaveRegister 298 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[r8|d]" v5|d -1 [52, 130[[542, 824[52 MustHaveRegister 56 ShouldHaveRegister 130 ShouldHaveRegister  "OneSpillStore"
  v6|d DWORD "[r9|d]" v6|d -1 [54, 226[[288, 318[[542, 824[54 MustHaveRegister 104 ShouldHaveRegister 206 ShouldHaveRegister 318 ShouldHaveRegister  "SpillInDominator"
  v7|d DWORD "[rbx|d]" v7|d -1 [56, 110[[542, 622[56 MustHaveRegister 58 ShouldHaveRegister 574 ShouldHaveRegister 582 ShouldHaveRegister 618 ShouldHaveRegister 622 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[rax|d]" v8|d v3|d [60, 107[[288, 321[60 MustHaveRegister 106 ShouldHaveRegister 320 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[rdi|q]" v9|q v2|d [62, 110[[288, 333[[542, 856[62 MustHaveRegister 332 ShouldHaveRegister 856 ShouldHaveRegister  "OneSpillStore"
  v10|d DWORD "[rcx|d]" v10|d -1 [92, 94[92 MustHaveRegister 94 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[r11|d]" v11|d -1 [94, 102[94 MustHaveRegister 102 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[rbp|d]" v12|d -1 [96, 130[[542, 824[96 MustHaveRegister 98 ShouldHaveRegister 130 MustHaveRegister  "OneSpillStore"
  v13|d DWORD "[rcx|d]" v13|d -1 [98, 100[98 MustHaveRegister 100 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[r11|d]" v14|d v11|d [102, 226[102 MustHaveRegister 104 ShouldHaveRegister  "StoreAtDefinition"
  v15|d DWORD "[r13|d]" v15|d v6|d [104, 110[[542, 576[104 MustHaveRegister 106 MustHaveRegister 576 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[rcx|d]" v16|d v15|d [106, 108[106 MustHaveRegister 108 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[r13|d]" v17|d v15|d [576, 578[576 MustHaveRegister 578 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[r13|d]" v18|d v17|d [578, 590[578 MustHaveRegister 588 ShouldHaveRegister 590 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[rax|d]" v19|d v20|d [584, 586[584 MustHaveRegister 586 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[rax|d]" v20|d -1 [580, 584[580 MustHaveRegister 584 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[rax|d]" v21|d v19|d [586, 591[586 MustHaveRegister 588 MustHaveRegister 590 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[r13|d]" v22|d v18|d [590, 592[590 MustHaveRegister 592 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[r13|d]" v23|d v22|d [592, 620[592 MustHaveRegister 594 ShouldHaveRegister 620 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[rcx|d]" v24|d v23|d [594, 596[594 MustHaveRegister 596 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[r13|d]" v25|d v23|d [620, 624[620 MustHaveRegister 624 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[r13|d]" v26|d v25|d [624, 822[[1290, 1350[624 MustHaveRegister 626 ShouldHaveRegister 654 ShouldHaveRegister 706 MustHaveRegister 794 ShouldHaveRegister 796 MustHaveRegister 822 ShouldHaveRegister 1314 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[rdi|q]" v28|q -1 [1374, 1424[1374 MustHaveRegister 1382 ShouldHaveRegister 1412 MustHaveRegister 1414 MustHaveRegister 1416 MustHaveRegister 1418 MustHaveRegister 1420 MustHaveRegister 1422 MustHaveRegister 1424 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[r11|q]" v29|q v3|d [1376, 1466[[1472, 1506[1376 MustHaveRegister 1378 MustHaveRegister 1466 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[rsi|q]" v30|q -1 [1378, 1380[1378 MustHaveRegister 1380 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[rsi|q]" v31|q v30|q [1380, 1417[1380 MustHaveRegister 1382 ShouldHaveRegister 1412 MustHaveRegister 1414 MustHaveRegister 1416 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[rdx|q]" v32|q v31|q [1382, 1410[1382 MustHaveRegister 1384 MustHaveRegister 1410 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rax|q]" v33|q rax|q [1500, 1505[1500 MustHaveRegister 1502 MustHaveRegister 1504 ShouldHaveRegister  "NoSpillStore"
  v35|q QWORD "[rdi|q]" v35|q v28|q [1424, 1427[1424 MustHaveRegister 1426 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[rdi|q]" v36|q v35|q [1428, 1461[1460 ShouldHaveRegister  "OneSpillStore"
  v37|q QWORD "[rsi|q]" v37|q v9|q [1458, 1462[1458 MustHaveRegister 1462 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[rdx|q]" v38|q v36|q [1460, 1464[1460 MustHaveRegister 1464 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[rbx|q]" v39|q -1 [652, 776[[1324, 1350[652 MustHaveRegister 660 ShouldHaveRegister 696 MustHaveRegister 698 MustHaveRegister 700 MustHaveRegister 702 MustHaveRegister 704 MustHaveRegister 706 MustHaveRegister 750 MustHaveRegister 755 LiveAtLoopEnd 776 ShouldHaveRegister 1346 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rcx|q]" v40|q v26|d [654, 656[654 MustHaveRegister 656 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rcx|q]" v41|q -1 [656, 658[656 MustHaveRegister 658 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[rcx|q]" v42|q v41|q [658, 756[658 MustHaveRegister 660 ShouldHaveRegister 696 MustHaveRegister 698 MustHaveRegister 700 MustHaveRegister 708 MustHaveRegister 732 MustHaveRegister 755 LiveAtLoopEnd  "NoSpillStore"
  v43|q QWORD "[rax|q]" v43|q v42|q [660, 694[660 MustHaveRegister 662 MustHaveRegister 694 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[rax|q]" v44|q rax|q [1318, 1323[1318 MustHaveRegister 1320 MustHaveRegister 1322 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[rax|q]" v45|q -1 [708, 712[[1324, 1344[708 MustHaveRegister 710 ShouldHaveRegister 1344 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[rax|q]" v46|q v47|q [722, 752[732 ShouldHaveRegister 750 MustHaveRegister 752 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[rax|q]" v47|q v46|q [752, 755[752 MustHaveRegister 754 ShouldHaveRegister  "NoSpillStore"
  v49|q QWORD "[rbx|q]" v49|q v39|q [776, 779[776 MustHaveRegister 778 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[rbx|q]" v50|q v49|q [780, 867[858 ShouldHaveRegister  "OneSpillStore"
  v51|d DWORD "[rcx|d]" v51|d v3|d [796, 860[796 MustHaveRegister 798 MustHaveRegister 810 MustHaveRegister 822 MustHaveRegister 860 ShouldHaveRegister  "NoSpillStore"
  v52|q QWORD "[rdi|q]" v52|q v9|q [856, 862[856 MustHaveRegister 862 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[r10|q]" v53|q v50|q [858, 864[858 MustHaveRegister 864 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[rcx|q]" v54|q v51|d [860, 866[860 MustHaveRegister 866 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[rbx|q]" v55|q v50|q [872, 993[988 MustHaveRegister 992 MustHaveRegister  "NoSpillStore"
  v56|q QWORD "[rdx|q]" v56|q -1 [986, 987[986 MustHaveRegister  "NoDefinitionFound"
  v57|q QWORD "[r10|q]" v57|q -1 [986, 987[986 MustHaveRegister  "NoDefinitionFound"
  v58|d DWORD "[rdx|d]" v58|d v55|q [988, 990[988 MustHaveRegister 990 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[rdx|q]" v59|q -1 [992, 993[992 MustHaveRegister  "NoDefinitionFound"
  v60|q QWORD "[r10|q]" v60|q -1 [992, 993[992 MustHaveRegister  "NoDefinitionFound"
  v61|d DWORD "[rcx|d]" v61|d -1 [170, 182[170 MustHaveRegister 172 MustHaveRegister 182 MustHaveRegister  "NoSpillStore"
  v62|d DWORD "[r10|d]" v62|d -1 [172, 262[172 MustHaveRegister 222 ShouldHaveRegister 262 ShouldHaveRegister  "NoSpillStore"
  v63|d DWORD "[rdi|d]" v63|d -1 [174, 180[174 MustHaveRegister 176 MustHaveRegister 180 MustHaveRegister  "NoSpillStore"
  v64|d DWORD "[r8|d]" v64|d -1 [176, 222[[1194, 1220[176 MustHaveRegister 222 MustHaveRegister 1220 ShouldHaveRegister  "NoSpillStore"
  v65|d DWORD "[rbx|d]" v65|d -1 [178, 202[178 MustHaveRegister 184 MustHaveRegister 202 ShouldHaveRegister  "NoSpillStore"
  v66|q QWORD "[rdi|q]" v66|q v63|d [180, 260[[1194, 1268[180 MustHaveRegister 260 ShouldHaveRegister 1268 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[rax|q]" v67|q v61|d [182, 258[[1194, 1266[182 MustHaveRegister 258 ShouldHaveRegister 1266 ShouldHaveRegister  "NoSpillStore"
  v68|d DWORD "[rcx|d]" v68|d -1 [202, 204[202 MustHaveRegister 204 ShouldHaveRegister  "NoSpillStore"
  v69|d DWORD "[rbx|d]" v69|d v6|d [206, 266[206 MustHaveRegister 208 MustHaveRegister 224 MustHaveRegister 266 MustHaveRegister  "NoSpillStore"
  v70|d DWORD "[r8|d]" v70|d v64|d [222, 224[222 MustHaveRegister 224 ShouldHaveRegister  "NoSpillStore"
  v71|q QWORD "[rax|q]" v71|q v67|q [258, 264[258 MustHaveRegister 264 MustHaveRegister  "NoSpillStore"
  v72|q QWORD "[rdx|q]" v72|q v66|q [260, 266[260 MustHaveRegister 266 MustHaveRegister  "NoSpillStore"
  v73|q QWORD "[r10|q]" v73|q v62|d [262, 268[262 MustHaveRegister 268 ShouldHaveRegister  "NoSpillStore"
  v74|d DWORD "[r8|d]" v74|d v64|d [1220, 1224[1220 MustHaveRegister 1224 ShouldHaveRegister  "NoSpillStore"
  v75|d DWORD "[rsi|d]" v75|d v6|d [1222, 1224[1222 MustHaveRegister 1224 MustHaveRegister  "NoSpillStore"
  v76|d DWORD "[r10|d]" v76|d -1 [1658, 1674[1674 MustHaveRegister  "NoSpillStore"
  v77|q QWORD "[rax|q]" v77|q v67|q [1266, 1270[1266 MustHaveRegister 1270 MustHaveRegister  "NoSpillStore"
  v78|q QWORD "[rdi|q]" v78|q v66|q [1268, 1278[1268 MustHaveRegister 1278 ShouldHaveRegister  "NoSpillStore"
  v79|q QWORD "[rsi|q]" v79|q -1 [1270, 1280[1270 MustHaveRegister 1280 ShouldHaveRegister  "NoSpillStore"
  v80|q QWORD "[r9|q]" v80|q v6|d [1272, 1274[1272 MustHaveRegister 1274 ShouldHaveRegister  "NoSpillStore"
  v81|q QWORD "[r9|q]" v81|q v80|q [1274, 1276[1274 MustHaveRegister 1276 MustHaveRegister  "NoSpillStore"
  v82|q QWORD "[rdx|q]" v82|q -1 [1276, 1278[1276 MustHaveRegister 1278 ShouldHaveRegister  "NoSpillStore"
  v83|q QWORD "[rdx|q]" v83|q v82|q [1278, 1282[1278 MustHaveRegister 1282 ShouldHaveRegister  "NoSpillStore"
  v84|d DWORD "[r10|d]" v84|d -1 [316, 442[316 MustHaveRegister 318 ShouldHaveRegister  "OneSpillStore"
  v85|d DWORD "[r11|d]" v85|d v84|d [318, 324[[996, 1142[318 MustHaveRegister 320 MustHaveRegister 1142 ShouldHaveRegister  "NoSpillStore"
  v86|d DWORD "[rcx|d]" v86|d v85|d [320, 322[320 MustHaveRegister 322 ShouldHaveRegister  "NoSpillStore"
  v87|d DWORD "[rax|d]" v87|d rax|q [1146, 1152[1146 MustHaveRegister 1152 ShouldHaveRegister  "NoSpillStore"
  v88|d DWORD "[rcx|d]" v88|d -1 [1148, 1150[1148 MustHaveRegister 1150 ShouldHaveRegister  "NoSpillStore"
  v89|d DWORD "[rax|d]" v89|d v87|d [1152, 1156[1152 MustHaveRegister 1156 ShouldHaveRegister  "NoSpillStore"
  v90|q QWORD "[rax|q]" v90|q rax|q [1160, 1171[1160 MustHaveRegister 1164 MustHaveRegister 1168 MustHaveRegister 1170 ShouldHaveRegister  "NoSpillStore"
  v91|q QWORD "[r10|q]" v91|q -1 [1162, 1163[1162 MustHaveRegister  "NoDefinitionFound"
  v92|q QWORD "[r11|q]" v92|q -1 [1162, 1163[1162 MustHaveRegister  "NoDefinitionFound"
  v93|d DWORD "[r10|d]" v93|d v90|q [1164, 1166[1164 MustHaveRegister 1166 MustHaveRegister  "NoSpillStore"
  v94|q QWORD "[r10|q]" v94|q -1 [1168, 1169[1168 MustHaveRegister  "NoDefinitionFound"
  v95|q QWORD "[r11|q]" v95|q -1 [1168, 1169[1168 MustHaveRegister  "NoDefinitionFound"
  v96|q QWORD "[rdi|q]" v96|q v9|q [334, 494[356 MustHaveRegister 494 ShouldHaveRegister  "NoSpillStore"
  v97|d DWORD "[r11|d]" v97|d -1 [352, 490[352 MustHaveRegister 354 MustHaveRegister 490 MustHaveRegister  "NoSpillStore"
  v98|d DWORD "[r8|d]" v98|d -1 [354, 424[354 MustHaveRegister 424 ShouldHaveRegister  "NoSpillStore"
  v99|d DWORD "[r9|d]" v99|d -1 [356, 438[356 MustHaveRegister 438 MustHaveRegister  "NoSpillStore"
  v100|d DWORD "[rcx|d]" v100|d -1 [358, 382[358 MustHaveRegister 360 MustHaveRegister 382 ShouldHaveRegister  "NoSpillStore"
  v101|d DWORD "[rbx|d]" v101|d -1 [380, 442[380 MustHaveRegister 386 ShouldHaveRegister  "OneSpillStore"
  v102|d DWORD "[rax|d]" v102|d -1 [382, 408[382 MustHaveRegister 384 ShouldHaveRegister 408 ShouldHaveRegister  "NoSpillStore"
  v103|d DWORD "[rbp|d]" v103|d v101|d [386, 500[386 MustHaveRegister 388 MustHaveRegister 440 MustHaveRegister 500 MustHaveRegister  "NoSpillStore"
  v104|d DWORD "[r13|d]" v104|d -1 [406, 410[406 MustHaveRegister 410 ShouldHaveRegister  "NoSpillStore"
  v105|d DWORD "[r13|d]" v105|d v104|d [410, 496[410 MustHaveRegister 412 MustHaveRegister 424 MustHaveRegister 438 ShouldHaveRegister 496 ShouldHaveRegister  "NoSpillStore"
  v106|d DWORD "[r9|d]" v106|d v99|d [438, 440[438 MustHaveRegister 440 ShouldHaveRegister  "NoSpillStore"
  v107|q QWORD "[r11|q]" v107|q v97|d [490, 492[490 MustHaveRegister 492 ShouldHaveRegister  "NoSpillStore"
  v108|q QWORD "[r11|q]" v108|q v107|q [492, 498[492 MustHaveRegister 498 MustHaveRegister  "NoSpillStore"
  v109|q QWORD "[r8|q]" v109|q v96|q [494, 500[494 MustHaveRegister 500 MustHaveRegister  "NoSpillStore"
  v110|q QWORD "[r13|q]" v110|q v105|d [496, 502[496 MustHaveRegister 502 ShouldHaveRegister  "NoSpillStore"
  v111|d DWORD "[r10|d]" v111|d v84|d [506, 508[506 MustHaveRegister 508 MustHaveRegister  "NoSpillStore"
  v112|d DWORD "[rax|d]" v112|d -1 [510, 514[510 MustHaveRegister 514 ShouldHaveRegister  "NoSpillStore"
  v113|d DWORD "[rcx|d]" v113|d -1 [512, 514[512 MustHaveRegister 514 ShouldHaveRegister  "NoSpillStore"
  v114|d DWORD "[rax|d]" v114|d v112|d [514, 516[514 MustHaveRegister 516 MustHaveRegister  "NoSpillStore"
  v115|d DWORD "[r10|d]" v115|d -1 [1690, 1706[1706 MustHaveRegister  "NoSpillStore"
  v116|q QWORD "[r11|q]" v116|q -1 [1690, 1708[1708 MustHaveRegister  "NoSpillStore"
  v117|d DWORD "[r10|d]" v117|d -1 [1606, 1622[1622 MustHaveRegister  "NoSpillStore"
  v118|q QWORD "[r11|q]" v118|q -1 [1606, 1624[1624 MustHaveRegister  "NoSpillStore"
  v119|q QWORD "[rsi|q]" v119|q -1 [1292, 1312[1292 MustHaveRegister 1312 ShouldHaveRegister  "NoSpillStore"
  v120|q QWORD "[rsi|q]" v120|q -1 [1474, 1494[1474 MustHaveRegister 1494 ShouldHaveRegister  "NoSpillStore"
  v121|q QWORD "[vstack:0|q]" v0|q v0|q [226, 265[ "StoreAtDefinition"
  v122|q QWORD "[vstack:4|q]" v1|q v1|q [442, 501[ "StoreAtDefinition"
  v123|d DWORD "[vstack:9|d]" v5|d v5|d [824, 867[ "OneSpillStore"
  v124|d DWORD "[vstack:8|d]" v6|d v6|d [824, 867[ "SpillInDominator"
  v125|q QWORD "[vstack:11|q]" v9|q v9|q [996, 1143[ "OneSpillStore"
  v126|d DWORD "[vstack:10|d]" v12|d v12|d [824, 867[ "OneSpillStore"
  v127|d DWORD "[vstack:2|d]" v14|d v14|d [226, 269[ "StoreAtDefinition"
  v128|d DWORD "[vstack:2|d]" v14|d v14|d [269, 274[ "StoreAtDefinition"
  v129|q QWORD "[vstack:0|q]" v0|q v0|q [265, 269[ "StoreAtDefinition"
  v130|q QWORD "[vstack:0|q]" v0|q v0|q [269, 274[ "StoreAtDefinition"
  v131|q QWORD "[rsi|q]" v0|q v0|q [274, 442[284 MustHaveRegister 358 MustHaveRegister 380 MustHaveRegister  "StoreAtDefinition"
  v132|d DWORD "[r11|d]" v14|d v14|d [274, 284[[542, 824[284 MustHaveRegister  "StoreAtDefinition"
  v133|d DWORD "[vstack:2|d]" v14|d v14|d [824, 867[ "StoreAtDefinition"
  v134|q QWORD "[vstack:0|q]" v0|q v0|q [442, 499[ "StoreAtDefinition"
  v135|d DWORD "[vstack:5|d]" v84|d v84|d [442, 503[ "OneSpillStore"
  v136|d DWORD "[vstack:6|d]" v101|d v101|d [442, 503[ "OneSpillStore"
  v137|d DWORD "[vstack:6|d]" v101|d v101|d [503, 506[506 ShouldHaveRegister  "OneSpillStore"
  v138|d DWORD "[vstack:5|d]" v84|d v84|d [503, 506[[996, 1172[[1536, 1546[[1576, 1596[[1638, 1648[[1680, 1690[506 ShouldHaveRegister  "OneSpillStore"
  v139|q QWORD "[vstack:0|q]" v0|q v0|q [499, 503[ "StoreAtDefinition"
  v140|q QWORD "[vstack:4|q]" v1|q v1|q [501, 511[ "StoreAtDefinition"
  v141|q QWORD "[vstack:0|q]" v0|q v0|q [503, 507[ "StoreAtDefinition"
  v142|q QWORD "[rdx|q]" v1|q v1|q [511, 512[[542, 824[512 MustHaveRegister  "StoreAtDefinition"
  v143|d DWORD "[r8|d]" v84|d v84|d [1690, 1711[ "OneSpillStore"
  v144|q QWORD "[rsi|q]" v0|q v0|q [507, 538[[542, 824[508 MustHaveRegister 510 MustHaveRegister 516 MustHaveRegister 538 ShouldHaveRegister  "StoreAtDefinition"
  v145|q QWORD "[vstack:0|q]" v0|q v0|q [824, 863[ "StoreAtDefinition"
  v146|q QWORD "[vstack:4|q]" v1|q v1|q [824, 865[ "StoreAtDefinition"
  v147|q QWORD "[vstack:7|q]" v50|q v50|q [867, 871[870 ShouldHaveRegister  "OneSpillStore"
  v148|q QWORD "[vstack:0|q]" v0|q v0|q [863, 867[ "StoreAtDefinition"
  v149|d DWORD "[vstack:8|d]" v6|d v6|d [867, 996[[1172, 1194[ "SpillInDominator"
  v150|q QWORD "[vstack:4|q]" v1|q v1|q [865, 1226[[1290, 1627[[1628, 1679[[1680, 1690[ "StoreAtDefinition"
  v151|d DWORD "[vstack:2|d]" v14|d v14|d [867, 996[[1172, 1506[[1526, 1536[[1546, 1556[[1628, 1638[[1648, 1658[ "StoreAtDefinition"
  v152|d DWORD "[vstack:10|d]" v12|d v12|d [867, 996[[1290, 1506[ "OneSpillStore"
  v153|d DWORD "[vstack:9|d]" v5|d v5|d [867, 996[[1290, 1506[ "OneSpillStore"
  v154|q QWORD "[vstack:0|q]" v0|q v0|q [867, 872[ "StoreAtDefinition"
  v155|q QWORD "[rdx|q]" v1|q v1|q [1690, 1711[ "StoreAtDefinition"
  v156|q QWORD "[rsi|q]" v0|q v0|q [872, 1139[986 MustHaveRegister 990 MustHaveRegister 992 MustHaveRegister  "StoreAtDefinition"
  v157|d DWORD "[r9|d]" v6|d v6|d [1194, 1272[[1290, 1428[1204 MustHaveRegister 1222 ShouldHaveRegister 1272 ShouldHaveRegister  "SpillInDominator"
  v158|d DWORD "[r11|d]" v14|d v14|d [1658, 1679[ "StoreAtDefinition"
  v159|q QWORD "[r10|q]" v0|q v0|q [1139, 1143[1140 ShouldHaveRegister  "StoreAtDefinition"
  v160|q QWORD "[vstack:11|q]" v9|q v9|q [1143, 1154[[1290, 1458[[1472, 1506[1154 ShouldHaveRegister 1458 ShouldHaveRegister  "OneSpillStore"
  v161|q QWORD "[vstack:0|q]" v0|q v0|q [1143, 1147[ "StoreAtDefinition"
  v162|q QWORD "[rsi|q]" v0|q v0|q [1147, 1153[1148 MustHaveRegister  "StoreAtDefinition"
  v163|q QWORD "[vstack:0|q]" v0|q v0|q [1153, 1157[ "StoreAtDefinition"
  v164|q QWORD "[vstack:0|q]" v0|q v0|q [1157, 1161[ "StoreAtDefinition"
  v165|q QWORD "[rsi|q]" v0|q v0|q [1161, 1187[1162 MustHaveRegister 1166 MustHaveRegister 1168 MustHaveRegister  "StoreAtDefinition"
  v166|q QWORD "[r10|q]" v0|q v0|q [1187, 1189[1188 ShouldHaveRegister  "StoreAtDefinition"
  v167|q QWORD "[vstack:0|q]" v0|q v0|q [1189, 1627[[1628, 1679[[1680, 1690[ "StoreAtDefinition"
  v168|d DWORD "[r10|d]" v62|d v62|d [1194, 1284[1222 ShouldHaveRegister 1284 ShouldHaveRegister  "NoSpillStore"
  v169|d DWORD "[r10|d]" v3|d v3|d [1290, 1422[[1472, 1496[1376 ShouldHaveRegister 1422 MustHaveRegister 1496 ShouldHaveRegister  "NoSpillStore"
  v170|q QWORD "[rsi|q]" v0|q v0|q [1690, 1711[ "StoreAtDefinition"
  v171|d DWORD "[vstack:8|d]" v6|d v6|d [1428, 1467[ "SpillInDominator"
  v172|q QWORD "[vstack:12|q]" v36|q v36|q [1461, 1467[ "OneSpillStore"
  v173|d DWORD "[vstack:8|d]" v6|d v6|d [1467, 1506[[1526, 1536[[1546, 1556[[1628, 1638[[1648, 1658[ "SpillInDominator"
  v174|q QWORD "[vstack:12|q]" v36|q v36|q [1467, 1471[1470 ShouldHaveRegister  "OneSpillStore"
  v175|d DWORD "[r9|d]" v6|d v6|d [1658, 1679[ "SpillInDominator"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@24799e10 slotKind: QWORD <|@ <|@
      nr   42  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction v5|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction v6|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   56  <|@ instruction v7|DWORD = MOVSXB value: v5|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction v8|DWORD = SHR (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   64  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.6362310003571869 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B43 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:8|DWORD = MOVE input: r9|DWORD moveKind: DWORD // LSRAOptimizeSpillPos: optimize spill pos <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction v10|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v11|DWORD = MOV input: [v10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   96  <|@ instruction v12|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   98  <|@ instruction v13|DWORD = MOVSXB value: v12|DWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction rcx|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction v14|DWORD = SHR (x: v11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  104  <|@ instruction v15|DWORD = ADD (x: v6|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction v16|DWORD = SUB (x: v15|DWORD, ~y: v8|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction CMPCONSTBRANCH x: v16|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603391649089349823
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B2" "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction CMPBRANCH (x: v12|DWORD, y: v5|DWORD) trueDestinationProbability: 0.998717015375415 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4603898526589647782
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" "B35" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction v61|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  172  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v6|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v62|DWORD = MOV input: [v61|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr  174  <|@ instruction v63|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  176  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v6|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v64|DWORD = MOV input: [v63|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr  178  <|@ instruction v65|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  180  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v63|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  182  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v61|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: v65|DWORD, y: [v1|QWORD[.] + 16]) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B35 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction v68|DWORD = MOVSXB value: v65|DWORD size: DWORD <|@ <|@
      nr  204  <|@ instruction rcx|DWORD = MOVE input: v68|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction v69|DWORD = SHL (x: v6|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  208  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction v70|DWORD = SUB (x: v64|DWORD, ~y: v62|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction CMPBRANCH (x: v69|DWORD, y: v70|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v127|DWORD = MOVE input: v14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v121|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction v71|QWORD[*] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction v72|QWORD[*] = MOVE input: v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction v73|QWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction rdi|QWORD = LEA address: [v71|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = STACKMOVE (input: v121|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  266  <|@ instruction rsi|QWORD = LEA address: [v72|QWORD[*] + v69|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  268  <|@ instruction rdx|QWORD = MOVE input: v73|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v128|DWORD = STACKMOVE (input: v127|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v130|QWORD[.] = STACKMOVE (input: v129|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  270  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = MOVE input: v128|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v131|QWORD[.] = MOVE input: v130|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  272  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B34" "B40" 
    successors "B57" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction ADD (x: [v0|QWORD[.] + 12], y: v14|DWORD) size: DWORD <|@ <|@
      nr  286  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B44" "B60" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B60 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction v84|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  318  <|@ instruction v85|DWORD = ADD (x: v84|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr  320  <|@ instruction v86|DWORD = SUB (x: v85|DWORD, ~y: v8|DWORD) size: DWORD <|@ <|@
      nr  322  <|@ instruction CMPCONSTBRANCH x: v86|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599636671466445615
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" "B58" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  334  <|@ instruction [v96|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction v97|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v98|DWORD = MOV input: [v97|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2] <|@ <|@
      nr  356  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v99|DWORD = MOV input: [v96|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2] <|@ <|@
      nr  358  <|@ instruction v100|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  360  <|@ instruction CMPBRANCH (x: v100|DWORD, y: [v1|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B58 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction v101|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  382  <|@ instruction v102|DWORD = MOVSXB value: v100|DWORD size: DWORD <|@ <|@
      nr  384  <|@ instruction rcx|DWORD = MOVE input: v102|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction v103|DWORD = SHL (x: v101|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  388  <|@ instruction TESTBRANCH (x: v103|DWORD, y: v103|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction v104|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  408  <|@ instruction rcx|DWORD = MOVE input: v102|DWORD moveKind: DWORD <|@ <|@
      nr  410  <|@ instruction v105|DWORD = SHL (x: v104|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: v105|DWORD, y: v105|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: v105|DWORD, y: v98|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction v106|DWORD = SUB (x: v99|DWORD, ~y: v105|DWORD) size: DWORD <|@ <|@
      nr  440  <|@ instruction CMPBRANCH (x: v103|DWORD, y: v106|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v136|DWORD = MOVE input: v101|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|DWORD = MOVE input: v84|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v122|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v134|QWORD[.] = MOVE input: v131|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction v107|QWORD[.] = UNCOMPRESSPOINTER (input: v97|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  492  <|@ instruction v108|QWORD[*] = MOVE input: v107|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction v109|QWORD[*] = MOVE input: v96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction v110|QWORD = MOVE input: v105|DWORD moveKind: DWORD <|@ <|@
      nr  498  <|@ instruction rdi|QWORD = LEA address: [v108|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v139|QWORD[.] = MOVE input: v134|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  500  <|@ instruction rsi|QWORD = LEA address: [v109|QWORD[*] + v103|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v140|QWORD[.] = STACKMOVE (input: v122|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  502  <|@ instruction rdx|QWORD = MOVE input: v110|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v141|QWORD[.] = STACKMOVE (input: v139|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v137|DWORD = STACKMOVE (input: v136|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = STACKMOVE (input: v135|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  504  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  506  <|@ instruction v111|DWORD = ADD (x: v84|DWORD, y: v101|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v144|QWORD[.] = MOVE input: v141|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  508  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v111|DWORD) size: DWORD <|@ <|@
      nr  510  <|@ instruction v112|DWORD = MOVZXB input: [v0|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v142|QWORD[.] = MOVE input: v140|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  512  <|@ instruction v113|DWORD = MOVZXB input: [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  514  <|@ instruction v114|DWORD = OR (x: v112|DWORD, y: v113|DWORD) size: DWORD <|@ <|@
      nr  516  <|@ instruction MOVB (x: [v0|QWORD[.] + 17], y: reinterpret: v114|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B41" "B56" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B42" 
    xhandlers
    flags 
    probability 4588388498606785847
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  576  <|@ instruction v17|DWORD = SHL (x: v15|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  578  <|@ instruction v18|DWORD = SUB (x: v17|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr  580  <|@ instruction v20|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  582  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  584  <|@ instruction v19|DWORD = SHL (x: v20|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  586  <|@ instruction v21|DWORD = ADD (x: v19|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr  588  <|@ instruction CMP (x: v21|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr  590  <|@ instruction v22|DWORD = CMOVE (falseValue: v18|DWORD, ~trueValue: v21|DWORD) condition: > <|@ <|@
      nr  592  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr  594  <|@ instruction v24|DWORD = DEC value: v23|DWORD size: DWORD <|@ <|@
      nr  596  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B42 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4588388498606785847
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  620  <|@ instruction v25|DWORD = SAR (x: v23|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  622  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction v26|DWORD = SHL (x: v25|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  626  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v26|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4588388216090718820
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction v39|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  654  <|@ instruction v40|QWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction v41|QWORD = LEA address: [v40|QWORD + 23] size: QWORD <|@ <|@
      nr  658  <|@ instruction v42|QWORD = AND x: v41|QWORD y: -8 size: QWORD <|@ <|@
      nr  660  <|@ instruction v43|QWORD = ADD (x: v42|QWORD, y: v39|QWORD) size: QWORD <|@ <|@
      nr  662  <|@ instruction CMPBRANCH (x: v43|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B16" 
    xhandlers
    flags 
    probability 4588305942140169576
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction MOV (x: [r15|QWORD + 440], y: v43|QWORD) size: QWORD <|@ <|@
      nr  696  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v39|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  698  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v39|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  700  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v39|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  702  <|@ instruction MOV x: [v39|QWORD] y: 1 size: QWORD <|@ <|@
      nr  704  <|@ instruction MOV x: [v39|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  706  <|@ instruction MOV (x: [v39|QWORD + 12], y: v26|DWORD) size: DWORD <|@ <|@
      nr  708  <|@ instruction v45|QWORD = LEA address: [v42|QWORD - 16] size: QWORD <|@ <|@
      nr  710  <|@ instruction CMPCONSTBRANCH x: v45|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4588224490929125824
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617985760531553049
    begin_IR
      LIR
      nr  722  <|@ instruction [v46|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction CMPBRANCH (x: v42|QWORD, y: v46|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617922763110511397
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction MOV x: [v39|QWORD + v46|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  752  <|@ instruction v47|QWORD = LEA address: [v46|QWORD + 8] size: QWORD <|@ <|@
      nr  754  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588224490929125825
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588305942140169577
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction v49|QWORD[.] = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  780  <|@ instruction [v50|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction CMP (x: v3|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr  796  <|@ instruction v51|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v26|DWORD) condition: > <|@ <|@
      nr  798  <|@ instruction TESTBRANCH (x: v51|DWORD, y: v51|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction CMPBRANCH (x: v51|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction CMPBRANCH (x: v51|DWORD, y: v26|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = MOVE input: v132|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = MOVE input: v12|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v124|DWORD = MOVE input: v6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v146|QWORD[.] = MOVE input: v142|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v145|QWORD[.] = MOVE input: v144|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction v52|QWORD[*] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction v53|QWORD[*] = MOVE input: v50|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction v54|QWORD = MOVE input: v51|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction rdi|QWORD = LEA address: [v52|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v148|QWORD[.] = MOVE input: v145|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  864  <|@ instruction rsi|QWORD = LEA address: [v53|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = STACKMOVE (input: v146|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  866  <|@ instruction rdx|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v151|DWORD = STACKMOVE (input: v133|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v152|DWORD = STACKMOVE (input: v126|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v153|DWORD = STACKMOVE (input: v123|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v149|DWORD = STACKMOVE (input: v124|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v154|QWORD[.] = STACKMOVE (input: v148|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v147|QWORD[.] = MOVE input: v50|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  868  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = MOVE input: v147|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v156|QWORD[.] = MOVE input: v154|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  870  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B8" "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588388498606785848
    begin_IR
      LIR
      nr  872  <|@ instruction [v55|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v56|QWORD, temp2: v57|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr  988  <|@ instruction v58|DWORD[_] = COMPRESSPOINTER (input: v55|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  990  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v58|DWORD[_]) size: DWORD <|@ <|@
      nr  992  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v55|QWORD[.]) {temp: v59|QWORD, temp2: v60|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: v151|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: v152|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: v149|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE input: v153|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v150|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  994  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4584865046447166825
    begin_IR
      LIR
      nr  996  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v84|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v125|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v159|QWORD[.] = MOVE input: v156|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1140  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1142  <|@ instruction rdx|DWORD = MOVE input: v85|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v160|QWORD[.] = STACKMOVE (input: v125|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v161|QWORD[.] = MOVE input: v159|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1144  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v0|QWORD[.] v9|QWORD[.] 
locals: v0|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:24, 21, 37, 2, 2] <|@ <|@
      nr 1146  <|@ instruction v87|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v162|QWORD[.] = MOVE input: v161|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1148  <|@ instruction v88|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1150  <|@ instruction rcx|DWORD = MOVE input: v88|DWORD moveKind: DWORD <|@ <|@
      nr 1152  <|@ instruction v89|DWORD = SHL (x: v87|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v163|QWORD[.] = MOVE input: v162|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1154  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1156  <|@ instruction rdx|DWORD = MOVE input: v89|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v164|QWORD[.] = STACKMOVE (input: v163|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1158  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v0|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:32, 21, 37, 2, 2] <|@ <|@
      nr 1160  <|@ instruction v90|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v165|QWORD[.] = MOVE input: v164|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1162  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v91|QWORD, temp2: v92|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr 1164  <|@ instruction v93|DWORD[_] = COMPRESSPOINTER (input: v90|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr 1166  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v93|DWORD[_]) size: DWORD <|@ <|@
      nr 1168  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v90|QWORD[.]) {temp: v94|QWORD, temp2: v95|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = MOVE input: v138|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v150|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1170  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4560668027509911113
    begin_IR
      LIR
      nr 1172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v151|DWORD = MOVE input: v14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v149|DWORD = MOVE input: v6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v166|QWORD[.] = MOVE input: v165|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1188  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v167|QWORD[.] = MOVE input: v166|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1190  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v6|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:18, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: v151|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: v149|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v150|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v167|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1192  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v151|DWORD = MOVE input: v14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v167|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction TESTBRANCH (x: v6|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B40" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction v74|DWORD = SHR value: v64|DWORD size: DWORD <|@ <|@
      nr 1222  <|@ instruction v75|DWORD = ADD (x: v6|DWORD, y: v62|DWORD) size: DWORD <|@ <|@
      nr 1224  <|@ instruction CMPBRANCH (x: v75|DWORD, y: v74|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction v77|QWORD[*] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1268  <|@ instruction v78|QWORD[*] = MOVE input: v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1270  <|@ instruction v79|QWORD[*] = LEA address: [v77|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1272  <|@ instruction v80|QWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr 1274  <|@ instruction v81|QWORD = SHL value: v80|QWORD size: QWORD <|@ <|@
      nr 1276  <|@ instruction v82|QWORD = LEA address: [v81|QWORD + 16] size: QWORD <|@ <|@
      nr 1278  <|@ instruction v83|QWORD[*] = ADD (x: v82|QWORD, y: v78|QWORD[*]) size: QWORD <|@ <|@
      nr 1280  <|@ instruction rsi|QWORD = MOVE input: v79|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1282  <|@ instruction rdx|QWORD = MOVE input: v83|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1284  <|@ instruction rcx|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr 1286  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = MOVE input: v151|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v131|QWORD[.] = MOVE input: v167|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1288  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4558404756106723069
    begin_IR
      LIR
      nr 1290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v151|DWORD = MOVE input: v132|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v152|DWORD = MOVE input: v12|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v160|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v153|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = MOVE input: v142|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v167|QWORD[.] = MOVE input: v144|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1292  <|@ instruction v119|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction rsi|QWORD = MOVE input: v119|QWORD moveKind: QWORD <|@ <|@
      nr 1314  <|@ instruction rdx|DWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr 1316  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr 1318  <|@ instruction v44|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1320  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v44|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = MOVE input: v151|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: v152|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE input: v160|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE input: v153|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v142|QWORD[.] = MOVE input: v150|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v144|QWORD[.] = MOVE input: v167|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1322  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B17" 
    xhandlers
    flags 
    probability 4558352100778371553
    begin_IR
      LIR
      nr 1324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v151|DWORD = MOVE input: v132|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v152|DWORD = MOVE input: v12|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v160|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v153|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = MOVE input: v142|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v167|QWORD[.] = MOVE input: v144|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction rcx|QWORD = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr 1346  <|@ instruction ZERO_MEMORY (pointer: [v39|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = MOVE input: v151|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: v152|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE input: v160|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE input: v153|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v142|QWORD[.] = MOVE input: v150|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v144|QWORD[.] = MOVE input: v167|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1348  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4521739169494778405
    begin_IR
      LIR
      nr 1350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v151|DWORD = MOVE input: v132|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v152|DWORD = MOVE input: v12|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v160|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v153|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = MOVE input: v142|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v167|QWORD[.] = MOVE input: v144|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction v28|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1376  <|@ instruction v29|QWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr 1378  <|@ instruction v30|QWORD = LEA address: [v29|QWORD + 23] size: QWORD <|@ <|@
      nr 1380  <|@ instruction v31|QWORD = AND x: v30|QWORD y: -8 size: QWORD <|@ <|@
      nr 1382  <|@ instruction v32|QWORD = ADD (x: v31|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr 1384  <|@ instruction CMPBRANCH (x: v32|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4521692882062356696
    begin_IR
      LIR
      nr 1386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction MOV (x: [r15|QWORD + 440], y: v32|QWORD) size: QWORD <|@ <|@
      nr 1412  <|@ instruction AMD64PREFETCH ~address: [v31|QWORD + v28|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1414  <|@ instruction AMD64PREFETCH ~address: [v31|QWORD + v28|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1416  <|@ instruction AMD64PREFETCH ~address: [v31|QWORD + v28|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1418  <|@ instruction MOV x: [v28|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1420  <|@ instruction MOV x: [v28|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr 1422  <|@ instruction MOV (x: [v28|QWORD + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr 1424  <|@ instruction v35|QWORD[.] = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v171|DWORD = MOVE input: v157|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1426  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 4521739169494778405
    begin_IR
      LIR
      nr 1428  <|@ instruction [v36|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction v37|QWORD[*] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1460  <|@ instruction v38|QWORD[*] = MOVE input: v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v172|QWORD[.] = MOVE input: v36|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1462  <|@ instruction rdi|QWORD = LEA address: [v37|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1464  <|@ instruction rsi|QWORD = LEA address: [v38|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1466  <|@ instruction rdx|QWORD = MOVE input: v29|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v173|DWORD = STACKMOVE (input: v171|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v174|QWORD[.] = STACKMOVE (input: v172|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1468  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = MOVE input: v174|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v156|QWORD[.] = MOVE input: v167|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1470  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4491510020210992795
    begin_IR
      LIR
      nr 1472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v173|DWORD = MOVE input: v157|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1474  <|@ instruction v120|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction rsi|QWORD = MOVE input: v120|QWORD moveKind: QWORD <|@ <|@
      nr 1496  <|@ instruction rdx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr 1498  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr 1500  <|@ instruction v33|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1502  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v33|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1504  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = MOVE input: v142|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v167|QWORD[.] = MOVE input: v144|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = MOVE input: int[-151321|0xfffffffffffdb0e7] // MoveResolver resolve mapping <|@ <|@
      nr 1514  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = MOVE input: v142|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v167|QWORD[.] = MOVE input: v144|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = MOVE input: int[-149273|0xfffffffffffdb8e7] // MoveResolver resolve mapping <|@ <|@
      nr 1524  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v173|DWORD = MOVE input: v157|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = MOVE input: int[-145177|0xfffffffffffdc8e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v158|DWORD = MOVE input: v151|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v175|DWORD = MOVE input: v173|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1534  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v84|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v167|QWORD[.] = MOVE input: v131|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = MOVE input: int[-159769|0xfffffffffffd8fe7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v143|DWORD = MOVE input: v138|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v155|QWORD[.] = MOVE input: v150|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = MOVE input: v167|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1544  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v173|DWORD = MOVE input: v157|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = MOVE input: int[-146201|0xfffffffffffdc4e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v158|DWORD = MOVE input: v151|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v175|DWORD = MOVE input: v173|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1554  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = MOVE input: v142|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v167|QWORD[.] = MOVE input: v144|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = MOVE input: int[-148243|0xfffffffffffdbced] // MoveResolver resolve mapping <|@ <|@
      nr 1564  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = MOVE input: v142|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v167|QWORD[.] = MOVE input: v144|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = MOVE input: int[-150297|0xfffffffffffdb4e7] // MoveResolver resolve mapping <|@ <|@
      nr 1574  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v84|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v167|QWORD[.] = MOVE input: v131|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = MOVE input: int[-157721|0xfffffffffffd97e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v143|DWORD = MOVE input: v138|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v155|QWORD[.] = MOVE input: v150|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = MOVE input: v167|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1584  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v84|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v167|QWORD[.] = MOVE input: v131|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = MOVE input: long[3220|0xc94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = MOVE input: int[-155667|0xfffffffffffd9fed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v143|DWORD = MOVE input: v138|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v155|QWORD[.] = MOVE input: v150|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = MOVE input: v167|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1594  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v167|QWORD[.] = MOVE input: v131|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = MOVE input: int[-98355|0xfffffffffffe7fcd] // MoveResolver resolve mapping <|@ <|@
      nr 1604  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B42" "B19" "B21" "B23" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1606  <|@ instruction [v117|DWORD, v118|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v117|DWORD) size: DWORD <|@ <|@
      nr 1624  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v118|QWORD) size: QWORD <|@ <|@
      nr 1626  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v151|DWORD = MOVE input: v14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v173|DWORD = MOVE input: v6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v167|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = MOVE input: int[-144153|0xfffffffffffdcce7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v158|DWORD = MOVE input: v151|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v175|DWORD = MOVE input: v173|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1636  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v84|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v167|QWORD[.] = MOVE input: v131|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = MOVE input: int[-158745|0xfffffffffffd93e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v143|DWORD = MOVE input: v138|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v155|QWORD[.] = MOVE input: v150|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = MOVE input: v167|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1646  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v151|DWORD = MOVE input: v14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v173|DWORD = MOVE input: v6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v167|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = MOVE input: int[-143129|0xfffffffffffdd0e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v158|DWORD = MOVE input: v151|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v175|DWORD = MOVE input: v173|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1656  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B31" "B36" "B33" "B38" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1658  <|@ instruction [v76|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v76|DWORD) size: DWORD <|@ <|@
      nr 1676  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1678  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v6|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v84|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v167|QWORD[.] = MOVE input: v131|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = MOVE input: int[-156697|0xfffffffffffd9be7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v143|DWORD = MOVE input: v138|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v155|QWORD[.] = MOVE input: v150|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = MOVE input: v167|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1688  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B49" "B58" "B51" "B53" "B55" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1690  <|@ instruction [v115|DWORD, v116|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v115|DWORD) size: DWORD <|@ <|@
      nr 1708  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v116|QWORD) size: QWORD <|@ <|@
      nr 1710  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #89         // append:(java.lang.CharSequence)java.lang.StringBuilder
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@24799e10 slotKind: QWORD <|@ <|@
      nr   42  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   44  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   46  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction v5|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction v6|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   56  <|@ instruction v7|DWORD = MOVSXB value: v5|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction v8|DWORD = SHR (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   64  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.6362310003571869 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B43 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:8|DWORD = MOVE input: r9|DWORD moveKind: DWORD // LSRAOptimizeSpillPos: optimize spill pos <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction v10|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v11|DWORD = MOV input: [v10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   96  <|@ instruction v12|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   98  <|@ instruction v13|DWORD = MOVSXB value: v12|DWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction rcx|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction v14|DWORD = SHR (x: v11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE input: r11|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  104  <|@ instruction v15|DWORD = ADD (x: v6|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction v16|DWORD = SUB (x: v15|DWORD, ~y: v8|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction CMPCONSTBRANCH x: v16|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603391649089349823
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B2" "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction CMPBRANCH (x: v12|DWORD, y: v5|DWORD) trueDestinationProbability: 0.998717015375415 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4603898526589647782
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" "B35" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction v61|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  172  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v6|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v62|DWORD = MOV input: [v61|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr  174  <|@ instruction v63|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  176  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v6|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v64|DWORD = MOV input: [v63|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr  178  <|@ instruction v65|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  180  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v63|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  182  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v61|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: v65|DWORD, y: [v1|QWORD[.] + 16]) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B35 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction v68|DWORD = MOVSXB value: v65|DWORD size: DWORD <|@ <|@
      nr  204  <|@ instruction rcx|DWORD = MOVE input: v68|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction v69|DWORD = SHL (x: v6|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  208  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction v70|DWORD = SUB (x: v64|DWORD, ~y: v62|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction CMPBRANCH (x: v69|DWORD, y: v70|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction v71|QWORD[*] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction v72|QWORD[*] = MOVE input: v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction v73|QWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction rdi|QWORD = LEA address: [v71|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  266  <|@ instruction rsi|QWORD = LEA address: [v72|QWORD[*] + v69|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  268  <|@ instruction rdx|QWORD = MOVE input: v73|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  270  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = MOVE input: v128|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v131|QWORD[.] = MOVE input: v130|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  272  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B34" "B40" 
    successors "B57" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction ADD (x: [v0|QWORD[.] + 12], y: v14|DWORD) size: DWORD <|@ <|@
      nr  286  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B44" "B60" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B60 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction v84|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  318  <|@ instruction v85|DWORD = ADD (x: v84|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr  320  <|@ instruction v86|DWORD = SUB (x: v85|DWORD, ~y: v8|DWORD) size: DWORD <|@ <|@
      nr  322  <|@ instruction CMPCONSTBRANCH x: v86|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599636671466445615
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" "B58" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction v97|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v98|DWORD = MOV input: [v97|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2] <|@ <|@
      nr  356  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v99|DWORD = MOV input: [v96|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2] <|@ <|@
      nr  358  <|@ instruction v100|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  360  <|@ instruction CMPBRANCH (x: v100|DWORD, y: [v1|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B58 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction v101|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  382  <|@ instruction v102|DWORD = MOVSXB value: v100|DWORD size: DWORD <|@ <|@
      nr  384  <|@ instruction rcx|DWORD = MOVE input: v102|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction v103|DWORD = SHL (x: v101|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  388  <|@ instruction TESTBRANCH (x: v103|DWORD, y: v103|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction v104|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  408  <|@ instruction rcx|DWORD = MOVE input: v102|DWORD moveKind: DWORD <|@ <|@
      nr  410  <|@ instruction v105|DWORD = SHL (x: v104|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: v105|DWORD, y: v105|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: v105|DWORD, y: v98|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction v106|DWORD = SUB (x: v99|DWORD, ~y: v105|DWORD) size: DWORD <|@ <|@
      nr  440  <|@ instruction CMPBRANCH (x: v103|DWORD, y: v106|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v136|DWORD = MOVE input: v101|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|DWORD = MOVE input: v84|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction v107|QWORD[.] = UNCOMPRESSPOINTER (input: v97|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  492  <|@ instruction v108|QWORD[*] = MOVE input: v107|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction v109|QWORD[*] = MOVE input: v96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction v110|QWORD = MOVE input: v105|DWORD moveKind: DWORD <|@ <|@
      nr  498  <|@ instruction rdi|QWORD = LEA address: [v108|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  500  <|@ instruction rsi|QWORD = LEA address: [v109|QWORD[*] + v103|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  502  <|@ instruction rdx|QWORD = MOVE input: v110|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v137|DWORD = STACKMOVE (input: v136|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = STACKMOVE (input: v135|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  504  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  506  <|@ instruction v111|DWORD = ADD (x: v84|DWORD, y: v101|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v144|QWORD[.] = MOVE input: v141|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  508  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v111|DWORD) size: DWORD <|@ <|@
      nr  510  <|@ instruction v112|DWORD = MOVZXB input: [v0|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v142|QWORD[.] = MOVE input: v140|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  512  <|@ instruction v113|DWORD = MOVZXB input: [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  514  <|@ instruction v114|DWORD = OR (x: v112|DWORD, y: v113|DWORD) size: DWORD <|@ <|@
      nr  516  <|@ instruction MOVB (x: [v0|QWORD[.] + 17], y: reinterpret: v114|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B41" "B56" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B42" 
    xhandlers
    flags 
    probability 4588388498606785847
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  576  <|@ instruction v17|DWORD = SHL (x: v15|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  578  <|@ instruction v18|DWORD = SUB (x: v17|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr  580  <|@ instruction v20|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  582  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  584  <|@ instruction v19|DWORD = SHL (x: v20|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  586  <|@ instruction v21|DWORD = ADD (x: v19|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr  588  <|@ instruction CMP (x: v21|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr  590  <|@ instruction v22|DWORD = CMOVE (falseValue: v18|DWORD, ~trueValue: v21|DWORD) condition: > <|@ <|@
      nr  592  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr  594  <|@ instruction v24|DWORD = DEC value: v23|DWORD size: DWORD <|@ <|@
      nr  596  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B42 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4588388498606785847
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  620  <|@ instruction v25|DWORD = SAR (x: v23|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  622  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction v26|DWORD = SHL (x: v25|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  626  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v26|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4588388216090718820
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction v39|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  654  <|@ instruction v40|QWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction v41|QWORD = LEA address: [v40|QWORD + 23] size: QWORD <|@ <|@
      nr  658  <|@ instruction v42|QWORD = AND x: v41|QWORD y: -8 size: QWORD <|@ <|@
      nr  660  <|@ instruction v43|QWORD = ADD (x: v42|QWORD, y: v39|QWORD) size: QWORD <|@ <|@
      nr  662  <|@ instruction CMPBRANCH (x: v43|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B16" 
    xhandlers
    flags 
    probability 4588305942140169576
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction MOV (x: [r15|QWORD + 440], y: v43|QWORD) size: QWORD <|@ <|@
      nr  696  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v39|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  698  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v39|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  700  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v39|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  702  <|@ instruction MOV x: [v39|QWORD] y: 1 size: QWORD <|@ <|@
      nr  704  <|@ instruction MOV x: [v39|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  706  <|@ instruction MOV (x: [v39|QWORD + 12], y: v26|DWORD) size: DWORD <|@ <|@
      nr  708  <|@ instruction v45|QWORD = LEA address: [v42|QWORD - 16] size: QWORD <|@ <|@
      nr  710  <|@ instruction CMPCONSTBRANCH x: v45|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4588224490929125824
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617985760531553049
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction CMPBRANCH (x: v42|QWORD, y: v46|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617922763110511397
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction MOV x: [v39|QWORD + v46|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  752  <|@ instruction v47|QWORD = LEA address: [v46|QWORD + 8] size: QWORD <|@ <|@
      nr  754  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588224490929125825
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588305942140169577
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction v49|QWORD[.] = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction CMP (x: v3|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr  796  <|@ instruction v51|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v26|DWORD) condition: > <|@ <|@
      nr  798  <|@ instruction TESTBRANCH (x: v51|DWORD, y: v51|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction CMPBRANCH (x: v51|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction CMPBRANCH (x: v51|DWORD, y: v26|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = MOVE input: v12|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction v52|QWORD[*] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction v53|QWORD[*] = MOVE input: v50|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction v54|QWORD = MOVE input: v51|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction rdi|QWORD = LEA address: [v52|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  864  <|@ instruction rsi|QWORD = LEA address: [v53|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  866  <|@ instruction rdx|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v152|DWORD = STACKMOVE (input: v126|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v153|DWORD = STACKMOVE (input: v123|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v147|QWORD[.] = MOVE input: v50|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  868  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = MOVE input: v147|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v156|QWORD[.] = MOVE input: v154|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  870  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B8" "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588388498606785848
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v56|QWORD, temp2: v57|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr  988  <|@ instruction v58|DWORD[_] = COMPRESSPOINTER (input: v55|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  990  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v58|DWORD[_]) size: DWORD <|@ <|@
      nr  992  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v55|QWORD[.]) {temp: v59|QWORD, temp2: v60|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: v151|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: v152|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: v149|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE input: v153|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v150|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  994  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4584865046447166825
    begin_IR
      LIR
      nr  996  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v84|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v125|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v159|QWORD[.] = MOVE input: v156|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1140  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1142  <|@ instruction rdx|DWORD = MOVE input: v85|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v160|QWORD[.] = STACKMOVE (input: v125|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1144  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v0|QWORD[.] v9|QWORD[.] 
locals: v0|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:24, 21, 37, 2, 2] <|@ <|@
      nr 1146  <|@ instruction v87|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v162|QWORD[.] = MOVE input: v161|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1148  <|@ instruction v88|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1150  <|@ instruction rcx|DWORD = MOVE input: v88|DWORD moveKind: DWORD <|@ <|@
      nr 1152  <|@ instruction v89|DWORD = SHL (x: v87|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1154  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1156  <|@ instruction rdx|DWORD = MOVE input: v89|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1158  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v0|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:32, 21, 37, 2, 2] <|@ <|@
      nr 1160  <|@ instruction v90|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v165|QWORD[.] = MOVE input: v164|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1162  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v91|QWORD, temp2: v92|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr 1164  <|@ instruction v93|DWORD[_] = COMPRESSPOINTER (input: v90|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr 1166  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v93|DWORD[_]) size: DWORD <|@ <|@
      nr 1168  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v90|QWORD[.]) {temp: v94|QWORD, temp2: v95|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = MOVE input: v138|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v150|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1170  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4560668027509911113
    begin_IR
      LIR
      nr 1172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v166|QWORD[.] = MOVE input: v165|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1188  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1190  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v6|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:18, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: v151|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: v149|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v150|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v167|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1192  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction TESTBRANCH (x: v6|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B40" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction v74|DWORD = SHR value: v64|DWORD size: DWORD <|@ <|@
      nr 1222  <|@ instruction v75|DWORD = ADD (x: v6|DWORD, y: v62|DWORD) size: DWORD <|@ <|@
      nr 1224  <|@ instruction CMPBRANCH (x: v75|DWORD, y: v74|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction v77|QWORD[*] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1268  <|@ instruction v78|QWORD[*] = MOVE input: v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1270  <|@ instruction v79|QWORD[*] = LEA address: [v77|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1272  <|@ instruction v80|QWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr 1274  <|@ instruction v81|QWORD = SHL value: v80|QWORD size: QWORD <|@ <|@
      nr 1276  <|@ instruction v82|QWORD = LEA address: [v81|QWORD + 16] size: QWORD <|@ <|@
      nr 1278  <|@ instruction v83|QWORD[*] = ADD (x: v82|QWORD, y: v78|QWORD[*]) size: QWORD <|@ <|@
      nr 1280  <|@ instruction rsi|QWORD = MOVE input: v79|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1282  <|@ instruction rdx|QWORD = MOVE input: v83|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1284  <|@ instruction rcx|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr 1286  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = MOVE input: v151|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v131|QWORD[.] = MOVE input: v167|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1288  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4558404756106723069
    begin_IR
      LIR
      nr 1290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v152|DWORD = MOVE input: v12|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v160|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v153|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1292  <|@ instruction v119|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction rsi|QWORD = MOVE input: v119|QWORD moveKind: QWORD <|@ <|@
      nr 1314  <|@ instruction rdx|DWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr 1316  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr 1318  <|@ instruction v44|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1320  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v44|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = MOVE input: v151|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: v152|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE input: v160|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE input: v153|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v142|QWORD[.] = MOVE input: v150|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v144|QWORD[.] = MOVE input: v167|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1322  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B17" 
    xhandlers
    flags 
    probability 4558352100778371553
    begin_IR
      LIR
      nr 1324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v152|DWORD = MOVE input: v12|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v160|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v153|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction rcx|QWORD = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr 1346  <|@ instruction ZERO_MEMORY (pointer: [v39|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = MOVE input: v151|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: v152|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE input: v160|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE input: v153|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v142|QWORD[.] = MOVE input: v150|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v144|QWORD[.] = MOVE input: v167|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1348  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4521739169494778405
    begin_IR
      LIR
      nr 1350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v152|DWORD = MOVE input: v12|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v160|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v153|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction v28|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1376  <|@ instruction v29|QWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr 1378  <|@ instruction v30|QWORD = LEA address: [v29|QWORD + 23] size: QWORD <|@ <|@
      nr 1380  <|@ instruction v31|QWORD = AND x: v30|QWORD y: -8 size: QWORD <|@ <|@
      nr 1382  <|@ instruction v32|QWORD = ADD (x: v31|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr 1384  <|@ instruction CMPBRANCH (x: v32|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4521692882062356696
    begin_IR
      LIR
      nr 1386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction MOV (x: [r15|QWORD + 440], y: v32|QWORD) size: QWORD <|@ <|@
      nr 1412  <|@ instruction AMD64PREFETCH ~address: [v31|QWORD + v28|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1414  <|@ instruction AMD64PREFETCH ~address: [v31|QWORD + v28|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1416  <|@ instruction AMD64PREFETCH ~address: [v31|QWORD + v28|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1418  <|@ instruction MOV x: [v28|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1420  <|@ instruction MOV x: [v28|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr 1422  <|@ instruction MOV (x: [v28|QWORD + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr 1424  <|@ instruction v35|QWORD[.] = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1426  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 4521739169494778405
    begin_IR
      LIR
      nr 1428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction v37|QWORD[*] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1460  <|@ instruction v38|QWORD[*] = MOVE input: v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v172|QWORD[.] = MOVE input: v36|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1462  <|@ instruction rdi|QWORD = LEA address: [v37|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1464  <|@ instruction rsi|QWORD = LEA address: [v38|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1466  <|@ instruction rdx|QWORD = MOVE input: v29|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v174|QWORD[.] = STACKMOVE (input: v172|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1468  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = MOVE input: v174|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v156|QWORD[.] = MOVE input: v167|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1470  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4491510020210992795
    begin_IR
      LIR
      nr 1472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1474  <|@ instruction v120|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction rsi|QWORD = MOVE input: v120|QWORD moveKind: QWORD <|@ <|@
      nr 1496  <|@ instruction rdx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr 1498  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr 1500  <|@ instruction v33|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1502  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v33|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1504  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = MOVE input: int[-151321|0xfffffffffffdb0e7] // MoveResolver resolve mapping <|@ <|@
      nr 1514  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = MOVE input: int[-149273|0xfffffffffffdb8e7] // MoveResolver resolve mapping <|@ <|@
      nr 1524  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = MOVE input: int[-145177|0xfffffffffffdc8e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v158|DWORD = MOVE input: v151|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v175|DWORD = MOVE input: v173|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1534  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v84|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = MOVE input: int[-159769|0xfffffffffffd8fe7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v143|DWORD = MOVE input: v138|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v155|QWORD[.] = MOVE input: v150|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = MOVE input: v167|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1544  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = MOVE input: int[-146201|0xfffffffffffdc4e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v158|DWORD = MOVE input: v151|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v175|DWORD = MOVE input: v173|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1554  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = MOVE input: int[-148243|0xfffffffffffdbced] // MoveResolver resolve mapping <|@ <|@
      nr 1564  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = MOVE input: int[-150297|0xfffffffffffdb4e7] // MoveResolver resolve mapping <|@ <|@
      nr 1574  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v84|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = MOVE input: int[-157721|0xfffffffffffd97e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v143|DWORD = MOVE input: v138|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v155|QWORD[.] = MOVE input: v150|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = MOVE input: v167|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1584  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v84|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = MOVE input: long[3220|0xc94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = MOVE input: int[-155667|0xfffffffffffd9fed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v143|DWORD = MOVE input: v138|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v155|QWORD[.] = MOVE input: v150|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = MOVE input: v167|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1594  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = MOVE input: int[-98355|0xfffffffffffe7fcd] // MoveResolver resolve mapping <|@ <|@
      nr 1604  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B42" "B19" "B21" "B23" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v117|DWORD) size: DWORD <|@ <|@
      nr 1624  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v118|QWORD) size: QWORD <|@ <|@
      nr 1626  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = MOVE input: int[-144153|0xfffffffffffdcce7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v158|DWORD = MOVE input: v151|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v175|DWORD = MOVE input: v173|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1636  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v84|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = MOVE input: int[-158745|0xfffffffffffd93e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v143|DWORD = MOVE input: v138|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v155|QWORD[.] = MOVE input: v150|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = MOVE input: v167|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1646  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = MOVE input: int[-143129|0xfffffffffffdd0e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v158|DWORD = MOVE input: v151|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v175|DWORD = MOVE input: v173|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1656  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B31" "B36" "B33" "B38" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v76|DWORD) size: DWORD <|@ <|@
      nr 1676  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1678  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v6|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v84|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = MOVE input: int[-156697|0xfffffffffffd9be7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v143|DWORD = MOVE input: v138|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v155|QWORD[.] = MOVE input: v150|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = MOVE input: v167|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1688  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B49" "B58" "B51" "B53" "B55" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v115|DWORD) size: DWORD <|@ <|@
      nr 1708  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v116|QWORD) size: QWORD <|@ <|@
      nr 1710  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #89         // append:(java.lang.CharSequence)java.lang.StringBuilder
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@24799e10 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   46  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction r8|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   56  <|@ instruction rbx|DWORD = MOVSXB value: r8|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   64  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.6362310003571869 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B43 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:8|DWORD = MOVE input: r9|DWORD moveKind: DWORD // LSRAOptimizeSpillPos: optimize spill pos <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   96  <|@ instruction rbp|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = MOVSXB value: rbp|DWORD size: DWORD <|@ <|@
      nr  102  <|@ instruction r11|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE input: r11|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  104  <|@ instruction r13|DWORD = ADD (x: r9|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction rcx|DWORD = SUB (x: r13|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603391649089349823
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B2" "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r8|DWORD) trueDestinationProbability: 0.998717015375415 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4603898526589647782
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" "B35" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  172  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rsi|QWORD[.] r9|DWORD rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rsi|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr  174  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  176  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rsi|QWORD[.] r9|DWORD rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rsi|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r8|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr  178  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  180  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  182  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B35 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction rcx|DWORD = MOVSXB value: rbx|DWORD size: DWORD <|@ <|@
      nr  206  <|@ instruction rbx|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  208  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction rdi|QWORD = LEA address: [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  266  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  268  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  272  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B34" "B40" 
    successors "B57" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction ADD (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  286  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B44" "B60" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B60 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  318  <|@ instruction r11|DWORD = ADD (x: r10|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  320  <|@ instruction rcx|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  322  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599636671466445615
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" "B58" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2] <|@ <|@
      nr  356  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2] <|@ <|@
      nr  358  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  360  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B58 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  382  <|@ instruction rax|DWORD = MOVSXB value: rcx|DWORD size: DWORD <|@ <|@
      nr  384  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction rbp|DWORD = SHL (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  388  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction r13|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  408  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  410  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  440  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  492  <|@ instruction r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction r8|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction r13|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  498  <|@ instruction rdi|QWORD = LEA address: [r11|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  500  <|@ instruction rsi|QWORD = LEA address: [r8|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  502  <|@ instruction rdx|QWORD = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  506  <|@ instruction r10|DWORD = ADD (x: vstack:5|DWORD, y: vstack:6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  508  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  510  <|@ instruction rax|DWORD = MOVZXB input: [rsi|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  512  <|@ instruction rcx|DWORD = MOVZXB input: [rdx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  514  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  516  <|@ instruction MOVB (x: [rsi|QWORD[.] + 17], y: rax|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B41" "B56" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B42" 
    xhandlers
    flags 
    probability 4588388498606785847
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  576  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  578  <|@ instruction r13|DWORD = SUB (x: r13|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  580  <|@ instruction rax|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  582  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  584  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  586  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  588  <|@ instruction CMP (x: rax|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  590  <|@ instruction r13|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: rax|DWORD) condition: > <|@ <|@
      nr  592  <|@ instruction r13|DWORD = ADD (x: r13|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  594  <|@ instruction rcx|DWORD = DEC value: r13|DWORD size: DWORD <|@ <|@
      nr  596  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B42 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4588388498606785847
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  620  <|@ instruction r13|DWORD = SAR (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  622  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  626  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r13|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4588388216090718820
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  654  <|@ instruction rcx|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  658  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  660  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  662  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B16" 
    xhandlers
    flags 
    probability 4588305942140169576
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  696  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  698  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  700  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  702  <|@ instruction MOV x: [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  704  <|@ instruction MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  706  <|@ instruction MOV (x: [rbx|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  708  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  710  <|@ instruction CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4588224490929125824
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617985760531553049
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617922763110511397
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction MOV x: [rbx|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  752  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  754  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588224490929125825
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588305942140169577
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction CMP (x: r10|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  796  <|@ instruction rcx|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  798  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:9|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction r10|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  864  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  866  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:7|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  868  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  870  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B8" "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588388498606785848
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: r10|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr  988  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  990  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  992  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rbx|QWORD[.]) {temp: rdx|QWORD, temp2: r10|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  994  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4584865046447166825
    begin_IR
      LIR
      nr  996  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:11|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1140  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1142  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1144  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: vstack:0|QWORD[.] vstack:11|QWORD[.] 
locals: vstack:0|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] vstack:5|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:24, 21, 37, 2, 2] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1148  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1152  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1154  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1156  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1158  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: vstack:0|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] vstack:5|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:32, 21, 37, 2, 2] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1162  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr 1164  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr 1166  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr 1168  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1170  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4560668027509911113
    begin_IR
      LIR
      nr 1172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1188  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1190  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: vstack:0|QWORD[.] vstack:8|DWORD vstack:4|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: vstack:0|QWORD[.] - vstack:2|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:18, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1192  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B40" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction r8|DWORD = SHR value: r8|DWORD size: DWORD <|@ <|@
      nr 1222  <|@ instruction rsi|DWORD = ADD (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1224  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1268  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1270  <|@ instruction rsi|QWORD[*] = LEA address: [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1272  <|@ instruction r9|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1274  <|@ instruction r9|QWORD = SHL value: r9|QWORD size: QWORD <|@ <|@
      nr 1276  <|@ instruction rdx|QWORD = LEA address: [r9|QWORD + 16] size: QWORD <|@ <|@
      nr 1278  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: rdi|QWORD[*]) size: QWORD <|@ <|@
      nr 1280  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1282  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1284  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1286  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1288  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4558404756106723069
    begin_IR
      LIR
      nr 1290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:11|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:9|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1292  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction rdx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr 1316  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr 1320  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: vstack:11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1322  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B17" 
    xhandlers
    flags 
    probability 4558352100778371553
    begin_IR
      LIR
      nr 1324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:11|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:9|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1346  <|@ instruction ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: vstack:11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1348  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4521739169494778405
    begin_IR
      LIR
      nr 1350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:11|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:9|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1376  <|@ instruction r11|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1378  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr 1380  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr 1382  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr 1384  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4521692882062356696
    begin_IR
      LIR
      nr 1386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1412  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1414  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1416  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1418  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1420  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr 1422  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1424  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr 1426  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 4521739169494778405
    begin_IR
      LIR
      nr 1428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction rsi|QWORD[*] = MOVE input: vstack:11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1460  <|@ instruction rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:12|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1462  <|@ instruction rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1464  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1466  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1468  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1470  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4491510020210992795
    begin_IR
      LIR
      nr 1472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1474  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1498  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr 1502  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1504  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-151321|0xfffffffffffdb0e7] // MoveResolver resolve mapping <|@ <|@
      nr 1514  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-149273|0xfffffffffffdb8e7] // MoveResolver resolve mapping <|@ <|@
      nr 1524  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-145177|0xfffffffffffdc8e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1534  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-159769|0xfffffffffffd8fe7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1544  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-146201|0xfffffffffffdc4e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1554  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-148243|0xfffffffffffdbced] // MoveResolver resolve mapping <|@ <|@
      nr 1564  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-150297|0xfffffffffffdb4e7] // MoveResolver resolve mapping <|@ <|@
      nr 1574  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-157721|0xfffffffffffd97e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1584  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-155667|0xfffffffffffd9fed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1594  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-98355|0xfffffffffffe7fcd] // MoveResolver resolve mapping <|@ <|@
      nr 1604  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B42" "B19" "B21" "B23" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1624  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1626  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-144153|0xfffffffffffdcce7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1636  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-158745|0xfffffffffffd93e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1646  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-143129|0xfffffffffffdd0e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1656  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B31" "B36" "B33" "B38" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1676  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1678  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: vstack:0|QWORD[.] r9|DWORD vstack:4|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: vstack:0|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-156697|0xfffffffffffd9be7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1688  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B49" "B58" "B51" "B53" "B55" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1708  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1710  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #89         // append:(java.lang.CharSequence)java.lang.StringBuilder
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@24799e10 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   46  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction r8|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   56  <|@ instruction rbx|DWORD = MOVSXB value: r8|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   64  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.6362310003571869 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B43 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:8|DWORD = MOVE input: r9|DWORD moveKind: DWORD // LSRAOptimizeSpillPos: optimize spill pos <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   96  <|@ instruction rbp|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = MOVSXB value: rbp|DWORD size: DWORD <|@ <|@
      nr  102  <|@ instruction r11|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE input: r11|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  104  <|@ instruction r13|DWORD = ADD (x: r9|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction rcx|DWORD = SUB (x: r13|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603391649089349823
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B2" "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r8|DWORD) trueDestinationProbability: 0.998717015375415 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4603898526589647782
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" "B35" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  172  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rsi|QWORD[.] r9|DWORD rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rsi|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr  174  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  176  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rsi|QWORD[.] r9|DWORD rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rsi|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r8|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr  178  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  180  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  182  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B35 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction rcx|DWORD = MOVSXB value: rbx|DWORD size: DWORD <|@ <|@
      nr  206  <|@ instruction rbx|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  208  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction rdi|QWORD = LEA address: [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  266  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  268  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  272  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B34" "B40" 
    successors "B57" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction ADD (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  286  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B44" "B60" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B60 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  318  <|@ instruction r11|DWORD = ADD (x: r10|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  320  <|@ instruction rcx|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  322  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599636671466445615
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" "B58" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2] <|@ <|@
      nr  356  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2] <|@ <|@
      nr  358  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  360  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B58 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  382  <|@ instruction rax|DWORD = MOVSXB value: rcx|DWORD size: DWORD <|@ <|@
      nr  384  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction rbp|DWORD = SHL (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  388  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction r13|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  408  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  410  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  440  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  492  <|@ instruction r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction r8|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction r13|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  498  <|@ instruction rdi|QWORD = LEA address: [r11|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  500  <|@ instruction rsi|QWORD = LEA address: [r8|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  502  <|@ instruction rdx|QWORD = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  506  <|@ instruction r10|DWORD = ADD (x: vstack:5|DWORD, y: vstack:6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  508  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  510  <|@ instruction rax|DWORD = MOVZXB input: [rsi|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  512  <|@ instruction rcx|DWORD = MOVZXB input: [rdx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  514  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  516  <|@ instruction MOVB (x: [rsi|QWORD[.] + 17], y: rax|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B41" "B56" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B42" 
    xhandlers
    flags 
    probability 4588388498606785847
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  576  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  578  <|@ instruction r13|DWORD = SUB (x: r13|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  580  <|@ instruction rax|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  582  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  584  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  586  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  588  <|@ instruction CMP (x: rax|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  590  <|@ instruction r13|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: rax|DWORD) condition: > <|@ <|@
      nr  592  <|@ instruction r13|DWORD = ADD (x: r13|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  594  <|@ instruction rcx|DWORD = DEC value: r13|DWORD size: DWORD <|@ <|@
      nr  596  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B42 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4588388498606785847
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  620  <|@ instruction r13|DWORD = SAR (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  622  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  626  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r13|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4588388216090718820
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  654  <|@ instruction rcx|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  658  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  660  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  662  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B16" 
    xhandlers
    flags 
    probability 4588305942140169576
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  696  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  698  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  700  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  702  <|@ instruction MOV x: [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  704  <|@ instruction MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  706  <|@ instruction MOV (x: [rbx|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  708  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  710  <|@ instruction CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4588224490929125824
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617985760531553049
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617922763110511397
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction MOV x: [rbx|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  752  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  754  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588224490929125825
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588305942140169577
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction CMP (x: r10|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  796  <|@ instruction rcx|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  798  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:9|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction r10|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  864  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  866  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:7|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  868  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  870  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B8" "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588388498606785848
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: r10|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr  988  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  990  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  992  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rbx|QWORD[.]) {temp: rdx|QWORD, temp2: r10|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  994  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4584865046447166825
    begin_IR
      LIR
      nr  996  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:11|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1140  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1142  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1144  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: vstack:0|QWORD[.] vstack:11|QWORD[.] 
locals: vstack:0|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] vstack:5|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:24, 21, 37, 2, 2] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1148  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1152  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1154  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1156  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1158  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: vstack:0|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] vstack:5|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:32, 21, 37, 2, 2] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1162  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr 1164  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr 1166  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr 1168  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1170  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4560668027509911113
    begin_IR
      LIR
      nr 1172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1188  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1190  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: vstack:0|QWORD[.] vstack:8|DWORD vstack:4|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: vstack:0|QWORD[.] - vstack:2|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:18, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1192  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B40" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction r8|DWORD = SHR value: r8|DWORD size: DWORD <|@ <|@
      nr 1222  <|@ instruction rsi|DWORD = ADD (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1224  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1268  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1270  <|@ instruction rsi|QWORD[*] = LEA address: [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1272  <|@ instruction r9|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1274  <|@ instruction r9|QWORD = SHL value: r9|QWORD size: QWORD <|@ <|@
      nr 1276  <|@ instruction rdx|QWORD = LEA address: [r9|QWORD + 16] size: QWORD <|@ <|@
      nr 1278  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: rdi|QWORD[*]) size: QWORD <|@ <|@
      nr 1280  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1282  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1284  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1286  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1288  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4558404756106723069
    begin_IR
      LIR
      nr 1290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:11|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:9|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1292  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction rdx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr 1316  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr 1320  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: vstack:11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1322  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B17" 
    xhandlers
    flags 
    probability 4558352100778371553
    begin_IR
      LIR
      nr 1324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:11|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:9|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1346  <|@ instruction ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: vstack:11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1348  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4521739169494778405
    begin_IR
      LIR
      nr 1350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:11|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:9|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1376  <|@ instruction r11|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1378  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr 1380  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr 1382  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr 1384  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4521692882062356696
    begin_IR
      LIR
      nr 1386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1412  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1414  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1416  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1418  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1420  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr 1422  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1424  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr 1426  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 4521739169494778405
    begin_IR
      LIR
      nr 1428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction rsi|QWORD[*] = MOVE input: vstack:11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1460  <|@ instruction rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:12|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1462  <|@ instruction rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1464  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1466  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1468  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1470  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4491510020210992795
    begin_IR
      LIR
      nr 1472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1474  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1498  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr 1502  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1504  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-151321|0xfffffffffffdb0e7] // MoveResolver resolve mapping <|@ <|@
      nr 1514  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-149273|0xfffffffffffdb8e7] // MoveResolver resolve mapping <|@ <|@
      nr 1524  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-145177|0xfffffffffffdc8e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1534  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-159769|0xfffffffffffd8fe7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1544  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-146201|0xfffffffffffdc4e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1554  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-148243|0xfffffffffffdbced] // MoveResolver resolve mapping <|@ <|@
      nr 1564  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-150297|0xfffffffffffdb4e7] // MoveResolver resolve mapping <|@ <|@
      nr 1574  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-157721|0xfffffffffffd97e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1584  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-155667|0xfffffffffffd9fed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1594  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-98355|0xfffffffffffe7fcd] // MoveResolver resolve mapping <|@ <|@
      nr 1604  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B42" "B19" "B21" "B23" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1624  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1626  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-144153|0xfffffffffffdcce7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1636  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-158745|0xfffffffffffd93e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1646  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-143129|0xfffffffffffdd0e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1656  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B31" "B36" "B33" "B38" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1676  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1678  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: vstack:0|QWORD[.] r9|DWORD vstack:4|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: vstack:0|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-156697|0xfffffffffffd9be7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1688  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B49" "B58" "B51" "B53" "B55" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1708  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1710  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #89         // append:(java.lang.CharSequence)java.lang.StringBuilder
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@24799e10 slotKind: QWORD <|@ <|@
      nr   42  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction r8|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   56  <|@ instruction rbx|DWORD = MOVSXB value: r8|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   64  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.6362310003571869 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B43 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction vstack:8|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   98  <|@ instruction rbp|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  100  <|@ instruction rcx|DWORD = MOVSXB value: rbp|DWORD size: DWORD <|@ <|@
      nr  102  <|@ instruction r11|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  104  <|@ instruction vstack:2|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction r13|DWORD = ADD (x: r9|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction rcx|DWORD = SUB (x: r13|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603391649089349823
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B2" "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r8|DWORD) trueDestinationProbability: 0.998717015375415 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4603898526589647782
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" "B35" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  984  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rsi|QWORD[.] r9|DWORD rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rsi|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr  986  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  988  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rsi|QWORD[.] r9|DWORD rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rsi|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r8|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr  990  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  992  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  994  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  996  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B35 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction rcx|DWORD = MOVSXB value: rbx|DWORD size: DWORD <|@ <|@
      nr 1016  <|@ instruction rbx|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1018  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr 1050  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1102  <|@ instruction rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1104  <|@ instruction r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1106  <|@ instruction rdi|QWORD = LEA address: [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1108  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1110  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1112  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1114  <|@ instruction r11|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr 1116  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1118  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B34" "B40" 
    successors "B57" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr 1274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction ADD (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B44" "B60" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B60 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1332  <|@ instruction r11|DWORD = ADD (x: r10|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1334  <|@ instruction rcx|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1336  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599636671466445615
    begin_IR
      LIR
      nr 1338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" "B58" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1554  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2] <|@ <|@
      nr 1556  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2] <|@ <|@
      nr 1558  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1560  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B58 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1582  <|@ instruction rax|DWORD = MOVSXB value: rcx|DWORD size: DWORD <|@ <|@
      nr 1584  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1586  <|@ instruction rbp|DWORD = SHL (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1588  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction r13|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1630  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1632  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1634  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr 1706  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1732  <|@ instruction vstack:6|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1734  <|@ instruction vstack:5|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction NOP <|@ <|@
      nr 1774  <|@ instruction NOP <|@ <|@
      nr 1776  <|@ instruction NOP <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr 1784  <|@ instruction r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1786  <|@ instruction r8|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1788  <|@ instruction r13|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr 1790  <|@ instruction rdi|QWORD = LEA address: [r11|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1792  <|@ instruction rsi|QWORD = LEA address: [r8|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1794  <|@ instruction rdx|QWORD = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr 1796  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1798  <|@ instruction r10|DWORD = ADD (x: vstack:5|DWORD, y: vstack:6|DWORD) size: DWORD <|@ <|@
      nr 1800  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1802  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1804  <|@ instruction rax|DWORD = MOVZXB input: [rsi|QWORD[.] + 17] size: DWORD <|@ <|@
      nr 1806  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1808  <|@ instruction rcx|DWORD = MOVZXB input: [rdx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr 1810  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1812  <|@ instruction MOVB (x: [rsi|QWORD[.] + 17], y: rax|BYTE(DWORD)) size: BYTE <|@ <|@
      nr 1814  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B41" "B56" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction NOP <|@ <|@
      nr 1830  <|@ instruction NOP <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1836  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B42" 
    xhandlers
    flags 
    probability 4588388498606785847
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  158  <|@ instruction r13|DWORD = SUB (x: r13|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction rax|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  162  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  168  <|@ instruction CMP (x: rax|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction r13|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: rax|DWORD) condition: > <|@ <|@
      nr  172  <|@ instruction r13|DWORD = ADD (x: r13|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  174  <|@ instruction rcx|DWORD = DEC value: r13|DWORD size: DWORD <|@ <|@
      nr  176  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B42 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4588388498606785847
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ instruction r13|DWORD = SAR (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  202  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r13|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4588388216090718820
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  400  <|@ instruction rcx|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  402  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  404  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  406  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B16" 
    xhandlers
    flags 
    probability 4588305942140169576
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  492  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  494  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  496  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  498  <|@ instruction MOV x: [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  500  <|@ instruction MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  502  <|@ instruction MOV (x: [rbx|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  504  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  506  <|@ instruction CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4588224490929125824
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617985760531553049
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617922763110511397
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction MOV x: [rbx|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  550  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588224490929125825
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588305942140169577
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction CMP (x: r10|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  638  <|@ instruction rcx|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  640  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction vstack:10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction vstack:9|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction r10|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  750  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  752  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  754  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction vstack:7|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  760  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B8" "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588388498606785848
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: r10|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr  882  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  884  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  886  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rbx|QWORD[.]) {temp: rdx|QWORD, temp2: r10|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr  888  <|@ instruction r11|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction rbp|DWORD = MOVE input: vstack:10|DWORD moveKind: DWORD <|@ <|@
      nr  892  <|@ instruction r9|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr  894  <|@ instruction r8|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD <|@ <|@
      nr  896  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  898  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4584865046447166825
    begin_IR
      LIR
      nr 1348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1350  <|@ instruction vstack:5|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1352  <|@ instruction vstack:11|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1498  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1500  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1502  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: vstack:0|QWORD[.] vstack:11|QWORD[.] 
locals: vstack:0|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] vstack:5|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:24, 21, 37, 2, 2] <|@ <|@
      nr 1504  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1506  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1508  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1510  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1512  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1514  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: vstack:0|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] vstack:5|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:32, 21, 37, 2, 2] <|@ <|@
      nr 1516  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1518  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr 1520  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr 1522  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr 1524  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr 1526  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1528  <|@ instruction r10|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr 1530  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1532  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4560668027509911113
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  942  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: vstack:0|QWORD[.] vstack:8|DWORD vstack:4|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: vstack:0|QWORD[.] - vstack:2|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:18, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr  944  <|@ instruction r11|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr  946  <|@ instruction r9|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  952  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B40" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction r8|DWORD = SHR value: r8|DWORD size: DWORD <|@ <|@
      nr 1164  <|@ instruction rsi|DWORD = ADD (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1166  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1248  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1250  <|@ instruction rsi|QWORD[*] = LEA address: [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1252  <|@ instruction r9|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1254  <|@ instruction r9|QWORD = SHL value: r9|QWORD size: QWORD <|@ <|@
      nr 1256  <|@ instruction rdx|QWORD = LEA address: [r9|QWORD + 16] size: QWORD <|@ <|@
      nr 1258  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: rdi|QWORD[*]) size: QWORD <|@ <|@
      nr 1260  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1262  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1264  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1266  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr 1268  <|@ instruction r11|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr 1270  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1272  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4558404756106723069
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction vstack:10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction vstack:11|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction vstack:9|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction rdx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  440  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  442  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  444  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction r11|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr  448  <|@ instruction rbp|DWORD = MOVE input: vstack:10|DWORD moveKind: DWORD <|@ <|@
      nr  450  <|@ instruction rdi|QWORD[.] = MOVE input: vstack:11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  452  <|@ instruction r8|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD <|@ <|@
      nr  454  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B17" 
    xhandlers
    flags 
    probability 4558352100778371553
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction vstack:10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction vstack:11|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction vstack:9|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  592  <|@ instruction ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  594  <|@ instruction r11|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr  596  <|@ instruction rbp|DWORD = MOVE input: vstack:10|DWORD moveKind: DWORD <|@ <|@
      nr  598  <|@ instruction rdi|QWORD[.] = MOVE input: vstack:11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  600  <|@ instruction r8|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD <|@ <|@
      nr  602  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  604  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4521739169494778405
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction vstack:10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction vstack:11|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction vstack:9|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  240  <|@ instruction r11|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  244  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  246  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4521692882062356696
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  308  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  310  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  312  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  314  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  316  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  318  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  320  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 4521739169494778405
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction rsi|QWORD[*] = MOVE input: vstack:11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction vstack:12|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  362  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  364  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  368  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4491510020210992795
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  276  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  278  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  704  <|@ instruction r10|DWORD = MOVE input: int[-151321|0xfffffffffffdb0e7] <|@ <|@
      nr  706  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  652  <|@ instruction r10|DWORD = MOVE input: int[-149273|0xfffffffffffdb8e7] <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction r10|DWORD = MOVE input: int[-145177|0xfffffffffffdc8e7] <|@ <|@
      nr 1142  <|@ instruction r11|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr 1144  <|@ instruction r9|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr 1146  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1710  <|@ instruction vstack:5|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1720  <|@ instruction r10|DWORD = MOVE input: int[-159769|0xfffffffffffd8fe7] <|@ <|@
      nr 1722  <|@ instruction r8|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr 1724  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1726  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1728  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction r10|DWORD = MOVE input: int[-146201|0xfffffffffffdc4e7] <|@ <|@
      nr 1178  <|@ instruction r11|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr 1180  <|@ instruction r9|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr 1182  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1298  <|@ instruction r10|DWORD = MOVE input: int[-148243|0xfffffffffffdbced] <|@ <|@
      nr 1300  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  678  <|@ instruction r10|DWORD = MOVE input: int[-150297|0xfffffffffffdb4e7] <|@ <|@
      nr  680  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1638  <|@ instruction vstack:5|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1648  <|@ instruction r10|DWORD = MOVE input: int[-157721|0xfffffffffffd97e7] <|@ <|@
      nr 1650  <|@ instruction r8|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr 1652  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1654  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1656  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1840  <|@ instruction vstack:5|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction NOP <|@ <|@
      nr 1848  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1850  <|@ instruction r10|DWORD = MOVE input: int[-155667|0xfffffffffffd9fed] <|@ <|@
      nr 1852  <|@ instruction r8|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr 1854  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1856  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1858  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1882  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1892  <|@ instruction r10|DWORD = MOVE input: int[-98355|0xfffffffffffe7fcd] <|@ <|@
      nr 1894  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B42" "B19" "B21" "B23" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1898  <|@ instruction NOP <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1914  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1916  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction r10|DWORD = MOVE input: int[-144153|0xfffffffffffdcce7] <|@ <|@
      nr 1062  <|@ instruction r11|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr 1064  <|@ instruction r9|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr 1066  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1672  <|@ instruction vstack:5|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1682  <|@ instruction r10|DWORD = MOVE input: int[-158745|0xfffffffffffd93e7] <|@ <|@
      nr 1684  <|@ instruction r8|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr 1686  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1688  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1690  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction r10|DWORD = MOVE input: int[-143129|0xfffffffffffdd0e7] <|@ <|@
      nr 1030  <|@ instruction r11|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr 1032  <|@ instruction r9|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr 1034  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B31" "B36" "B33" "B38" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1202  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1204  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: vstack:0|QWORD[.] r9|DWORD vstack:4|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: vstack:0|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1592  <|@ instruction vstack:5|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1602  <|@ instruction r10|DWORD = MOVE input: int[-156697|0xfffffffffffd9be7] <|@ <|@
      nr 1604  <|@ instruction r8|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr 1606  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1608  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1610  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B49" "B58" "B51" "B53" "B55" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1878  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1880  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #89         // append:(java.lang.CharSequence)java.lang.StringBuilder
     5: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|q QWORD "[vstack:0|q]" vstack:0|q -1 [42, 1916[ "NOT_SUPPORTED"
  vstack:2|d DWORD "[vstack:2|d]" vstack:2|d -1 [104, 1268[ "NOT_SUPPORTED"
  vstack:4|q QWORD "[vstack:4|q]" vstack:4|q -1 [44, 1916[ "NOT_SUPPORTED"
  vstack:5|d DWORD "[vstack:5|d]" vstack:5|d -1 [1350, 1852[ "NOT_SUPPORTED"
  vstack:6|d DWORD "[vstack:6|d]" vstack:6|d -1 [1732, 1798[ "NOT_SUPPORTED"
  vstack:7|q QWORD "[vstack:7|q]" vstack:7|q -1 [756, 760[ "NOT_SUPPORTED"
  vstack:8|d DWORD "[vstack:8|d]" vstack:8|d -1 [68, 1180[ "NOT_SUPPORTED"
  vstack:9|d DWORD "[vstack:9|d]" vstack:9|d -1 [214, 894[ "NOT_SUPPORTED"
  vstack:10|d DWORD "[vstack:10|d]" vstack:10|d -1 [210, 890[ "NOT_SUPPORTED"
  vstack:11|q QWORD "[vstack:11|q]" vstack:11|q -1 [212, 1510[ "NOT_SUPPORTED"
  vstack:12|q QWORD "[vstack:12|q]" vstack:12|q -1 [358, 368[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|q QWORD "[stack:48|q]" vstack:0|q -1 [42, 1916[ "NOT_SUPPORTED"
  vstack:2|d DWORD "[stack:32|d]" vstack:2|d -1 [104, 1268[ "NOT_SUPPORTED"
  vstack:4|q QWORD "[stack:56|q]" vstack:4|q -1 [44, 1916[ "NOT_SUPPORTED"
  vstack:5|d DWORD "[stack:32|d]" vstack:5|d -1 [1350, 1852[ "NOT_SUPPORTED"
  vstack:6|d DWORD "[stack:28|d]" vstack:6|d -1 [1732, 1798[ "NOT_SUPPORTED"
  vstack:7|q QWORD "[stack:72|q]" vstack:7|q -1 [756, 760[ "NOT_SUPPORTED"
  vstack:8|d DWORD "[stack:28|d]" vstack:8|d -1 [68, 1180[ "NOT_SUPPORTED"
  vstack:9|d DWORD "[stack:40|d]" vstack:9|d -1 [214, 894[ "NOT_SUPPORTED"
  vstack:10|d DWORD "[stack:36|d]" vstack:10|d -1 [210, 890[ "NOT_SUPPORTED"
  vstack:11|q QWORD "[stack:64|q]" vstack:11|q -1 [212, 1510[ "NOT_SUPPORTED"
  vstack:12|q QWORD "[stack:72|q]" vstack:12|q -1 [358, 368[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@24799e10 slotKind: QWORD <|@ <|@
      nr   42  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction r8|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   56  <|@ instruction rbx|DWORD = MOVSXB value: r8|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   64  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.6362310003571869 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B43 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   98  <|@ instruction rbp|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  100  <|@ instruction rcx|DWORD = MOVSXB value: rbp|DWORD size: DWORD <|@ <|@
      nr  102  <|@ instruction r11|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  104  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction r13|DWORD = ADD (x: r9|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction rcx|DWORD = SUB (x: r13|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603391649089349823
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B2" "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r8|DWORD) trueDestinationProbability: 0.998717015375415 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4603898526589647782
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" "B35" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  984  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rsi|QWORD[.] r9|DWORD rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rsi|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr  986  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  988  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rsi|QWORD[.] r9|DWORD rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rsi|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r8|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr  990  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  992  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  994  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  996  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B35 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction rcx|DWORD = MOVSXB value: rbx|DWORD size: DWORD <|@ <|@
      nr 1016  <|@ instruction rbx|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1018  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr 1050  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1102  <|@ instruction rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1104  <|@ instruction r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1106  <|@ instruction rdi|QWORD = LEA address: [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1108  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1110  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1112  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1114  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1116  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1118  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B34" "B40" 
    successors "B57" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr 1274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction ADD (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B44" "B60" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B60 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1332  <|@ instruction r11|DWORD = ADD (x: r10|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1334  <|@ instruction rcx|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1336  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599636671466445615
    begin_IR
      LIR
      nr 1338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" "B58" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1554  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2] <|@ <|@
      nr 1556  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2] <|@ <|@
      nr 1558  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1560  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B58 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1582  <|@ instruction rax|DWORD = MOVSXB value: rcx|DWORD size: DWORD <|@ <|@
      nr 1584  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1586  <|@ instruction rbp|DWORD = SHL (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1588  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction r13|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1630  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1632  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1634  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr 1706  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1732  <|@ instruction stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1734  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction NOP <|@ <|@
      nr 1774  <|@ instruction NOP <|@ <|@
      nr 1776  <|@ instruction NOP <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr 1784  <|@ instruction r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1786  <|@ instruction r8|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1788  <|@ instruction r13|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr 1790  <|@ instruction rdi|QWORD = LEA address: [r11|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1792  <|@ instruction rsi|QWORD = LEA address: [r8|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1794  <|@ instruction rdx|QWORD = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr 1796  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1798  <|@ instruction r10|DWORD = ADD (x: stack:32|DWORD, y: stack:28|DWORD) size: DWORD <|@ <|@
      nr 1800  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1802  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1804  <|@ instruction rax|DWORD = MOVZXB input: [rsi|QWORD[.] + 17] size: DWORD <|@ <|@
      nr 1806  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1808  <|@ instruction rcx|DWORD = MOVZXB input: [rdx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr 1810  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1812  <|@ instruction MOVB (x: [rsi|QWORD[.] + 17], y: rax|BYTE(DWORD)) size: BYTE <|@ <|@
      nr 1814  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B41" "B56" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction NOP <|@ <|@
      nr 1830  <|@ instruction NOP <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1836  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B42" 
    xhandlers
    flags 
    probability 4588388498606785847
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  158  <|@ instruction r13|DWORD = SUB (x: r13|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction rax|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  162  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  168  <|@ instruction CMP (x: rax|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction r13|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: rax|DWORD) condition: > <|@ <|@
      nr  172  <|@ instruction r13|DWORD = ADD (x: r13|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  174  <|@ instruction rcx|DWORD = DEC value: r13|DWORD size: DWORD <|@ <|@
      nr  176  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B42 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4588388498606785847
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ instruction r13|DWORD = SAR (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  202  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r13|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4588388216090718820
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  400  <|@ instruction rcx|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  402  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  404  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  406  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B16" 
    xhandlers
    flags 
    probability 4588305942140169576
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  492  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  494  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  496  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  498  <|@ instruction MOV x: [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  500  <|@ instruction MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  502  <|@ instruction MOV (x: [rbx|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  504  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  506  <|@ instruction CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4588224490929125824
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617985760531553049
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617922763110511397
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction MOV x: [rbx|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  550  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588224490929125825
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588305942140169577
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction CMP (x: r10|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  638  <|@ instruction rcx|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  640  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction r10|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  750  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  752  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  754  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction stack:72|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  760  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B8" "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588388498606785848
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: r10|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr  882  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  884  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  886  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rbx|QWORD[.]) {temp: rdx|QWORD, temp2: r10|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr  888  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction rbp|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  892  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  894  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  896  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  898  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4584865046447166825
    begin_IR
      LIR
      nr 1348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1350  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1352  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1498  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1500  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1502  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:48|QWORD[.] stack:64|QWORD[.] 
locals: stack:48|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:32|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:24, 21, 37, 2, 2] <|@ <|@
      nr 1504  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1506  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1508  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1510  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1512  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1514  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:48|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:32|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:32, 21, 37, 2, 2] <|@ <|@
      nr 1516  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1518  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr 1520  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr 1522  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr 1524  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr 1526  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1528  <|@ instruction r10|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1530  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1532  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4560668027509911113
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  942  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:48|QWORD[.] stack:28|DWORD stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:48|QWORD[.] - stack:32|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:18, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr  944  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  946  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  952  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B40" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction r8|DWORD = SHR value: r8|DWORD size: DWORD <|@ <|@
      nr 1164  <|@ instruction rsi|DWORD = ADD (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1166  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1248  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1250  <|@ instruction rsi|QWORD[*] = LEA address: [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1252  <|@ instruction r9|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1254  <|@ instruction r9|QWORD = SHL value: r9|QWORD size: QWORD <|@ <|@
      nr 1256  <|@ instruction rdx|QWORD = LEA address: [r9|QWORD + 16] size: QWORD <|@ <|@
      nr 1258  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: rdi|QWORD[*]) size: QWORD <|@ <|@
      nr 1260  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1262  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1264  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1266  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr 1268  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1270  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1272  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4558404756106723069
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction rdx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  440  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  442  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  444  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  448  <|@ instruction rbp|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  450  <|@ instruction rdi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  452  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  454  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B17" 
    xhandlers
    flags 
    probability 4558352100778371553
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  592  <|@ instruction ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  594  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  596  <|@ instruction rbp|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  598  <|@ instruction rdi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  600  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  602  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  604  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4521739169494778405
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  240  <|@ instruction r11|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  244  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  246  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4521692882062356696
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  308  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  310  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  312  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  314  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  316  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  318  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  320  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 4521739169494778405
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction rsi|QWORD[*] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction stack:72|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  362  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  364  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  368  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4491510020210992795
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  276  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  278  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  704  <|@ instruction r10|DWORD = MOVE input: int[-151321|0xfffffffffffdb0e7] <|@ <|@
      nr  706  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  652  <|@ instruction r10|DWORD = MOVE input: int[-149273|0xfffffffffffdb8e7] <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction r10|DWORD = MOVE input: int[-145177|0xfffffffffffdc8e7] <|@ <|@
      nr 1142  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1144  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1146  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1710  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1720  <|@ instruction r10|DWORD = MOVE input: int[-159769|0xfffffffffffd8fe7] <|@ <|@
      nr 1722  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1724  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1726  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1728  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction r10|DWORD = MOVE input: int[-146201|0xfffffffffffdc4e7] <|@ <|@
      nr 1178  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1180  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1182  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1298  <|@ instruction r10|DWORD = MOVE input: int[-148243|0xfffffffffffdbced] <|@ <|@
      nr 1300  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  678  <|@ instruction r10|DWORD = MOVE input: int[-150297|0xfffffffffffdb4e7] <|@ <|@
      nr  680  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1638  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1648  <|@ instruction r10|DWORD = MOVE input: int[-157721|0xfffffffffffd97e7] <|@ <|@
      nr 1650  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1652  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1654  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1656  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1840  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction NOP <|@ <|@
      nr 1848  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1850  <|@ instruction r10|DWORD = MOVE input: int[-155667|0xfffffffffffd9fed] <|@ <|@
      nr 1852  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1854  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1856  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1858  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1882  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1892  <|@ instruction r10|DWORD = MOVE input: int[-98355|0xfffffffffffe7fcd] <|@ <|@
      nr 1894  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B42" "B19" "B21" "B23" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1898  <|@ instruction NOP <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1914  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1916  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction r10|DWORD = MOVE input: int[-144153|0xfffffffffffdcce7] <|@ <|@
      nr 1062  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1064  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1066  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1672  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1682  <|@ instruction r10|DWORD = MOVE input: int[-158745|0xfffffffffffd93e7] <|@ <|@
      nr 1684  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1686  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1688  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1690  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction r10|DWORD = MOVE input: int[-143129|0xfffffffffffdd0e7] <|@ <|@
      nr 1030  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1032  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1034  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B31" "B36" "B33" "B38" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1202  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1204  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:48|QWORD[.] r9|DWORD stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:48|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1592  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1602  <|@ instruction r10|DWORD = MOVE input: int[-156697|0xfffffffffffd9be7] <|@ <|@
      nr 1604  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1606  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1608  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1610  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B49" "B58" "B51" "B53" "B55" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1878  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1880  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #89         // append:(java.lang.CharSequence)java.lang.StringBuilder
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@24799e10 slotKind: QWORD <|@ <|@
      nr   42  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction r8|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   56  <|@ instruction rbx|DWORD = MOVSXB value: r8|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   64  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.6362310003571869 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B43 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   98  <|@ instruction rbp|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  100  <|@ instruction rcx|DWORD = MOVSXB value: rbp|DWORD size: DWORD <|@ <|@
      nr  102  <|@ instruction r11|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  104  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction r13|DWORD = ADD (x: r9|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction rcx|DWORD = SUB (x: r13|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603391649089349823
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B2" "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r8|DWORD) trueDestinationProbability: 0.998717015375415 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4603898526589647782
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" "B35" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  984  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rsi|QWORD[.] r9|DWORD rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rsi|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr  986  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  988  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rsi|QWORD[.] r9|DWORD rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rsi|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r8|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr  990  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  992  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  994  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  996  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B35 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction rcx|DWORD = MOVSXB value: rbx|DWORD size: DWORD <|@ <|@
      nr 1016  <|@ instruction rbx|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1018  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr 1050  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1102  <|@ instruction rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1104  <|@ instruction r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1106  <|@ instruction rdi|QWORD = LEA address: [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1108  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1110  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1112  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1114  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1116  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1118  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B34" "B40" 
    successors "B57" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr 1274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction ADD (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B44" "B60" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B60 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1332  <|@ instruction r11|DWORD = ADD (x: r10|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1334  <|@ instruction rcx|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1336  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599636671466445615
    begin_IR
      LIR
      nr 1338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" "B58" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1554  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2] <|@ <|@
      nr 1556  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2] <|@ <|@
      nr 1558  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1560  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B58 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1582  <|@ instruction rax|DWORD = MOVSXB value: rcx|DWORD size: DWORD <|@ <|@
      nr 1584  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1586  <|@ instruction rbp|DWORD = SHL (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1588  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction r13|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1630  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1632  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1634  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr 1706  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1732  <|@ instruction stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1734  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction NOP <|@ <|@
      nr 1774  <|@ instruction NOP <|@ <|@
      nr 1776  <|@ instruction NOP <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr 1784  <|@ instruction r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1786  <|@ instruction r8|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1788  <|@ instruction r13|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr 1790  <|@ instruction rdi|QWORD = LEA address: [r11|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1792  <|@ instruction rsi|QWORD = LEA address: [r8|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1794  <|@ instruction rdx|QWORD = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr 1796  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1798  <|@ instruction r10|DWORD = ADD (x: stack:32|DWORD, y: stack:28|DWORD) size: DWORD <|@ <|@
      nr 1800  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1802  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1804  <|@ instruction rax|DWORD = MOVZXB input: [rsi|QWORD[.] + 17] size: DWORD <|@ <|@
      nr 1806  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1808  <|@ instruction rcx|DWORD = MOVZXB input: [rdx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr 1810  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1812  <|@ instruction MOVB (x: [rsi|QWORD[.] + 17], y: rax|BYTE(DWORD)) size: BYTE <|@ <|@
      nr 1814  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B41" "B56" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction NOP <|@ <|@
      nr 1830  <|@ instruction NOP <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1836  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B42" 
    xhandlers
    flags 
    probability 4588388498606785847
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  158  <|@ instruction r13|DWORD = SUB (x: r13|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction rax|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  162  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  168  <|@ instruction CMP (x: rax|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction r13|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: rax|DWORD) condition: > <|@ <|@
      nr  172  <|@ instruction r13|DWORD = ADD (x: r13|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  174  <|@ instruction rcx|DWORD = DEC value: r13|DWORD size: DWORD <|@ <|@
      nr  176  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B42 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4588388498606785847
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ instruction r13|DWORD = SAR (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  202  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r13|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4588388216090718820
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  400  <|@ instruction rcx|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  402  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  404  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  406  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B16" 
    xhandlers
    flags 
    probability 4588305942140169576
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  492  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  494  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  496  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  498  <|@ instruction MOV x: [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  500  <|@ instruction MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  502  <|@ instruction MOV (x: [rbx|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  504  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  506  <|@ instruction CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4588224490929125824
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617985760531553049
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617922763110511397
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction MOV x: [rbx|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  550  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588224490929125825
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588305942140169577
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction CMP (x: r10|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  638  <|@ instruction rcx|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  640  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction r10|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  750  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  752  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  754  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction stack:72|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  760  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B8" "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588388498606785848
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: r10|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr  882  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  884  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  886  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rbx|QWORD[.]) {temp: rdx|QWORD, temp2: r10|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr  888  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction rbp|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  892  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  894  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  896  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  898  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4584865046447166825
    begin_IR
      LIR
      nr 1348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1350  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1352  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1498  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1500  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1502  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:48|QWORD[.] stack:64|QWORD[.] 
locals: stack:48|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:32|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:24, 21, 37, 2, 2] <|@ <|@
      nr 1504  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1506  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1508  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1510  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1512  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1514  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:48|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:32|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:32, 21, 37, 2, 2] <|@ <|@
      nr 1516  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1518  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr 1520  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr 1522  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr 1524  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr 1526  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1528  <|@ instruction r10|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1530  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1532  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4560668027509911113
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  942  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:48|QWORD[.] stack:28|DWORD stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:48|QWORD[.] - stack:32|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:18, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr  944  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  946  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  952  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B40" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction r8|DWORD = SHR value: r8|DWORD size: DWORD <|@ <|@
      nr 1164  <|@ instruction rsi|DWORD = ADD (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1166  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1248  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1250  <|@ instruction rsi|QWORD[*] = LEA address: [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1252  <|@ instruction r9|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1254  <|@ instruction r9|QWORD = SHL value: r9|QWORD size: QWORD <|@ <|@
      nr 1256  <|@ instruction rdx|QWORD = LEA address: [r9|QWORD + 16] size: QWORD <|@ <|@
      nr 1258  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: rdi|QWORD[*]) size: QWORD <|@ <|@
      nr 1260  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1262  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1264  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1266  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr 1268  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1270  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1272  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4558404756106723069
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction rdx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  440  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  442  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  444  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  448  <|@ instruction rbp|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  450  <|@ instruction rdi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  452  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  454  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B17" 
    xhandlers
    flags 
    probability 4558352100778371553
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  592  <|@ instruction ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  594  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  596  <|@ instruction rbp|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  598  <|@ instruction rdi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  600  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  602  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  604  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4521739169494778405
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  240  <|@ instruction r11|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  244  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  246  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4521692882062356696
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  308  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  310  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  312  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  314  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  316  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  318  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  320  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 4521739169494778405
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction rsi|QWORD[*] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction stack:72|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  362  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  364  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  368  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4491510020210992795
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  276  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  278  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  704  <|@ instruction r10|DWORD = MOVE input: int[-151321|0xfffffffffffdb0e7] <|@ <|@
      nr  706  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  652  <|@ instruction r10|DWORD = MOVE input: int[-149273|0xfffffffffffdb8e7] <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction r10|DWORD = MOVE input: int[-145177|0xfffffffffffdc8e7] <|@ <|@
      nr 1142  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1144  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1146  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1710  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1720  <|@ instruction r10|DWORD = MOVE input: int[-159769|0xfffffffffffd8fe7] <|@ <|@
      nr 1722  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1724  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1726  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1728  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction r10|DWORD = MOVE input: int[-146201|0xfffffffffffdc4e7] <|@ <|@
      nr 1178  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1180  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1182  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1298  <|@ instruction r10|DWORD = MOVE input: int[-148243|0xfffffffffffdbced] <|@ <|@
      nr 1300  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  678  <|@ instruction r10|DWORD = MOVE input: int[-150297|0xfffffffffffdb4e7] <|@ <|@
      nr  680  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1638  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1648  <|@ instruction r10|DWORD = MOVE input: int[-157721|0xfffffffffffd97e7] <|@ <|@
      nr 1650  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1652  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1654  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1656  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1840  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction NOP <|@ <|@
      nr 1848  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1850  <|@ instruction r10|DWORD = MOVE input: int[-155667|0xfffffffffffd9fed] <|@ <|@
      nr 1852  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1854  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1856  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1858  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1882  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1892  <|@ instruction r10|DWORD = MOVE input: int[-98355|0xfffffffffffe7fcd] <|@ <|@
      nr 1894  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B42" "B19" "B21" "B23" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1898  <|@ instruction NOP <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1914  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1916  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction r10|DWORD = MOVE input: int[-144153|0xfffffffffffdcce7] <|@ <|@
      nr 1062  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1064  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1066  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1672  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1682  <|@ instruction r10|DWORD = MOVE input: int[-158745|0xfffffffffffd93e7] <|@ <|@
      nr 1684  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1686  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1688  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1690  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction r10|DWORD = MOVE input: int[-143129|0xfffffffffffdd0e7] <|@ <|@
      nr 1030  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1032  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1034  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B31" "B36" "B33" "B38" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1202  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1204  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:48|QWORD[.] r9|DWORD stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:48|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1592  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1602  <|@ instruction r10|DWORD = MOVE input: int[-156697|0xfffffffffffd9be7] <|@ <|@
      nr 1604  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1606  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1608  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1610  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B49" "B58" "B51" "B53" "B55" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1878  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1880  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #89         // append:(java.lang.CharSequence)java.lang.StringBuilder
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@24799e10 slotKind: QWORD <|@ <|@
      nr   42  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction r8|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   56  <|@ instruction rbx|DWORD = MOVSXB value: r8|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   64  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.6362310003571869 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B43 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   98  <|@ instruction rbp|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  100  <|@ instruction rcx|DWORD = MOVSXB value: rbp|DWORD size: DWORD <|@ <|@
      nr  102  <|@ instruction r11|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  104  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction r13|DWORD = ADD (x: r9|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction rcx|DWORD = SUB (x: r13|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603391649089349823
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B2" "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r8|DWORD) trueDestinationProbability: 0.998717015375415 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4603898526589647782
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" "B35" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  984  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rsi|QWORD[.] r9|DWORD rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rsi|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr  986  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  988  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rsi|QWORD[.] r9|DWORD rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rsi|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r8|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr  990  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  992  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  994  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  996  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B35 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction rcx|DWORD = MOVSXB value: rbx|DWORD size: DWORD <|@ <|@
      nr 1016  <|@ instruction rbx|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1018  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr 1050  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1102  <|@ instruction rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1104  <|@ instruction r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1106  <|@ instruction rdi|QWORD = LEA address: [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1108  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1110  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1112  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1118  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B34" "B40" 
    successors "B57" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr 1274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1116  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction ADD (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B44" "B60" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B60 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1332  <|@ instruction r11|DWORD = ADD (x: r10|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1334  <|@ instruction rcx|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1336  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599636671466445615
    begin_IR
      LIR
      nr 1338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" "B58" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1554  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2] <|@ <|@
      nr 1556  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2] <|@ <|@
      nr 1558  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1560  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B58 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1582  <|@ instruction rax|DWORD = MOVSXB value: rcx|DWORD size: DWORD <|@ <|@
      nr 1584  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1586  <|@ instruction rbp|DWORD = SHL (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1588  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction r13|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1630  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1632  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1634  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr 1706  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1732  <|@ instruction stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1734  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction NOP <|@ <|@
      nr 1774  <|@ instruction NOP <|@ <|@
      nr 1776  <|@ instruction NOP <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr 1784  <|@ instruction r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1786  <|@ instruction r8|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1788  <|@ instruction r13|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr 1790  <|@ instruction rdi|QWORD = LEA address: [r11|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1792  <|@ instruction rsi|QWORD = LEA address: [r8|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1794  <|@ instruction rdx|QWORD = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr 1796  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1798  <|@ instruction r10|DWORD = ADD (x: stack:32|DWORD, y: stack:28|DWORD) size: DWORD <|@ <|@
      nr 1800  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1802  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1804  <|@ instruction rax|DWORD = MOVZXB input: [rsi|QWORD[.] + 17] size: DWORD <|@ <|@
      nr 1806  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1808  <|@ instruction rcx|DWORD = MOVZXB input: [rdx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr 1810  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1812  <|@ instruction MOVB (x: [rsi|QWORD[.] + 17], y: rax|BYTE(DWORD)) size: BYTE <|@ <|@
      nr 1814  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B41" "B56" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction NOP <|@ <|@
      nr 1830  <|@ instruction NOP <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1836  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B42" 
    xhandlers
    flags 
    probability 4588388498606785847
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  158  <|@ instruction r13|DWORD = SUB (x: r13|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction rax|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  162  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  168  <|@ instruction CMP (x: rax|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction r13|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: rax|DWORD) condition: > <|@ <|@
      nr  172  <|@ instruction r13|DWORD = ADD (x: r13|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  174  <|@ instruction rcx|DWORD = DEC value: r13|DWORD size: DWORD <|@ <|@
      nr  176  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B42 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4588388498606785847
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ instruction r13|DWORD = SAR (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  202  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r13|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4588388216090718820
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  400  <|@ instruction rcx|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  402  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  404  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  406  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B16" 
    xhandlers
    flags 
    probability 4588305942140169576
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  492  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  494  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  496  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  498  <|@ instruction MOV x: [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  500  <|@ instruction MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  502  <|@ instruction MOV (x: [rbx|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  504  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  506  <|@ instruction CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4588224490929125824
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617985760531553049
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617922763110511397
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction MOV x: [rbx|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  550  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588224490929125825
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588305942140169577
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction CMP (x: r10|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  638  <|@ instruction rcx|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  640  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction r10|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  750  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  752  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  754  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction stack:72|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  764  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B8" "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588388498606785848
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  368  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: r10|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr  882  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  884  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  886  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rbx|QWORD[.]) {temp: rdx|QWORD, temp2: r10|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr  888  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction rbp|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  892  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  894  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  896  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  898  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4584865046447166825
    begin_IR
      LIR
      nr 1348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1350  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1352  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1498  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1500  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1502  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:48|QWORD[.] stack:64|QWORD[.] 
locals: stack:48|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:32|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:24, 21, 37, 2, 2] <|@ <|@
      nr 1504  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1506  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1508  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1510  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1512  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1514  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:48|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:32|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:32, 21, 37, 2, 2] <|@ <|@
      nr 1516  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1518  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr 1520  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr 1522  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr 1524  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr 1526  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1528  <|@ instruction r10|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1530  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1532  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4560668027509911113
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  942  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:48|QWORD[.] stack:28|DWORD stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:48|QWORD[.] - stack:32|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:18, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr  944  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  946  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  952  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B40" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction r8|DWORD = SHR value: r8|DWORD size: DWORD <|@ <|@
      nr 1164  <|@ instruction rsi|DWORD = ADD (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1166  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1248  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1250  <|@ instruction rsi|QWORD[*] = LEA address: [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1252  <|@ instruction r9|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1254  <|@ instruction r9|QWORD = SHL value: r9|QWORD size: QWORD <|@ <|@
      nr 1256  <|@ instruction rdx|QWORD = LEA address: [r9|QWORD + 16] size: QWORD <|@ <|@
      nr 1258  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: rdi|QWORD[*]) size: QWORD <|@ <|@
      nr 1260  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1262  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1264  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1266  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr 1272  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4558404756106723069
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction rdx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  440  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  442  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  444  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  448  <|@ instruction rbp|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  450  <|@ instruction rdi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  452  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  454  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B17" 
    xhandlers
    flags 
    probability 4558352100778371553
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  592  <|@ instruction ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  594  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  596  <|@ instruction rbp|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  598  <|@ instruction rdi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  600  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  602  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  604  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4521739169494778405
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  240  <|@ instruction r11|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  244  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  246  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4521692882062356696
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  308  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  310  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  312  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  314  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  316  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  318  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  320  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 4521739169494778405
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction rsi|QWORD[*] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction stack:72|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  362  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  364  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  372  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4491510020210992795
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  276  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  278  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  704  <|@ instruction r10|DWORD = MOVE input: int[-151321|0xfffffffffffdb0e7] <|@ <|@
      nr  706  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  652  <|@ instruction r10|DWORD = MOVE input: int[-149273|0xfffffffffffdb8e7] <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction r10|DWORD = MOVE input: int[-145177|0xfffffffffffdc8e7] <|@ <|@
      nr 1146  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1710  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1720  <|@ instruction r10|DWORD = MOVE input: int[-159769|0xfffffffffffd8fe7] <|@ <|@
      nr 1728  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction r10|DWORD = MOVE input: int[-146201|0xfffffffffffdc4e7] <|@ <|@
      nr 1182  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1298  <|@ instruction r10|DWORD = MOVE input: int[-148243|0xfffffffffffdbced] <|@ <|@
      nr 1300  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  678  <|@ instruction r10|DWORD = MOVE input: int[-150297|0xfffffffffffdb4e7] <|@ <|@
      nr  680  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1638  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1648  <|@ instruction r10|DWORD = MOVE input: int[-157721|0xfffffffffffd97e7] <|@ <|@
      nr 1656  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1840  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction NOP <|@ <|@
      nr 1848  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1850  <|@ instruction r10|DWORD = MOVE input: int[-155667|0xfffffffffffd9fed] <|@ <|@
      nr 1858  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1882  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1892  <|@ instruction r10|DWORD = MOVE input: int[-98355|0xfffffffffffe7fcd] <|@ <|@
      nr 1894  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B42" "B19" "B21" "B23" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1898  <|@ instruction NOP <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1914  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1916  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction r10|DWORD = MOVE input: int[-144153|0xfffffffffffdcce7] <|@ <|@
      nr 1066  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1672  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1682  <|@ instruction r10|DWORD = MOVE input: int[-158745|0xfffffffffffd93e7] <|@ <|@
      nr 1690  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction r10|DWORD = MOVE input: int[-143129|0xfffffffffffdd0e7] <|@ <|@
      nr 1034  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B31" "B36" "B33" "B38" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1030  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1032  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1202  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1204  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:48|QWORD[.] r9|DWORD stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:48|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1592  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1602  <|@ instruction r10|DWORD = MOVE input: int[-156697|0xfffffffffffd9be7] <|@ <|@
      nr 1610  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B49" "B58" "B51" "B53" "B55" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1604  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1606  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1608  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1878  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1880  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #89         // append:(java.lang.CharSequence)java.lang.StringBuilder
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@24799e10 slotKind: QWORD <|@ <|@
      nr   42  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction r8|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   56  <|@ instruction rbx|DWORD = MOVSXB value: r8|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   64  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.6362310003571869 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B43 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   98  <|@ instruction rbp|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  100  <|@ instruction rcx|DWORD = MOVSXB value: rbp|DWORD size: DWORD <|@ <|@
      nr  102  <|@ instruction r11|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  104  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction r13|DWORD = ADD (x: r9|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction rcx|DWORD = SUB (x: r13|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603391649089349823
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B2" "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r8|DWORD) trueDestinationProbability: 0.998717015375415 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4603898526589647782
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" "B35" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  984  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rsi|QWORD[.] r9|DWORD rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rsi|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr  986  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  988  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rsi|QWORD[.] r9|DWORD rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rsi|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r8|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr  990  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  992  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  994  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  996  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B35 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction rcx|DWORD = MOVSXB value: rbx|DWORD size: DWORD <|@ <|@
      nr 1016  <|@ instruction rbx|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1018  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr 1050  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1102  <|@ instruction rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1104  <|@ instruction r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1106  <|@ instruction rdi|QWORD = LEA address: [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1108  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1110  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1112  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1118  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B34" "B40" 
    successors "B57" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr 1274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1116  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction ADD (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B44" "B60" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B60 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1332  <|@ instruction r11|DWORD = ADD (x: r10|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1334  <|@ instruction rcx|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1336  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599636671466445615
    begin_IR
      LIR
      nr 1338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" "B58" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1554  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2] <|@ <|@
      nr 1556  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2] <|@ <|@
      nr 1558  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1560  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B58 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1582  <|@ instruction rax|DWORD = MOVSXB value: rcx|DWORD size: DWORD <|@ <|@
      nr 1584  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1586  <|@ instruction rbp|DWORD = SHL (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1588  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction r13|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1632  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1634  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr 1706  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1732  <|@ instruction stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1734  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction NOP <|@ <|@
      nr 1774  <|@ instruction NOP <|@ <|@
      nr 1776  <|@ instruction NOP <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr 1784  <|@ instruction r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1786  <|@ instruction r8|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1788  <|@ instruction r13|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr 1790  <|@ instruction rdi|QWORD = LEA address: [r11|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1792  <|@ instruction rsi|QWORD = LEA address: [r8|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1794  <|@ instruction rdx|QWORD = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr 1796  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1798  <|@ instruction r10|DWORD = ADD (x: stack:32|DWORD, y: stack:28|DWORD) size: DWORD <|@ <|@
      nr 1800  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1802  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1804  <|@ instruction rax|DWORD = MOVZXB input: [rsi|QWORD[.] + 17] size: DWORD <|@ <|@
      nr 1806  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1808  <|@ instruction rcx|DWORD = MOVZXB input: [rdx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr 1810  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1812  <|@ instruction MOVB (x: [rsi|QWORD[.] + 17], y: rax|BYTE(DWORD)) size: BYTE <|@ <|@
      nr 1814  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B41" "B56" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction NOP <|@ <|@
      nr 1830  <|@ instruction NOP <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1836  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B42" 
    xhandlers
    flags 
    probability 4588388498606785847
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  158  <|@ instruction r13|DWORD = SUB (x: r13|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction rax|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  164  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  168  <|@ instruction CMP (x: rax|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction r13|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: rax|DWORD) condition: > <|@ <|@
      nr  172  <|@ instruction r13|DWORD = ADD (x: r13|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  174  <|@ instruction rcx|DWORD = DEC value: r13|DWORD size: DWORD <|@ <|@
      nr  176  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B42 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4588388498606785847
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ instruction r13|DWORD = SAR (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r13|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4588388216090718820
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  400  <|@ instruction rcx|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  402  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  404  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  406  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B16" 
    xhandlers
    flags 
    probability 4588305942140169576
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  492  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  494  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  496  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  498  <|@ instruction MOV x: [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  500  <|@ instruction MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  502  <|@ instruction MOV (x: [rbx|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  504  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  506  <|@ instruction CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4588224490929125824
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617985760531553049
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617922763110511397
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction MOV x: [rbx|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  550  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588224490929125825
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588305942140169577
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction CMP (x: r10|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  638  <|@ instruction rcx|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  640  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction r10|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  750  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  752  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  754  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction stack:72|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  764  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B8" "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588388498606785848
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  368  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: r10|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr  882  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  884  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  886  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rbx|QWORD[.]) {temp: rdx|QWORD, temp2: r10|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr  888  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction rbp|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  892  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  894  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  896  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  898  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4584865046447166825
    begin_IR
      LIR
      nr 1348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1350  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1352  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1500  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1502  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:48|QWORD[.] stack:64|QWORD[.] 
locals: stack:48|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:32|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:24, 21, 37, 2, 2] <|@ <|@
      nr 1504  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1506  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1508  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1510  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1512  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1514  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:48|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:32|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:32, 21, 37, 2, 2] <|@ <|@
      nr 1516  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1518  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr 1520  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr 1522  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr 1524  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr 1526  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1528  <|@ instruction r10|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1530  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1532  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4560668027509911113
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  942  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:48|QWORD[.] stack:28|DWORD stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:48|QWORD[.] - stack:32|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:18, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr  944  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  946  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  952  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B40" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction r8|DWORD = SHR value: r8|DWORD size: DWORD <|@ <|@
      nr 1164  <|@ instruction rsi|DWORD = ADD (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1166  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1248  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1250  <|@ instruction rsi|QWORD[*] = LEA address: [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1252  <|@ instruction r9|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1254  <|@ instruction r9|QWORD = SHL value: r9|QWORD size: QWORD <|@ <|@
      nr 1256  <|@ instruction rdx|QWORD = LEA address: [r9|QWORD + 16] size: QWORD <|@ <|@
      nr 1258  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: rdi|QWORD[*]) size: QWORD <|@ <|@
      nr 1260  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1262  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1264  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1266  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr 1272  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4558404756106723069
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction rdx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  440  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  442  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  444  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction rdi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B17" 
    xhandlers
    flags 
    probability 4558352100778371553
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  592  <|@ instruction ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  598  <|@ instruction rdi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  602  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  604  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4521739169494778405
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  240  <|@ instruction r11|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  244  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  246  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4521692882062356696
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  308  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  310  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  312  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  314  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  316  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  318  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  320  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 4521739169494778405
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction rsi|QWORD[*] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction stack:72|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  362  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  364  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  372  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4491510020210992795
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  276  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  278  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  704  <|@ instruction r10|DWORD = MOVE input: int[-151321|0xfffffffffffdb0e7] <|@ <|@
      nr  706  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  652  <|@ instruction r10|DWORD = MOVE input: int[-149273|0xfffffffffffdb8e7] <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction r10|DWORD = MOVE input: int[-145177|0xfffffffffffdc8e7] <|@ <|@
      nr 1146  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1710  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1720  <|@ instruction r10|DWORD = MOVE input: int[-159769|0xfffffffffffd8fe7] <|@ <|@
      nr 1728  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction r10|DWORD = MOVE input: int[-146201|0xfffffffffffdc4e7] <|@ <|@
      nr 1182  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1298  <|@ instruction r10|DWORD = MOVE input: int[-148243|0xfffffffffffdbced] <|@ <|@
      nr 1300  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  678  <|@ instruction r10|DWORD = MOVE input: int[-150297|0xfffffffffffdb4e7] <|@ <|@
      nr  680  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1638  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1648  <|@ instruction r10|DWORD = MOVE input: int[-157721|0xfffffffffffd97e7] <|@ <|@
      nr 1656  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1840  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction NOP <|@ <|@
      nr 1848  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1850  <|@ instruction r10|DWORD = MOVE input: int[-155667|0xfffffffffffd9fed] <|@ <|@
      nr 1858  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1882  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1892  <|@ instruction r10|DWORD = MOVE input: int[-98355|0xfffffffffffe7fcd] <|@ <|@
      nr 1894  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B42" "B19" "B21" "B23" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1898  <|@ instruction NOP <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1914  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1916  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction r10|DWORD = MOVE input: int[-144153|0xfffffffffffdcce7] <|@ <|@
      nr 1066  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1672  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1682  <|@ instruction r10|DWORD = MOVE input: int[-158745|0xfffffffffffd93e7] <|@ <|@
      nr 1690  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction r10|DWORD = MOVE input: int[-143129|0xfffffffffffdd0e7] <|@ <|@
      nr 1034  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B31" "B36" "B33" "B38" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1202  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1204  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:48|QWORD[.] r9|DWORD stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:48|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1592  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1602  <|@ instruction r10|DWORD = MOVE input: int[-156697|0xfffffffffffd9be7] <|@ <|@
      nr 1610  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B49" "B58" "B51" "B53" "B55" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1604  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1606  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1608  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1878  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1880  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #89         // append:(java.lang.CharSequence)java.lang.StringBuilder
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@24799e10 slotKind: QWORD <|@ <|@
      nr   42  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction r8|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   56  <|@ instruction rbx|DWORD = MOVSXB value: r8|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   64  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.6362310003571869 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B43 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   98  <|@ instruction rbp|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  100  <|@ instruction rcx|DWORD = MOVSXB value: rbp|DWORD size: DWORD <|@ <|@
      nr  102  <|@ instruction r11|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  104  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction r13|DWORD = ADD (x: r9|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction rcx|DWORD = SUB (x: r13|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603391649089349823
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B2" "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r8|DWORD) trueDestinationProbability: 0.998717015375415 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4603898526589647782
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" "B35" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  984  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rsi|QWORD[.] r9|DWORD rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rsi|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr  986  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  988  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rsi|QWORD[.] r9|DWORD rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rsi|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r8|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr  990  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  992  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  994  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  996  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B35 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction rcx|DWORD = MOVSXB value: rbx|DWORD size: DWORD <|@ <|@
      nr 1016  <|@ instruction rbx|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1018  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr 1050  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1102  <|@ instruction rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1104  <|@ instruction r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1106  <|@ instruction rdi|QWORD = LEA address: [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1108  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1110  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1112  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1118  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B34" "B40" 
    successors "B57" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr 1274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1116  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction ADD (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B44" "B60" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B60 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1332  <|@ instruction r11|DWORD = ADD (x: r10|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1334  <|@ instruction rcx|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1336  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599636671466445615
    begin_IR
      LIR
      nr 1338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" "B58" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1554  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2] <|@ <|@
      nr 1556  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2] <|@ <|@
      nr 1558  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1560  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B58 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1582  <|@ instruction rax|DWORD = MOVSXB value: rcx|DWORD size: DWORD <|@ <|@
      nr 1584  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1586  <|@ instruction rbp|DWORD = SHL (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1588  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction r13|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1632  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1634  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr 1706  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1732  <|@ instruction stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1734  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction NOP <|@ <|@
      nr 1774  <|@ instruction NOP <|@ <|@
      nr 1776  <|@ instruction NOP <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr 1784  <|@ instruction r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1786  <|@ instruction r8|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1788  <|@ instruction r13|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr 1790  <|@ instruction rdi|QWORD = LEA address: [r11|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1792  <|@ instruction rsi|QWORD = LEA address: [r8|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1794  <|@ instruction rdx|QWORD = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr 1796  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1798  <|@ instruction r10|DWORD = ADD (x: stack:32|DWORD, y: stack:28|DWORD) size: DWORD <|@ <|@
      nr 1800  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1802  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1804  <|@ instruction rax|DWORD = MOVZXB input: [rsi|QWORD[.] + 17] size: DWORD <|@ <|@
      nr 1806  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1808  <|@ instruction rcx|DWORD = MOVZXB input: [rdx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr 1810  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1812  <|@ instruction MOVB (x: [rsi|QWORD[.] + 17], y: rax|BYTE(DWORD)) size: BYTE <|@ <|@
      nr 1814  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B41" "B56" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction NOP <|@ <|@
      nr 1830  <|@ instruction NOP <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1836  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B42" 
    xhandlers
    flags 
    probability 4588388498606785847
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  158  <|@ instruction r13|DWORD = SUB (x: r13|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction rax|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  164  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  168  <|@ instruction CMP (x: rax|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction r13|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: rax|DWORD) condition: > <|@ <|@
      nr  172  <|@ instruction r13|DWORD = ADD (x: r13|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  174  <|@ instruction rcx|DWORD = DEC value: r13|DWORD size: DWORD <|@ <|@
      nr  176  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B42 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4588388498606785847
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ instruction r13|DWORD = SAR (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r13|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4588388216090718820
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  400  <|@ instruction rcx|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  402  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  404  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  406  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B16" 
    xhandlers
    flags 
    probability 4588305942140169576
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  492  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  494  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  496  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  498  <|@ instruction MOV x: [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  500  <|@ instruction MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  502  <|@ instruction MOV (x: [rbx|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  504  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  506  <|@ instruction CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4588224490929125824
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617985760531553049
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617922763110511397
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction MOV x: [rbx|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  550  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588224490929125825
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588305942140169577
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction CMP (x: r10|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  638  <|@ instruction rcx|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  640  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction r10|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  750  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  752  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  754  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction stack:72|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  764  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B8" "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588388498606785848
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  368  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: r10|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr  882  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  884  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  886  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rbx|QWORD[.]) {temp: rdx|QWORD, temp2: r10|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr  888  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction rbp|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  892  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  894  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  896  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  898  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4584865046447166825
    begin_IR
      LIR
      nr 1348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1350  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1352  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1500  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1502  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:48|QWORD[.] stack:64|QWORD[.] 
locals: stack:48|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:32|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:24, 21, 37, 2, 2] <|@ <|@
      nr 1504  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1506  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1508  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1510  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1512  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1514  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:48|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:32|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:32, 21, 37, 2, 2] <|@ <|@
      nr 1516  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1518  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr 1520  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr 1522  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr 1524  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr 1526  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1528  <|@ instruction r10|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1530  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1532  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4560668027509911113
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  942  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:48|QWORD[.] stack:28|DWORD stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:48|QWORD[.] - stack:32|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:18, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr  944  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  946  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  952  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B40" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction r8|DWORD = SHR value: r8|DWORD size: DWORD <|@ <|@
      nr 1164  <|@ instruction rsi|DWORD = ADD (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1166  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1248  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1250  <|@ instruction rsi|QWORD[*] = LEA address: [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1252  <|@ instruction r9|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1254  <|@ instruction r9|QWORD = SHL value: r9|QWORD size: QWORD <|@ <|@
      nr 1256  <|@ instruction rdx|QWORD = LEA address: [r9|QWORD + 16] size: QWORD <|@ <|@
      nr 1258  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: rdi|QWORD[*]) size: QWORD <|@ <|@
      nr 1260  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1262  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1264  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1266  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr 1272  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4558404756106723069
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction rdx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  440  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  442  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  444  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction rdi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B17" 
    xhandlers
    flags 
    probability 4558352100778371553
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  592  <|@ instruction ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  598  <|@ instruction rdi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  602  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  604  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4521739169494778405
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  240  <|@ instruction r11|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  244  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  246  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4521692882062356696
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  308  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  310  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  312  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  314  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  316  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  318  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  320  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 4521739169494778405
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction rsi|QWORD[*] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction stack:72|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  362  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  364  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  372  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4491510020210992795
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  276  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  278  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  704  <|@ instruction r10|DWORD = MOVE input: int[-151321|0xfffffffffffdb0e7] <|@ <|@
      nr  706  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  652  <|@ instruction r10|DWORD = MOVE input: int[-149273|0xfffffffffffdb8e7] <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction r10|DWORD = MOVE input: int[-145177|0xfffffffffffdc8e7] <|@ <|@
      nr 1146  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1710  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1720  <|@ instruction r10|DWORD = MOVE input: int[-159769|0xfffffffffffd8fe7] <|@ <|@
      nr 1728  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction r10|DWORD = MOVE input: int[-146201|0xfffffffffffdc4e7] <|@ <|@
      nr 1182  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1298  <|@ instruction r10|DWORD = MOVE input: int[-148243|0xfffffffffffdbced] <|@ <|@
      nr 1300  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  678  <|@ instruction r10|DWORD = MOVE input: int[-150297|0xfffffffffffdb4e7] <|@ <|@
      nr  680  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1638  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1648  <|@ instruction r10|DWORD = MOVE input: int[-157721|0xfffffffffffd97e7] <|@ <|@
      nr 1656  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1840  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction NOP <|@ <|@
      nr 1848  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1850  <|@ instruction r10|DWORD = MOVE input: int[-155667|0xfffffffffffd9fed] <|@ <|@
      nr 1858  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1882  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1892  <|@ instruction r10|DWORD = MOVE input: int[-98355|0xfffffffffffe7fcd] <|@ <|@
      nr 1894  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B42" "B19" "B21" "B23" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1898  <|@ instruction NOP <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1914  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1916  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction r10|DWORD = MOVE input: int[-144153|0xfffffffffffdcce7] <|@ <|@
      nr 1066  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1672  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1682  <|@ instruction r10|DWORD = MOVE input: int[-158745|0xfffffffffffd93e7] <|@ <|@
      nr 1690  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction r10|DWORD = MOVE input: int[-143129|0xfffffffffffdd0e7] <|@ <|@
      nr 1034  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B31" "B36" "B33" "B38" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1202  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1204  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:48|QWORD[.] r9|DWORD stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:48|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1592  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1602  <|@ instruction r10|DWORD = MOVE input: int[-156697|0xfffffffffffd9be7] <|@ <|@
      nr 1610  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B49" "B58" "B51" "B53" "B55" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1604  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1606  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1608  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1878  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1880  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #89         // append:(java.lang.CharSequence)java.lang.StringBuilder
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@24799e10 slotKind: QWORD <|@ <|@
      nr   42  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction r8|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   56  <|@ instruction rbx|DWORD = MOVSXB value: r8|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   64  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.6362310003571869 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B43 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   98  <|@ instruction rbp|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  100  <|@ instruction rcx|DWORD = MOVSXB value: rbp|DWORD size: DWORD <|@ <|@
      nr  102  <|@ instruction r11|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  104  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction r13|DWORD = ADD (x: r9|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction rcx|DWORD = SUB (x: r13|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603391649089349823
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B2" "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r8|DWORD) trueDestinationProbability: 0.998717015375415 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4603898526589647782
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" "B35" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  984  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rsi|QWORD[.] r9|DWORD rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rsi|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr  986  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  988  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rsi|QWORD[.] r9|DWORD rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rsi|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r8|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr  990  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  992  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  994  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  996  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B35 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction rcx|DWORD = MOVSXB value: rbx|DWORD size: DWORD <|@ <|@
      nr 1016  <|@ instruction rbx|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1018  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr 1050  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1102  <|@ instruction rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1104  <|@ instruction r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1106  <|@ instruction rdi|QWORD = LEA address: [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1108  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1110  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1112  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1118  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B34" "B40" 
    successors "B57" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr 1274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1116  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction ADD (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B44" "B60" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B60 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1332  <|@ instruction r11|DWORD = ADD (x: r10|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1334  <|@ instruction rcx|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1336  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599636671466445615
    begin_IR
      LIR
      nr 1338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" "B58" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1554  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2] <|@ <|@
      nr 1556  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2] <|@ <|@
      nr 1558  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1560  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B58 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1582  <|@ instruction rax|DWORD = MOVSXB value: rcx|DWORD size: DWORD <|@ <|@
      nr 1584  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1586  <|@ instruction rbp|DWORD = SHL (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1588  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction r13|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1632  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1634  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr 1706  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1732  <|@ instruction stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1734  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction NOP <|@ <|@
      nr 1774  <|@ instruction NOP <|@ <|@
      nr 1776  <|@ instruction NOP <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr 1784  <|@ instruction r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1786  <|@ instruction r8|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1788  <|@ instruction r13|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr 1790  <|@ instruction rdi|QWORD = LEA address: [r11|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1792  <|@ instruction rsi|QWORD = LEA address: [r8|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1794  <|@ instruction rdx|QWORD = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr 1796  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1798  <|@ instruction r10|DWORD = ADD (x: stack:32|DWORD, y: stack:28|DWORD) size: DWORD <|@ <|@
      nr 1800  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1802  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1804  <|@ instruction rax|DWORD = MOVZXB input: [rsi|QWORD[.] + 17] size: DWORD <|@ <|@
      nr 1806  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1808  <|@ instruction rcx|DWORD = MOVZXB input: [rdx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr 1810  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1812  <|@ instruction MOVB (x: [rsi|QWORD[.] + 17], y: rax|BYTE(DWORD)) size: BYTE <|@ <|@
      nr 1814  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B41" "B56" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction NOP <|@ <|@
      nr 1830  <|@ instruction NOP <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1836  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B42" 
    xhandlers
    flags 
    probability 4588388498606785847
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  158  <|@ instruction r13|DWORD = SUB (x: r13|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction rax|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  164  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  168  <|@ instruction CMP (x: rax|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction r13|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: rax|DWORD) condition: > <|@ <|@
      nr  172  <|@ instruction r13|DWORD = ADD (x: r13|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  174  <|@ instruction rcx|DWORD = DEC value: r13|DWORD size: DWORD <|@ <|@
      nr  176  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B42 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4588388498606785847
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ instruction r13|DWORD = SAR (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r13|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4588388216090718820
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  400  <|@ instruction rcx|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  402  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  404  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  406  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B16" 
    xhandlers
    flags 
    probability 4588305942140169576
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  492  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  494  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  496  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  498  <|@ instruction MOV x: [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  500  <|@ instruction MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  502  <|@ instruction MOV (x: [rbx|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  504  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  506  <|@ instruction CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4588224490929125824
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617985760531553049
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617922763110511397
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction MOV x: [rbx|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  550  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588224490929125825
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588305942140169577
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction CMP (x: r10|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  638  <|@ instruction rcx|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  640  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction r10|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  750  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  752  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  754  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction stack:72|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  764  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B8" "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588388498606785848
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  368  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: r10|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr  882  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  884  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  886  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rbx|QWORD[.]) {temp: rdx|QWORD, temp2: r10|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr  888  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction rbp|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  892  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  894  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  896  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  898  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4584865046447166825
    begin_IR
      LIR
      nr 1348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1350  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1352  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1500  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1502  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:48|QWORD[.] stack:64|QWORD[.] 
locals: stack:48|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:32|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:24, 21, 37, 2, 2] <|@ <|@
      nr 1504  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1506  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1508  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1510  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1512  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1514  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:48|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:32|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:32, 21, 37, 2, 2] <|@ <|@
      nr 1516  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1518  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr 1520  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr 1522  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr 1524  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr 1526  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1528  <|@ instruction r10|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1530  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1532  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4560668027509911113
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  942  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:48|QWORD[.] stack:28|DWORD stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:48|QWORD[.] - stack:32|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:18, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr  944  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  946  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  952  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B40" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction r8|DWORD = SHR value: r8|DWORD size: DWORD <|@ <|@
      nr 1164  <|@ instruction rsi|DWORD = ADD (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1166  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1248  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1250  <|@ instruction rsi|QWORD[*] = LEA address: [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1252  <|@ instruction r9|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1254  <|@ instruction r9|QWORD = SHL value: r9|QWORD size: QWORD <|@ <|@
      nr 1256  <|@ instruction rdx|QWORD = LEA address: [r9|QWORD + 16] size: QWORD <|@ <|@
      nr 1258  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: rdi|QWORD[*]) size: QWORD <|@ <|@
      nr 1260  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1262  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1264  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1266  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr 1272  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4558404756106723069
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction rdx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  440  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  442  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  444  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction rdi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B17" 
    xhandlers
    flags 
    probability 4558352100778371553
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  592  <|@ instruction ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  598  <|@ instruction rdi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  602  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  604  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4521739169494778405
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  240  <|@ instruction r11|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  244  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  246  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4521692882062356696
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  308  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  310  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  312  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  314  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  316  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  318  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  320  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 4521739169494778405
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction rsi|QWORD[*] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction stack:72|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  362  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  364  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  372  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4491510020210992795
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  276  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  278  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  704  <|@ instruction r10|DWORD = MOVE input: int[-151321|0xfffffffffffdb0e7] <|@ <|@
      nr  706  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  652  <|@ instruction r10|DWORD = MOVE input: int[-149273|0xfffffffffffdb8e7] <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction r10|DWORD = MOVE input: int[-145177|0xfffffffffffdc8e7] <|@ <|@
      nr 1146  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1710  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1720  <|@ instruction r10|DWORD = MOVE input: int[-159769|0xfffffffffffd8fe7] <|@ <|@
      nr 1728  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction r10|DWORD = MOVE input: int[-146201|0xfffffffffffdc4e7] <|@ <|@
      nr 1182  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1298  <|@ instruction r10|DWORD = MOVE input: int[-148243|0xfffffffffffdbced] <|@ <|@
      nr 1300  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  678  <|@ instruction r10|DWORD = MOVE input: int[-150297|0xfffffffffffdb4e7] <|@ <|@
      nr  680  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1638  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1648  <|@ instruction r10|DWORD = MOVE input: int[-157721|0xfffffffffffd97e7] <|@ <|@
      nr 1656  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1840  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction NOP <|@ <|@
      nr 1848  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1850  <|@ instruction r10|DWORD = MOVE input: int[-155667|0xfffffffffffd9fed] <|@ <|@
      nr 1858  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1882  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1892  <|@ instruction r10|DWORD = MOVE input: int[-98355|0xfffffffffffe7fcd] <|@ <|@
      nr 1894  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B42" "B19" "B21" "B23" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1898  <|@ instruction NOP <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1914  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1916  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction r10|DWORD = MOVE input: int[-144153|0xfffffffffffdcce7] <|@ <|@
      nr 1066  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1672  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1682  <|@ instruction r10|DWORD = MOVE input: int[-158745|0xfffffffffffd93e7] <|@ <|@
      nr 1690  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction r10|DWORD = MOVE input: int[-143129|0xfffffffffffdd0e7] <|@ <|@
      nr 1034  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B31" "B36" "B33" "B38" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1202  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1204  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:48|QWORD[.] r9|DWORD stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:48|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1592  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1602  <|@ instruction r10|DWORD = MOVE input: int[-156697|0xfffffffffffd9be7] <|@ <|@
      nr 1610  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B49" "B58" "B51" "B53" "B55" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1604  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1606  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1608  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1878  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1880  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #89         // append:(java.lang.CharSequence)java.lang.StringBuilder
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@24799e10 slotKind: QWORD <|@ <|@
      nr   42  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction r8|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   56  <|@ instruction rbx|DWORD = MOVSXB value: r8|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   64  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.6362310003571869 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B43 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   98  <|@ instruction rbp|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  100  <|@ instruction rcx|DWORD = MOVSXB value: rbp|DWORD size: DWORD <|@ <|@
      nr  102  <|@ instruction r11|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  104  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction r13|DWORD = ADD (x: r9|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction rcx|DWORD = SUB (x: r13|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603391649089349823
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B2" "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r8|DWORD) trueDestinationProbability: 0.998717015375415 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4603898526589647782
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" "B35" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  984  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rsi|QWORD[.] r9|DWORD rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rsi|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr  986  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  988  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rsi|QWORD[.] r9|DWORD rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rsi|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r8|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr  990  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  992  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  994  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  996  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B35 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction rcx|DWORD = MOVSXB value: rbx|DWORD size: DWORD <|@ <|@
      nr 1016  <|@ instruction rbx|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1018  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr 1050  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1102  <|@ instruction rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1104  <|@ instruction r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1106  <|@ instruction rdi|QWORD = LEA address: [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1108  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1110  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1112  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1118  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B34" "B40" 
    successors "B57" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr 1274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1116  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction ADD (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B41" "B56" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction NOP <|@ <|@
      nr 1830  <|@ instruction NOP <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1836  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B44" "B60" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B60 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1332  <|@ instruction r11|DWORD = ADD (x: r10|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1334  <|@ instruction rcx|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1336  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599636671466445615
    begin_IR
      LIR
      nr 1338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" "B58" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1554  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2] <|@ <|@
      nr 1556  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2] <|@ <|@
      nr 1558  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1560  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B58 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1582  <|@ instruction rax|DWORD = MOVSXB value: rcx|DWORD size: DWORD <|@ <|@
      nr 1584  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1586  <|@ instruction rbp|DWORD = SHL (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1588  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction r13|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1632  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1634  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr 1706  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1732  <|@ instruction stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1734  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction NOP <|@ <|@
      nr 1774  <|@ instruction NOP <|@ <|@
      nr 1776  <|@ instruction NOP <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr 1784  <|@ instruction r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1786  <|@ instruction r8|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1788  <|@ instruction r13|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr 1790  <|@ instruction rdi|QWORD = LEA address: [r11|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1792  <|@ instruction rsi|QWORD = LEA address: [r8|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1794  <|@ instruction rdx|QWORD = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr 1796  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1798  <|@ instruction r10|DWORD = ADD (x: stack:32|DWORD, y: stack:28|DWORD) size: DWORD <|@ <|@
      nr 1800  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1802  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1804  <|@ instruction rax|DWORD = MOVZXB input: [rsi|QWORD[.] + 17] size: DWORD <|@ <|@
      nr 1806  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1808  <|@ instruction rcx|DWORD = MOVZXB input: [rdx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr 1810  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1812  <|@ instruction MOVB (x: [rsi|QWORD[.] + 17], y: rax|BYTE(DWORD)) size: BYTE <|@ <|@
      nr 1814  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B42" 
    xhandlers
    flags 
    probability 4588388498606785847
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  158  <|@ instruction r13|DWORD = SUB (x: r13|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction rax|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  164  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  168  <|@ instruction CMP (x: rax|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction r13|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: rax|DWORD) condition: > <|@ <|@
      nr  172  <|@ instruction r13|DWORD = ADD (x: r13|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  174  <|@ instruction rcx|DWORD = DEC value: r13|DWORD size: DWORD <|@ <|@
      nr  176  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B42 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4588388498606785847
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ instruction r13|DWORD = SAR (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r13|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4588388216090718820
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  400  <|@ instruction rcx|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  402  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  404  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  406  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B16" 
    xhandlers
    flags 
    probability 4588305942140169576
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  492  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  494  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  496  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  498  <|@ instruction MOV x: [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  500  <|@ instruction MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  502  <|@ instruction MOV (x: [rbx|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  504  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  506  <|@ instruction CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4588224490929125824
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617922763110511397
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction MOV x: [rbx|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  550  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617985760531553049
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588224490929125825
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588305942140169577
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction CMP (x: r10|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  638  <|@ instruction rcx|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  640  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction r10|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  750  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  752  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  754  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction stack:72|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  764  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B8" "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588388498606785848
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  368  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: r10|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr  882  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  884  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  886  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rbx|QWORD[.]) {temp: rdx|QWORD, temp2: r10|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr  888  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction rbp|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  892  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  894  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  896  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  898  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4584865046447166825
    begin_IR
      LIR
      nr 1348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1350  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1352  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1500  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1502  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:48|QWORD[.] stack:64|QWORD[.] 
locals: stack:48|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:32|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:24, 21, 37, 2, 2] <|@ <|@
      nr 1504  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1506  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1508  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1510  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1512  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1514  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:48|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:32|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:32, 21, 37, 2, 2] <|@ <|@
      nr 1516  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1518  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr 1520  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr 1522  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr 1524  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr 1526  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1528  <|@ instruction r10|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1530  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1532  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4560668027509911113
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  942  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:48|QWORD[.] stack:28|DWORD stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:48|QWORD[.] - stack:32|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:18, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr  944  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  946  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  952  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B40" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction r8|DWORD = SHR value: r8|DWORD size: DWORD <|@ <|@
      nr 1164  <|@ instruction rsi|DWORD = ADD (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1166  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1248  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1250  <|@ instruction rsi|QWORD[*] = LEA address: [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1252  <|@ instruction r9|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1254  <|@ instruction r9|QWORD = SHL value: r9|QWORD size: QWORD <|@ <|@
      nr 1256  <|@ instruction rdx|QWORD = LEA address: [r9|QWORD + 16] size: QWORD <|@ <|@
      nr 1258  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: rdi|QWORD[*]) size: QWORD <|@ <|@
      nr 1260  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1262  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1264  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1266  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr 1272  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4558404756106723069
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction rdx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  440  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  442  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  444  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction rdi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B17" 
    xhandlers
    flags 
    probability 4558352100778371553
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  592  <|@ instruction ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  598  <|@ instruction rdi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  602  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  604  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4521739169494778405
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  240  <|@ instruction r11|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  244  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  246  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4521692882062356696
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  308  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  310  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  312  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  314  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  316  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  318  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  320  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 4521739169494778405
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction rsi|QWORD[*] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction stack:72|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  362  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  364  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  372  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4491510020210992795
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  276  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  278  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  704  <|@ instruction r10|DWORD = MOVE input: int[-151321|0xfffffffffffdb0e7] <|@ <|@
      nr  706  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B42" "B19" "B21" "B23" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1898  <|@ instruction NOP <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1914  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1916  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  652  <|@ instruction r10|DWORD = MOVE input: int[-149273|0xfffffffffffdb8e7] <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction r10|DWORD = MOVE input: int[-145177|0xfffffffffffdc8e7] <|@ <|@
      nr 1146  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B31" "B36" "B33" "B38" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1202  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1204  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:48|QWORD[.] r9|DWORD stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:48|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1710  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1720  <|@ instruction r10|DWORD = MOVE input: int[-159769|0xfffffffffffd8fe7] <|@ <|@
      nr 1728  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B49" "B58" "B51" "B53" "B55" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1604  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1606  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1608  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1878  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1880  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction r10|DWORD = MOVE input: int[-146201|0xfffffffffffdc4e7] <|@ <|@
      nr 1182  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1298  <|@ instruction r10|DWORD = MOVE input: int[-148243|0xfffffffffffdbced] <|@ <|@
      nr 1300  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  678  <|@ instruction r10|DWORD = MOVE input: int[-150297|0xfffffffffffdb4e7] <|@ <|@
      nr  680  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1638  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1648  <|@ instruction r10|DWORD = MOVE input: int[-157721|0xfffffffffffd97e7] <|@ <|@
      nr 1656  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1840  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction NOP <|@ <|@
      nr 1848  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1850  <|@ instruction r10|DWORD = MOVE input: int[-155667|0xfffffffffffd9fed] <|@ <|@
      nr 1858  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1882  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1892  <|@ instruction r10|DWORD = MOVE input: int[-98355|0xfffffffffffe7fcd] <|@ <|@
      nr 1894  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction r10|DWORD = MOVE input: int[-144153|0xfffffffffffdcce7] <|@ <|@
      nr 1066  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1672  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1682  <|@ instruction r10|DWORD = MOVE input: int[-158745|0xfffffffffffd93e7] <|@ <|@
      nr 1690  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction r10|DWORD = MOVE input: int[-143129|0xfffffffffffdd0e7] <|@ <|@
      nr 1034  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1592  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1602  <|@ instruction r10|DWORD = MOVE input: int[-156697|0xfffffffffffd9be7] <|@ <|@
      nr 1610  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B59 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #89         // append:(java.lang.CharSequence)java.lang.StringBuilder
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@24799e10 slotKind: QWORD <|@ <|@
      nr   42  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction r8|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   56  <|@ instruction rbx|DWORD = MOVSXB value: r8|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   64  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.6362310003571869 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B43 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   98  <|@ instruction rbp|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  100  <|@ instruction rcx|DWORD = MOVSXB value: rbp|DWORD size: DWORD <|@ <|@
      nr  102  <|@ instruction r11|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  104  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction r13|DWORD = ADD (x: r9|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction rcx|DWORD = SUB (x: r13|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603391649089349823
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B2" "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r8|DWORD) trueDestinationProbability: 0.998717015375415 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4603898526589647782
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" "B35" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  984  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rsi|QWORD[.] r9|DWORD rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rsi|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr  986  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  988  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rsi|QWORD[.] r9|DWORD rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rsi|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r8|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr  990  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  992  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  994  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  996  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B35 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction rcx|DWORD = MOVSXB value: rbx|DWORD size: DWORD <|@ <|@
      nr 1016  <|@ instruction rbx|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1018  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr 1050  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1102  <|@ instruction rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1104  <|@ instruction r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1106  <|@ instruction rdi|QWORD = LEA address: [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1108  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1110  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1112  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1118  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B34" "B40" 
    successors "B57" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr 1274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1116  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction ADD (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B41" "B56" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction NOP <|@ <|@
      nr 1830  <|@ instruction NOP <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1836  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B44" "B60" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B60 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1332  <|@ instruction r11|DWORD = ADD (x: r10|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1334  <|@ instruction rcx|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1336  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599636671466445615
    begin_IR
      LIR
      nr 1338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" "B58" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1554  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2] <|@ <|@
      nr 1556  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2] <|@ <|@
      nr 1558  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1560  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B58 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1582  <|@ instruction rax|DWORD = MOVSXB value: rcx|DWORD size: DWORD <|@ <|@
      nr 1584  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1586  <|@ instruction rbp|DWORD = SHL (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1588  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction r13|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1632  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1634  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr 1706  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1732  <|@ instruction stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1734  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction NOP <|@ <|@
      nr 1774  <|@ instruction NOP <|@ <|@
      nr 1776  <|@ instruction NOP <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr 1784  <|@ instruction r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1786  <|@ instruction r8|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1788  <|@ instruction r13|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr 1790  <|@ instruction rdi|QWORD = LEA address: [r11|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1792  <|@ instruction rsi|QWORD = LEA address: [r8|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1794  <|@ instruction rdx|QWORD = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr 1796  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1798  <|@ instruction r10|DWORD = ADD (x: stack:32|DWORD, y: stack:28|DWORD) size: DWORD <|@ <|@
      nr 1800  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1802  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1804  <|@ instruction rax|DWORD = MOVZXB input: [rsi|QWORD[.] + 17] size: DWORD <|@ <|@
      nr 1806  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1808  <|@ instruction rcx|DWORD = MOVZXB input: [rdx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr 1810  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1812  <|@ instruction MOVB (x: [rsi|QWORD[.] + 17], y: rax|BYTE(DWORD)) size: BYTE <|@ <|@
      nr 1814  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B42" 
    xhandlers
    flags 
    probability 4588388498606785847
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  158  <|@ instruction r13|DWORD = SUB (x: r13|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction rax|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  164  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  168  <|@ instruction CMP (x: rax|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction r13|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: rax|DWORD) condition: > <|@ <|@
      nr  172  <|@ instruction r13|DWORD = ADD (x: r13|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  174  <|@ instruction rcx|DWORD = DEC value: r13|DWORD size: DWORD <|@ <|@
      nr  176  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B42 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4588388498606785847
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ instruction r13|DWORD = SAR (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r13|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4588388216090718820
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  400  <|@ instruction rcx|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  402  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  404  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  406  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B16" 
    xhandlers
    flags 
    probability 4588305942140169576
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  492  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  494  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  496  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  498  <|@ instruction MOV x: [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  500  <|@ instruction MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  502  <|@ instruction MOV (x: [rbx|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  504  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  506  <|@ instruction CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4588224490929125824
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617922763110511397
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction MOV x: [rbx|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  550  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617985760531553049
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588224490929125825
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588305942140169577
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction CMP (x: r10|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  638  <|@ instruction rcx|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  640  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction r10|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  750  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  752  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  754  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction stack:72|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  764  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B8" "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588388498606785848
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  368  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: r10|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr  882  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  884  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  886  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rbx|QWORD[.]) {temp: rdx|QWORD, temp2: r10|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr  888  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction rbp|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  892  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  894  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  896  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  898  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4584865046447166825
    begin_IR
      LIR
      nr 1348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1350  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1352  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1500  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1502  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:48|QWORD[.] stack:64|QWORD[.] 
locals: stack:48|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:32|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:24, 21, 37, 2, 2] <|@ <|@
      nr 1504  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1506  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1508  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1510  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1512  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1514  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:48|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:32|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:32, 21, 37, 2, 2] <|@ <|@
      nr 1516  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1518  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr 1520  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr 1522  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr 1524  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr 1526  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1528  <|@ instruction r10|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1530  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1532  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4560668027509911113
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  942  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:48|QWORD[.] stack:28|DWORD stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:48|QWORD[.] - stack:32|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:18, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr  944  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  946  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  952  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B40" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction r8|DWORD = SHR value: r8|DWORD size: DWORD <|@ <|@
      nr 1164  <|@ instruction rsi|DWORD = ADD (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1166  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1248  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1250  <|@ instruction rsi|QWORD[*] = LEA address: [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1252  <|@ instruction r9|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1254  <|@ instruction r9|QWORD = SHL value: r9|QWORD size: QWORD <|@ <|@
      nr 1256  <|@ instruction rdx|QWORD = LEA address: [r9|QWORD + 16] size: QWORD <|@ <|@
      nr 1258  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: rdi|QWORD[*]) size: QWORD <|@ <|@
      nr 1260  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1262  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1264  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1266  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr 1272  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4558404756106723069
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction rdx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  440  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  442  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  444  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction rdi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B17" 
    xhandlers
    flags 
    probability 4558352100778371553
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  592  <|@ instruction ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  598  <|@ instruction rdi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  602  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  604  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4521739169494778405
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  240  <|@ instruction r11|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  244  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  246  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4521692882062356696
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  308  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  310  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  312  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  314  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  316  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  318  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  320  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 4521739169494778405
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction rsi|QWORD[*] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction stack:72|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  362  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  364  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  372  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4491510020210992795
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  276  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  278  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  704  <|@ instruction r10|DWORD = MOVE input: int[-151321|0xfffffffffffdb0e7] <|@ <|@
      nr  706  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B42" "B19" "B21" "B23" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1898  <|@ instruction NOP <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1914  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1916  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  652  <|@ instruction r10|DWORD = MOVE input: int[-149273|0xfffffffffffdb8e7] <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction r10|DWORD = MOVE input: int[-145177|0xfffffffffffdc8e7] <|@ <|@
      nr 1146  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B31" "B36" "B33" "B38" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1202  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1204  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:48|QWORD[.] r9|DWORD stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:48|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1710  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1720  <|@ instruction r10|DWORD = MOVE input: int[-159769|0xfffffffffffd8fe7] <|@ <|@
      nr 1728  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B49" "B58" "B51" "B53" "B55" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1604  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1606  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1608  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1878  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1880  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction r10|DWORD = MOVE input: int[-146201|0xfffffffffffdc4e7] <|@ <|@
      nr 1182  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1298  <|@ instruction r10|DWORD = MOVE input: int[-148243|0xfffffffffffdbced] <|@ <|@
      nr 1300  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  678  <|@ instruction r10|DWORD = MOVE input: int[-150297|0xfffffffffffdb4e7] <|@ <|@
      nr  680  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1638  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1648  <|@ instruction r10|DWORD = MOVE input: int[-157721|0xfffffffffffd97e7] <|@ <|@
      nr 1656  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1840  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction NOP <|@ <|@
      nr 1848  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1850  <|@ instruction r10|DWORD = MOVE input: int[-155667|0xfffffffffffd9fed] <|@ <|@
      nr 1858  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1882  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1892  <|@ instruction r10|DWORD = MOVE input: int[-98355|0xfffffffffffe7fcd] <|@ <|@
      nr 1894  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction r10|DWORD = MOVE input: int[-144153|0xfffffffffffdcce7] <|@ <|@
      nr 1066  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1672  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1682  <|@ instruction r10|DWORD = MOVE input: int[-158745|0xfffffffffffd93e7] <|@ <|@
      nr 1690  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction r10|DWORD = MOVE input: int[-143129|0xfffffffffffdd0e7] <|@ <|@
      nr 1034  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1592  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1602  <|@ instruction r10|DWORD = MOVE input: int[-156697|0xfffffffffffd9be7] <|@ <|@
      nr 1610  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B59 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #89         // append:(java.lang.CharSequence)java.lang.StringBuilder
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@24799e10 slotKind: QWORD <|@ <|@
      nr   42  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction r8|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   56  <|@ instruction rbx|DWORD = MOVSXB value: r8|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   64  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.6362310003571869 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B43 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   98  <|@ instruction rbp|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  100  <|@ instruction rcx|DWORD = MOVSXB value: rbp|DWORD size: DWORD <|@ <|@
      nr  102  <|@ instruction r11|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  104  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction r13|DWORD = ADD (x: r9|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction rcx|DWORD = SUB (x: r13|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603391649089349823
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B2" "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r8|DWORD) trueDestinationProbability: 0.998717015375415 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4603898526589647782
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" "B35" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  984  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rsi|QWORD[.] r9|DWORD rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rsi|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr  986  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  988  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rsi|QWORD[.] r9|DWORD rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rsi|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r8|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr  990  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  992  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  994  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  996  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B35 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction rcx|DWORD = MOVSXB value: rbx|DWORD size: DWORD <|@ <|@
      nr 1016  <|@ instruction rbx|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1018  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr 1050  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1102  <|@ instruction rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1104  <|@ instruction r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1106  <|@ instruction rdi|QWORD = LEA address: [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1108  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1110  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1112  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1118  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B34" "B40" 
    successors "B57" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr 1274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1116  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction ADD (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B41" "B56" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction NOP <|@ <|@
      nr 1830  <|@ instruction NOP <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1836  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B44" "B60" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B60 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1332  <|@ instruction r11|DWORD = ADD (x: r10|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1334  <|@ instruction rcx|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1336  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599636671466445615
    begin_IR
      LIR
      nr 1338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" "B58" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1554  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2] <|@ <|@
      nr 1556  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2] <|@ <|@
      nr 1558  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1560  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B58 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1582  <|@ instruction rax|DWORD = MOVSXB value: rcx|DWORD size: DWORD <|@ <|@
      nr 1584  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1586  <|@ instruction rbp|DWORD = SHL (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1588  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction r13|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1632  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1634  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr 1706  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1732  <|@ instruction stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1734  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction NOP <|@ <|@
      nr 1774  <|@ instruction NOP <|@ <|@
      nr 1776  <|@ instruction NOP <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr 1784  <|@ instruction r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1786  <|@ instruction r8|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1788  <|@ instruction r13|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr 1790  <|@ instruction rdi|QWORD = LEA address: [r11|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1792  <|@ instruction rsi|QWORD = LEA address: [r8|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1794  <|@ instruction rdx|QWORD = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr 1796  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1798  <|@ instruction r10|DWORD = ADD (x: stack:32|DWORD, y: stack:28|DWORD) size: DWORD <|@ <|@
      nr 1800  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1802  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1804  <|@ instruction rax|DWORD = MOVZXB input: [rsi|QWORD[.] + 17] size: DWORD <|@ <|@
      nr 1806  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1808  <|@ instruction rcx|DWORD = MOVZXB input: [rdx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr 1810  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1812  <|@ instruction MOVB (x: [rsi|QWORD[.] + 17], y: rax|BYTE(DWORD)) size: BYTE <|@ <|@
      nr 1814  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B42" 
    xhandlers
    flags 
    probability 4588388498606785847
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  158  <|@ instruction r13|DWORD = SUB (x: r13|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction rax|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  164  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  168  <|@ instruction CMP (x: rax|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction r13|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: rax|DWORD) condition: > <|@ <|@
      nr  172  <|@ instruction r13|DWORD = ADD (x: r13|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  174  <|@ instruction rcx|DWORD = DEC value: r13|DWORD size: DWORD <|@ <|@
      nr  176  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B42 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4588388498606785847
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ instruction r13|DWORD = SAR (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r13|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4588388216090718820
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  400  <|@ instruction rcx|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  402  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  404  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  406  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B16" 
    xhandlers
    flags 
    probability 4588305942140169576
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  492  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  494  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  496  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  498  <|@ instruction MOV x: [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  500  <|@ instruction MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  502  <|@ instruction MOV (x: [rbx|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  504  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  506  <|@ instruction CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4588224490929125824
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617922763110511397
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction MOV x: [rbx|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  550  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617985760531553049
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588224490929125825
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588305942140169577
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction CMP (x: r10|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  638  <|@ instruction rcx|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  640  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction r10|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  750  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  752  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  754  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction stack:72|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  764  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B8" "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588388498606785848
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  368  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: r10|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr  882  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  884  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  886  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rbx|QWORD[.]) {temp: rdx|QWORD, temp2: r10|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr  888  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction rbp|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  892  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  894  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  896  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  898  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4584865046447166825
    begin_IR
      LIR
      nr 1348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1350  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1352  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1500  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1502  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:48|QWORD[.] stack:64|QWORD[.] 
locals: stack:48|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:32|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:24, 21, 37, 2, 2] <|@ <|@
      nr 1504  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1506  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1508  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1510  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1512  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1514  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:48|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:32|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:32, 21, 37, 2, 2] <|@ <|@
      nr 1516  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1518  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr 1520  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr 1522  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr 1524  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr 1526  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1528  <|@ instruction r10|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1530  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1532  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4560668027509911113
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  942  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:48|QWORD[.] stack:28|DWORD stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:48|QWORD[.] - stack:32|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:18, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr  944  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  946  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  952  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B40" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction r8|DWORD = SHR value: r8|DWORD size: DWORD <|@ <|@
      nr 1164  <|@ instruction rsi|DWORD = ADD (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1166  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1248  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1250  <|@ instruction rsi|QWORD[*] = LEA address: [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1252  <|@ instruction r9|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1254  <|@ instruction r9|QWORD = SHL value: r9|QWORD size: QWORD <|@ <|@
      nr 1256  <|@ instruction rdx|QWORD = LEA address: [r9|QWORD + 16] size: QWORD <|@ <|@
      nr 1258  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: rdi|QWORD[*]) size: QWORD <|@ <|@
      nr 1260  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1262  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1264  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1266  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr 1272  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4558404756106723069
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction rdx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  440  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  442  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  444  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction rdi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B17" 
    xhandlers
    flags 
    probability 4558352100778371553
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  592  <|@ instruction ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  598  <|@ instruction rdi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  602  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  604  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4521739169494778405
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  240  <|@ instruction r11|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  244  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  246  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4521692882062356696
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  308  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  310  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  312  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  314  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  316  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  318  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  320  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 4521739169494778405
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction rsi|QWORD[*] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction stack:72|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  362  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  364  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  372  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4491510020210992795
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  276  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  278  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  704  <|@ instruction r10|DWORD = MOVE input: int[-151321|0xfffffffffffdb0e7] <|@ <|@
      nr  706  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B42" "B19" "B21" "B23" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1898  <|@ instruction NOP <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1914  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1916  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  652  <|@ instruction r10|DWORD = MOVE input: int[-149273|0xfffffffffffdb8e7] <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction r10|DWORD = MOVE input: int[-145177|0xfffffffffffdc8e7] <|@ <|@
      nr 1146  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B31" "B36" "B33" "B38" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1202  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1204  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:48|QWORD[.] r9|DWORD stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:48|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1710  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1720  <|@ instruction r10|DWORD = MOVE input: int[-159769|0xfffffffffffd8fe7] <|@ <|@
      nr 1728  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B49" "B58" "B51" "B53" "B55" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1604  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1606  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1608  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1878  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1880  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction r10|DWORD = MOVE input: int[-146201|0xfffffffffffdc4e7] <|@ <|@
      nr 1182  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1298  <|@ instruction r10|DWORD = MOVE input: int[-148243|0xfffffffffffdbced] <|@ <|@
      nr 1300  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  678  <|@ instruction r10|DWORD = MOVE input: int[-150297|0xfffffffffffdb4e7] <|@ <|@
      nr  680  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1638  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1648  <|@ instruction r10|DWORD = MOVE input: int[-157721|0xfffffffffffd97e7] <|@ <|@
      nr 1656  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1840  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction NOP <|@ <|@
      nr 1848  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1850  <|@ instruction r10|DWORD = MOVE input: int[-155667|0xfffffffffffd9fed] <|@ <|@
      nr 1858  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1882  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1892  <|@ instruction r10|DWORD = MOVE input: int[-98355|0xfffffffffffe7fcd] <|@ <|@
      nr 1894  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction r10|DWORD = MOVE input: int[-144153|0xfffffffffffdcce7] <|@ <|@
      nr 1066  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1672  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1682  <|@ instruction r10|DWORD = MOVE input: int[-158745|0xfffffffffffd93e7] <|@ <|@
      nr 1690  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction r10|DWORD = MOVE input: int[-143129|0xfffffffffffdd0e7] <|@ <|@
      nr 1034  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1592  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1602  <|@ instruction r10|DWORD = MOVE input: int[-156697|0xfffffffffffd9be7] <|@ <|@
      nr 1610  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B59 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #89         // append:(java.lang.CharSequence)java.lang.StringBuilder
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@24799e10 slotKind: QWORD <|@ <|@
      nr   42  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@reference-map: [rdx:0, rsi:0, rdi:0, stack:24, stack:32]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ st <@st|@reference-map: [rdx:0, rsi:0, rdi:0, stack:24, stack:32]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction r8|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   56  <|@ instruction rbx|DWORD = MOVSXB value: r8|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   64  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.6362310003571869 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B43 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   96  <|@ st <@st|@reference-map: [rdx:0, rsi:0, rdi:0, stack:24, stack:32]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   98  <|@ instruction rbp|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  100  <|@ instruction rcx|DWORD = MOVSXB value: rbp|DWORD size: DWORD <|@ <|@
      nr  102  <|@ instruction r11|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  104  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction r13|DWORD = ADD (x: r9|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction rcx|DWORD = SUB (x: r13|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603391649089349823
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B2" "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r8|DWORD) trueDestinationProbability: 0.998717015375415 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4603898526589647782
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" "B35" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  984  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rsi|QWORD[.] r9|DWORD rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rsi|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr  986  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  988  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, rdi:0, stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rsi|QWORD[.] r9|DWORD rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rsi|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r8|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr  990  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  992  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  994  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  996  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B35 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction rcx|DWORD = MOVSXB value: rbx|DWORD size: DWORD <|@ <|@
      nr 1016  <|@ instruction rbx|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1018  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr 1050  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1102  <|@ instruction rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1104  <|@ instruction r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1106  <|@ instruction rdi|QWORD = LEA address: [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1108  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1110  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1112  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1118  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B34" "B40" 
    successors "B57" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr 1274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1116  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction ADD (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B41" "B56" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction NOP <|@ <|@
      nr 1830  <|@ instruction NOP <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1836  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B44" "B60" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B60 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1332  <|@ instruction r11|DWORD = ADD (x: r10|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1334  <|@ instruction rcx|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1336  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599636671466445615
    begin_IR
      LIR
      nr 1338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" "B58" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1554  <|@ st <@st|@reference-map: [rdx:0, rsi:0, rdi:0, r11:0, stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2] <|@ <|@
      nr 1556  <|@ st <@st|@reference-map: [rdx:0, rsi:0, rdi:0, r11:0, stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2] <|@ <|@
      nr 1558  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1560  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B58 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1582  <|@ instruction rax|DWORD = MOVSXB value: rcx|DWORD size: DWORD <|@ <|@
      nr 1584  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1586  <|@ instruction rbp|DWORD = SHL (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1588  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction r13|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1632  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1634  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr 1706  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1732  <|@ instruction stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1734  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction NOP <|@ <|@
      nr 1774  <|@ instruction NOP <|@ <|@
      nr 1776  <|@ instruction NOP <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr 1784  <|@ instruction r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1786  <|@ instruction r8|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1788  <|@ instruction r13|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr 1790  <|@ instruction rdi|QWORD = LEA address: [r11|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1792  <|@ instruction rsi|QWORD = LEA address: [r8|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1794  <|@ instruction rdx|QWORD = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr 1796  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1798  <|@ instruction r10|DWORD = ADD (x: stack:32|DWORD, y: stack:28|DWORD) size: DWORD <|@ <|@
      nr 1800  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1802  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1804  <|@ instruction rax|DWORD = MOVZXB input: [rsi|QWORD[.] + 17] size: DWORD <|@ <|@
      nr 1806  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1808  <|@ instruction rcx|DWORD = MOVZXB input: [rdx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr 1810  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1812  <|@ instruction MOVB (x: [rsi|QWORD[.] + 17], y: rax|BYTE(DWORD)) size: BYTE <|@ <|@
      nr 1814  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B42" 
    xhandlers
    flags 
    probability 4588388498606785847
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  158  <|@ instruction r13|DWORD = SUB (x: r13|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction rax|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  164  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  168  <|@ instruction CMP (x: rax|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction r13|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: rax|DWORD) condition: > <|@ <|@
      nr  172  <|@ instruction r13|DWORD = ADD (x: r13|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  174  <|@ instruction rcx|DWORD = DEC value: r13|DWORD size: DWORD <|@ <|@
      nr  176  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B42 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4588388498606785847
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ instruction r13|DWORD = SAR (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r13|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4588388216090718820
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  400  <|@ instruction rcx|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  402  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  404  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  406  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B16" 
    xhandlers
    flags 
    probability 4588305942140169576
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  492  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  494  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  496  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  498  <|@ instruction MOV x: [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  500  <|@ instruction MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  502  <|@ instruction MOV (x: [rbx|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  504  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  506  <|@ instruction CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4588224490929125824
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617922763110511397
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction MOV x: [rbx|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  550  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617985760531553049
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588224490929125825
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588305942140169577
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction CMP (x: r10|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  638  <|@ instruction rcx|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  640  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction r10|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  750  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  752  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  754  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction stack:72|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  764  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B8" "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588388498606785848
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  368  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: r10|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr  882  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  884  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  886  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rbx|QWORD[.]) {temp: rdx|QWORD, temp2: r10|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr  888  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction rbp|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  892  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  894  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  896  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  898  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4584865046447166825
    begin_IR
      LIR
      nr 1348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1350  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1352  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1500  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1502  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:48|QWORD[.] stack:64|QWORD[.] 
locals: stack:48|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:32|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:24, 21, 37, 2, 2] <|@ <|@
      nr 1504  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1506  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1508  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1510  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1512  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1514  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:48|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:32|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:32, 21, 37, 2, 2] <|@ <|@
      nr 1516  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1518  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr 1520  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr 1522  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr 1524  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr 1526  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1528  <|@ instruction r10|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1530  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1532  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4560668027509911113
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  942  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:48|QWORD[.] stack:28|DWORD stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:48|QWORD[.] - stack:32|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:18, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr  944  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  946  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  952  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B40" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction r8|DWORD = SHR value: r8|DWORD size: DWORD <|@ <|@
      nr 1164  <|@ instruction rsi|DWORD = ADD (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1166  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1248  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1250  <|@ instruction rsi|QWORD[*] = LEA address: [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1252  <|@ instruction r9|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1254  <|@ instruction r9|QWORD = SHL value: r9|QWORD size: QWORD <|@ <|@
      nr 1256  <|@ instruction rdx|QWORD = LEA address: [r9|QWORD + 16] size: QWORD <|@ <|@
      nr 1258  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: rdi|QWORD[*]) size: QWORD <|@ <|@
      nr 1260  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1262  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1264  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1266  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr 1272  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4558404756106723069
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction rdx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  440  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:32]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  442  <|@ st <@st|@reference-map: [rax:0, stack:16, stack:24, stack:32]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  444  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction rdi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B17" 
    xhandlers
    flags 
    probability 4558352100778371553
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  592  <|@ instruction ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  598  <|@ instruction rdi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  602  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  604  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4521739169494778405
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  240  <|@ instruction r11|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  244  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  246  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4521692882062356696
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  308  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  310  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  312  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  314  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  316  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  318  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  320  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 4521739169494778405
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction rsi|QWORD[*] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction stack:72|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  362  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  364  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  372  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4491510020210992795
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:32]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  276  <|@ st <@st|@reference-map: [rax:0, stack:16, stack:24, stack:32]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  278  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  704  <|@ instruction r10|DWORD = MOVE input: int[-151321|0xfffffffffffdb0e7] <|@ <|@
      nr  706  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B42" "B19" "B21" "B23" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1898  <|@ instruction NOP <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1914  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1916  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  652  <|@ instruction r10|DWORD = MOVE input: int[-149273|0xfffffffffffdb8e7] <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction r10|DWORD = MOVE input: int[-145177|0xfffffffffffdc8e7] <|@ <|@
      nr 1146  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B31" "B36" "B33" "B38" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1202  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1204  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:48|QWORD[.] r9|DWORD stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:48|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1710  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1720  <|@ instruction r10|DWORD = MOVE input: int[-159769|0xfffffffffffd8fe7] <|@ <|@
      nr 1728  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B49" "B58" "B51" "B53" "B55" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1604  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1606  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1608  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1878  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1880  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction r10|DWORD = MOVE input: int[-146201|0xfffffffffffdc4e7] <|@ <|@
      nr 1182  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1298  <|@ instruction r10|DWORD = MOVE input: int[-148243|0xfffffffffffdbced] <|@ <|@
      nr 1300  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  678  <|@ instruction r10|DWORD = MOVE input: int[-150297|0xfffffffffffdb4e7] <|@ <|@
      nr  680  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1638  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1648  <|@ instruction r10|DWORD = MOVE input: int[-157721|0xfffffffffffd97e7] <|@ <|@
      nr 1656  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1840  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction NOP <|@ <|@
      nr 1848  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1850  <|@ instruction r10|DWORD = MOVE input: int[-155667|0xfffffffffffd9fed] <|@ <|@
      nr 1858  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1882  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1892  <|@ instruction r10|DWORD = MOVE input: int[-98355|0xfffffffffffe7fcd] <|@ <|@
      nr 1894  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction r10|DWORD = MOVE input: int[-144153|0xfffffffffffdcce7] <|@ <|@
      nr 1066  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1672  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1682  <|@ instruction r10|DWORD = MOVE input: int[-158745|0xfffffffffffd93e7] <|@ <|@
      nr 1690  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction r10|DWORD = MOVE input: int[-143129|0xfffffffffffdd0e7] <|@ <|@
      nr 1034  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1592  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1602  <|@ instruction r10|DWORD = MOVE input: int[-156697|0xfffffffffffd9be7] <|@ <|@
      nr 1610  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B59 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #89         // append:(java.lang.CharSequence)java.lang.StringBuilder
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@24799e10 slotKind: QWORD <|@ <|@
      nr   42  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@reference-map: [rdx:0, rsi:0, rdi:0, stack:24, stack:32]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ st <@st|@reference-map: [rdx:0, rsi:0, rdi:0, stack:24, stack:32]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction r8|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   56  <|@ instruction rbx|DWORD = MOVSXB value: r8|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr   64  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.6362310003571869 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B43 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   96  <|@ st <@st|@reference-map: [rdx:0, rsi:0, rdi:0, stack:24, stack:32]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   98  <|@ instruction rbp|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  100  <|@ instruction rcx|DWORD = MOVSXB value: rbp|DWORD size: DWORD <|@ <|@
      nr  102  <|@ instruction r11|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  104  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction r13|DWORD = ADD (x: r9|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction rcx|DWORD = SUB (x: r13|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603391649089349823
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B2" "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r8|DWORD) trueDestinationProbability: 0.998717015375415 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4603898526589647782
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" "B35" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  984  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rsi|QWORD[.] r9|DWORD rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rsi|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr  986  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  988  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, rdi:0, stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rsi|QWORD[.] r9|DWORD rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rsi|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r8|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr  990  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  992  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  994  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  996  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B35 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction rcx|DWORD = MOVSXB value: rbx|DWORD size: DWORD <|@ <|@
      nr 1016  <|@ instruction rbx|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1018  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr 1050  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603898822919327481
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1102  <|@ instruction rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1104  <|@ instruction r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1106  <|@ instruction rdi|QWORD = LEA address: [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1108  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1110  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1112  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1118  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B34" "B40" 
    successors "B57" 
    xhandlers
    flags 
    probability 4603905878937536786
    begin_IR
      LIR
      nr 1274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1116  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction ADD (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B41" "B56" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction NOP <|@ <|@
      nr 1830  <|@ instruction NOP <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1836  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B44" "B60" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B60 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1332  <|@ instruction r11|DWORD = ADD (x: r10|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1334  <|@ instruction rcx|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1336  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599636671466445615
    begin_IR
      LIR
      nr 1338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" "B58" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1554  <|@ st <@st|@reference-map: [rdx:0, rsi:0, rdi:0, r11:0, stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2] <|@ <|@
      nr 1556  <|@ st <@st|@reference-map: [rdx:0, rsi:0, rdi:0, r11:0, stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2] <|@ <|@
      nr 1558  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1560  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B58 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1582  <|@ instruction rax|DWORD = MOVSXB value: rcx|DWORD size: DWORD <|@ <|@
      nr 1584  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1586  <|@ instruction rbp|DWORD = SHL (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1588  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction r13|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1632  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1634  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr 1706  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4600224699642867164
    begin_IR
      LIR
      nr 1730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1732  <|@ instruction stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1734  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction NOP <|@ <|@
      nr 1774  <|@ instruction NOP <|@ <|@
      nr 1776  <|@ instruction NOP <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr 1784  <|@ instruction r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1786  <|@ instruction r8|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1788  <|@ instruction r13|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr 1790  <|@ instruction rdi|QWORD = LEA address: [r11|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1792  <|@ instruction rsi|QWORD = LEA address: [r8|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1794  <|@ instruction rdx|QWORD = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr 1796  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1798  <|@ instruction r10|DWORD = ADD (x: stack:32|DWORD, y: stack:28|DWORD) size: DWORD <|@ <|@
      nr 1800  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1802  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1804  <|@ instruction rax|DWORD = MOVZXB input: [rsi|QWORD[.] + 17] size: DWORD <|@ <|@
      nr 1806  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1808  <|@ instruction rcx|DWORD = MOVZXB input: [rdx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr 1810  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1812  <|@ instruction MOVB (x: [rsi|QWORD[.] + 17], y: rax|BYTE(DWORD)) size: BYTE <|@ <|@
      nr 1814  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B42" 
    xhandlers
    flags 
    probability 4588388498606785847
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  158  <|@ instruction r13|DWORD = SUB (x: r13|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction rax|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  164  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  168  <|@ instruction CMP (x: rax|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction r13|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: rax|DWORD) condition: > <|@ <|@
      nr  172  <|@ instruction r13|DWORD = ADD (x: r13|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  174  <|@ instruction rcx|DWORD = DEC value: r13|DWORD size: DWORD <|@ <|@
      nr  176  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B42 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4588388498606785847
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ instruction r13|DWORD = SAR (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r13|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4588388216090718820
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  400  <|@ instruction rcx|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  402  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  404  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  406  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B16" 
    xhandlers
    flags 
    probability 4588305942140169576
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  492  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  494  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  496  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  498  <|@ instruction MOV x: [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  500  <|@ instruction MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  502  <|@ instruction MOV (x: [rbx|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  504  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  506  <|@ instruction CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4588224490929125824
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617922763110511397
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction MOV x: [rbx|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  550  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617985760531553049
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588224490929125825
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588305942140169577
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction CMP (x: r10|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  638  <|@ instruction rcx|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  640  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4588388216090718821
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction r10|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  750  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  752  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  754  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction stack:72|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  764  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B8" "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588388498606785848
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  368  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: r10|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr  882  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr  884  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  886  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rbx|QWORD[.]) {temp: rdx|QWORD, temp2: r10|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr  888  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction rbp|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  892  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  894  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  896  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  898  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4584865046447166825
    begin_IR
      LIR
      nr 1348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1350  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1352  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1500  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1502  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:48|QWORD[.] stack:64|QWORD[.] 
locals: stack:48|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:32|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:24, 21, 37, 2, 2] <|@ <|@
      nr 1504  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1506  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1508  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1510  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1512  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1514  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:48|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:32|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:32, 21, 37, 2, 2] <|@ <|@
      nr 1516  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1518  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr 1520  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3 <|@ <|@
      nr 1522  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr 1524  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5 <|@ <|@
      nr 1526  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1528  <|@ instruction r10|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1530  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1532  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4560668027509911113
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  942  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:48|QWORD[.] stack:28|DWORD stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:48|QWORD[.] - stack:32|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:18, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
      nr  944  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  946  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  952  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B40" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction r8|DWORD = SHR value: r8|DWORD size: DWORD <|@ <|@
      nr 1164  <|@ instruction rsi|DWORD = ADD (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1166  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4560364585917899923
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1248  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1250  <|@ instruction rsi|QWORD[*] = LEA address: [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1252  <|@ instruction r9|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1254  <|@ instruction r9|QWORD = SHL value: r9|QWORD size: QWORD <|@ <|@
      nr 1256  <|@ instruction rdx|QWORD = LEA address: [r9|QWORD + 16] size: QWORD <|@ <|@
      nr 1258  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: rdi|QWORD[*]) size: QWORD <|@ <|@
      nr 1260  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1262  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1264  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1266  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr 1272  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4558404756106723069
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction rdx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  440  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:32]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  442  <|@ st <@st|@reference-map: [rax:0, stack:16, stack:24, stack:32]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  444  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction rdi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B17" 
    xhandlers
    flags 
    probability 4558352100778371553
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  592  <|@ instruction ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  598  <|@ instruction rdi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  602  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  604  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4521739169494778405
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  240  <|@ instruction r11|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  244  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  246  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4521692882062356696
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  308  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  310  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  312  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  314  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  316  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  318  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  320  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 4521739169494778405
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction rsi|QWORD[*] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction stack:72|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  362  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  364  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  372  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4491510020210992795
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:32]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  276  <|@ st <@st|@reference-map: [rax:0, stack:16, stack:24, stack:32]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  278  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  704  <|@ instruction r10|DWORD = MOVE input: int[-151321|0xfffffffffffdb0e7] <|@ <|@
      nr  706  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B42" "B19" "B21" "B23" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1898  <|@ instruction NOP <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1914  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1916  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  652  <|@ instruction r10|DWORD = MOVE input: int[-149273|0xfffffffffffdb8e7] <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction r10|DWORD = MOVE input: int[-145177|0xfffffffffffdc8e7] <|@ <|@
      nr 1146  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B31" "B36" "B33" "B38" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1202  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1204  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:48|QWORD[.] r9|DWORD stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:48|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1710  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1720  <|@ instruction r10|DWORD = MOVE input: int[-159769|0xfffffffffffd8fe7] <|@ <|@
      nr 1728  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B49" "B58" "B51" "B53" "B55" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1604  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1606  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1608  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1878  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1880  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction r10|DWORD = MOVE input: int[-146201|0xfffffffffffdc4e7] <|@ <|@
      nr 1182  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1298  <|@ instruction r10|DWORD = MOVE input: int[-148243|0xfffffffffffdbced] <|@ <|@
      nr 1300  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  678  <|@ instruction r10|DWORD = MOVE input: int[-150297|0xfffffffffffdb4e7] <|@ <|@
      nr  680  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1638  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1648  <|@ instruction r10|DWORD = MOVE input: int[-157721|0xfffffffffffd97e7] <|@ <|@
      nr 1656  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1840  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction NOP <|@ <|@
      nr 1848  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1850  <|@ instruction r10|DWORD = MOVE input: int[-155667|0xfffffffffffd9fed] <|@ <|@
      nr 1858  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1882  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1892  <|@ instruction r10|DWORD = MOVE input: int[-98355|0xfffffffffffe7fcd] <|@ <|@
      nr 1894  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction r10|DWORD = MOVE input: int[-144153|0xfffffffffffdcce7] <|@ <|@
      nr 1066  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1672  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1682  <|@ instruction r10|DWORD = MOVE input: int[-158745|0xfffffffffffd93e7] <|@ <|@
      nr 1690  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction r10|DWORD = MOVE input: int[-143129|0xfffffffffffdd0e7] <|@ <|@
      nr 1034  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1592  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1602  <|@ instruction r10|DWORD = MOVE input: int[-156697|0xfffffffffffd9be7] <|@ <|@
      nr 1610  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B59 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #89         // append:(java.lang.CharSequence)java.lang.StringBuilder
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec489041817f20000000000f857c09000090909090909090909090909090909090909048896c2440488974242048895424188b7e14448b14fd0c000000448b5a08440fbe4610448b4e0c410fbed88bcb418bc2d3e848c1e7034181fbaddeadde0f850f01000044894c24349090909090909090909090908b4a14448b1ccd0c0000000fbe6a10400fbecd41d3eb44895c2430458be94503eb418bcd2bc883f9010f8dda01000090909090909090413ae80f857a050000909090909090909090909090909090908b4a14448b14cd0c0000008b7e14448b04fd0c0000000fbe5e1048c1e7038bc148c1e0033a5a100f856d050000909090909090900fbecb418bd9d3e385db0f8c5b0800009090909090452bc2413bd80f8f22080000909090909090909090909090909090488bd7488d7810488d741a10498bd2e800000000448b5c2430488b7424209090909044015e0c9090909090909090488bc6488b6c24404883c448493ba7500400000f872c080000c5f877c3909090904181fbaddeadde0f85a207000090909090909090448b520c458bda4503d9418bcb2bc883f9010f8d4b0300009090909090909090909090448b5a14468b04dd0c000000448b4f0c0fbe4e103a4a100f854107000090909090909090908b5e0c0fbec18bc88bebd3e585ed0f8c8a07000090909090909090448b6a0c41d3e54585ed0f8cf706000090909090453be80f873e0700009090909090452bcd413be90f8f5e060000895c24344489542430909090909090909090909090909090909090909090909049c1e3034c8bc7498d7b10498d742810498bd5e800000000448b5424304403542434488b7424204489560c0fb64611488b5424180fb64a110bc1884611e9d0feffff9090909090909090909090909090908bcb41d3e5452beab802000000d3e04103c2413bc5440f4fe84503ea418bcdffc981f9f7ffff7f0f83110600009090909090909090908bcb41d3fd41d3e5453bd50f845f0400009090909090909090909090498b9fb8010000418bcd488d49174883e1f8488bc14803c3493b87c80100000f87ad0300009090909090909090909090909090498987b80100000f188419000100000f188419400100000f1884198001000048c70301000000c74308addeadde44896b0c488d41f04881f8000800000f83a703000090909048c7c010000000e9250000006666660f1f840000000000666666906666909090909090909048c7040300000000488d400890909090483bc877e490909090909090909090909090453bd5418bca410f4fcd85c90f8c8904000090909090413bca0f872305000090909090413bcd0f873d040000896c242c44894424289090909090909090909090909090904c8bd3488d7f10498d7210488bd148895c2408e800000000488b5c2408488b742420909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909041807f40000f842e000000448b561449c1e2034d85d20f841d000000498b57284883fa000f84490500004883ea0849895728490357384c8912488bd348c1ea03895614488bd64833d348c1ea160f8442000000488bd648c1ea0949ba00e0368d787f00004903d2803a027429f083042400803a00741fc602004d8b57484d85d20f84fc0400004983ea084d8957484d035758498912448b5c24308b6c242c448b4c2434448b442428488b542418e9b9fbffff448954243048897c241090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090904c8bd6418bd3666690e8000000000f1f840000000000488b7424200fbe4e10d3e0488b7424108bd090e8000000000f1f840000000000488b74242041807f40000f842e000000448b5e1449c1e3034d85db0f841d0000004d8b57284983fa000f84290400004983ea084d8957284d0357384d891a4c8bd049c1ea03448956144c8bd64c33d049c1ea160f844e0000004885c00f84450000004c8bd649c1ea0949bb00e0368d787f00004d03d341803a02742bf08304240041803a00742041c602004d8b5f484d85db0f84cf0300004983eb084d895f484d035f584d8913488bf8448b542430488b542418e978fbffff909090909090904c8bd6e8000000000f1f840000000000448b5c2430448b4c2434488b542418488b742420e959faffff909090904585c90f8ce001000090909090909041d1e8418bf14103f2413bf00f873d02000090909090909090909090909090909090909090488d701049d1e1498d51104803d7418bcae800000000e98bfaffff896c242c48897c2410448944242848beaddeaddeaddeadde909090909090909090418bd5e8000000000f1f8400000000008500488bd8488b7c2410488b542418488b742420e99dfcffff896c242c48897c24104489442428909090909090909090488bc8488d7b104833c0f348aa488b7c2410488b542418488b742420e961fcffff896c242c48897c241044894424289090909090909090909090498bbfb8010000458bda498d73174883e6f8488bd64803d7493b97c80100000f876c0000009090909090909090909090498997b80100000f18843e000100000f18843e400100000f18843e8001000048c70701000000c74708addeadde4489570c9090909090909090909090909090488b742410488bd748897c2408488d7e10488d7210498bd3e800000000e91dfcffff48beaddeaddeaddeadde909090909090909090418bd2e8000000000f1f8400000000008500488bf8eba690909049c7c30000000041bae7b0fdff90909090909090458997840400004d899f90040000e8000000000f1f84000000000090909049c7c30000000041bae7b8fdffebcc90909041bae7c8fdff909090909090904589978404000049c7879004000000000000e8000000000f1f840000000000448954243090909049c7c30000000041bae78ffdff448b442430488b542418488b74242090909090909090458997840400004d899f90040000e8000000000f1f84000000000090909041bae7c4fdffeb8990909049c7c31414000041baedbcfdffe937ffffff90909049c7c30000000041bae7b4fdffe922ffffff448954243090909049c7c30000000041bae797fdffeb83448954243090909049c7c3940c000041baed9ffdffe969ffffff90909049c7c39402000041bacd7ffeffe9dcfeffff90909041bae7ccfdffe90bffffff448954243090909049c7c30000000041bae793fdffe92cffffff90909041bae7d0fdffe9e3feffff448954243090909049c7c30000000041bae79bfdffe904ffffff48896c2440e800000000e975f6fffff4488d0dc0f7ffff49898f68040000e927f6fffff44c891424e800000000e9b8fafffff448891424e800000000e905fbfffff44c891c24e800000000e9d8fbfffff44c891424e800000000e932fcfffff441c78784040000f500feff49c7879004000000000000e8000000000f1f84000000000041c78784040000ede1fdff49c7879004000014000000e8000000000f1f84000000000041c78784040000f5f2feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5a0feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5fefdff49c7879004000000000000e8000000000f1f84000000000041c78784040000f568feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f567feff49c7879004000000000000e8000000000f1f84000000000041c787840400008faffcff49c7879004000000000000e8000000000f1f84000000000041c787840400008ffffcff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 NOP  <||@
  Comment 72 30 NOP  <||@
  Comment 73 32 NOP  <||@
  Comment 74 34 NOP  <||@
  Comment 75 36 NOP  <||@
  Comment 76 38 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 81 40 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@24799e10 slotKind: QWORD  <||@
  Comment 81 42 stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 86 44 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 91 46 rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 94 48 r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 94 [rdx:0, rsi:0, rdi:0, stack:24, stack:32]at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 94 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 102 50 r11|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0]  <||@
  Comment 102 [rdx:0, rsi:0, rdi:0, stack:24, stack:32]at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 102 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 106 52 r8|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 111 54 r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 115 56 rbx|DWORD = MOVSXB value: r8|DWORD size: DWORD  <||@
  Comment 119 58 rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 121 60 rax|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 126 62 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3  <||@
  Comment 130 64 CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.6362310003571869 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B43 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 130 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 143 block B1 null  <||@
  Comment 143 66 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 143 68 stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 148 70 NOP  <||@
  Comment 149 72 NOP  <||@
  Comment 150 74 NOP  <||@
  Comment 151 76 NOP  <||@
  Comment 152 78 NOP  <||@
  Comment 153 80 NOP  <||@
  Comment 154 82 NOP  <||@
  Comment 155 84 NOP  <||@
  Comment 156 86 NOP  <||@
  Comment 157 88 NOP  <||@
  Comment 158 90 NOP  <||@
  Comment 159 92 NOP  <||@
  Comment 160 94 rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD  <||@
  Comment 163 96 r11|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 163 [rdx:0, rsi:0, rdi:0, stack:24, stack:32]at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 163 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 171 98 rbp|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 175 100 rcx|DWORD = MOVSXB value: rbp|DWORD size: DWORD  <||@
  Comment 179 102 r11|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 182 104 stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 187 106 r13|DWORD = ADD (x: r9|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 193 108 rcx|DWORD = SUB (x: r13|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 198 110 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null  <||@
  Comment 207 block B2 null  <||@
  Comment 207 112 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 207 114 NOP  <||@
  Comment 208 116 NOP  <||@
  Comment 209 118 NOP  <||@
  Comment 210 120 JUMP ~outgoingValues: [] destination: B2 -> B26  <||@
  Comment 210 block B26 null  <||@
  Comment 210 900 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 210 902 NOP  <||@
  Comment 211 904 NOP  <||@
  Comment 212 906 NOP  <||@
  Comment 213 908 NOP  <||@
  Comment 214 910 CMPBRANCH (x: rbp|DWORD, y: r8|DWORD) trueDestinationProbability: 0.998717015375415 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: BYTE  <||@
  Comment 223 block B27 null  <||@
  Comment 223 912 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 223 914 NOP  <||@
  Comment 224 916 NOP  <||@
  Comment 225 918 NOP  <||@
  Comment 226 920 JUMP ~outgoingValues: [] destination: B27 -> B29  <||@
  Comment 226 block B29 null  <||@
  Comment 226 954 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 226 956 NOP  <||@
  Comment 227 958 NOP  <||@
  Comment 228 960 NOP  <||@
  Comment 229 962 NOP  <||@
  Comment 230 964 NOP  <||@
  Comment 231 966 NOP  <||@
  Comment 232 968 NOP  <||@
  Comment 233 970 NOP  <||@
  Comment 234 972 NOP  <||@
  Comment 235 974 NOP  <||@
  Comment 236 976 NOP  <||@
  Comment 237 978 NOP  <||@
  Comment 238 980 NOP  <||@
  Comment 239 982 rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD  <||@
  Comment 242 984 r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2]  <||@
  Comment 242 [rcx:0, rdx:0, rsi:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2, duringCall: true, rethrow: false]
              |0             |1         |2            
     locals:  |rsi|QWORD[.]  |r9|DWORD  |rdx|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30, duringCall: true, rethrow: false]
              |0             |1  |2         
     locals:  |rsi|QWORD[.]  |-  |r11|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 242 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 250 986 rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 253 988 r8|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2]  <||@
  Comment 253 [rcx:0, rdx:0, rsi:0, rdi:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2, duringCall: true, rethrow: false]
              |0             |1         |2            
     locals:  |rsi|QWORD[.]  |r9|DWORD  |rdx|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30, duringCall: true, rethrow: false]
              |0             |1  |2         
     locals:  |rsi|QWORD[.]  |-  |r11|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 253 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 261 990 rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 265 992 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3  <||@
  Comment 269 994 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3  <||@
  Comment 275 996 CMPBRANCH (x: rbx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B35 size: BYTE  <||@
  Comment 284 block B30 null  <||@
  Comment 284 998 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 284 1000 NOP  <||@
  Comment 285 1002 NOP  <||@
  Comment 286 1004 NOP  <||@
  Comment 287 1006 NOP  <||@
  Comment 288 1008 NOP  <||@
  Comment 289 1010 NOP  <||@
  Comment 290 1012 NOP  <||@
  Comment 291 1014 rcx|DWORD = MOVSXB value: rbx|DWORD size: DWORD  <||@
  Comment 294 1016 rbx|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 299 1018 TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD  <||@
  Comment 307 block B32 null  <||@
  Comment 307 1036 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 307 1038 NOP  <||@
  Comment 308 1040 NOP  <||@
  Comment 309 1042 NOP  <||@
  Comment 310 1044 NOP  <||@
  Comment 311 1046 NOP  <||@
  Comment 312 1048 r8|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 315 1050 CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD  <||@
  Comment 324 block B34 null  <||@
  Comment 324 1068 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 324 1070 NOP  <||@
  Comment 325 1072 NOP  <||@
  Comment 326 1074 NOP  <||@
  Comment 327 1076 NOP  <||@
  Comment 328 1078 NOP  <||@
  Comment 329 1080 NOP  <||@
  Comment 330 1082 NOP  <||@
  Comment 331 1084 NOP  <||@
  Comment 332 1086 NOP  <||@
  Comment 333 1088 NOP  <||@
  Comment 334 1090 NOP  <||@
  Comment 335 1092 NOP  <||@
  Comment 336 1094 NOP  <||@
  Comment 337 1096 NOP  <||@
  Comment 338 1098 NOP  <||@
  Comment 339 1100 rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 339 1102 rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 342 1104 r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 342 1106 rdi|QWORD = LEA address: [rax|QWORD[*] + 16] size: QWORD  <||@
  Comment 346 1108 rsi|QWORD = LEA address: [rdx|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD  <||@
  Comment 351 1110 rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 354 1112 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 354 {Field[name=StubRoutines::_jbyte_arraycopy, type=address, offset=0, address=0x7f78b1ffa4e8, value=140155947490816]:0x7f7899769e00}  <||@
  Comment 359 1118 JUMP ~outgoingValues: [] destination: B34 -> B41  <||@
  Comment 359 block B41 null  <||@
  Comment 359 1274 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 359 1114 r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 364 1116 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 369 1276 NOP  <||@
  Comment 370 1278 NOP  <||@
  Comment 371 1280 NOP  <||@
  Comment 372 1282 NOP  <||@
  Comment 373 1284 ADD (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 377 1286 JUMP ~outgoingValues: [] destination: B41 -> B57  <||@
  Comment 377 block B57 null  <||@
  Comment 377 1816 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 377 1818 NOP  <||@
  Comment 378 1820 NOP  <||@
  Comment 379 1822 NOP  <||@
  Comment 380 1824 NOP  <||@
  Comment 381 1826 NOP  <||@
  Comment 382 1828 NOP  <||@
  Comment 383 1830 NOP  <||@
  Comment 384 1832 NOP  <||@
  Comment 385 1834 rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 388 1836 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 397 POLL_RETURN_FAR  <||@
  Comment 414 block B43 null  <||@
  Comment 414 1302 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 414 1304 NOP  <||@
  Comment 415 1306 NOP  <||@
  Comment 416 1308 NOP  <||@
  Comment 417 1310 NOP  <||@
  Comment 418 1312 CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B60 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}  <||@
  Comment 418 {meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}}  <||@
  Comment 431 block B44 null  <||@
  Comment 431 1314 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 431 1316 NOP  <||@
  Comment 432 1318 NOP  <||@
  Comment 433 1320 NOP  <||@
  Comment 434 1322 NOP  <||@
  Comment 435 1324 NOP  <||@
  Comment 436 1326 NOP  <||@
  Comment 437 1328 NOP  <||@
  Comment 438 1330 r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 442 1332 r11|DWORD = ADD (x: r10|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 448 1334 rcx|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 453 1336 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: 1 size: DWORD inlinedY: null  <||@
  Comment 462 block B45 null  <||@
  Comment 462 1338 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 462 1340 NOP  <||@
  Comment 463 1342 NOP  <||@
  Comment 464 1344 NOP  <||@
  Comment 465 1346 JUMP ~outgoingValues: [] destination: B45 -> B47  <||@
  Comment 465 block B47 null  <||@
  Comment 465 1534 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 465 1536 NOP  <||@
  Comment 466 1538 NOP  <||@
  Comment 467 1540 NOP  <||@
  Comment 468 1542 NOP  <||@
  Comment 469 1544 NOP  <||@
  Comment 470 1546 NOP  <||@
  Comment 471 1548 NOP  <||@
  Comment 472 1550 NOP  <||@
  Comment 473 1552 r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD  <||@
  Comment 477 1554 r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2]  <||@
  Comment 477 [rdx:0, rsi:0, rdi:0, r11:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21, duringCall: true, rethrow: false]
              |0             |1             |2         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 477 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 485 1556 r9|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2]  <||@
  Comment 485 [rdx:0, rsi:0, rdi:0, r11:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21, duringCall: true, rethrow: false]
              |0             |1             |2         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 485 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 489 1558 rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 493 1560 CMPBRANCH (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B58 size: BYTE  <||@
  Comment 502 block B48 null  <||@
  Comment 502 1562 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 502 1564 NOP  <||@
  Comment 503 1566 NOP  <||@
  Comment 504 1568 NOP  <||@
  Comment 505 1570 NOP  <||@
  Comment 506 1572 NOP  <||@
  Comment 507 1574 NOP  <||@
  Comment 508 1576 NOP  <||@
  Comment 509 1578 NOP  <||@
  Comment 510 1580 rbx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 513 1582 rax|DWORD = MOVSXB value: rcx|DWORD size: DWORD  <||@
  Comment 516 1584 rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 518 1586 rbp|DWORD = SHL (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 522 1588 TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: DWORD  <||@
  Comment 530 block B50 null  <||@
  Comment 530 1612 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 530 1614 NOP  <||@
  Comment 531 1616 NOP  <||@
  Comment 532 1618 NOP  <||@
  Comment 533 1620 NOP  <||@
  Comment 534 1622 NOP  <||@
  Comment 535 1624 NOP  <||@
  Comment 536 1626 NOP  <||@
  Comment 537 1628 r13|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 541 1632 r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 544 1634 TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD  <||@
  Comment 553 block B52 null  <||@
  Comment 553 1658 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 553 1660 NOP  <||@
  Comment 554 1662 NOP  <||@
  Comment 555 1664 NOP  <||@
  Comment 556 1666 NOP  <||@
  Comment 557 1668 CMPBRANCH (x: r13|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD  <||@
  Comment 566 block B54 null  <||@
  Comment 566 1692 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 566 1694 NOP  <||@
  Comment 567 1696 NOP  <||@
  Comment 568 1698 NOP  <||@
  Comment 569 1700 NOP  <||@
  Comment 570 1702 NOP  <||@
  Comment 571 1704 r9|DWORD = SUB (x: r9|DWORD, ~y: r13|DWORD) size: DWORD  <||@
  Comment 574 1706 CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD  <||@
  Comment 583 block B56 null  <||@
  Comment 583 1730 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 583 1732 stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 587 1734 stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 592 1736 NOP  <||@
  Comment 593 1738 NOP  <||@
  Comment 594 1740 NOP  <||@
  Comment 595 1742 NOP  <||@
  Comment 596 1744 NOP  <||@
  Comment 597 1746 NOP  <||@
  Comment 598 1748 NOP  <||@
  Comment 599 1750 NOP  <||@
  Comment 600 1752 NOP  <||@
  Comment 601 1754 NOP  <||@
  Comment 602 1756 NOP  <||@
  Comment 603 1758 NOP  <||@
  Comment 604 1760 NOP  <||@
  Comment 605 1762 NOP  <||@
  Comment 606 1764 NOP  <||@
  Comment 607 1766 NOP  <||@
  Comment 608 1768 NOP  <||@
  Comment 609 1770 NOP  <||@
  Comment 610 1772 NOP  <||@
  Comment 611 1774 NOP  <||@
  Comment 612 1776 NOP  <||@
  Comment 613 1778 NOP  <||@
  Comment 614 1780 NOP  <||@
  Comment 615 1782 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3  <||@
  Comment 619 1784 r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 619 1786 r8|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 622 1788 r13|QWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 622 1790 rdi|QWORD = LEA address: [r11|QWORD[*] + 16] size: QWORD  <||@
  Comment 626 1792 rsi|QWORD = LEA address: [r8|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD  <||@
  Comment 631 1794 rdx|QWORD = MOVE input: r13|QWORD moveKind: QWORD  <||@
  Comment 634 1796 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 634 {Field[name=StubRoutines::_jbyte_arraycopy, type=address, offset=0, address=0x7f78b1ffa4e8, value=140155947490816]:0x7f7899769e00}  <||@
  Comment 639 1798 r10|DWORD = ADD (x: stack:32|DWORD, y: stack:28|DWORD) size: DWORD  <||@
  Comment 649 1800 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 654 1802 MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 658 1804 rax|DWORD = MOVZXB input: [rsi|QWORD[.] + 17] size: DWORD  <||@
  Comment 662 1806 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 667 1808 rcx|DWORD = MOVZXB input: [rdx|QWORD[.] + 17] size: DWORD  <||@
  Comment 671 1810 rax|DWORD = OR (x: rax|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 673 1812 MOVB (x: [rsi|QWORD[.] + 17], y: rax|BYTE(DWORD)) size: BYTE  <||@
  Comment 676 1814 JUMP ~outgoingValues: [] destination: B56 -> B57  <||@
  Comment 681 block B3 null  <||@
  Comment 681 122 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 681 124 NOP  <||@
  Comment 682 126 NOP  <||@
  Comment 683 128 NOP  <||@
  Comment 684 130 NOP  <||@
  Comment 685 132 NOP  <||@
  Comment 686 134 NOP  <||@
  Comment 687 136 NOP  <||@
  Comment 688 138 NOP  <||@
  Comment 689 140 NOP  <||@
  Comment 690 142 NOP  <||@
  Comment 691 144 NOP  <||@
  Comment 692 146 NOP  <||@
  Comment 693 148 NOP  <||@
  Comment 694 150 NOP  <||@
  Comment 695 152 NOP  <||@
  Comment 696 154 rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 698 156 r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 701 158 r13|DWORD = SUB (x: r13|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 704 160 rax|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 709 164 rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 711 166 rax|DWORD = ADD (x: rax|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 714 168 CMP (x: rax|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 717 170 r13|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: rax|DWORD) condition: >  <||@
  Comment 721 172 r13|DWORD = ADD (x: r13|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 724 174 rcx|DWORD = DEC value: r13|DWORD size: DWORD  <||@
  Comment 729 176 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B42 y: 2147483639 size: DWORD inlinedY: null  <||@
  Comment 741 block B4 null  <||@
  Comment 741 178 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 741 180 NOP  <||@
  Comment 742 182 NOP  <||@
  Comment 743 184 NOP  <||@
  Comment 744 186 NOP  <||@
  Comment 745 188 NOP  <||@
  Comment 746 190 NOP  <||@
  Comment 747 192 NOP  <||@
  Comment 748 194 NOP  <||@
  Comment 749 196 NOP  <||@
  Comment 750 198 rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 752 200 r13|DWORD = SAR (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 755 204 r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 758 206 CMPBRANCH (x: r10|DWORD, y: r13|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 size: DWORD  <||@
  Comment 767 block B9 null  <||@
  Comment 767 374 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 767 376 NOP  <||@
  Comment 768 378 NOP  <||@
  Comment 769 380 NOP  <||@
  Comment 770 382 NOP  <||@
  Comment 771 384 NOP  <||@
  Comment 772 386 NOP  <||@
  Comment 773 388 NOP  <||@
  Comment 774 390 NOP  <||@
  Comment 775 392 NOP  <||@
  Comment 776 394 NOP  <||@
  Comment 777 396 NOP  <||@
  Comment 778 398 rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 785 400 rcx|QWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 788 402 rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD  <||@
  Comment 792 404 rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD  <||@
  Comment 796 406 rax|QWORD = ADD (x: rcx|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 802 408 CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD  <||@
  Comment 815 block B11 null  <||@
  Comment 815 460 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 815 462 NOP  <||@
  Comment 816 464 NOP  <||@
  Comment 817 466 NOP  <||@
  Comment 818 468 NOP  <||@
  Comment 819 470 NOP  <||@
  Comment 820 472 NOP  <||@
  Comment 821 474 NOP  <||@
  Comment 822 476 NOP  <||@
  Comment 823 478 NOP  <||@
  Comment 824 480 NOP  <||@
  Comment 825 482 NOP  <||@
  Comment 826 484 NOP  <||@
  Comment 827 486 NOP  <||@
  Comment 828 488 NOP  <||@
  Comment 829 490 MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD  <||@
  Comment 836 492 AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 256] instr: 0  <||@
  Comment 844 494 AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 320] instr: 0  <||@
  Comment 852 496 AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 384] instr: 0  <||@
  Comment 860 498 MOV x: [rbx|QWORD] y: 1 size: QWORD  <||@
  Comment 867 500 MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 867 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 874 502 MOV (x: [rbx|QWORD + 12], y: r13|DWORD) size: DWORD  <||@
  Comment 878 504 rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD  <||@
  Comment 882 506 CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 y: 2048 size: QWORD inlinedY: null  <||@
  Comment 895 block B12 null  <||@
  Comment 895 508 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 895 510 NOP  <||@
  Comment 896 512 NOP  <||@
  Comment 897 514 NOP  <||@
  Comment 898 516 rax|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 905 518 JUMP ~outgoingValues: [] destination: B12 -> B13  <||@
  Comment 910 block B14 loop 0 depth 1 header:800|LoopBegin  <||@
  Comment 910 532 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 928 534 NOP  <||@
  Comment 929 536 NOP  <||@
  Comment 930 538 NOP  <||@
  Comment 931 540 NOP  <||@
  Comment 932 542 NOP  <||@
  Comment 933 544 NOP  <||@
  Comment 934 546 NOP  <||@
  Comment 935 548 MOV x: [rbx|QWORD + rax|QWORD * 1] y: 0 size: QWORD  <||@
  Comment 943 550 rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD  <||@
  Comment 947 552 JUMP ~outgoingValues: [] destination: B14 -> B13  <||@
  Comment 947 block B13 loop 0 depth 1 header:800|LoopBegin  <||@
  Comment 947 520 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 947 522 NOP  <||@
  Comment 948 524 NOP  <||@
  Comment 949 526 NOP  <||@
  Comment 950 528 NOP  <||@
  Comment 951 530 CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD  <||@
  Comment 956 block B15 null  <||@
  Comment 956 554 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 956 556 NOP  <||@
  Comment 957 558 NOP  <||@
  Comment 958 560 NOP  <||@
  Comment 959 562 JUMP ~outgoingValues: [] destination: B15 -> B17  <||@
  Comment 959 block B17 null  <||@
  Comment 959 608 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 959 610 NOP  <||@
  Comment 960 612 NOP  <||@
  Comment 961 614 NOP  <||@
  Comment 962 616 NOP  <||@
  Comment 963 618 rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD  <||@
  Comment 963 620 JUMP ~outgoingValues: [] destination: B17 -> B18  <||@
  Comment 963 block B18 null  <||@
  Comment 963 622 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 963 624 NOP  <||@
  Comment 964 626 NOP  <||@
  Comment 965 628 NOP  <||@
  Comment 966 630 NOP  <||@
  Comment 967 632 NOP  <||@
  Comment 968 634 NOP  <||@
  Comment 969 636 CMP (x: r10|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 972 638 rcx|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: r13|DWORD) condition: >  <||@
  Comment 979 640 TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD  <||@
  Comment 987 block B20 null  <||@
  Comment 987 656 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 987 658 NOP  <||@
  Comment 988 660 NOP  <||@
  Comment 989 662 NOP  <||@
  Comment 990 664 NOP  <||@
  Comment 991 666 CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD  <||@
  Comment 1000 block B22 null  <||@
  Comment 1000 682 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1000 684 NOP  <||@
  Comment 1001 686 NOP  <||@
  Comment 1002 688 NOP  <||@
  Comment 1003 690 NOP  <||@
  Comment 1004 692 CMPBRANCH (x: rcx|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD  <||@
  Comment 1013 block B24 null  <||@
  Comment 1013 708 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1013 710 stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 1017 712 stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1022 714 NOP  <||@
  Comment 1023 716 NOP  <||@
  Comment 1024 718 NOP  <||@
  Comment 1025 720 NOP  <||@
  Comment 1026 722 NOP  <||@
  Comment 1027 724 NOP  <||@
  Comment 1028 726 NOP  <||@
  Comment 1029 728 NOP  <||@
  Comment 1030 730 NOP  <||@
  Comment 1031 732 NOP  <||@
  Comment 1032 734 NOP  <||@
  Comment 1033 736 NOP  <||@
  Comment 1034 738 NOP  <||@
  Comment 1035 740 NOP  <||@
  Comment 1036 742 NOP  <||@
  Comment 1037 744 rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1037 746 r10|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1040 748 rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1040 750 rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD  <||@
  Comment 1044 752 rsi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD  <||@
  Comment 1048 754 rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD  <||@
  Comment 1051 756 stack:72|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1056 758 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 1056 {Field[name=StubRoutines::_jbyte_disjoint_arraycopy, type=address, offset=0, address=0x7f78b1ffa4b8, value=140155947490624]:0x7f7899769d40}  <||@
  Comment 1061 764 JUMP ~outgoingValues: [] destination: B24 -> B25  <||@
  Comment 1061 block B25 null  <||@
  Comment 1061 766 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1061 368 rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1066 370 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1071 768 NOP  <||@
  Comment 1072 770 NOP  <||@
  Comment 1073 772 NOP  <||@
  Comment 1074 774 NOP  <||@
  Comment 1075 776 NOP  <||@
  Comment 1076 778 NOP  <||@
  Comment 1077 780 NOP  <||@
  Comment 1078 782 NOP  <||@
  Comment 1079 784 NOP  <||@
  Comment 1080 786 NOP  <||@
  Comment 1081 788 NOP  <||@
  Comment 1082 790 NOP  <||@
  Comment 1083 792 NOP  <||@
  Comment 1084 794 NOP  <||@
  Comment 1085 796 NOP  <||@
  Comment 1086 798 NOP  <||@
  Comment 1087 800 NOP  <||@
  Comment 1088 802 NOP  <||@
  Comment 1089 804 NOP  <||@
  Comment 1090 806 NOP  <||@
  Comment 1091 808 NOP  <||@
  Comment 1092 810 NOP  <||@
  Comment 1093 812 NOP  <||@
  Comment 1094 814 NOP  <||@
  Comment 1095 816 NOP  <||@
  Comment 1096 818 NOP  <||@
  Comment 1097 820 NOP  <||@
  Comment 1098 822 NOP  <||@
  Comment 1099 824 NOP  <||@
  Comment 1100 826 NOP  <||@
  Comment 1101 828 NOP  <||@
  Comment 1102 830 NOP  <||@
  Comment 1103 832 NOP  <||@
  Comment 1104 834 NOP  <||@
  Comment 1105 836 NOP  <||@
  Comment 1106 838 NOP  <||@
  Comment 1107 840 NOP  <||@
  Comment 1108 842 NOP  <||@
  Comment 1109 844 NOP  <||@
  Comment 1110 846 NOP  <||@
  Comment 1111 848 NOP  <||@
  Comment 1112 850 NOP  <||@
  Comment 1113 852 NOP  <||@
  Comment 1114 854 NOP  <||@
  Comment 1115 856 NOP  <||@
  Comment 1116 858 NOP  <||@
  Comment 1117 860 NOP  <||@
  Comment 1118 862 NOP  <||@
  Comment 1119 864 NOP  <||@
  Comment 1120 866 NOP  <||@
  Comment 1121 868 NOP  <||@
  Comment 1122 870 NOP  <||@
  Comment 1123 872 NOP  <||@
  Comment 1124 874 NOP  <||@
  Comment 1125 876 NOP  <||@
  Comment 1126 878 NOP  <||@
  Comment 1127 880 AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: r10|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5  <||@
  Comment 1184 882 rdx|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3  <||@
  Comment 1191 884 MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD  <||@
  Comment 1194 886 AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rbx|QWORD[.]) {temp: rdx|QWORD, temp2: r10|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5  <||@
  Comment 1276 888 r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1281 890 rbp|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 1285 892 r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1290 894 r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 1295 896 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1300 898 JUMP ~outgoingValues: [] destination: B25 -> B26  <||@
  Comment 1305 block B46 null  <||@
  Comment 1305 1348 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1305 1350 stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 1310 1352 stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1315 1354 NOP  <||@
  Comment 1316 1356 NOP  <||@
  Comment 1317 1358 NOP  <||@
  Comment 1318 1360 NOP  <||@
  Comment 1319 1362 NOP  <||@
  Comment 1320 1364 NOP  <||@
  Comment 1321 1366 NOP  <||@
  Comment 1322 1368 NOP  <||@
  Comment 1323 1370 NOP  <||@
  Comment 1324 1372 NOP  <||@
  Comment 1325 1374 NOP  <||@
  Comment 1326 1376 NOP  <||@
  Comment 1327 1378 NOP  <||@
  Comment 1328 1380 NOP  <||@
  Comment 1329 1382 NOP  <||@
  Comment 1330 1384 NOP  <||@
  Comment 1331 1386 NOP  <||@
  Comment 1332 1388 NOP  <||@
  Comment 1333 1390 NOP  <||@
  Comment 1334 1392 NOP  <||@
  Comment 1335 1394 NOP  <||@
  Comment 1336 1396 NOP  <||@
  Comment 1337 1398 NOP  <||@
  Comment 1338 1400 NOP  <||@
  Comment 1339 1402 NOP  <||@
  Comment 1340 1404 NOP  <||@
  Comment 1341 1406 NOP  <||@
  Comment 1342 1408 NOP  <||@
  Comment 1343 1410 NOP  <||@
  Comment 1344 1412 NOP  <||@
  Comment 1345 1414 NOP  <||@
  Comment 1346 1416 NOP  <||@
  Comment 1347 1418 NOP  <||@
  Comment 1348 1420 NOP  <||@
  Comment 1349 1422 NOP  <||@
  Comment 1350 1424 NOP  <||@
  Comment 1351 1426 NOP  <||@
  Comment 1352 1428 NOP  <||@
  Comment 1353 1430 NOP  <||@
  Comment 1354 1432 NOP  <||@
  Comment 1355 1434 NOP  <||@
  Comment 1356 1436 NOP  <||@
  Comment 1357 1438 NOP  <||@
  Comment 1358 1440 NOP  <||@
  Comment 1359 1442 NOP  <||@
  Comment 1360 1444 NOP  <||@
  Comment 1361 1446 NOP  <||@
  Comment 1362 1448 NOP  <||@
  Comment 1363 1450 NOP  <||@
  Comment 1364 1452 NOP  <||@
  Comment 1365 1454 NOP  <||@
  Comment 1366 1456 NOP  <||@
  Comment 1367 1458 NOP  <||@
  Comment 1368 1460 NOP  <||@
  Comment 1369 1462 NOP  <||@
  Comment 1370 1464 NOP  <||@
  Comment 1371 1466 NOP  <||@
  Comment 1372 1468 NOP  <||@
  Comment 1373 1470 NOP  <||@
  Comment 1374 1472 NOP  <||@
  Comment 1375 1474 NOP  <||@
  Comment 1376 1476 NOP  <||@
  Comment 1377 1478 NOP  <||@
  Comment 1378 1480 NOP  <||@
  Comment 1379 1482 NOP  <||@
  Comment 1380 1484 NOP  <||@
  Comment 1381 1486 NOP  <||@
  Comment 1382 1488 NOP  <||@
  Comment 1383 1490 NOP  <||@
  Comment 1384 1492 NOP  <||@
  Comment 1385 1494 NOP  <||@
  Comment 1386 1496 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1389 1500 rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1392 1502 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:24, 21, 37, 2, 2]  <||@
  Comment 1395 {HotSpotMethod<AbstractStringBuilder.newCapacity(int)>}  <||@
  Comment 1395 INVOKESPECIAL  <||@
  Comment 1400 [stack:16, stack:24, stack:32]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2 
     locals:  |stack:48|QWORD[.]  |-                  |- 
     stack:   |stack:48|QWORD[.]  |stack:64|QWORD[.]  |  
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21, duringCall: true, rethrow: false]
              |0                  |1                  |2              
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:32|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 1408 1504 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1413 1506 rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 1417 1508 rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 1419 1510 rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1424 1512 rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 1426 1514 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:32, 21, 37, 2, 2]  <||@
  Comment 1427 {HotSpotMethod<Arrays.copyOf(byte[], int)>}  <||@
  Comment 1427 INVOKESTATIC  <||@
  Comment 1432 [stack:24, stack:32]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |-                  |-  |- 
     stack:   |stack:48|QWORD[.]  |   |  
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21, duringCall: true, rethrow: false]
              |0                  |1                  |2              
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:32|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 1440 1516 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1445 1518 AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5  <||@
  Comment 1502 1520 r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3  <||@
  Comment 1509 1522 MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD  <||@
  Comment 1513 1524 AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5  <||@
  Comment 1607 1526 rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1610 1528 r10|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1615 1530 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1620 1532 JUMP ~outgoingValues: [] destination: B46 -> B47  <||@
  Comment 1625 block B28 null  <||@
  Comment 1625 922 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1625 924 NOP  <||@
  Comment 1626 926 NOP  <||@
  Comment 1627 928 NOP  <||@
  Comment 1628 930 NOP  <||@
  Comment 1629 932 NOP  <||@
  Comment 1630 934 NOP  <||@
  Comment 1631 936 NOP  <||@
  Comment 1632 938 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1635 942 - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:18, 2, 30, 2, 2, 21, 2, 2]  <||@
  Comment 1635 {HotSpotMethod<AbstractStringBuilder.inflate()>}  <||@
  Comment 1635 INVOKESPECIAL  <||@
  Comment 1640 [stack:24, stack:32]at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1               |2                 
     locals:  |stack:48|QWORD[.]  |stack:28|DWORD  |stack:56|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30, duringCall: true, rethrow: false]
              |0                  |1  |2              
     locals:  |stack:48|QWORD[.]  |-  |stack:32|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 1648 944 r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1653 946 r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1658 948 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1663 950 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1668 952 JUMP ~outgoingValues: [] destination: B28 -> B29  <||@
  Comment 1673 block B35 null  <||@
  Comment 1673 1120 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1673 1122 NOP  <||@
  Comment 1674 1124 NOP  <||@
  Comment 1675 1126 NOP  <||@
  Comment 1676 1128 NOP  <||@
  Comment 1677 1130 TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD  <||@
  Comment 1686 block B37 null  <||@
  Comment 1686 1148 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1686 1150 NOP  <||@
  Comment 1687 1152 NOP  <||@
  Comment 1688 1154 NOP  <||@
  Comment 1689 1156 NOP  <||@
  Comment 1690 1158 NOP  <||@
  Comment 1691 1160 NOP  <||@
  Comment 1692 1162 r8|DWORD = SHR value: r8|DWORD size: DWORD  <||@
  Comment 1695 1164 rsi|DWORD = ADD (x: r9|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1701 1166 CMPBRANCH (x: rsi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B40 size: DWORD  <||@
  Comment 1710 block B40 null  <||@
  Comment 1710 1206 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1710 1208 NOP  <||@
  Comment 1711 1210 NOP  <||@
  Comment 1712 1212 NOP  <||@
  Comment 1713 1214 NOP  <||@
  Comment 1714 1216 NOP  <||@
  Comment 1715 1218 NOP  <||@
  Comment 1716 1220 NOP  <||@
  Comment 1717 1222 NOP  <||@
  Comment 1718 1224 NOP  <||@
  Comment 1719 1226 NOP  <||@
  Comment 1720 1228 NOP  <||@
  Comment 1721 1230 NOP  <||@
  Comment 1722 1232 NOP  <||@
  Comment 1723 1234 NOP  <||@
  Comment 1724 1236 NOP  <||@
  Comment 1725 1238 NOP  <||@
  Comment 1726 1240 NOP  <||@
  Comment 1727 1242 NOP  <||@
  Comment 1728 1244 NOP  <||@
  Comment 1729 1246 rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1729 1248 rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1729 1250 rsi|QWORD[*] = LEA address: [rax|QWORD[*] + 16] size: QWORD  <||@
  Comment 1733 1252 r9|QWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1733 1254 r9|QWORD = SHL value: r9|QWORD size: QWORD  <||@
  Comment 1736 1256 rdx|QWORD = LEA address: [r9|QWORD + 16] size: QWORD  <||@
  Comment 1740 1258 rdx|QWORD[*] = ADD (x: rdx|QWORD, y: rdi|QWORD[*]) size: QWORD  <||@
  Comment 1743 1260 rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1743 1262 rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD  <||@
  Comment 1743 1264 rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 1746 1266 - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL  <||@
  Comment 1746 {Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL}  <||@
  Comment 1751 1272 JUMP ~outgoingValues: [] destination: B40 -> B41  <||@
  Comment 1756 block B10 null  <||@
  Comment 1756 410 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1756 412 stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 1760 414 stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1765 416 stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1770 418 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 1770 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 1780 420 NOP  <||@
  Comment 1781 422 NOP  <||@
  Comment 1782 424 NOP  <||@
  Comment 1783 426 NOP  <||@
  Comment 1784 428 NOP  <||@
  Comment 1785 430 NOP  <||@
  Comment 1786 432 NOP  <||@
  Comment 1787 434 NOP  <||@
  Comment 1788 436 NOP  <||@
  Comment 1789 438 rdx|DWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 1792 440 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 1792 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1797 [stack:16, stack:24, stack:32]at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 1805 442 NULLCHECK address: [rax|QWORD[.]] state [bci:0]  <||@
  Comment 1805 [rax:0, stack:16, stack:24, stack:32]at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 1805 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1807 444 rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1810 450 rdi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1815 454 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1820 456 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1825 458 JUMP ~outgoingValues: [] destination: B10 -> B18  <||@
  Comment 1830 block B16 null  <||@
  Comment 1830 564 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1830 566 stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 1834 568 stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1839 570 stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1844 572 NOP  <||@
  Comment 1845 574 NOP  <||@
  Comment 1846 576 NOP  <||@
  Comment 1847 578 NOP  <||@
  Comment 1848 580 NOP  <||@
  Comment 1849 582 NOP  <||@
  Comment 1850 584 NOP  <||@
  Comment 1851 586 NOP  <||@
  Comment 1852 588 NOP  <||@
  Comment 1853 590 rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 1856 592 ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD}  <||@
  Comment 1866 598 rdi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1871 602 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1876 604 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1881 606 JUMP ~outgoingValues: [] destination: B16 -> B17  <||@
  Comment 1886 block B5 null  <||@
  Comment 1886 208 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1886 210 stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 1890 212 stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1895 214 stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1900 216 NOP  <||@
  Comment 1901 218 NOP  <||@
  Comment 1902 220 NOP  <||@
  Comment 1903 222 NOP  <||@
  Comment 1904 224 NOP  <||@
  Comment 1905 226 NOP  <||@
  Comment 1906 228 NOP  <||@
  Comment 1907 230 NOP  <||@
  Comment 1908 232 NOP  <||@
  Comment 1909 234 NOP  <||@
  Comment 1910 236 NOP  <||@
  Comment 1911 238 rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 1918 240 r11|QWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 1921 242 rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD  <||@
  Comment 1925 244 rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD  <||@
  Comment 1929 246 rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 1935 248 CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD  <||@
  Comment 1948 block B7 null  <||@
  Comment 1948 282 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1948 284 NOP  <||@
  Comment 1949 286 NOP  <||@
  Comment 1950 288 NOP  <||@
  Comment 1951 290 NOP  <||@
  Comment 1952 292 NOP  <||@
  Comment 1953 294 NOP  <||@
  Comment 1954 296 NOP  <||@
  Comment 1955 298 NOP  <||@
  Comment 1956 300 NOP  <||@
  Comment 1957 302 NOP  <||@
  Comment 1958 304 NOP  <||@
  Comment 1959 306 MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD  <||@
  Comment 1966 308 AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0  <||@
  Comment 1974 310 AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0  <||@
  Comment 1982 312 AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0  <||@
  Comment 1990 314 MOV x: [rdi|QWORD] y: 1 size: QWORD  <||@
  Comment 1997 316 MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 1997 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 2004 318 MOV (x: [rdi|QWORD + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 2008 320 rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD  <||@
  Comment 2008 322 JUMP ~outgoingValues: [] destination: B7 -> B8  <||@
  Comment 2008 block B8 null  <||@
  Comment 2008 324 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 2008 326 NOP  <||@
  Comment 2009 328 NOP  <||@
  Comment 2010 330 NOP  <||@
  Comment 2011 332 NOP  <||@
  Comment 2012 334 NOP  <||@
  Comment 2013 336 NOP  <||@
  Comment 2014 338 NOP  <||@
  Comment 2015 340 NOP  <||@
  Comment 2016 342 NOP  <||@
  Comment 2017 344 NOP  <||@
  Comment 2018 346 NOP  <||@
  Comment 2019 348 NOP  <||@
  Comment 2020 350 NOP  <||@
  Comment 2021 352 NOP  <||@
  Comment 2022 354 rsi|QWORD[*] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2027 356 rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 2030 358 stack:72|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 2035 360 rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD  <||@
  Comment 2039 362 rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD  <||@
  Comment 2043 364 rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD  <||@
  Comment 2046 366 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 2046 {Field[name=StubRoutines::_jbyte_disjoint_arraycopy, type=address, offset=0, address=0x7f78b1ffa4b8, value=140155947490624]:0x7f7899769d40}  <||@
  Comment 2051 372 JUMP ~outgoingValues: [] destination: B8 -> B25  <||@
  Comment 2056 block B6 null  <||@
  Comment 2056 250 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2056 252 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 2056 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 2066 254 NOP  <||@
  Comment 2067 256 NOP  <||@
  Comment 2068 258 NOP  <||@
  Comment 2069 260 NOP  <||@
  Comment 2070 262 NOP  <||@
  Comment 2071 264 NOP  <||@
  Comment 2072 266 NOP  <||@
  Comment 2073 268 NOP  <||@
  Comment 2074 270 NOP  <||@
  Comment 2075 272 rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 2078 274 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 2078 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 2083 [stack:16, stack:24, stack:32]at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 2091 276 NULLCHECK address: [rax|QWORD[.]] state [bci:0]  <||@
  Comment 2091 [rax:0, stack:16, stack:24, stack:32]at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 2091 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2093 278 rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2096 280 JUMP ~outgoingValues: [] destination: B6 -> B8  <||@
  Comment 2098 block B23 null  <||@
  Comment 2098 694 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2098 696 NOP  <||@
  Comment 2099 698 NOP  <||@
  Comment 2100 700 NOP  <||@
  Comment 2101 702 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2108 704 r10|DWORD = MOVE input: int[-151321|0xfffffffffffdb0e7]  <||@
  Comment 2114 706 JUMP ~outgoingValues: [] destination: B23 -> B61  <||@
  Comment 2114 block B61 null  <||@
  Comment 2114 1896 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 2114 1898 NOP  <||@
  Comment 2115 1900 NOP  <||@
  Comment 2116 1902 NOP  <||@
  Comment 2117 1904 NOP  <||@
  Comment 2118 1906 NOP  <||@
  Comment 2119 1908 NOP  <||@
  Comment 2120 1910 NOP  <||@
  Comment 2121 1912 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 2128 1914 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 2135 1916 DEOPT info [bci:0]  <||@
  Comment 2135 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2140 [stack:24, stack:32]at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 2148 block B19 null  <||@
  Comment 2148 642 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2148 644 NOP  <||@
  Comment 2149 646 NOP  <||@
  Comment 2150 648 NOP  <||@
  Comment 2151 650 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2158 652 r10|DWORD = MOVE input: int[-149273|0xfffffffffffdb8e7]  <||@
  Comment 2164 654 JUMP ~outgoingValues: [] destination: B19 -> B61  <||@
  Comment 2166 block B36 null  <||@
  Comment 2166 1132 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2166 1134 NOP  <||@
  Comment 2167 1136 NOP  <||@
  Comment 2168 1138 NOP  <||@
  Comment 2169 1140 r10|DWORD = MOVE input: int[-145177|0xfffffffffffdc8e7]  <||@
  Comment 2175 1146 JUMP ~outgoingValues: [] destination: B36 -> B39  <||@
  Comment 2175 block B39 null  <||@
  Comment 2175 1184 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 2175 1186 NOP  <||@
  Comment 2176 1188 NOP  <||@
  Comment 2177 1190 NOP  <||@
  Comment 2178 1192 NOP  <||@
  Comment 2179 1194 NOP  <||@
  Comment 2180 1196 NOP  <||@
  Comment 2181 1198 NOP  <||@
  Comment 2182 1200 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 2189 1202 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 2200 1204 DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2]  <||@
  Comment 2200 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2205 [stack:24, stack:32]at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1         |2                 
     locals:  |stack:48|QWORD[.]  |r9|DWORD  |stack:56|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30, duringCall: true, rethrow: false]
              |0                  |1  |2         
     locals:  |stack:48|QWORD[.]  |-  |r11|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 2213 block B55 null  <||@
  Comment 2213 1708 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2213 1710 stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 2218 1712 NOP  <||@
  Comment 2219 1714 NOP  <||@
  Comment 2220 1716 NOP  <||@
  Comment 2221 1718 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2228 1720 r10|DWORD = MOVE input: int[-159769|0xfffffffffffd8fe7]  <||@
  Comment 2234 1728 JUMP ~outgoingValues: [] destination: B55 -> B59  <||@
  Comment 2234 block B59 null  <||@
  Comment 2234 1860 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 2234 1604 r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 2239 1606 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2244 1608 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2249 1862 NOP  <||@
  Comment 2250 1864 NOP  <||@
  Comment 2251 1866 NOP  <||@
  Comment 2252 1868 NOP  <||@
  Comment 2253 1870 NOP  <||@
  Comment 2254 1872 NOP  <||@
  Comment 2255 1874 NOP  <||@
  Comment 2256 1876 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 2263 1878 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 2270 1880 DEOPT info [bci:38, 21, 37, 2, 2]  <||@
  Comment 2270 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2275 [rdx:0, rsi:0]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21, duringCall: true, rethrow: false]
              |0             |1             |2        
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r8|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 2283 block B38 null  <||@
  Comment 2283 1168 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2283 1170 NOP  <||@
  Comment 2284 1172 NOP  <||@
  Comment 2285 1174 NOP  <||@
  Comment 2286 1176 r10|DWORD = MOVE input: int[-146201|0xfffffffffffdc4e7]  <||@
  Comment 2292 1182 JUMP ~outgoingValues: [] destination: B38 -> B39  <||@
  Comment 2294 block B42 null  <||@
  Comment 2294 1288 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2294 1290 NOP  <||@
  Comment 2295 1292 NOP  <||@
  Comment 2296 1294 NOP  <||@
  Comment 2297 1296 r11|QWORD = MOVE input: long[5140|0x1414]  <||@
  Comment 2304 1298 r10|DWORD = MOVE input: int[-148243|0xfffffffffffdbced]  <||@
  Comment 2310 1300 JUMP ~outgoingValues: [] destination: B42 -> B61  <||@
  Comment 2315 block B21 null  <||@
  Comment 2315 668 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2315 670 NOP  <||@
  Comment 2316 672 NOP  <||@
  Comment 2317 674 NOP  <||@
  Comment 2318 676 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2325 678 r10|DWORD = MOVE input: int[-150297|0xfffffffffffdb4e7]  <||@
  Comment 2331 680 JUMP ~outgoingValues: [] destination: B21 -> B61  <||@
  Comment 2336 block B51 null  <||@
  Comment 2336 1636 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2336 1638 stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 2341 1640 NOP  <||@
  Comment 2342 1642 NOP  <||@
  Comment 2343 1644 NOP  <||@
  Comment 2344 1646 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2351 1648 r10|DWORD = MOVE input: int[-157721|0xfffffffffffd97e7]  <||@
  Comment 2357 1656 JUMP ~outgoingValues: [] destination: B51 -> B59  <||@
  Comment 2359 block B58 null  <||@
  Comment 2359 1838 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2359 1840 stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 2364 1842 NOP  <||@
  Comment 2365 1844 NOP  <||@
  Comment 2366 1846 NOP  <||@
  Comment 2367 1848 r11|QWORD = MOVE input: long[3220|0xc94]  <||@
  Comment 2374 1850 r10|DWORD = MOVE input: int[-155667|0xfffffffffffd9fed]  <||@
  Comment 2380 1858 JUMP ~outgoingValues: [] destination: B58 -> B59  <||@
  Comment 2385 block B60 null  <||@
  Comment 2385 1882 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2385 1884 NOP  <||@
  Comment 2386 1886 NOP  <||@
  Comment 2387 1888 NOP  <||@
  Comment 2388 1890 r11|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 2395 1892 r10|DWORD = MOVE input: int[-98355|0xfffffffffffe7fcd]  <||@
  Comment 2401 1894 JUMP ~outgoingValues: [] destination: B60 -> B61  <||@
  Comment 2406 block B33 null  <||@
  Comment 2406 1052 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2406 1054 NOP  <||@
  Comment 2407 1056 NOP  <||@
  Comment 2408 1058 NOP  <||@
  Comment 2409 1060 r10|DWORD = MOVE input: int[-144153|0xfffffffffffdcce7]  <||@
  Comment 2415 1066 JUMP ~outgoingValues: [] destination: B33 -> B39  <||@
  Comment 2420 block B53 null  <||@
  Comment 2420 1670 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2420 1672 stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 2425 1674 NOP  <||@
  Comment 2426 1676 NOP  <||@
  Comment 2427 1678 NOP  <||@
  Comment 2428 1680 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2435 1682 r10|DWORD = MOVE input: int[-158745|0xfffffffffffd93e7]  <||@
  Comment 2441 1690 JUMP ~outgoingValues: [] destination: B53 -> B59  <||@
  Comment 2446 block B31 null  <||@
  Comment 2446 1020 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2446 1022 NOP  <||@
  Comment 2447 1024 NOP  <||@
  Comment 2448 1026 NOP  <||@
  Comment 2449 1028 r10|DWORD = MOVE input: int[-143129|0xfffffffffffdd0e7]  <||@
  Comment 2455 1034 JUMP ~outgoingValues: [] destination: B31 -> B39  <||@
  Comment 2460 block B49 null  <||@
  Comment 2460 1590 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2460 1592 stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 2465 1594 NOP  <||@
  Comment 2466 1596 NOP  <||@
  Comment 2467 1598 NOP  <||@
  Comment 2468 1600 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2475 1602 r10|DWORD = MOVE input: int[-156697|0xfffffffffffd9be7]  <||@
  Comment 2481 1610 JUMP ~outgoingValues: [] destination: B49 -> B59  <||@
  Comment 2491 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 2516 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 2526 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 2541 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 2556 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 2571 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 2604 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2609 [rdx:0, rsi:0, rdi:0, stack:24, stack:32]at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 2639 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2644 [rdx:0, rsi:0, rdi:0, stack:24, stack:32]at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 2674 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2679 [rdx:0, rsi:0, rdi:0, stack:24, stack:32]at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 2709 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2714 [rcx:0, rdx:0, rsi:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2, duringCall: true, rethrow: false]
              |0             |1         |2            
     locals:  |rsi|QWORD[.]  |r9|DWORD  |rdx|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30, duringCall: true, rethrow: false]
              |0             |1  |2         
     locals:  |rsi|QWORD[.]  |-  |r11|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 2744 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2749 [rcx:0, rdx:0, rsi:0, rdi:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2, duringCall: true, rethrow: false]
              |0             |1         |2            
     locals:  |rsi|QWORD[.]  |r9|DWORD  |rdx|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30, duringCall: true, rethrow: false]
              |0             |1  |2         
     locals:  |rsi|QWORD[.]  |-  |r11|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 2779 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2784 [rdx:0, rsi:0, rdi:0, r11:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21, duringCall: true, rethrow: false]
              |0             |1             |2         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 2814 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2819 [rdx:0, rsi:0, rdi:0, r11:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21, duringCall: true, rethrow: false]
              |0             |1             |2         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 2849 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2854 [rax:0, stack:16, stack:24, stack:32]at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 2884 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2889 [rax:0, stack:16, stack:24, stack:32]at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 2897 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2897 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 2903 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 2903 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-5814[java.lang.StringBuilder.append(CharSequence)]"
  method "HotSpotCompilation-5814[java.lang.StringBuilder.append(CharSequence)]"
  date 1724269728625
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789ad6c180 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e38ea1fe66669089842400c0feff4883ec489041817f20000000000f857c09000090909090909090909090909090909090909048896c2440488974242048895424188b7e14448b14fd0c000000448b5a08440fbe4610448b4e0c410fbed88bcb418bc2d3e848c1e7034181fbd8e800000f850f01000044894c24349090909090909090909090908b4a14448b1ccd0c0000000fbe6a10400fbecd41d3eb44895c2430458be94503eb418bcd2bc883f9010f8dda01000090909090909090413ae80f857a050000909090909090909090909090909090908b4a14448b14cd0c0000008b7e14448b04fd0c0000000fbe5e1048c1e7038bc148c1e0033a5a100f856d050000909090909090900fbecb418bd9d3e385db0f8c5b0800009090909090452bc2413bd80f8f22080000909090909090909090909090909090488bd7488d7810488d741a10498bd2e819db9ffe448b5c2430488b7424209090909044015e0c9090909090909090488bc6488b6c24404883c448493ba7500400000f872c080000c5f877c3909090904181fb288100000f85a207000090909090909090448b520c458bda4503d9418bcb2bc883f9010f8d4b0300009090909090909090909090448b5a14468b04dd0c000000448b4f0c0fbe4e103a4a100f854107000090909090909090908b5e0c0fbec18bc88bebd3e585ed0f8c8a07000090909090909090448b6a0c41d3e54585ed0f8cf706000090909090453be80f873e0700009090909090452bcd413be90f8f5e060000895c24344489542430909090909090909090909090909090909090909090909049c1e3034c8bc7498d7b10498d742810498bd5e801da9ffe448b5424304403542434488b7424204489560c0fb64611488b5424180fb64a110bc1884611e9d0feffff9090909090909090909090909090908bcb41d3e5452beab802000000d3e04103c2413bc5440f4fe84503ea418bcdffc981f9f7ffff7f0f83110600009090909090909090908bcb41d3fd41d3e5453bd50f845f0400009090909090909090909090498b9fb8010000418bcd488d49174883e1f8488bc14803c3493b87c80100000f87ad0300009090909090909090909090909090498987b80100000f188419000100000f188419400100000f1884198001000048c70301000000c74308c022000044896b0c488d41f04881f8000800000f83a703000090909048c7c010000000e9250000006666660f1f840000000000666666906666909090909090909048c7040300000000488d400890909090483bc877e490909090909090909090909090453bd5418bca410f4fcd85c90f8c8904000090909090413bca0f872305000090909090413bcd0f873d040000896c242c44894424289090909090909090909090909090904c8bd3488d7f10498d7210488bd148895c2408e89bd79ffe488b5c2408488b742420909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909041807f40000f842e000000448b561449c1e2034d85d20f841d000000498b57284883fa000f84490500004883ea0849895728490357384c8912488bd348c1ea03895614488bd64833d348c1ea160f8442000000488bd648c1ea0949ba00e0368d787f00004903d2803a027429f083042400803a00741fc602004d8b57484d85d20f84fc0400004983ea084d8957484d035758498912448b5c24308b6c242c448b4c2434448b442428488b542418e9b9fbffff448954243048897c241090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090904c8bd6418bd3666690e8888ca1fe0f1f840068070007488b7424200fbe4e10d3e0488b7424108bd090e86892a1fe0f1f840088070008488b74242041807f40000f842e000000448b5e1449c1e3034d85db0f841d0000004d8b57284983fa000f84290400004983ea084d8957284d0357384d891a4c8bd049c1ea03448956144c8bd64c33d049c1ea160f844e0000004885c00f84450000004c8bd649c1ea0949bb00e0368d787f00004d03d341803a02742bf08304240041803a00742041c602004d8b5f484d85db0f84cf0300004983eb084d895f484d035f584d8913488bf8448b542430488b542418e978fbffff909090909090904c8bd6e8988ba1fe0f1f840058080009448b5c2430448b4c2434488b542418488b742420e959faffff909090904585c90f8ce001000090909090909041d1e8418bf14103f2413bf00f873d02000090909090909090909090909090909090909090488d701049d1e1498d51104803d7418bcae8a9e5b6fee98bfaffff896c242c48897c2410448944242848bec022002b787f0000909090909090909090418bd5e87b23b6fe0f1f8400000000008500488bd8488b7c2410488b542418488b742420e99dfcffff896c242c48897c24104489442428909090909090909090488bc8488d7b104833c0f348aa488b7c2410488b542418488b742420e961fcffff896c242c48897c241044894424289090909090909090909090498bbfb8010000458bda498d73174883e6f8488bd64803d7493b97c80100000f876c0000009090909090909090909090498997b80100000f18843e000100000f18843e400100000f18843e8001000048c70701000000c74708c02200004489570c9090909090909090909090909090488b742410488bd748897c2408488d7e10488d7210498bd3e8bdd39ffee91dfcffff48bec022002b787f0000909090909090909090418bd2e85d22b6fe0f1f8400000000008500488bf8eba690909049c7c30000000041bae7b0fdff90909090909090458997840400004d899f90040000e89ee7a1fe0f1f84000000000090909049c7c30000000041bae7b8fdffebcc90909041bae7c8fdff909090909090904589978404000049c7879004000000000000e85de7a1fe0f1f840000000000448954243090909049c7c30000000041bae78ffdff448b442430488b542418488b74242090909090909090458997840400004d899f90040000e817e7a1fe0f1f84000000000090909041bae7c4fdffeb8990909049c7c31414000041baedbcfdffe937ffffff90909049c7c30000000041bae7b4fdffe922ffffff448954243090909049c7c30000000041bae797fdffeb83448954243090909049c7c3940c000041baed9ffdffe969ffffff90909049c7c39402000041bacd7ffeffe9dcfeffff90909041bae7ccfdffe90bffffff448954243090909049c7c30000000041bae793fdffe92cffffff90909041bae7d0fdffe9e3feffff448954243090909049c7c30000000041bae79bfdffe904ffffff48896c2440e8e0e69ffee975f6fffff4488d0dc0f7ffff49898f68040000e9a7f4a1fef44c891424e89db6b5fee9b8fafffff448891424e80ed8b5fee905fbfffff44c891c24e87fb6b5fee9d8fbfffff44c891424e8f0d7b5fee932fcfffff441c78784040000f500feff49c7879004000000000000e8c9e5a1fe0f1f84000000000041c78784040000ede1fdff49c7879004000014000000e8a6e5a1fe0f1f84000000000041c78784040000f5f2feff49c7879004000000000000e883e5a1fe0f1f84000000000041c78784040000f5a0feff49c7879004000000000000e860e5a1fe0f1f84000000000041c78784040000f5fefdff49c7879004000000000000e83de5a1fe0f1f84000000000041c78784040000f568feff49c7879004000000000000e81ae5a1fe0f1f84000000000041c78784040000f567feff49c7879004000000000000e8f7e4a1fe0f1f84000000000041c787840400008faffcff49c7879004000000000000e8d4e4a1fe0f1f84000000000041c787840400008ffffcff49c7879004000000000000e8b1e4a1fe0f1f840000000000e82a86b5fef4e844e2a1fef4f4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 NOP  <||@
  Comment 72 30 NOP  <||@
  Comment 73 32 NOP  <||@
  Comment 74 34 NOP  <||@
  Comment 75 36 NOP  <||@
  Comment 76 38 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 81 40 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@24799e10 slotKind: QWORD  <||@
  Comment 81 42 stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 86 44 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 91 46 rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 94 48 r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 94 [rdx:0, rsi:0, rdi:0, stack:24, stack:32]at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 94 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 102 50 r11|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0]  <||@
  Comment 102 [rdx:0, rsi:0, rdi:0, stack:24, stack:32]at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 102 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 106 52 r8|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 111 54 r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 115 56 rbx|DWORD = MOVSXB value: r8|DWORD size: DWORD  <||@
  Comment 119 58 rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 121 60 rax|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 126 62 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3  <||@
  Comment 130 64 CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.6362310003571869 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B43 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 130 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 143 block B1 null  <||@
  Comment 143 66 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 143 68 stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 148 70 NOP  <||@
  Comment 149 72 NOP  <||@
  Comment 150 74 NOP  <||@
  Comment 151 76 NOP  <||@
  Comment 152 78 NOP  <||@
  Comment 153 80 NOP  <||@
  Comment 154 82 NOP  <||@
  Comment 155 84 NOP  <||@
  Comment 156 86 NOP  <||@
  Comment 157 88 NOP  <||@
  Comment 158 90 NOP  <||@
  Comment 159 92 NOP  <||@
  Comment 160 94 rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD  <||@
  Comment 163 96 r11|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 163 [rdx:0, rsi:0, rdi:0, stack:24, stack:32]at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 163 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 171 98 rbp|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 175 100 rcx|DWORD = MOVSXB value: rbp|DWORD size: DWORD  <||@
  Comment 179 102 r11|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 182 104 stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 187 106 r13|DWORD = ADD (x: r9|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 193 108 rcx|DWORD = SUB (x: r13|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 198 110 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null  <||@
  Comment 207 block B2 null  <||@
  Comment 207 112 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 207 114 NOP  <||@
  Comment 208 116 NOP  <||@
  Comment 209 118 NOP  <||@
  Comment 210 120 JUMP ~outgoingValues: [] destination: B2 -> B26  <||@
  Comment 210 block B26 null  <||@
  Comment 210 900 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 210 902 NOP  <||@
  Comment 211 904 NOP  <||@
  Comment 212 906 NOP  <||@
  Comment 213 908 NOP  <||@
  Comment 214 910 CMPBRANCH (x: rbp|DWORD, y: r8|DWORD) trueDestinationProbability: 0.998717015375415 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: BYTE  <||@
  Comment 223 block B27 null  <||@
  Comment 223 912 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 223 914 NOP  <||@
  Comment 224 916 NOP  <||@
  Comment 225 918 NOP  <||@
  Comment 226 920 JUMP ~outgoingValues: [] destination: B27 -> B29  <||@
  Comment 226 block B29 null  <||@
  Comment 226 954 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 226 956 NOP  <||@
  Comment 227 958 NOP  <||@
  Comment 228 960 NOP  <||@
  Comment 229 962 NOP  <||@
  Comment 230 964 NOP  <||@
  Comment 231 966 NOP  <||@
  Comment 232 968 NOP  <||@
  Comment 233 970 NOP  <||@
  Comment 234 972 NOP  <||@
  Comment 235 974 NOP  <||@
  Comment 236 976 NOP  <||@
  Comment 237 978 NOP  <||@
  Comment 238 980 NOP  <||@
  Comment 239 982 rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD  <||@
  Comment 242 984 r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2]  <||@
  Comment 242 [rcx:0, rdx:0, rsi:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2, duringCall: true, rethrow: false]
              |0             |1         |2            
     locals:  |rsi|QWORD[.]  |r9|DWORD  |rdx|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30, duringCall: true, rethrow: false]
              |0             |1  |2         
     locals:  |rsi|QWORD[.]  |-  |r11|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 242 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 250 986 rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 253 988 r8|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2]  <||@
  Comment 253 [rcx:0, rdx:0, rsi:0, rdi:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2, duringCall: true, rethrow: false]
              |0             |1         |2            
     locals:  |rsi|QWORD[.]  |r9|DWORD  |rdx|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30, duringCall: true, rethrow: false]
              |0             |1  |2         
     locals:  |rsi|QWORD[.]  |-  |r11|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 253 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 261 990 rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 265 992 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3  <||@
  Comment 269 994 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3  <||@
  Comment 275 996 CMPBRANCH (x: rbx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B35 size: BYTE  <||@
  Comment 284 block B30 null  <||@
  Comment 284 998 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 284 1000 NOP  <||@
  Comment 285 1002 NOP  <||@
  Comment 286 1004 NOP  <||@
  Comment 287 1006 NOP  <||@
  Comment 288 1008 NOP  <||@
  Comment 289 1010 NOP  <||@
  Comment 290 1012 NOP  <||@
  Comment 291 1014 rcx|DWORD = MOVSXB value: rbx|DWORD size: DWORD  <||@
  Comment 294 1016 rbx|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 299 1018 TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD  <||@
  Comment 307 block B32 null  <||@
  Comment 307 1036 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 307 1038 NOP  <||@
  Comment 308 1040 NOP  <||@
  Comment 309 1042 NOP  <||@
  Comment 310 1044 NOP  <||@
  Comment 311 1046 NOP  <||@
  Comment 312 1048 r8|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 315 1050 CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD  <||@
  Comment 324 block B34 null  <||@
  Comment 324 1068 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 324 1070 NOP  <||@
  Comment 325 1072 NOP  <||@
  Comment 326 1074 NOP  <||@
  Comment 327 1076 NOP  <||@
  Comment 328 1078 NOP  <||@
  Comment 329 1080 NOP  <||@
  Comment 330 1082 NOP  <||@
  Comment 331 1084 NOP  <||@
  Comment 332 1086 NOP  <||@
  Comment 333 1088 NOP  <||@
  Comment 334 1090 NOP  <||@
  Comment 335 1092 NOP  <||@
  Comment 336 1094 NOP  <||@
  Comment 337 1096 NOP  <||@
  Comment 338 1098 NOP  <||@
  Comment 339 1100 rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 339 1102 rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 342 1104 r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 342 1106 rdi|QWORD = LEA address: [rax|QWORD[*] + 16] size: QWORD  <||@
  Comment 346 1108 rsi|QWORD = LEA address: [rdx|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD  <||@
  Comment 351 1110 rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 354 1112 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 354 {Field[name=StubRoutines::_jbyte_arraycopy, type=address, offset=0, address=0x7f78b1ffa4e8, value=140155947490816]:0x7f7899769e00}  <||@
  Comment 359 1118 JUMP ~outgoingValues: [] destination: B34 -> B41  <||@
  Comment 359 block B41 null  <||@
  Comment 359 1274 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 359 1114 r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 364 1116 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 369 1276 NOP  <||@
  Comment 370 1278 NOP  <||@
  Comment 371 1280 NOP  <||@
  Comment 372 1282 NOP  <||@
  Comment 373 1284 ADD (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 377 1286 JUMP ~outgoingValues: [] destination: B41 -> B57  <||@
  Comment 377 block B57 null  <||@
  Comment 377 1816 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 377 1818 NOP  <||@
  Comment 378 1820 NOP  <||@
  Comment 379 1822 NOP  <||@
  Comment 380 1824 NOP  <||@
  Comment 381 1826 NOP  <||@
  Comment 382 1828 NOP  <||@
  Comment 383 1830 NOP  <||@
  Comment 384 1832 NOP  <||@
  Comment 385 1834 rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 388 1836 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 397 POLL_RETURN_FAR  <||@
  Comment 414 block B43 null  <||@
  Comment 414 1302 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 414 1304 NOP  <||@
  Comment 415 1306 NOP  <||@
  Comment 416 1308 NOP  <||@
  Comment 417 1310 NOP  <||@
  Comment 418 1312 CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B60 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}  <||@
  Comment 418 {meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}}  <||@
  Comment 431 block B44 null  <||@
  Comment 431 1314 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 431 1316 NOP  <||@
  Comment 432 1318 NOP  <||@
  Comment 433 1320 NOP  <||@
  Comment 434 1322 NOP  <||@
  Comment 435 1324 NOP  <||@
  Comment 436 1326 NOP  <||@
  Comment 437 1328 NOP  <||@
  Comment 438 1330 r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 442 1332 r11|DWORD = ADD (x: r10|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 448 1334 rcx|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 453 1336 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: 1 size: DWORD inlinedY: null  <||@
  Comment 462 block B45 null  <||@
  Comment 462 1338 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 462 1340 NOP  <||@
  Comment 463 1342 NOP  <||@
  Comment 464 1344 NOP  <||@
  Comment 465 1346 JUMP ~outgoingValues: [] destination: B45 -> B47  <||@
  Comment 465 block B47 null  <||@
  Comment 465 1534 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 465 1536 NOP  <||@
  Comment 466 1538 NOP  <||@
  Comment 467 1540 NOP  <||@
  Comment 468 1542 NOP  <||@
  Comment 469 1544 NOP  <||@
  Comment 470 1546 NOP  <||@
  Comment 471 1548 NOP  <||@
  Comment 472 1550 NOP  <||@
  Comment 473 1552 r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD  <||@
  Comment 477 1554 r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2]  <||@
  Comment 477 [rdx:0, rsi:0, rdi:0, r11:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21, duringCall: true, rethrow: false]
              |0             |1             |2         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 477 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 485 1556 r9|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2]  <||@
  Comment 485 [rdx:0, rsi:0, rdi:0, r11:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21, duringCall: true, rethrow: false]
              |0             |1             |2         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 485 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 489 1558 rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 493 1560 CMPBRANCH (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B58 size: BYTE  <||@
  Comment 502 block B48 null  <||@
  Comment 502 1562 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 502 1564 NOP  <||@
  Comment 503 1566 NOP  <||@
  Comment 504 1568 NOP  <||@
  Comment 505 1570 NOP  <||@
  Comment 506 1572 NOP  <||@
  Comment 507 1574 NOP  <||@
  Comment 508 1576 NOP  <||@
  Comment 509 1578 NOP  <||@
  Comment 510 1580 rbx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 513 1582 rax|DWORD = MOVSXB value: rcx|DWORD size: DWORD  <||@
  Comment 516 1584 rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 518 1586 rbp|DWORD = SHL (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 522 1588 TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: DWORD  <||@
  Comment 530 block B50 null  <||@
  Comment 530 1612 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 530 1614 NOP  <||@
  Comment 531 1616 NOP  <||@
  Comment 532 1618 NOP  <||@
  Comment 533 1620 NOP  <||@
  Comment 534 1622 NOP  <||@
  Comment 535 1624 NOP  <||@
  Comment 536 1626 NOP  <||@
  Comment 537 1628 r13|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 541 1632 r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 544 1634 TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD  <||@
  Comment 553 block B52 null  <||@
  Comment 553 1658 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 553 1660 NOP  <||@
  Comment 554 1662 NOP  <||@
  Comment 555 1664 NOP  <||@
  Comment 556 1666 NOP  <||@
  Comment 557 1668 CMPBRANCH (x: r13|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD  <||@
  Comment 566 block B54 null  <||@
  Comment 566 1692 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 566 1694 NOP  <||@
  Comment 567 1696 NOP  <||@
  Comment 568 1698 NOP  <||@
  Comment 569 1700 NOP  <||@
  Comment 570 1702 NOP  <||@
  Comment 571 1704 r9|DWORD = SUB (x: r9|DWORD, ~y: r13|DWORD) size: DWORD  <||@
  Comment 574 1706 CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD  <||@
  Comment 583 block B56 null  <||@
  Comment 583 1730 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 583 1732 stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 587 1734 stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 592 1736 NOP  <||@
  Comment 593 1738 NOP  <||@
  Comment 594 1740 NOP  <||@
  Comment 595 1742 NOP  <||@
  Comment 596 1744 NOP  <||@
  Comment 597 1746 NOP  <||@
  Comment 598 1748 NOP  <||@
  Comment 599 1750 NOP  <||@
  Comment 600 1752 NOP  <||@
  Comment 601 1754 NOP  <||@
  Comment 602 1756 NOP  <||@
  Comment 603 1758 NOP  <||@
  Comment 604 1760 NOP  <||@
  Comment 605 1762 NOP  <||@
  Comment 606 1764 NOP  <||@
  Comment 607 1766 NOP  <||@
  Comment 608 1768 NOP  <||@
  Comment 609 1770 NOP  <||@
  Comment 610 1772 NOP  <||@
  Comment 611 1774 NOP  <||@
  Comment 612 1776 NOP  <||@
  Comment 613 1778 NOP  <||@
  Comment 614 1780 NOP  <||@
  Comment 615 1782 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3  <||@
  Comment 619 1784 r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 619 1786 r8|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 622 1788 r13|QWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 622 1790 rdi|QWORD = LEA address: [r11|QWORD[*] + 16] size: QWORD  <||@
  Comment 626 1792 rsi|QWORD = LEA address: [r8|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD  <||@
  Comment 631 1794 rdx|QWORD = MOVE input: r13|QWORD moveKind: QWORD  <||@
  Comment 634 1796 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 634 {Field[name=StubRoutines::_jbyte_arraycopy, type=address, offset=0, address=0x7f78b1ffa4e8, value=140155947490816]:0x7f7899769e00}  <||@
  Comment 639 1798 r10|DWORD = ADD (x: stack:32|DWORD, y: stack:28|DWORD) size: DWORD  <||@
  Comment 649 1800 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 654 1802 MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 658 1804 rax|DWORD = MOVZXB input: [rsi|QWORD[.] + 17] size: DWORD  <||@
  Comment 662 1806 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 667 1808 rcx|DWORD = MOVZXB input: [rdx|QWORD[.] + 17] size: DWORD  <||@
  Comment 671 1810 rax|DWORD = OR (x: rax|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 673 1812 MOVB (x: [rsi|QWORD[.] + 17], y: rax|BYTE(DWORD)) size: BYTE  <||@
  Comment 676 1814 JUMP ~outgoingValues: [] destination: B56 -> B57  <||@
  Comment 681 block B3 null  <||@
  Comment 681 122 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 681 124 NOP  <||@
  Comment 682 126 NOP  <||@
  Comment 683 128 NOP  <||@
  Comment 684 130 NOP  <||@
  Comment 685 132 NOP  <||@
  Comment 686 134 NOP  <||@
  Comment 687 136 NOP  <||@
  Comment 688 138 NOP  <||@
  Comment 689 140 NOP  <||@
  Comment 690 142 NOP  <||@
  Comment 691 144 NOP  <||@
  Comment 692 146 NOP  <||@
  Comment 693 148 NOP  <||@
  Comment 694 150 NOP  <||@
  Comment 695 152 NOP  <||@
  Comment 696 154 rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 698 156 r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 701 158 r13|DWORD = SUB (x: r13|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 704 160 rax|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 709 164 rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 711 166 rax|DWORD = ADD (x: rax|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 714 168 CMP (x: rax|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 717 170 r13|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: rax|DWORD) condition: >  <||@
  Comment 721 172 r13|DWORD = ADD (x: r13|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 724 174 rcx|DWORD = DEC value: r13|DWORD size: DWORD  <||@
  Comment 729 176 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B42 y: 2147483639 size: DWORD inlinedY: null  <||@
  Comment 741 block B4 null  <||@
  Comment 741 178 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 741 180 NOP  <||@
  Comment 742 182 NOP  <||@
  Comment 743 184 NOP  <||@
  Comment 744 186 NOP  <||@
  Comment 745 188 NOP  <||@
  Comment 746 190 NOP  <||@
  Comment 747 192 NOP  <||@
  Comment 748 194 NOP  <||@
  Comment 749 196 NOP  <||@
  Comment 750 198 rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 752 200 r13|DWORD = SAR (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 755 204 r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 758 206 CMPBRANCH (x: r10|DWORD, y: r13|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 size: DWORD  <||@
  Comment 767 block B9 null  <||@
  Comment 767 374 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 767 376 NOP  <||@
  Comment 768 378 NOP  <||@
  Comment 769 380 NOP  <||@
  Comment 770 382 NOP  <||@
  Comment 771 384 NOP  <||@
  Comment 772 386 NOP  <||@
  Comment 773 388 NOP  <||@
  Comment 774 390 NOP  <||@
  Comment 775 392 NOP  <||@
  Comment 776 394 NOP  <||@
  Comment 777 396 NOP  <||@
  Comment 778 398 rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 785 400 rcx|QWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 788 402 rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD  <||@
  Comment 792 404 rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD  <||@
  Comment 796 406 rax|QWORD = ADD (x: rcx|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 802 408 CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD  <||@
  Comment 815 block B11 null  <||@
  Comment 815 460 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 815 462 NOP  <||@
  Comment 816 464 NOP  <||@
  Comment 817 466 NOP  <||@
  Comment 818 468 NOP  <||@
  Comment 819 470 NOP  <||@
  Comment 820 472 NOP  <||@
  Comment 821 474 NOP  <||@
  Comment 822 476 NOP  <||@
  Comment 823 478 NOP  <||@
  Comment 824 480 NOP  <||@
  Comment 825 482 NOP  <||@
  Comment 826 484 NOP  <||@
  Comment 827 486 NOP  <||@
  Comment 828 488 NOP  <||@
  Comment 829 490 MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD  <||@
  Comment 836 492 AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 256] instr: 0  <||@
  Comment 844 494 AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 320] instr: 0  <||@
  Comment 852 496 AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 384] instr: 0  <||@
  Comment 860 498 MOV x: [rbx|QWORD] y: 1 size: QWORD  <||@
  Comment 867 500 MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 867 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 874 502 MOV (x: [rbx|QWORD + 12], y: r13|DWORD) size: DWORD  <||@
  Comment 878 504 rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD  <||@
  Comment 882 506 CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 y: 2048 size: QWORD inlinedY: null  <||@
  Comment 895 block B12 null  <||@
  Comment 895 508 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 895 510 NOP  <||@
  Comment 896 512 NOP  <||@
  Comment 897 514 NOP  <||@
  Comment 898 516 rax|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 905 518 JUMP ~outgoingValues: [] destination: B12 -> B13  <||@
  Comment 910 block B14 loop 0 depth 1 header:800|LoopBegin  <||@
  Comment 910 532 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 928 534 NOP  <||@
  Comment 929 536 NOP  <||@
  Comment 930 538 NOP  <||@
  Comment 931 540 NOP  <||@
  Comment 932 542 NOP  <||@
  Comment 933 544 NOP  <||@
  Comment 934 546 NOP  <||@
  Comment 935 548 MOV x: [rbx|QWORD + rax|QWORD * 1] y: 0 size: QWORD  <||@
  Comment 943 550 rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD  <||@
  Comment 947 552 JUMP ~outgoingValues: [] destination: B14 -> B13  <||@
  Comment 947 block B13 loop 0 depth 1 header:800|LoopBegin  <||@
  Comment 947 520 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 947 522 NOP  <||@
  Comment 948 524 NOP  <||@
  Comment 949 526 NOP  <||@
  Comment 950 528 NOP  <||@
  Comment 951 530 CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD  <||@
  Comment 956 block B15 null  <||@
  Comment 956 554 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 956 556 NOP  <||@
  Comment 957 558 NOP  <||@
  Comment 958 560 NOP  <||@
  Comment 959 562 JUMP ~outgoingValues: [] destination: B15 -> B17  <||@
  Comment 959 block B17 null  <||@
  Comment 959 608 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 959 610 NOP  <||@
  Comment 960 612 NOP  <||@
  Comment 961 614 NOP  <||@
  Comment 962 616 NOP  <||@
  Comment 963 618 rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD  <||@
  Comment 963 620 JUMP ~outgoingValues: [] destination: B17 -> B18  <||@
  Comment 963 block B18 null  <||@
  Comment 963 622 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 963 624 NOP  <||@
  Comment 964 626 NOP  <||@
  Comment 965 628 NOP  <||@
  Comment 966 630 NOP  <||@
  Comment 967 632 NOP  <||@
  Comment 968 634 NOP  <||@
  Comment 969 636 CMP (x: r10|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 972 638 rcx|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: r13|DWORD) condition: >  <||@
  Comment 979 640 TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD  <||@
  Comment 987 block B20 null  <||@
  Comment 987 656 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 987 658 NOP  <||@
  Comment 988 660 NOP  <||@
  Comment 989 662 NOP  <||@
  Comment 990 664 NOP  <||@
  Comment 991 666 CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD  <||@
  Comment 1000 block B22 null  <||@
  Comment 1000 682 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1000 684 NOP  <||@
  Comment 1001 686 NOP  <||@
  Comment 1002 688 NOP  <||@
  Comment 1003 690 NOP  <||@
  Comment 1004 692 CMPBRANCH (x: rcx|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD  <||@
  Comment 1013 block B24 null  <||@
  Comment 1013 708 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1013 710 stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 1017 712 stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1022 714 NOP  <||@
  Comment 1023 716 NOP  <||@
  Comment 1024 718 NOP  <||@
  Comment 1025 720 NOP  <||@
  Comment 1026 722 NOP  <||@
  Comment 1027 724 NOP  <||@
  Comment 1028 726 NOP  <||@
  Comment 1029 728 NOP  <||@
  Comment 1030 730 NOP  <||@
  Comment 1031 732 NOP  <||@
  Comment 1032 734 NOP  <||@
  Comment 1033 736 NOP  <||@
  Comment 1034 738 NOP  <||@
  Comment 1035 740 NOP  <||@
  Comment 1036 742 NOP  <||@
  Comment 1037 744 rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1037 746 r10|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1040 748 rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1040 750 rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD  <||@
  Comment 1044 752 rsi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD  <||@
  Comment 1048 754 rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD  <||@
  Comment 1051 756 stack:72|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1056 758 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 1056 {Field[name=StubRoutines::_jbyte_disjoint_arraycopy, type=address, offset=0, address=0x7f78b1ffa4b8, value=140155947490624]:0x7f7899769d40}  <||@
  Comment 1061 764 JUMP ~outgoingValues: [] destination: B24 -> B25  <||@
  Comment 1061 block B25 null  <||@
  Comment 1061 766 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1061 368 rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1066 370 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1071 768 NOP  <||@
  Comment 1072 770 NOP  <||@
  Comment 1073 772 NOP  <||@
  Comment 1074 774 NOP  <||@
  Comment 1075 776 NOP  <||@
  Comment 1076 778 NOP  <||@
  Comment 1077 780 NOP  <||@
  Comment 1078 782 NOP  <||@
  Comment 1079 784 NOP  <||@
  Comment 1080 786 NOP  <||@
  Comment 1081 788 NOP  <||@
  Comment 1082 790 NOP  <||@
  Comment 1083 792 NOP  <||@
  Comment 1084 794 NOP  <||@
  Comment 1085 796 NOP  <||@
  Comment 1086 798 NOP  <||@
  Comment 1087 800 NOP  <||@
  Comment 1088 802 NOP  <||@
  Comment 1089 804 NOP  <||@
  Comment 1090 806 NOP  <||@
  Comment 1091 808 NOP  <||@
  Comment 1092 810 NOP  <||@
  Comment 1093 812 NOP  <||@
  Comment 1094 814 NOP  <||@
  Comment 1095 816 NOP  <||@
  Comment 1096 818 NOP  <||@
  Comment 1097 820 NOP  <||@
  Comment 1098 822 NOP  <||@
  Comment 1099 824 NOP  <||@
  Comment 1100 826 NOP  <||@
  Comment 1101 828 NOP  <||@
  Comment 1102 830 NOP  <||@
  Comment 1103 832 NOP  <||@
  Comment 1104 834 NOP  <||@
  Comment 1105 836 NOP  <||@
  Comment 1106 838 NOP  <||@
  Comment 1107 840 NOP  <||@
  Comment 1108 842 NOP  <||@
  Comment 1109 844 NOP  <||@
  Comment 1110 846 NOP  <||@
  Comment 1111 848 NOP  <||@
  Comment 1112 850 NOP  <||@
  Comment 1113 852 NOP  <||@
  Comment 1114 854 NOP  <||@
  Comment 1115 856 NOP  <||@
  Comment 1116 858 NOP  <||@
  Comment 1117 860 NOP  <||@
  Comment 1118 862 NOP  <||@
  Comment 1119 864 NOP  <||@
  Comment 1120 866 NOP  <||@
  Comment 1121 868 NOP  <||@
  Comment 1122 870 NOP  <||@
  Comment 1123 872 NOP  <||@
  Comment 1124 874 NOP  <||@
  Comment 1125 876 NOP  <||@
  Comment 1126 878 NOP  <||@
  Comment 1127 880 AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: r10|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5  <||@
  Comment 1184 882 rdx|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3  <||@
  Comment 1191 884 MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD  <||@
  Comment 1194 886 AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rbx|QWORD[.]) {temp: rdx|QWORD, temp2: r10|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5  <||@
  Comment 1276 888 r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1281 890 rbp|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 1285 892 r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1290 894 r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 1295 896 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1300 898 JUMP ~outgoingValues: [] destination: B25 -> B26  <||@
  Comment 1305 block B46 null  <||@
  Comment 1305 1348 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1305 1350 stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 1310 1352 stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1315 1354 NOP  <||@
  Comment 1316 1356 NOP  <||@
  Comment 1317 1358 NOP  <||@
  Comment 1318 1360 NOP  <||@
  Comment 1319 1362 NOP  <||@
  Comment 1320 1364 NOP  <||@
  Comment 1321 1366 NOP  <||@
  Comment 1322 1368 NOP  <||@
  Comment 1323 1370 NOP  <||@
  Comment 1324 1372 NOP  <||@
  Comment 1325 1374 NOP  <||@
  Comment 1326 1376 NOP  <||@
  Comment 1327 1378 NOP  <||@
  Comment 1328 1380 NOP  <||@
  Comment 1329 1382 NOP  <||@
  Comment 1330 1384 NOP  <||@
  Comment 1331 1386 NOP  <||@
  Comment 1332 1388 NOP  <||@
  Comment 1333 1390 NOP  <||@
  Comment 1334 1392 NOP  <||@
  Comment 1335 1394 NOP  <||@
  Comment 1336 1396 NOP  <||@
  Comment 1337 1398 NOP  <||@
  Comment 1338 1400 NOP  <||@
  Comment 1339 1402 NOP  <||@
  Comment 1340 1404 NOP  <||@
  Comment 1341 1406 NOP  <||@
  Comment 1342 1408 NOP  <||@
  Comment 1343 1410 NOP  <||@
  Comment 1344 1412 NOP  <||@
  Comment 1345 1414 NOP  <||@
  Comment 1346 1416 NOP  <||@
  Comment 1347 1418 NOP  <||@
  Comment 1348 1420 NOP  <||@
  Comment 1349 1422 NOP  <||@
  Comment 1350 1424 NOP  <||@
  Comment 1351 1426 NOP  <||@
  Comment 1352 1428 NOP  <||@
  Comment 1353 1430 NOP  <||@
  Comment 1354 1432 NOP  <||@
  Comment 1355 1434 NOP  <||@
  Comment 1356 1436 NOP  <||@
  Comment 1357 1438 NOP  <||@
  Comment 1358 1440 NOP  <||@
  Comment 1359 1442 NOP  <||@
  Comment 1360 1444 NOP  <||@
  Comment 1361 1446 NOP  <||@
  Comment 1362 1448 NOP  <||@
  Comment 1363 1450 NOP  <||@
  Comment 1364 1452 NOP  <||@
  Comment 1365 1454 NOP  <||@
  Comment 1366 1456 NOP  <||@
  Comment 1367 1458 NOP  <||@
  Comment 1368 1460 NOP  <||@
  Comment 1369 1462 NOP  <||@
  Comment 1370 1464 NOP  <||@
  Comment 1371 1466 NOP  <||@
  Comment 1372 1468 NOP  <||@
  Comment 1373 1470 NOP  <||@
  Comment 1374 1472 NOP  <||@
  Comment 1375 1474 NOP  <||@
  Comment 1376 1476 NOP  <||@
  Comment 1377 1478 NOP  <||@
  Comment 1378 1480 NOP  <||@
  Comment 1379 1482 NOP  <||@
  Comment 1380 1484 NOP  <||@
  Comment 1381 1486 NOP  <||@
  Comment 1382 1488 NOP  <||@
  Comment 1383 1490 NOP  <||@
  Comment 1384 1492 NOP  <||@
  Comment 1385 1494 NOP  <||@
  Comment 1386 1496 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1389 1500 rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1392 1502 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:24, 21, 37, 2, 2]  <||@
  Comment 1395 {HotSpotMethod<AbstractStringBuilder.newCapacity(int)>}  <||@
  Comment 1395 INVOKESPECIAL  <||@
  Comment 1400 [stack:16, stack:24, stack:32]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2 
     locals:  |stack:48|QWORD[.]  |-                  |- 
     stack:   |stack:48|QWORD[.]  |stack:64|QWORD[.]  |  
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21, duringCall: true, rethrow: false]
              |0                  |1                  |2              
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:32|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 1408 1504 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1413 1506 rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 1417 1508 rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 1419 1510 rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1424 1512 rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 1426 1514 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:32, 21, 37, 2, 2]  <||@
  Comment 1427 {HotSpotMethod<Arrays.copyOf(byte[], int)>}  <||@
  Comment 1427 INVOKESTATIC  <||@
  Comment 1432 [stack:24, stack:32]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |-                  |-  |- 
     stack:   |stack:48|QWORD[.]  |   |  
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21, duringCall: true, rethrow: false]
              |0                  |1                  |2              
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:32|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 1440 1516 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1445 1518 AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5  <||@
  Comment 1502 1520 r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67822d27 encoding: base: 0 shift: 3  <||@
  Comment 1509 1522 MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD  <||@
  Comment 1513 1524 AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4ddaadb5  <||@
  Comment 1607 1526 rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1610 1528 r10|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1615 1530 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1620 1532 JUMP ~outgoingValues: [] destination: B46 -> B47  <||@
  Comment 1625 block B28 null  <||@
  Comment 1625 922 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1625 924 NOP  <||@
  Comment 1626 926 NOP  <||@
  Comment 1627 928 NOP  <||@
  Comment 1628 930 NOP  <||@
  Comment 1629 932 NOP  <||@
  Comment 1630 934 NOP  <||@
  Comment 1631 936 NOP  <||@
  Comment 1632 938 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1635 942 - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:18, 2, 30, 2, 2, 21, 2, 2]  <||@
  Comment 1635 {HotSpotMethod<AbstractStringBuilder.inflate()>}  <||@
  Comment 1635 INVOKESPECIAL  <||@
  Comment 1640 [stack:24, stack:32]at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1               |2                 
     locals:  |stack:48|QWORD[.]  |stack:28|DWORD  |stack:56|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30, duringCall: true, rethrow: false]
              |0                  |1  |2              
     locals:  |stack:48|QWORD[.]  |-  |stack:32|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 1648 944 r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1653 946 r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1658 948 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1663 950 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1668 952 JUMP ~outgoingValues: [] destination: B28 -> B29  <||@
  Comment 1673 block B35 null  <||@
  Comment 1673 1120 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1673 1122 NOP  <||@
  Comment 1674 1124 NOP  <||@
  Comment 1675 1126 NOP  <||@
  Comment 1676 1128 NOP  <||@
  Comment 1677 1130 TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD  <||@
  Comment 1686 block B37 null  <||@
  Comment 1686 1148 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1686 1150 NOP  <||@
  Comment 1687 1152 NOP  <||@
  Comment 1688 1154 NOP  <||@
  Comment 1689 1156 NOP  <||@
  Comment 1690 1158 NOP  <||@
  Comment 1691 1160 NOP  <||@
  Comment 1692 1162 r8|DWORD = SHR value: r8|DWORD size: DWORD  <||@
  Comment 1695 1164 rsi|DWORD = ADD (x: r9|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1701 1166 CMPBRANCH (x: rsi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B40 size: DWORD  <||@
  Comment 1710 block B40 null  <||@
  Comment 1710 1206 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1710 1208 NOP  <||@
  Comment 1711 1210 NOP  <||@
  Comment 1712 1212 NOP  <||@
  Comment 1713 1214 NOP  <||@
  Comment 1714 1216 NOP  <||@
  Comment 1715 1218 NOP  <||@
  Comment 1716 1220 NOP  <||@
  Comment 1717 1222 NOP  <||@
  Comment 1718 1224 NOP  <||@
  Comment 1719 1226 NOP  <||@
  Comment 1720 1228 NOP  <||@
  Comment 1721 1230 NOP  <||@
  Comment 1722 1232 NOP  <||@
  Comment 1723 1234 NOP  <||@
  Comment 1724 1236 NOP  <||@
  Comment 1725 1238 NOP  <||@
  Comment 1726 1240 NOP  <||@
  Comment 1727 1242 NOP  <||@
  Comment 1728 1244 NOP  <||@
  Comment 1729 1246 rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1729 1248 rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1729 1250 rsi|QWORD[*] = LEA address: [rax|QWORD[*] + 16] size: QWORD  <||@
  Comment 1733 1252 r9|QWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1733 1254 r9|QWORD = SHL value: r9|QWORD size: QWORD  <||@
  Comment 1736 1256 rdx|QWORD = LEA address: [r9|QWORD + 16] size: QWORD  <||@
  Comment 1740 1258 rdx|QWORD[*] = ADD (x: rdx|QWORD, y: rdi|QWORD[*]) size: QWORD  <||@
  Comment 1743 1260 rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1743 1262 rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD  <||@
  Comment 1743 1264 rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 1746 1266 - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL  <||@
  Comment 1746 {Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL}  <||@
  Comment 1751 1272 JUMP ~outgoingValues: [] destination: B40 -> B41  <||@
  Comment 1756 block B10 null  <||@
  Comment 1756 410 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1756 412 stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 1760 414 stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1765 416 stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1770 418 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 1770 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 1780 420 NOP  <||@
  Comment 1781 422 NOP  <||@
  Comment 1782 424 NOP  <||@
  Comment 1783 426 NOP  <||@
  Comment 1784 428 NOP  <||@
  Comment 1785 430 NOP  <||@
  Comment 1786 432 NOP  <||@
  Comment 1787 434 NOP  <||@
  Comment 1788 436 NOP  <||@
  Comment 1789 438 rdx|DWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 1792 440 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 1792 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1797 [stack:16, stack:24, stack:32]at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 1805 442 NULLCHECK address: [rax|QWORD[.]] state [bci:0]  <||@
  Comment 1805 [rax:0, stack:16, stack:24, stack:32]at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 1805 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1807 444 rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1810 450 rdi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1815 454 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1820 456 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1825 458 JUMP ~outgoingValues: [] destination: B10 -> B18  <||@
  Comment 1830 block B16 null  <||@
  Comment 1830 564 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1830 566 stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 1834 568 stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1839 570 stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1844 572 NOP  <||@
  Comment 1845 574 NOP  <||@
  Comment 1846 576 NOP  <||@
  Comment 1847 578 NOP  <||@
  Comment 1848 580 NOP  <||@
  Comment 1849 582 NOP  <||@
  Comment 1850 584 NOP  <||@
  Comment 1851 586 NOP  <||@
  Comment 1852 588 NOP  <||@
  Comment 1853 590 rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 1856 592 ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD}  <||@
  Comment 1866 598 rdi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1871 602 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1876 604 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1881 606 JUMP ~outgoingValues: [] destination: B16 -> B17  <||@
  Comment 1886 block B5 null  <||@
  Comment 1886 208 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1886 210 stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 1890 212 stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1895 214 stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1900 216 NOP  <||@
  Comment 1901 218 NOP  <||@
  Comment 1902 220 NOP  <||@
  Comment 1903 222 NOP  <||@
  Comment 1904 224 NOP  <||@
  Comment 1905 226 NOP  <||@
  Comment 1906 228 NOP  <||@
  Comment 1907 230 NOP  <||@
  Comment 1908 232 NOP  <||@
  Comment 1909 234 NOP  <||@
  Comment 1910 236 NOP  <||@
  Comment 1911 238 rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 1918 240 r11|QWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 1921 242 rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD  <||@
  Comment 1925 244 rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD  <||@
  Comment 1929 246 rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 1935 248 CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD  <||@
  Comment 1948 block B7 null  <||@
  Comment 1948 282 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1948 284 NOP  <||@
  Comment 1949 286 NOP  <||@
  Comment 1950 288 NOP  <||@
  Comment 1951 290 NOP  <||@
  Comment 1952 292 NOP  <||@
  Comment 1953 294 NOP  <||@
  Comment 1954 296 NOP  <||@
  Comment 1955 298 NOP  <||@
  Comment 1956 300 NOP  <||@
  Comment 1957 302 NOP  <||@
  Comment 1958 304 NOP  <||@
  Comment 1959 306 MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD  <||@
  Comment 1966 308 AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0  <||@
  Comment 1974 310 AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0  <||@
  Comment 1982 312 AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0  <||@
  Comment 1990 314 MOV x: [rdi|QWORD] y: 1 size: QWORD  <||@
  Comment 1997 316 MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 1997 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 2004 318 MOV (x: [rdi|QWORD + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 2008 320 rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD  <||@
  Comment 2008 322 JUMP ~outgoingValues: [] destination: B7 -> B8  <||@
  Comment 2008 block B8 null  <||@
  Comment 2008 324 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 2008 326 NOP  <||@
  Comment 2009 328 NOP  <||@
  Comment 2010 330 NOP  <||@
  Comment 2011 332 NOP  <||@
  Comment 2012 334 NOP  <||@
  Comment 2013 336 NOP  <||@
  Comment 2014 338 NOP  <||@
  Comment 2015 340 NOP  <||@
  Comment 2016 342 NOP  <||@
  Comment 2017 344 NOP  <||@
  Comment 2018 346 NOP  <||@
  Comment 2019 348 NOP  <||@
  Comment 2020 350 NOP  <||@
  Comment 2021 352 NOP  <||@
  Comment 2022 354 rsi|QWORD[*] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2027 356 rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 2030 358 stack:72|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 2035 360 rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD  <||@
  Comment 2039 362 rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD  <||@
  Comment 2043 364 rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD  <||@
  Comment 2046 366 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 2046 {Field[name=StubRoutines::_jbyte_disjoint_arraycopy, type=address, offset=0, address=0x7f78b1ffa4b8, value=140155947490624]:0x7f7899769d40}  <||@
  Comment 2051 372 JUMP ~outgoingValues: [] destination: B8 -> B25  <||@
  Comment 2056 block B6 null  <||@
  Comment 2056 250 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2056 252 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 2056 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 2066 254 NOP  <||@
  Comment 2067 256 NOP  <||@
  Comment 2068 258 NOP  <||@
  Comment 2069 260 NOP  <||@
  Comment 2070 262 NOP  <||@
  Comment 2071 264 NOP  <||@
  Comment 2072 266 NOP  <||@
  Comment 2073 268 NOP  <||@
  Comment 2074 270 NOP  <||@
  Comment 2075 272 rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 2078 274 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 2078 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 2083 [stack:16, stack:24, stack:32]at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 2091 276 NULLCHECK address: [rax|QWORD[.]] state [bci:0]  <||@
  Comment 2091 [rax:0, stack:16, stack:24, stack:32]at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 2091 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2093 278 rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2096 280 JUMP ~outgoingValues: [] destination: B6 -> B8  <||@
  Comment 2098 block B23 null  <||@
  Comment 2098 694 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2098 696 NOP  <||@
  Comment 2099 698 NOP  <||@
  Comment 2100 700 NOP  <||@
  Comment 2101 702 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2108 704 r10|DWORD = MOVE input: int[-151321|0xfffffffffffdb0e7]  <||@
  Comment 2114 706 JUMP ~outgoingValues: [] destination: B23 -> B61  <||@
  Comment 2114 block B61 null  <||@
  Comment 2114 1896 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 2114 1898 NOP  <||@
  Comment 2115 1900 NOP  <||@
  Comment 2116 1902 NOP  <||@
  Comment 2117 1904 NOP  <||@
  Comment 2118 1906 NOP  <||@
  Comment 2119 1908 NOP  <||@
  Comment 2120 1910 NOP  <||@
  Comment 2121 1912 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 2128 1914 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 2135 1916 DEOPT info [bci:0]  <||@
  Comment 2135 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2140 [stack:24, stack:32]at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 2148 block B19 null  <||@
  Comment 2148 642 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2148 644 NOP  <||@
  Comment 2149 646 NOP  <||@
  Comment 2150 648 NOP  <||@
  Comment 2151 650 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2158 652 r10|DWORD = MOVE input: int[-149273|0xfffffffffffdb8e7]  <||@
  Comment 2164 654 JUMP ~outgoingValues: [] destination: B19 -> B61  <||@
  Comment 2166 block B36 null  <||@
  Comment 2166 1132 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2166 1134 NOP  <||@
  Comment 2167 1136 NOP  <||@
  Comment 2168 1138 NOP  <||@
  Comment 2169 1140 r10|DWORD = MOVE input: int[-145177|0xfffffffffffdc8e7]  <||@
  Comment 2175 1146 JUMP ~outgoingValues: [] destination: B36 -> B39  <||@
  Comment 2175 block B39 null  <||@
  Comment 2175 1184 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 2175 1186 NOP  <||@
  Comment 2176 1188 NOP  <||@
  Comment 2177 1190 NOP  <||@
  Comment 2178 1192 NOP  <||@
  Comment 2179 1194 NOP  <||@
  Comment 2180 1196 NOP  <||@
  Comment 2181 1198 NOP  <||@
  Comment 2182 1200 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 2189 1202 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 2200 1204 DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2]  <||@
  Comment 2200 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2205 [stack:24, stack:32]at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1         |2                 
     locals:  |stack:48|QWORD[.]  |r9|DWORD  |stack:56|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30, duringCall: true, rethrow: false]
              |0                  |1  |2         
     locals:  |stack:48|QWORD[.]  |-  |r11|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 2213 block B55 null  <||@
  Comment 2213 1708 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2213 1710 stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 2218 1712 NOP  <||@
  Comment 2219 1714 NOP  <||@
  Comment 2220 1716 NOP  <||@
  Comment 2221 1718 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2228 1720 r10|DWORD = MOVE input: int[-159769|0xfffffffffffd8fe7]  <||@
  Comment 2234 1728 JUMP ~outgoingValues: [] destination: B55 -> B59  <||@
  Comment 2234 block B59 null  <||@
  Comment 2234 1860 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 2234 1604 r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 2239 1606 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2244 1608 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2249 1862 NOP  <||@
  Comment 2250 1864 NOP  <||@
  Comment 2251 1866 NOP  <||@
  Comment 2252 1868 NOP  <||@
  Comment 2253 1870 NOP  <||@
  Comment 2254 1872 NOP  <||@
  Comment 2255 1874 NOP  <||@
  Comment 2256 1876 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 2263 1878 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 2270 1880 DEOPT info [bci:38, 21, 37, 2, 2]  <||@
  Comment 2270 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2275 [rdx:0, rsi:0]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21, duringCall: true, rethrow: false]
              |0             |1             |2        
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r8|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 2283 block B38 null  <||@
  Comment 2283 1168 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2283 1170 NOP  <||@
  Comment 2284 1172 NOP  <||@
  Comment 2285 1174 NOP  <||@
  Comment 2286 1176 r10|DWORD = MOVE input: int[-146201|0xfffffffffffdc4e7]  <||@
  Comment 2292 1182 JUMP ~outgoingValues: [] destination: B38 -> B39  <||@
  Comment 2294 block B42 null  <||@
  Comment 2294 1288 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2294 1290 NOP  <||@
  Comment 2295 1292 NOP  <||@
  Comment 2296 1294 NOP  <||@
  Comment 2297 1296 r11|QWORD = MOVE input: long[5140|0x1414]  <||@
  Comment 2304 1298 r10|DWORD = MOVE input: int[-148243|0xfffffffffffdbced]  <||@
  Comment 2310 1300 JUMP ~outgoingValues: [] destination: B42 -> B61  <||@
  Comment 2315 block B21 null  <||@
  Comment 2315 668 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2315 670 NOP  <||@
  Comment 2316 672 NOP  <||@
  Comment 2317 674 NOP  <||@
  Comment 2318 676 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2325 678 r10|DWORD = MOVE input: int[-150297|0xfffffffffffdb4e7]  <||@
  Comment 2331 680 JUMP ~outgoingValues: [] destination: B21 -> B61  <||@
  Comment 2336 block B51 null  <||@
  Comment 2336 1636 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2336 1638 stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 2341 1640 NOP  <||@
  Comment 2342 1642 NOP  <||@
  Comment 2343 1644 NOP  <||@
  Comment 2344 1646 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2351 1648 r10|DWORD = MOVE input: int[-157721|0xfffffffffffd97e7]  <||@
  Comment 2357 1656 JUMP ~outgoingValues: [] destination: B51 -> B59  <||@
  Comment 2359 block B58 null  <||@
  Comment 2359 1838 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2359 1840 stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 2364 1842 NOP  <||@
  Comment 2365 1844 NOP  <||@
  Comment 2366 1846 NOP  <||@
  Comment 2367 1848 r11|QWORD = MOVE input: long[3220|0xc94]  <||@
  Comment 2374 1850 r10|DWORD = MOVE input: int[-155667|0xfffffffffffd9fed]  <||@
  Comment 2380 1858 JUMP ~outgoingValues: [] destination: B58 -> B59  <||@
  Comment 2385 block B60 null  <||@
  Comment 2385 1882 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2385 1884 NOP  <||@
  Comment 2386 1886 NOP  <||@
  Comment 2387 1888 NOP  <||@
  Comment 2388 1890 r11|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 2395 1892 r10|DWORD = MOVE input: int[-98355|0xfffffffffffe7fcd]  <||@
  Comment 2401 1894 JUMP ~outgoingValues: [] destination: B60 -> B61  <||@
  Comment 2406 block B33 null  <||@
  Comment 2406 1052 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2406 1054 NOP  <||@
  Comment 2407 1056 NOP  <||@
  Comment 2408 1058 NOP  <||@
  Comment 2409 1060 r10|DWORD = MOVE input: int[-144153|0xfffffffffffdcce7]  <||@
  Comment 2415 1066 JUMP ~outgoingValues: [] destination: B33 -> B39  <||@
  Comment 2420 block B53 null  <||@
  Comment 2420 1670 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2420 1672 stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 2425 1674 NOP  <||@
  Comment 2426 1676 NOP  <||@
  Comment 2427 1678 NOP  <||@
  Comment 2428 1680 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2435 1682 r10|DWORD = MOVE input: int[-158745|0xfffffffffffd93e7]  <||@
  Comment 2441 1690 JUMP ~outgoingValues: [] destination: B53 -> B59  <||@
  Comment 2446 block B31 null  <||@
  Comment 2446 1020 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2446 1022 NOP  <||@
  Comment 2447 1024 NOP  <||@
  Comment 2448 1026 NOP  <||@
  Comment 2449 1028 r10|DWORD = MOVE input: int[-143129|0xfffffffffffdd0e7]  <||@
  Comment 2455 1034 JUMP ~outgoingValues: [] destination: B31 -> B39  <||@
  Comment 2460 block B49 null  <||@
  Comment 2460 1590 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2460 1592 stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 2465 1594 NOP  <||@
  Comment 2466 1596 NOP  <||@
  Comment 2467 1598 NOP  <||@
  Comment 2468 1600 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2475 1602 r10|DWORD = MOVE input: int[-156697|0xfffffffffffd9be7]  <||@
  Comment 2481 1610 JUMP ~outgoingValues: [] destination: B49 -> B59  <||@
  Comment 2491 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 2516 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 2526 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 2541 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 2556 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 2571 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 2604 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2609 [rdx:0, rsi:0, rdi:0, stack:24, stack:32]at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 2639 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2644 [rdx:0, rsi:0, rdi:0, stack:24, stack:32]at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 2674 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2679 [rdx:0, rsi:0, rdi:0, stack:24, stack:32]at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 2709 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2714 [rcx:0, rdx:0, rsi:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2, duringCall: true, rethrow: false]
              |0             |1         |2            
     locals:  |rsi|QWORD[.]  |r9|DWORD  |rdx|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30, duringCall: true, rethrow: false]
              |0             |1  |2         
     locals:  |rsi|QWORD[.]  |-  |r11|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 2744 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2749 [rcx:0, rdx:0, rsi:0, rdi:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2, duringCall: true, rethrow: false]
              |0             |1         |2            
     locals:  |rsi|QWORD[.]  |r9|DWORD  |rdx|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30, duringCall: true, rethrow: false]
              |0             |1  |2         
     locals:  |rsi|QWORD[.]  |-  |r11|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 2779 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2784 [rdx:0, rsi:0, rdi:0, r11:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21, duringCall: true, rethrow: false]
              |0             |1             |2         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 2814 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2819 [rdx:0, rsi:0, rdi:0, r11:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21, duringCall: true, rethrow: false]
              |0             |1             |2         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 2849 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2854 [rax:0, stack:16, stack:24, stack:32]at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 2884 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2889 [rax:0, stack:16, stack:24, stack:32]at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 2897 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2897 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 2903 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 2903 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
