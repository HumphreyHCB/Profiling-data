begin_compilation
  name " HotSpotOSRCompilation-11528[sun.security.provider.SHA.implCompress0(byte[], int)@357]"
  method "HotSpotOSRCompilation-11528[sun.security.provider.SHA.implCompress0(byte[], int)@357]"
  date 1724269756611
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a611 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a611  <|@  <|@
f <@~|@floating>@ <|@
tid j607 <|@
d <@d|@=== Debug Properties ===
index: 0
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: i64
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v608 v1039 v1040 v1041 v1042 v1043 v1044 v1045 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1039 <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j607 
index: - 
=== Succesors ===
=== Usages ===
a611 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j607 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a611 <|@
d <@d|@=== Debug Properties ===
accessStamp: a java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: a java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1039 
lastLocationAccess: - 
=== Succesors ===
next: i613 
=== Usages ===
v1055 ?310 ?336 v1027 v1032 
=== Predecessor ===
v606 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1039 lastLocationAccess: - #next: i613  <|@  <|@
f <@~|@floating>@ <|@
tid v1040 <|@
d <@d|@=== Debug Properties ===
displacement: 48
stamp: void*
stride: S1
=== Inputs ===
base: j607 
index: - 
=== Succesors ===
=== Usages ===
i613 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j607 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i613 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1040 
lastLocationAccess: - 
=== Succesors ===
next: i616 
=== Usages ===
?310 i315 i316 i338 i339 i369 i376 i377 
=== Predecessor ===
a611 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1040 lastLocationAccess: - #next: i616  <|@  <|@
f <@~|@floating>@ <|@
tid v1041 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j607 
index: - 
=== Succesors ===
=== Usages ===
i616 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j607 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i616 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1041 
lastLocationAccess: - 
=== Succesors ===
next: i618 
=== Usages ===
?310 i318 i326 i327 i339 
=== Predecessor ===
i613 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1041 lastLocationAccess: - #next: i618  <|@  <|@
f <@~|@floating>@ <|@
tid v1042 <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: j607 
index: - 
=== Succesors ===
=== Usages ===
i618 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j607 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i618 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1042 
lastLocationAccess: - 
=== Succesors ===
next: i620 
=== Usages ===
?310 i318 i340 i394 i370 i341 
=== Predecessor ===
i616 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1042 lastLocationAccess: - #next: i620  <|@  <|@
f <@~|@floating>@ <|@
tid v1043 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: j607 
index: - 
=== Succesors ===
=== Usages ===
i620 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j607 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i620 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1043 
lastLocationAccess: - 
=== Succesors ===
next: i622 
=== Usages ===
?310 i319 i341 i342 i372 
=== Predecessor ===
i618 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1043 lastLocationAccess: - #next: i622  <|@  <|@
f <@~|@floating>@ <|@
tid v1044 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j607 
index: - 
=== Succesors ===
=== Usages ===
i622 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j607 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i622 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1044 
lastLocationAccess: - 
=== Succesors ===
next: i625 
=== Usages ===
?310 i321 i342 
=== Predecessor ===
i620 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1044 lastLocationAccess: - #next: i625  <|@  <|@
f <@~|@floating>@ <|@
tid v1045 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j607 
index: - 
=== Succesors ===
=== Usages ===
i625 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j607 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i625 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1045 
lastLocationAccess: - 
=== Succesors ===
next: v608 
=== Usages ===
?310 v311 j518 i329 i399 v412 i576 i720 
=== Predecessor ===
i622 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1045 lastLocationAccess: - #next: v608  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{OSR_migration_end(long)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[], transition=LEAF_NO_VZERO}
descriptorName: OSR_migration_end
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j607 
=== Succesors ===
next: v997 
=== Usages ===
=== Predecessor ===
i625 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j607 #next: v997  <|@  <|@
tid ?310 <|@
d <@d|@=== Debug Properties ===
bci: 357
bytecode: iload
code: ResolvedJavaMethodBytecode<SHA.implCompress0(byte[], int)>
localsSize: 10
locksSize: 0
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
sourceFile: SHA.java
sourceLine: 202
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a611 - - i613 i616 i618 i620 i622 i625 
=== Succesors ===
=== Usages ===
v945 i999 v997 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a611 - - i613 i616 i618 i620 i622 i625  <|@  <|@
f <@~|@floating>@ <|@
tid v1055 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a611 
index: - 
=== Succesors ===
=== Usages ===
v997 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a611 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v997 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-102716|0xfffffffffffe6ec4]
deoptSpeculation: long[20|0x14]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?310 
guard: - 
address: v1055 
lastLocationAccess: - 
=== Succesors ===
next: v580 
=== Usages ===
v1025 
=== Predecessor ===
v608 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?310 guard: - address: v1055 lastLocationAccess: - #next: v580  <|@  <|@
f <@~|@floating>@ <|@
tid v1024 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
rawvalue: meta{HotSpotType<Lsun/security/provider/SHA;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Lsun/security/provider/SHA;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1025 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1025 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v997 
y: v1024 
=== Succesors ===
=== Usages ===
v580 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v997 y: v1024  <|@  <|@
f <@*|@fixed>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v1025 
=== Succesors ===
trueSuccessor: v577 
falseSuccessor: v1021 
=== Usages ===
=== Predecessor ===
v997 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1025 #trueSuccessor: v577 #falseSuccessor: v1021  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: void
=== Inputs ===
=== Succesors ===
next: v314 
=== Usages ===
=== Predecessor ===
v580 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v314  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:152) [bci: 8]
rawvalue: 80
stableDimension: 0
stamp: i32 [80]
stampKind: i32
value: int[80|0x50]
=== Inputs ===
=== Succesors ===
=== Usages ===
v311 i718 v362 v572 v717 v680 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 361]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i625 
y: i11 
=== Succesors ===
=== Usages ===
v314 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i625 y: i11  <|@  <|@
f <@~|@floating>@ <|@
tid i109 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:170) [bci: 141]
rawvalue: 5
stableDimension: 0
stamp: i32 [5]
stampKind: i32
value: int[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i315 i257 i366 v557 i648 i684 i727 i761 i782 i810 i831 i850 i868 i889 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 361]
profileData: PROFILED designatedSuccessorProbability: 0.9523809523809523
stamp: void
=== Inputs ===
condition: v311 
=== Succesors ===
trueSuccessor: v313 
falseSuccessor: v312 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v311 #trueSuccessor: v313 #falseSuccessor: v312  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B24" 
    xhandlers
    flags 
    probability 4606753504549791646
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 364]
stamp: void
=== Inputs ===
=== Succesors ===
next: a998 
=== Usages ===
=== Predecessor ===
v314 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a998  <|@  <|@
f <@~|@floating>@ <|@
tid v1027 <|@
d <@d|@=== Debug Properties ===
displacement: 48
stamp: void*
stride: S1
=== Inputs ===
base: a611 
index: - 
=== Succesors ===
=== Usages ===
a998 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a611 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a998 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# int[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: SHA.W
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 382]
stamp: n# int[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1027 
lastLocationAccess: - 
=== Succesors ===
next: i999 
=== Usages ===
a405 v1028 
=== Predecessor ===
v313 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1027 lastLocationAccess: - #next: i999  <|@  <|@
f <@~|@floating>@ <|@
tid v1028 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a998 
=== Succesors ===
=== Usages ===
i999 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a998  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i999 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-104203|0xfffffffffffe68f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?310 
guard: - 
address: v1028 
lastLocationAccess: - 
=== Succesors ===
next: v588 
=== Usages ===
v412 v422 v569 j560 
=== Predecessor ===
a998 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?310 guard: - address: v1028 lastLocationAccess: - #next: v588  <|@  <|@
f <@~|@floating>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i625 
y: i999 
=== Succesors ===
=== Usages ===
v588 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i625 y: i999  <|@  <|@
f <@~|@floating>@ <|@
tid j942 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j944 j944 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v412 
=== Succesors ===
trueSuccessor: v585 
falseSuccessor: v587 
=== Usages ===
=== Predecessor ===
i999 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v412 #trueSuccessor: v585 #falseSuccessor: v587  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B23" 
    xhandlers
    flags 
    probability 4606753504549791646
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1000 
=== Usages ===
=== Predecessor ===
v588 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1000  <|@  <|@
f <@~|@floating>@ <|@
tid a405 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 382]
op: Uncompress
stamp: a# int[]
=== Inputs ===
value: a998 
=== Succesors ===
=== Usages ===
v1054 v1053 v1029 v1030 v1031 v1046 v1047 v1048 v1049 v1050 v1051 v1052 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a998  <|@  <|@
f <@~|@floating>@ <|@
tid j518 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i625 
=== Succesors ===
=== Usages ===
v1029 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i625  <|@  <|@
f <@~|@floating>@ <|@
tid v1029 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a405 
index: j518 
=== Succesors ===
=== Usages ===
i1000 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a405 index: j518  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1000 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1029 
lastLocationAccess: - 
=== Succesors ===
next: v365 
=== Usages ===
i324 
=== Predecessor ===
v585 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1029 lastLocationAccess: - #next: v365  <|@  <|@
f <@~|@floating>@ <|@
tid i315 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 2]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32 [-2147483648 - 2147483616] bits:x...x00000
=== Inputs ===
x: i613 
y: i109 
=== Succesors ===
=== Usages ===
i317 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i613 y: i109  <|@  <|@
f <@~|@floating>@ <|@
tid i113 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 6]
at sun.security.provider.SHA.implCompress0(SHA.java:170) [bci: 142]
rawvalue: 27
stableDimension: 0
stamp: i32 [27]
stampKind: i32
value: int[27|0x1b]
=== Inputs ===
=== Succesors ===
=== Usages ===
i316 i258 i367 i649 i685 i728 i762 i783 i811 i832 i851 i869 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i316 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 6]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32 [0 - 31] bits:0...0xxxxx
=== Inputs ===
x: i613 
y: i113 
=== Succesors ===
=== Usages ===
i317 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i613 y: i113  <|@  <|@
f <@~|@floating>@ <|@
tid i317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 7]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32
=== Inputs ===
x: i315 
y: i316 
=== Succesors ===
=== Usages ===
i320 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i315 y: i316  <|@  <|@
f <@~|@floating>@ <|@
tid i318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 373]
stamp: i32
=== Inputs ===
x: i616 
y: i618 
=== Succesors ===
=== Usages ===
i319 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i616 y: i618  <|@  <|@
f <@~|@floating>@ <|@
tid i319 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 376]
stamp: i32
=== Inputs ===
x: i318 
y: i620 
=== Succesors ===
=== Usages ===
i320 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i318 y: i620  <|@  <|@
f <@~|@floating>@ <|@
tid i320 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 377]
stamp: i32
=== Inputs ===
x: i317 
y: i319 
=== Succesors ===
=== Usages ===
i321 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i317 y: i319  <|@  <|@
f <@~|@floating>@ <|@
tid i321 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 380]
stamp: i32
=== Inputs ===
x: i320 
y: i622 
=== Succesors ===
=== Usages ===
i324 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i320 y: i622  <|@  <|@
f <@~|@floating>@ <|@
tid i324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 388]
stamp: i32
=== Inputs ===
x: i321 
y: i1000 
=== Succesors ===
=== Usages ===
i325 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i321 y: i1000  <|@  <|@
f <@~|@floating>@ <|@
tid i267 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 389]
rawvalue: -899497514
stableDimension: 0
stamp: i32 [-899497514]
stampKind: i32
value: int[-899497514|0xffffffffca62c1d6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i268 i325 i375 i656 i692 i735 i769 i790 i818 i839 i858 i876 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 391]
stamp: i32
=== Inputs ===
x: i324 
y: i267 
=== Succesors ===
=== Usages ===
i397 i366 i367 i338 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i324 y: i267  <|@  <|@
f <@~|@floating>@ <|@
tid i61 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:159) [bci: 80]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i329 i273 i660 i696 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i329 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 417]
stamp: i32
=== Inputs ===
x: i625 
y: i61 
=== Succesors ===
=== Usages ===
j519 v362 v422 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i625 y: i61  <|@  <|@
f <@~|@floating>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 361]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i329 
y: i11 
=== Succesors ===
=== Usages ===
v365 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i329 y: i11  <|@  <|@
f <@~|@floating>@ <|@
tid i127 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:174) [bci: 185]
rawvalue: 30
stableDimension: 0
stamp: i32 [30]
stampKind: i32
value: int[30|0x1e]
=== Inputs ===
=== Succesors ===
=== Usages ===
i326 i270 i376 i657 i693 i736 i770 i791 i819 i840 i859 i877 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 2]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32 [-2147483648 - 1073741824] bits:xx000000000000000000000000000000
=== Inputs ===
x: i616 
y: i127 
=== Succesors ===
=== Usages ===
i328 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i616 y: i127  <|@  <|@
f <@~|@floating>@ <|@
tid i78 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:164) [bci: 110]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i327 i771 i860 i271 i377 i399 i878 i658 i754 i694 i792 i737 i841 i820 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i327 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 6]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32 [0 - 1073741823] bits:00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i616 
y: i78 
=== Succesors ===
=== Usages ===
i328 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i616 y: i78  <|@  <|@
f <@~|@floating>@ <|@
tid i328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 7]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32
=== Inputs ===
x: i326 
y: i327 
=== Succesors ===
=== Usages ===
i395 i369 i340 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i326 y: i327  <|@  <|@
f <@*|@fixed>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 361]
profileData: INJECTED designatedSuccessorProbability: 0.95
stamp: void
=== Inputs ===
condition: v362 
=== Succesors ===
trueSuccessor: v364 
falseSuccessor: v363 
=== Usages ===
=== Predecessor ===
i1000 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v362 #trueSuccessor: v364 #falseSuccessor: v363  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B10" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 364]
stamp: void
=== Inputs ===
=== Succesors ===
next: v986 
=== Usages ===
=== Predecessor ===
v365 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v986  <|@  <|@
f <@~|@floating>@ <|@
tid i399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 417]
stamp: i32
=== Inputs ===
x: i625 
y: i78 
=== Succesors ===
=== Usages ===
i393 v572 j1019 v569 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i625 y: i78  <|@  <|@
f <@~|@floating>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i399 
y: i11 
=== Succesors ===
=== Usages ===
v986 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i399 y: i11  <|@  <|@
f <@*|@fixed>@ <|@
tid v986 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v572 
=== Succesors ===
trueSuccessor: v985 
falseSuccessor: v982 
=== Usages ===
=== Predecessor ===
v364 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v572 #trueSuccessor: v985 #falseSuccessor: v982  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v985 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: void
=== Inputs ===
=== Succesors ===
next: v994 
=== Usages ===
=== Predecessor ===
v986 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v994  <|@  <|@
f <@~|@floating>@ <|@
tid i575 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 78
stableDimension: 0
stamp: i32 [78]
stampKind: i32
value: int[78|0x4e]
=== Inputs ===
=== Succesors ===
=== Usages ===
i576 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i576 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i575 
y: i625 
=== Succesors ===
=== Usages ===
j564 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i575 y: i625  <|@  <|@
f <@~|@floating>@ <|@
tid j564 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i576 
=== Succesors ===
=== Usages ===
j937 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i576  <|@  <|@
f <@~|@floating>@ <|@
tid j1019 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i399 
=== Succesors ===
=== Usages ===
j937 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i399  <|@  <|@
f <@~|@floating>@ <|@
tid j937 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483648 - 6442450942]
=== Inputs ===
x: j564 
y: j1019 
=== Succesors ===
=== Usages ===
j938 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j564 y: j1019  <|@  <|@
f <@~|@floating>@ <|@
tid j565 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1]
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j938 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j938 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483649 - 6442450941]
=== Inputs ===
x: j937 
y: j565 
=== Succesors ===
=== Usages ===
v568 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j937 y: j565  <|@  <|@
f <@~|@floating>@ <|@
tid j560 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i999 
=== Succesors ===
=== Usages ===
v568 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i999  <|@  <|@
f <@~|@floating>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j938 
y: j560 
=== Succesors ===
=== Usages ===
v994 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j938 y: j560  <|@  <|@
f <@~|@floating>@ <|@
tid j952 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
rawvalue: 664
stableDimension: 0
stamp: i64 [664]
stampKind: i64
value: long[664|0x298]
=== Inputs ===
=== Succesors ===
=== Usages ===
j944 j944 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i951 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
rawvalue: -110619
stableDimension: 0
stamp: i32 [-110619]
stampKind: i32
value: int[-110619|0xfffffffffffe4fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i943 i943 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v994 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v568 
=== Succesors ===
trueSuccessor: v993 
falseSuccessor: v990 
=== Usages ===
=== Predecessor ===
v985 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v568 #trueSuccessor: v993 #falseSuccessor: v990  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v993 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: void
=== Inputs ===
=== Succesors ===
next: v992 
=== Usages ===
=== Predecessor ===
v994 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v992  <|@  <|@
f <@~|@floating>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i399 
y: i999 
=== Succesors ===
=== Usages ===
v992 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i399 y: i999  <|@  <|@
f <@*|@fixed>@ <|@
tid v992 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v569 
=== Succesors ===
trueSuccessor: v983 
falseSuccessor: v991 
=== Usages ===
=== Predecessor ===
v993 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v569 #trueSuccessor: v983 #falseSuccessor: v991  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v983 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: void
=== Inputs ===
=== Succesors ===
next: v981 
=== Usages ===
=== Predecessor ===
v992 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v981  <|@  <|@
f <@*|@fixed>@ <|@
tid v981 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v979 
=== Predecessor ===
v983 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v991 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: void
=== Inputs ===
=== Succesors ===
next: v995 
=== Usages ===
=== Predecessor ===
v992 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v995  <|@  <|@
f <@*|@fixed>@ <|@
tid v995 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v939 
=== Predecessor ===
v991 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v990 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: void
=== Inputs ===
=== Succesors ===
next: v950 
=== Usages ===
=== Predecessor ===
v994 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v950  <|@  <|@
f <@*|@fixed>@ <|@
tid v950 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v939 
=== Predecessor ===
v990 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B11" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v982 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: void
=== Inputs ===
=== Succesors ===
next: v980 
=== Usages ===
=== Predecessor ===
v986 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v980  <|@  <|@
f <@*|@fixed>@ <|@
tid v980 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v979 
=== Predecessor ===
v982 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B7" 
    successors "B12" "B22" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v979 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v980 v981 
=== Succesors ===
next: v596 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v980 v981 #next: v596  <|@  <|@
f <@~|@floating>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i329 
y: i999 
=== Succesors ===
=== Usages ===
v596 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i329 y: i999  <|@  <|@
f <@*|@fixed>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v422 
=== Succesors ===
trueSuccessor: v593 
falseSuccessor: v595 
=== Usages ===
=== Predecessor ===
v979 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v422 #trueSuccessor: v593 #falseSuccessor: v595  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1001 
=== Usages ===
=== Predecessor ===
v596 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1001  <|@  <|@
f <@~|@floating>@ <|@
tid j519 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i329 
=== Succesors ===
=== Usages ===
v1030 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i329  <|@  <|@
f <@~|@floating>@ <|@
tid v1030 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a405 
index: j519 
=== Succesors ===
=== Usages ===
i1001 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a405 index: j519  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1001 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1030 
lastLocationAccess: - 
=== Succesors ===
next: v225 
=== Usages ===
i374 
=== Predecessor ===
v593 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1030 lastLocationAccess: - #next: v225  <|@  <|@
f <@~|@floating>@ <|@
tid i366 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 2]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32 [-2147483648 - 2147483616] bits:x...x00000
=== Inputs ===
x: i325 
y: i109 
=== Succesors ===
=== Usages ===
i368 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i325 y: i109  <|@  <|@
f <@~|@floating>@ <|@
tid i367 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 6]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32 [0 - 31] bits:0...0xxxxx
=== Inputs ===
x: i325 
y: i113 
=== Succesors ===
=== Usages ===
i368 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i325 y: i113  <|@  <|@
f <@~|@floating>@ <|@
tid i368 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 7]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32
=== Inputs ===
x: i366 
y: i367 
=== Succesors ===
=== Usages ===
i371 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i366 y: i367  <|@  <|@
f <@~|@floating>@ <|@
tid i369 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 373]
stamp: i32
=== Inputs ===
x: i328 
y: i613 
=== Succesors ===
=== Usages ===
i370 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i328 y: i613  <|@  <|@
f <@~|@floating>@ <|@
tid i370 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 376]
stamp: i32
=== Inputs ===
x: i369 
y: i618 
=== Succesors ===
=== Usages ===
i371 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i369 y: i618  <|@  <|@
f <@~|@floating>@ <|@
tid i371 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 377]
stamp: i32
=== Inputs ===
x: i368 
y: i370 
=== Succesors ===
=== Usages ===
i372 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i368 y: i370  <|@  <|@
f <@~|@floating>@ <|@
tid i372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 380]
stamp: i32
=== Inputs ===
x: i371 
y: i620 
=== Succesors ===
=== Usages ===
i374 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i371 y: i620  <|@  <|@
f <@~|@floating>@ <|@
tid i374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 388]
stamp: i32
=== Inputs ===
x: i372 
y: i1001 
=== Succesors ===
=== Usages ===
i375 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i372 y: i1001  <|@  <|@
f <@~|@floating>@ <|@
tid i375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 391]
stamp: i32
=== Inputs ===
x: i374 
y: i267 
=== Succesors ===
=== Usages ===
i398 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i374 y: i267  <|@  <|@
f <@~|@floating>@ <|@
tid i719 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 3
stableDimension: 0
stamp: i32 [3]
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i720 i802 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i720 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i625 
y: i719 
=== Succesors ===
=== Usages ===
v717 i718 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i625 y: i719  <|@  <|@
f <@~|@floating>@ <|@
tid v717 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i720 
y: i11 
=== Succesors ===
=== Usages ===
i718 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i720 y: i11  <|@  <|@
f <@~|@floating>@ <|@
tid i718 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483648 - 80]
=== Inputs ===
condition: v717 
trueValue: i720 
falseValue: i11 
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v717 trueValue: i720 falseValue: i11  <|@  <|@
f <@~|@floating>@ <|@
tid i376 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 2]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32 [-2147483648 - 1073741824] bits:xx000000000000000000000000000000
=== Inputs ===
x: i613 
y: i127 
=== Succesors ===
=== Usages ===
i378 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i613 y: i127  <|@  <|@
f <@~|@floating>@ <|@
tid i377 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 6]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32 [0 - 1073741823] bits:00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i613 
y: i78 
=== Succesors ===
=== Usages ===
i378 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i613 y: i78  <|@  <|@
f <@~|@floating>@ <|@
tid i378 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 7]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32
=== Inputs ===
x: i376 
y: i377 
=== Succesors ===
=== Usages ===
i396 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i376 y: i377  <|@  <|@
f <@*|@fixed>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
i1001 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606406907175871839
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v226 
values: i375 i268 
=== Succesors ===
=== Usages ===
i397 i258 i667 i257 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v226 values: i375 i268  <|@  <|@
f <@~|@floating>@ <|@
tid i397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v226 
values: i325 i398 
=== Succesors ===
=== Usages ===
i260 i271 i270 i666 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v226 values: i325 i398  <|@  <|@
f <@~|@floating>@ <|@
tid i396 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v226 
values: i378 i272 
=== Succesors ===
=== Usages ===
i395 i260 i665 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v226 values: i378 i272  <|@  <|@
f <@~|@floating>@ <|@
tid i395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v226 
values: i328 i396 
=== Succesors ===
=== Usages ===
i394 i261 i664 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v226 values: i328 i396  <|@  <|@
f <@~|@floating>@ <|@
tid i394 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v226 
values: i618 i395 
=== Succesors ===
=== Usages ===
i663 i263 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v226 values: i618 i395  <|@  <|@
f <@~|@floating>@ <|@
tid i393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v226 
values: i399 i273 
=== Succesors ===
=== Usages ===
v244 i273 j520 i662 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v226 values: i399 i273  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 18.999999999999982
loopType: PRE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
osrLoop: true
peelings: 2
rotated: false
splits: 2
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v225 
=== Succesors ===
next: v255 
=== Usages ===
i398 i397 i396 i395 i394 i393 v274 v246 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v225 #next: v255  <|@  <|@
f <@~|@floating>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 361]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i393 
y: i718 
=== Succesors ===
=== Usages ===
v255 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i393 y: i718  <|@  <|@
f <@*|@fixed>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 361]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v244 
=== Succesors ===
trueSuccessor: v254 
falseSuccessor: v246 
=== Usages ===
=== Predecessor ===
v226 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v244 #trueSuccessor: v254 #falseSuccessor: v246  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576421901864634511
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 364]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1002 
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1002  <|@  <|@
f <@~|@floating>@ <|@
tid j520 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i393 
=== Succesors ===
=== Usages ===
v1031 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i393  <|@  <|@
f <@~|@floating>@ <|@
tid v1031 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a405 
index: j520 
=== Succesors ===
=== Usages ===
i1002 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a405 index: j520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1002 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1031 
lastLocationAccess: - 
=== Succesors ===
next: v274 
=== Usages ===
i266 
=== Predecessor ===
v254 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1031 lastLocationAccess: - #next: v274  <|@  <|@
f <@~|@floating>@ <|@
tid i257 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 2]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32 [-2147483648 - 2147483616] bits:x...x00000
=== Inputs ===
x: i398 
y: i109 
=== Succesors ===
=== Usages ===
i259 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i398 y: i109  <|@  <|@
f <@~|@floating>@ <|@
tid i258 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 6]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32 [0 - 31] bits:0...0xxxxx
=== Inputs ===
x: i398 
y: i113 
=== Succesors ===
=== Usages ===
i259 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i398 y: i113  <|@  <|@
f <@~|@floating>@ <|@
tid i259 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 7]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32
=== Inputs ===
x: i257 
y: i258 
=== Succesors ===
=== Usages ===
i262 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i257 y: i258  <|@  <|@
f <@~|@floating>@ <|@
tid i260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 373]
stamp: i32
=== Inputs ===
x: i396 
y: i397 
=== Succesors ===
=== Usages ===
i261 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i396 y: i397  <|@  <|@
f <@~|@floating>@ <|@
tid i261 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 376]
stamp: i32
=== Inputs ===
x: i260 
y: i395 
=== Succesors ===
=== Usages ===
i262 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i260 y: i395  <|@  <|@
f <@~|@floating>@ <|@
tid i262 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 377]
stamp: i32
=== Inputs ===
x: i259 
y: i261 
=== Succesors ===
=== Usages ===
i263 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i259 y: i261  <|@  <|@
f <@~|@floating>@ <|@
tid i263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 380]
stamp: i32
=== Inputs ===
x: i262 
y: i394 
=== Succesors ===
=== Usages ===
i266 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i262 y: i394  <|@  <|@
f <@~|@floating>@ <|@
tid i266 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 388]
stamp: i32
=== Inputs ===
x: i263 
y: i1002 
=== Succesors ===
=== Usages ===
i268 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i263 y: i1002  <|@  <|@
f <@~|@floating>@ <|@
tid i268 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 391]
stamp: i32
=== Inputs ===
x: i266 
y: i267 
=== Succesors ===
=== Usages ===
i398 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i266 y: i267  <|@  <|@
f <@~|@floating>@ <|@
tid i273 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 417]
stamp: i32
=== Inputs ===
x: i393 
y: i61 
=== Succesors ===
=== Usages ===
i393 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i393 y: i61  <|@  <|@
f <@~|@floating>@ <|@
tid i270 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 2]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32 [-2147483648 - 1073741824] bits:xx000000000000000000000000000000
=== Inputs ===
x: i397 
y: i127 
=== Succesors ===
=== Usages ===
i272 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i397 y: i127  <|@  <|@
f <@~|@floating>@ <|@
tid i271 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 6]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32 [0 - 1073741823] bits:00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i397 
y: i78 
=== Succesors ===
=== Usages ===
i272 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i397 y: i78  <|@  <|@
f <@~|@floating>@ <|@
tid i272 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 7]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32
=== Inputs ===
x: i270 
y: i271 
=== Succesors ===
=== Usages ===
i396 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i270 y: i271  <|@  <|@
f <@*|@fixed>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: void
=== Inputs ===
loopBegin: v226 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i1002 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v226  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606324590299565885
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v226 
=== Succesors ===
next: v675 
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v226 #next: v675  <|@  <|@
f <@~|@floating>@ <|@
tid i888 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i32 [8]
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i894 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i892 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 417]
rawvalue: 7
stableDimension: 0
stamp: i32 [7]
stampKind: i32
value: int[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i893 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i890 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 417]
rawvalue: 6
stableDimension: 0
stamp: i32 [6]
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i891 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i801 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i32 [4]
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i803 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i897 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 72
stableDimension: 0
stamp: i32 [72]
stampKind: i32
value: int[72|0x48]
=== Inputs ===
=== Succesors ===
=== Usages ===
v644 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v675 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v643 
=== Predecessor ===
v246 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" 
    successors "B17" "B18" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4612021107685376776
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i662 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v643 
values: i393 i894 
=== Succesors ===
=== Usages ===
v644 i660 j672 i698 i754 i802 i803 i889 i891 i893 i894 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v643 values: i393 i894  <|@  <|@
f <@~|@floating>@ <|@
tid i663 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v643 
values: i394 i842 
=== Succesors ===
=== Usages ===
i654 i699 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v643 values: i394 i842  <|@  <|@
f <@~|@floating>@ <|@
tid i664 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v643 
values: i395 i861 
=== Succesors ===
=== Usages ===
i652 i733 i700 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v643 values: i395 i861  <|@  <|@
f <@~|@floating>@ <|@
tid i665 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v643 
values: i396 i879 
=== Succesors ===
=== Usages ===
i651 i767 i701 i731 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v643 values: i396 i879  <|@  <|@
f <@~|@floating>@ <|@
tid i666 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v643 
values: i397 i858 
=== Succesors ===
=== Usages ===
i651 i657 i658 i702 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v643 values: i397 i858  <|@  <|@
f <@~|@floating>@ <|@
tid i667 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v643 
values: i398 i876 
=== Succesors ===
=== Usages ===
i648 i649 i737 i703 i730 i736 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v643 values: i398 i876  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 226
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 18.999999999999982
loopType: MAIN_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
osrLoop: true
peelings: 2
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 8
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v675 
=== Succesors ===
next: v647 
=== Usages ===
v645 v661 i662 i663 i664 i665 i666 i667 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v675 #next: v647  <|@  <|@
f <@~|@floating>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 361]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i662 
y: i897 
=== Succesors ===
=== Usages ===
v647 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i662 y: i897  <|@  <|@
f <@*|@fixed>@ <|@
tid v647 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 361]
profileData: INJECTED designatedSuccessorProbability: 0.5789473684210522
stamp: void
=== Inputs ===
condition: v644 
=== Succesors ===
trueSuccessor: v646 
falseSuccessor: v645 
=== Usages ===
=== Predecessor ===
v643 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v644 #trueSuccessor: v646 #falseSuccessor: v645  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4608281511566220913
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 364]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1003 
=== Usages ===
=== Predecessor ===
v647 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1003  <|@  <|@
f <@~|@floating>@ <|@
tid j672 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i662 
=== Succesors ===
=== Usages ===
v1046 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i662  <|@  <|@
f <@~|@floating>@ <|@
tid v1046 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a405 
index: j672 
=== Succesors ===
=== Usages ===
i1003 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a405 index: j672  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1003 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1046 
lastLocationAccess: - 
=== Succesors ===
next: i1004 
=== Usages ===
i655 
=== Predecessor ===
v646 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1046 lastLocationAccess: - #next: i1004  <|@  <|@
f <@~|@floating>@ <|@
tid i660 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 417]
stamp: i32
=== Inputs ===
x: i662 
y: i61 
=== Succesors ===
=== Usages ===
j745 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i662 y: i61  <|@  <|@
f <@~|@floating>@ <|@
tid j745 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i660 
=== Succesors ===
=== Usages ===
v1048 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i660  <|@  <|@
f <@~|@floating>@ <|@
tid v1048 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a405 
index: j745 
=== Succesors ===
=== Usages ===
i1004 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a405 index: j745  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1004 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1048 
lastLocationAccess: - 
=== Succesors ===
next: i1005 
=== Usages ===
i734 
=== Predecessor ===
i1003 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1048 lastLocationAccess: - #next: i1005  <|@  <|@
f <@~|@floating>@ <|@
tid i754 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 417]
stamp: i32
=== Inputs ===
x: i662 
y: i78 
=== Succesors ===
=== Usages ===
j779 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i662 y: i78  <|@  <|@
f <@~|@floating>@ <|@
tid j779 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i754 
=== Succesors ===
=== Usages ===
v1049 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i754  <|@  <|@
f <@~|@floating>@ <|@
tid v1049 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a405 
index: j779 
=== Succesors ===
=== Usages ===
i1005 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a405 index: j779  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1005 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1049 
lastLocationAccess: - 
=== Succesors ===
next: i1006 
=== Usages ===
i768 
=== Predecessor ===
i1004 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1049 lastLocationAccess: - #next: i1006  <|@  <|@
f <@~|@floating>@ <|@
tid i802 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 417]
stamp: i32
=== Inputs ===
x: i662 
y: i719 
=== Succesors ===
=== Usages ===
j798 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i662 y: i719  <|@  <|@
f <@~|@floating>@ <|@
tid j798 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i802 
=== Succesors ===
=== Usages ===
v1050 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i802  <|@  <|@
f <@~|@floating>@ <|@
tid v1050 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a405 
index: j798 
=== Succesors ===
=== Usages ===
i1006 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a405 index: j798  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1006 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1050 
lastLocationAccess: - 
=== Succesors ===
next: i1007 
=== Usages ===
i789 
=== Predecessor ===
i1005 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1050 lastLocationAccess: - #next: i1007  <|@  <|@
f <@~|@floating>@ <|@
tid i803 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 417]
stamp: i32
=== Inputs ===
x: i662 
y: i801 
=== Succesors ===
=== Usages ===
j828 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i662 y: i801  <|@  <|@
f <@~|@floating>@ <|@
tid j828 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i803 
=== Succesors ===
=== Usages ===
v1051 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i803  <|@  <|@
f <@~|@floating>@ <|@
tid v1051 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a405 
index: j828 
=== Succesors ===
=== Usages ===
i1007 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a405 index: j828  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1007 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1051 
lastLocationAccess: - 
=== Succesors ===
next: i1008 
=== Usages ===
i817 
=== Predecessor ===
i1006 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1051 lastLocationAccess: - #next: i1008  <|@  <|@
f <@~|@floating>@ <|@
tid i889 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 417]
stamp: i32
=== Inputs ===
x: i662 
y: i109 
=== Succesors ===
=== Usages ===
j847 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i662 y: i109  <|@  <|@
f <@~|@floating>@ <|@
tid j847 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i889 
=== Succesors ===
=== Usages ===
v1052 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i889  <|@  <|@
f <@~|@floating>@ <|@
tid v1052 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a405 
index: j847 
=== Succesors ===
=== Usages ===
i1008 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a405 index: j847  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1008 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1052 
lastLocationAccess: - 
=== Succesors ===
next: i1009 
=== Usages ===
i838 
=== Predecessor ===
i1007 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1052 lastLocationAccess: - #next: i1009  <|@  <|@
f <@~|@floating>@ <|@
tid i891 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 417]
stamp: i32
=== Inputs ===
x: i662 
y: i890 
=== Succesors ===
=== Usages ===
j866 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i662 y: i890  <|@  <|@
f <@~|@floating>@ <|@
tid j866 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i891 
=== Succesors ===
=== Usages ===
v1053 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i891  <|@  <|@
f <@~|@floating>@ <|@
tid v1053 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a405 
index: j866 
=== Succesors ===
=== Usages ===
i1009 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a405 index: j866  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1009 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1053 
lastLocationAccess: - 
=== Succesors ===
next: i1010 
=== Usages ===
i857 
=== Predecessor ===
i1008 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1053 lastLocationAccess: - #next: i1010  <|@  <|@
f <@~|@floating>@ <|@
tid i893 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 417]
stamp: i32
=== Inputs ===
x: i662 
y: i892 
=== Succesors ===
=== Usages ===
j884 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i662 y: i892  <|@  <|@
f <@~|@floating>@ <|@
tid j884 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i893 
=== Succesors ===
=== Usages ===
v1054 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i893  <|@  <|@
f <@~|@floating>@ <|@
tid v1054 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a405 
index: j884 
=== Succesors ===
=== Usages ===
i1010 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a405 index: j884  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1010 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1054 
lastLocationAccess: - 
=== Succesors ===
next: v661 
=== Usages ===
i875 
=== Predecessor ===
i1009 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1054 lastLocationAccess: - #next: v661  <|@  <|@
f <@~|@floating>@ <|@
tid i648 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 2]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32 [-2147483648 - 2147483616] bits:x...x00000
=== Inputs ===
x: i667 
y: i109 
=== Succesors ===
=== Usages ===
i650 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i667 y: i109  <|@  <|@
f <@~|@floating>@ <|@
tid i649 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 6]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32 [0 - 31] bits:0...0xxxxx
=== Inputs ===
x: i667 
y: i113 
=== Succesors ===
=== Usages ===
i650 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i667 y: i113  <|@  <|@
f <@~|@floating>@ <|@
tid i650 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 7]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32
=== Inputs ===
x: i648 
y: i649 
=== Succesors ===
=== Usages ===
i653 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i648 y: i649  <|@  <|@
f <@~|@floating>@ <|@
tid i651 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 373]
stamp: i32
=== Inputs ===
x: i665 
y: i666 
=== Succesors ===
=== Usages ===
i652 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i665 y: i666  <|@  <|@
f <@~|@floating>@ <|@
tid i652 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 376]
stamp: i32
=== Inputs ===
x: i651 
y: i664 
=== Succesors ===
=== Usages ===
i653 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i651 y: i664  <|@  <|@
f <@~|@floating>@ <|@
tid i653 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 377]
stamp: i32
=== Inputs ===
x: i650 
y: i652 
=== Succesors ===
=== Usages ===
i654 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i650 y: i652  <|@  <|@
f <@~|@floating>@ <|@
tid i654 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 380]
stamp: i32
=== Inputs ===
x: i653 
y: i663 
=== Succesors ===
=== Usages ===
i655 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i653 y: i663  <|@  <|@
f <@~|@floating>@ <|@
tid i655 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 388]
stamp: i32
=== Inputs ===
x: i654 
y: i1003 
=== Succesors ===
=== Usages ===
i656 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i654 y: i1003  <|@  <|@
f <@~|@floating>@ <|@
tid i656 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 391]
stamp: i32
=== Inputs ===
x: i655 
y: i267 
=== Succesors ===
=== Usages ===
i771 i727 i728 i764 i770 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i655 y: i267  <|@  <|@
f <@~|@floating>@ <|@
tid i727 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 2]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32 [-2147483648 - 2147483616] bits:x...x00000
=== Inputs ===
x: i656 
y: i109 
=== Succesors ===
=== Usages ===
i729 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i656 y: i109  <|@  <|@
f <@~|@floating>@ <|@
tid i728 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 6]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32 [0 - 31] bits:0...0xxxxx
=== Inputs ===
x: i656 
y: i113 
=== Succesors ===
=== Usages ===
i729 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i656 y: i113  <|@  <|@
f <@~|@floating>@ <|@
tid i729 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 7]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32
=== Inputs ===
x: i727 
y: i728 
=== Succesors ===
=== Usages ===
i732 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i727 y: i728  <|@  <|@
f <@~|@floating>@ <|@
tid i657 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 2]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32 [-2147483648 - 1073741824] bits:xx000000000000000000000000000000
=== Inputs ===
x: i666 
y: i127 
=== Succesors ===
=== Usages ===
i659 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i666 y: i127  <|@  <|@
f <@~|@floating>@ <|@
tid i658 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 6]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32 [0 - 1073741823] bits:00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i666 
y: i78 
=== Succesors ===
=== Usages ===
i659 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i666 y: i78  <|@  <|@
f <@~|@floating>@ <|@
tid i659 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 7]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32
=== Inputs ===
x: i657 
y: i658 
=== Succesors ===
=== Usages ===
i788 i730 i765 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i657 y: i658  <|@  <|@
f <@~|@floating>@ <|@
tid i730 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 373]
stamp: i32
=== Inputs ===
x: i659 
y: i667 
=== Succesors ===
=== Usages ===
i731 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i659 y: i667  <|@  <|@
f <@~|@floating>@ <|@
tid i731 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 376]
stamp: i32
=== Inputs ===
x: i665 
y: i730 
=== Succesors ===
=== Usages ===
i732 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i665 y: i730  <|@  <|@
f <@~|@floating>@ <|@
tid i732 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 377]
stamp: i32
=== Inputs ===
x: i729 
y: i731 
=== Succesors ===
=== Usages ===
i733 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i729 y: i731  <|@  <|@
f <@~|@floating>@ <|@
tid i733 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 380]
stamp: i32
=== Inputs ===
x: i664 
y: i732 
=== Succesors ===
=== Usages ===
i734 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i664 y: i732  <|@  <|@
f <@~|@floating>@ <|@
tid i734 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 388]
stamp: i32
=== Inputs ===
x: i733 
y: i1004 
=== Succesors ===
=== Usages ===
i735 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i733 y: i1004  <|@  <|@
f <@~|@floating>@ <|@
tid i735 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 391]
stamp: i32
=== Inputs ===
x: i734 
y: i267 
=== Succesors ===
=== Usages ===
i792 i761 i762 i785 i791 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i734 y: i267  <|@  <|@
f <@~|@floating>@ <|@
tid i761 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 2]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32 [-2147483648 - 2147483616] bits:x...x00000
=== Inputs ===
x: i735 
y: i109 
=== Succesors ===
=== Usages ===
i763 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i735 y: i109  <|@  <|@
f <@~|@floating>@ <|@
tid i762 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 6]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32 [0 - 31] bits:0...0xxxxx
=== Inputs ===
x: i735 
y: i113 
=== Succesors ===
=== Usages ===
i763 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i735 y: i113  <|@  <|@
f <@~|@floating>@ <|@
tid i763 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 7]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32
=== Inputs ===
x: i761 
y: i762 
=== Succesors ===
=== Usages ===
i766 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i761 y: i762  <|@  <|@
f <@~|@floating>@ <|@
tid i736 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 2]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32 [-2147483648 - 1073741824] bits:xx000000000000000000000000000000
=== Inputs ===
x: i667 
y: i127 
=== Succesors ===
=== Usages ===
i738 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i667 y: i127  <|@  <|@
f <@~|@floating>@ <|@
tid i737 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 6]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32 [0 - 1073741823] bits:00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i667 
y: i78 
=== Succesors ===
=== Usages ===
i738 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i667 y: i78  <|@  <|@
f <@~|@floating>@ <|@
tid i738 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 7]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32
=== Inputs ===
x: i736 
y: i737 
=== Succesors ===
=== Usages ===
i816 i764 i786 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i736 y: i737  <|@  <|@
f <@~|@floating>@ <|@
tid i764 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 373]
stamp: i32
=== Inputs ===
x: i656 
y: i738 
=== Succesors ===
=== Usages ===
i765 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i656 y: i738  <|@  <|@
f <@~|@floating>@ <|@
tid i765 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 376]
stamp: i32
=== Inputs ===
x: i659 
y: i764 
=== Succesors ===
=== Usages ===
i766 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i659 y: i764  <|@  <|@
f <@~|@floating>@ <|@
tid i766 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 377]
stamp: i32
=== Inputs ===
x: i763 
y: i765 
=== Succesors ===
=== Usages ===
i767 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i763 y: i765  <|@  <|@
f <@~|@floating>@ <|@
tid i767 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 380]
stamp: i32
=== Inputs ===
x: i665 
y: i766 
=== Succesors ===
=== Usages ===
i768 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i665 y: i766  <|@  <|@
f <@~|@floating>@ <|@
tid i768 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 388]
stamp: i32
=== Inputs ===
x: i767 
y: i1005 
=== Succesors ===
=== Usages ===
i769 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i767 y: i1005  <|@  <|@
f <@~|@floating>@ <|@
tid i769 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 391]
stamp: i32
=== Inputs ===
x: i768 
y: i267 
=== Succesors ===
=== Usages ===
i782 i783 i820 i813 i819 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i768 y: i267  <|@  <|@
f <@~|@floating>@ <|@
tid i819 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 2]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32 [-2147483648 - 1073741824] bits:xx000000000000000000000000000000
=== Inputs ===
x: i769 
y: i127 
=== Succesors ===
=== Usages ===
i821 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i769 y: i127  <|@  <|@
f <@~|@floating>@ <|@
tid i820 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 6]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32 [0 - 1073741823] bits:00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i769 
y: i78 
=== Succesors ===
=== Usages ===
i821 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i769 y: i78  <|@  <|@
f <@~|@floating>@ <|@
tid i821 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 7]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32
=== Inputs ===
x: i819 
y: i820 
=== Succesors ===
=== Usages ===
i834 i854 i874 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i819 y: i820  <|@  <|@
f <@~|@floating>@ <|@
tid i791 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 2]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32 [-2147483648 - 1073741824] bits:xx000000000000000000000000000000
=== Inputs ===
x: i735 
y: i127 
=== Succesors ===
=== Usages ===
i793 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i735 y: i127  <|@  <|@
f <@~|@floating>@ <|@
tid i792 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 6]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32 [0 - 1073741823] bits:00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i735 
y: i78 
=== Succesors ===
=== Usages ===
i793 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i735 y: i78  <|@  <|@
f <@~|@floating>@ <|@
tid i793 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 7]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32
=== Inputs ===
x: i791 
y: i792 
=== Succesors ===
=== Usages ===
i856 i813 i835 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i791 y: i792  <|@  <|@
f <@~|@floating>@ <|@
tid i770 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 2]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32 [-2147483648 - 1073741824] bits:xx000000000000000000000000000000
=== Inputs ===
x: i656 
y: i127 
=== Succesors ===
=== Usages ===
i772 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i656 y: i127  <|@  <|@
f <@~|@floating>@ <|@
tid i771 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 6]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32 [0 - 1073741823] bits:00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i656 
y: i78 
=== Succesors ===
=== Usages ===
i772 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i656 y: i78  <|@  <|@
f <@~|@floating>@ <|@
tid i772 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 7]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32
=== Inputs ===
x: i770 
y: i771 
=== Succesors ===
=== Usages ===
i785 i837 i814 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i770 y: i771  <|@  <|@
f <@~|@floating>@ <|@
tid i782 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 2]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32 [-2147483648 - 2147483616] bits:x...x00000
=== Inputs ===
x: i769 
y: i109 
=== Succesors ===
=== Usages ===
i784 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i769 y: i109  <|@  <|@
f <@~|@floating>@ <|@
tid i783 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 6]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32 [0 - 31] bits:0...0xxxxx
=== Inputs ===
x: i769 
y: i113 
=== Succesors ===
=== Usages ===
i784 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i769 y: i113  <|@  <|@
f <@~|@floating>@ <|@
tid i784 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 7]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32
=== Inputs ===
x: i782 
y: i783 
=== Succesors ===
=== Usages ===
i787 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i782 y: i783  <|@  <|@
f <@~|@floating>@ <|@
tid i785 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 373]
stamp: i32
=== Inputs ===
x: i735 
y: i772 
=== Succesors ===
=== Usages ===
i786 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i735 y: i772  <|@  <|@
f <@~|@floating>@ <|@
tid i786 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 376]
stamp: i32
=== Inputs ===
x: i738 
y: i785 
=== Succesors ===
=== Usages ===
i787 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i738 y: i785  <|@  <|@
f <@~|@floating>@ <|@
tid i787 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 377]
stamp: i32
=== Inputs ===
x: i784 
y: i786 
=== Succesors ===
=== Usages ===
i788 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i784 y: i786  <|@  <|@
f <@~|@floating>@ <|@
tid i788 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 380]
stamp: i32
=== Inputs ===
x: i659 
y: i787 
=== Succesors ===
=== Usages ===
i789 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i659 y: i787  <|@  <|@
f <@~|@floating>@ <|@
tid i789 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 388]
stamp: i32
=== Inputs ===
x: i788 
y: i1006 
=== Succesors ===
=== Usages ===
i790 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i788 y: i1006  <|@  <|@
f <@~|@floating>@ <|@
tid i790 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 391]
stamp: i32
=== Inputs ===
x: i789 
y: i267 
=== Succesors ===
=== Usages ===
i841 i810 i811 i834 i840 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i789 y: i267  <|@  <|@
f <@~|@floating>@ <|@
tid i810 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 2]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32 [-2147483648 - 2147483616] bits:x...x00000
=== Inputs ===
x: i790 
y: i109 
=== Succesors ===
=== Usages ===
i812 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i790 y: i109  <|@  <|@
f <@~|@floating>@ <|@
tid i811 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 6]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32 [0 - 31] bits:0...0xxxxx
=== Inputs ===
x: i790 
y: i113 
=== Succesors ===
=== Usages ===
i812 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i790 y: i113  <|@  <|@
f <@~|@floating>@ <|@
tid i812 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 7]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32
=== Inputs ===
x: i810 
y: i811 
=== Succesors ===
=== Usages ===
i815 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i810 y: i811  <|@  <|@
f <@~|@floating>@ <|@
tid i813 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 373]
stamp: i32
=== Inputs ===
x: i769 
y: i793 
=== Succesors ===
=== Usages ===
i814 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i769 y: i793  <|@  <|@
f <@~|@floating>@ <|@
tid i814 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 376]
stamp: i32
=== Inputs ===
x: i772 
y: i813 
=== Succesors ===
=== Usages ===
i815 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i772 y: i813  <|@  <|@
f <@~|@floating>@ <|@
tid i815 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 377]
stamp: i32
=== Inputs ===
x: i812 
y: i814 
=== Succesors ===
=== Usages ===
i816 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i812 y: i814  <|@  <|@
f <@~|@floating>@ <|@
tid i816 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 380]
stamp: i32
=== Inputs ===
x: i738 
y: i815 
=== Succesors ===
=== Usages ===
i817 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i738 y: i815  <|@  <|@
f <@~|@floating>@ <|@
tid i817 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 388]
stamp: i32
=== Inputs ===
x: i816 
y: i1007 
=== Succesors ===
=== Usages ===
i818 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i816 y: i1007  <|@  <|@
f <@~|@floating>@ <|@
tid i818 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 391]
stamp: i32
=== Inputs ===
x: i817 
y: i267 
=== Succesors ===
=== Usages ===
i831 i832 i853 i859 i860 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i817 y: i267  <|@  <|@
f <@~|@floating>@ <|@
tid i831 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 2]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32 [-2147483648 - 2147483616] bits:x...x00000
=== Inputs ===
x: i818 
y: i109 
=== Succesors ===
=== Usages ===
i833 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i818 y: i109  <|@  <|@
f <@~|@floating>@ <|@
tid i832 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 6]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32 [0 - 31] bits:0...0xxxxx
=== Inputs ===
x: i818 
y: i113 
=== Succesors ===
=== Usages ===
i833 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i818 y: i113  <|@  <|@
f <@~|@floating>@ <|@
tid i833 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 7]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32
=== Inputs ===
x: i831 
y: i832 
=== Succesors ===
=== Usages ===
i836 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i831 y: i832  <|@  <|@
f <@~|@floating>@ <|@
tid i834 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 373]
stamp: i32
=== Inputs ===
x: i790 
y: i821 
=== Succesors ===
=== Usages ===
i835 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i790 y: i821  <|@  <|@
f <@~|@floating>@ <|@
tid i835 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 376]
stamp: i32
=== Inputs ===
x: i793 
y: i834 
=== Succesors ===
=== Usages ===
i836 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i793 y: i834  <|@  <|@
f <@~|@floating>@ <|@
tid i836 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 377]
stamp: i32
=== Inputs ===
x: i833 
y: i835 
=== Succesors ===
=== Usages ===
i837 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i833 y: i835  <|@  <|@
f <@~|@floating>@ <|@
tid i837 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 380]
stamp: i32
=== Inputs ===
x: i772 
y: i836 
=== Succesors ===
=== Usages ===
i838 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i772 y: i836  <|@  <|@
f <@~|@floating>@ <|@
tid i838 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 388]
stamp: i32
=== Inputs ===
x: i837 
y: i1008 
=== Succesors ===
=== Usages ===
i839 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i837 y: i1008  <|@  <|@
f <@~|@floating>@ <|@
tid i839 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 391]
stamp: i32
=== Inputs ===
x: i838 
y: i267 
=== Succesors ===
=== Usages ===
i850 i851 i871 i877 i878 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i838 y: i267  <|@  <|@
f <@~|@floating>@ <|@
tid i850 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 2]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32 [-2147483648 - 2147483616] bits:x...x00000
=== Inputs ===
x: i839 
y: i109 
=== Succesors ===
=== Usages ===
i852 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i839 y: i109  <|@  <|@
f <@~|@floating>@ <|@
tid i851 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 6]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32 [0 - 31] bits:0...0xxxxx
=== Inputs ===
x: i839 
y: i113 
=== Succesors ===
=== Usages ===
i852 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i839 y: i113  <|@  <|@
f <@~|@floating>@ <|@
tid i852 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 7]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32
=== Inputs ===
x: i850 
y: i851 
=== Succesors ===
=== Usages ===
i855 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i850 y: i851  <|@  <|@
f <@~|@floating>@ <|@
tid i840 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 2]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32 [-2147483648 - 1073741824] bits:xx000000000000000000000000000000
=== Inputs ===
x: i790 
y: i127 
=== Succesors ===
=== Usages ===
i842 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i790 y: i127  <|@  <|@
f <@~|@floating>@ <|@
tid i841 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 6]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32 [0 - 1073741823] bits:00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i790 
y: i78 
=== Succesors ===
=== Usages ===
i842 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i790 y: i78  <|@  <|@
f <@~|@floating>@ <|@
tid i842 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 7]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32
=== Inputs ===
x: i840 
y: i841 
=== Succesors ===
=== Usages ===
i853 i872 i663 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i840 y: i841  <|@  <|@
f <@~|@floating>@ <|@
tid i853 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 373]
stamp: i32
=== Inputs ===
x: i818 
y: i842 
=== Succesors ===
=== Usages ===
i854 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i818 y: i842  <|@  <|@
f <@~|@floating>@ <|@
tid i854 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 376]
stamp: i32
=== Inputs ===
x: i821 
y: i853 
=== Succesors ===
=== Usages ===
i855 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i821 y: i853  <|@  <|@
f <@~|@floating>@ <|@
tid i855 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 377]
stamp: i32
=== Inputs ===
x: i852 
y: i854 
=== Succesors ===
=== Usages ===
i856 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i852 y: i854  <|@  <|@
f <@~|@floating>@ <|@
tid i856 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 380]
stamp: i32
=== Inputs ===
x: i793 
y: i855 
=== Succesors ===
=== Usages ===
i857 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i793 y: i855  <|@  <|@
f <@~|@floating>@ <|@
tid i857 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 388]
stamp: i32
=== Inputs ===
x: i856 
y: i1009 
=== Succesors ===
=== Usages ===
i858 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i856 y: i1009  <|@  <|@
f <@~|@floating>@ <|@
tid i858 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 391]
stamp: i32
=== Inputs ===
x: i857 
y: i267 
=== Succesors ===
=== Usages ===
i868 i869 i666 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i857 y: i267  <|@  <|@
f <@~|@floating>@ <|@
tid i868 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 2]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32 [-2147483648 - 2147483616] bits:x...x00000
=== Inputs ===
x: i858 
y: i109 
=== Succesors ===
=== Usages ===
i870 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i858 y: i109  <|@  <|@
f <@~|@floating>@ <|@
tid i869 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 6]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32 [0 - 31] bits:0...0xxxxx
=== Inputs ===
x: i858 
y: i113 
=== Succesors ===
=== Usages ===
i870 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i858 y: i113  <|@  <|@
f <@~|@floating>@ <|@
tid i870 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 7]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32
=== Inputs ===
x: i868 
y: i869 
=== Succesors ===
=== Usages ===
i873 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i868 y: i869  <|@  <|@
f <@~|@floating>@ <|@
tid i859 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 2]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32 [-2147483648 - 1073741824] bits:xx000000000000000000000000000000
=== Inputs ===
x: i818 
y: i127 
=== Succesors ===
=== Usages ===
i861 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i818 y: i127  <|@  <|@
f <@~|@floating>@ <|@
tid i860 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 6]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32 [0 - 1073741823] bits:00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i818 
y: i78 
=== Succesors ===
=== Usages ===
i861 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i818 y: i78  <|@  <|@
f <@~|@floating>@ <|@
tid i861 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 7]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32
=== Inputs ===
x: i859 
y: i860 
=== Succesors ===
=== Usages ===
i871 i664 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i859 y: i860  <|@  <|@
f <@~|@floating>@ <|@
tid i871 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 373]
stamp: i32
=== Inputs ===
x: i839 
y: i861 
=== Succesors ===
=== Usages ===
i872 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i839 y: i861  <|@  <|@
f <@~|@floating>@ <|@
tid i872 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 376]
stamp: i32
=== Inputs ===
x: i842 
y: i871 
=== Succesors ===
=== Usages ===
i873 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i842 y: i871  <|@  <|@
f <@~|@floating>@ <|@
tid i873 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 377]
stamp: i32
=== Inputs ===
x: i870 
y: i872 
=== Succesors ===
=== Usages ===
i874 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i870 y: i872  <|@  <|@
f <@~|@floating>@ <|@
tid i874 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 380]
stamp: i32
=== Inputs ===
x: i821 
y: i873 
=== Succesors ===
=== Usages ===
i875 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i821 y: i873  <|@  <|@
f <@~|@floating>@ <|@
tid i875 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 388]
stamp: i32
=== Inputs ===
x: i874 
y: i1010 
=== Succesors ===
=== Usages ===
i876 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i874 y: i1010  <|@  <|@
f <@~|@floating>@ <|@
tid i876 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 391]
stamp: i32
=== Inputs ===
x: i875 
y: i267 
=== Succesors ===
=== Usages ===
i667 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i875 y: i267  <|@  <|@
f <@~|@floating>@ <|@
tid i877 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 2]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32 [-2147483648 - 1073741824] bits:xx000000000000000000000000000000
=== Inputs ===
x: i839 
y: i127 
=== Succesors ===
=== Usages ===
i879 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i839 y: i127  <|@  <|@
f <@~|@floating>@ <|@
tid i878 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 6]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32 [0 - 1073741823] bits:00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i839 
y: i78 
=== Succesors ===
=== Usages ===
i879 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i839 y: i78  <|@  <|@
f <@~|@floating>@ <|@
tid i879 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 7]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32
=== Inputs ===
x: i877 
y: i878 
=== Succesors ===
=== Usages ===
i665 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i877 y: i878  <|@  <|@
f <@~|@floating>@ <|@
tid i894 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 417]
stamp: i32
=== Inputs ===
x: i662 
y: i888 
=== Succesors ===
=== Usages ===
i662 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i662 y: i888  <|@  <|@
f <@*|@fixed>@ <|@
tid v661 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: void
=== Inputs ===
loopBegin: v643 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i1010 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v643  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606324590299565886
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v645 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v643 
=== Succesors ===
next: v711 
=== Usages ===
=== Predecessor ===
v647 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v643 #next: v711  <|@  <|@
f <@*|@fixed>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v679 
=== Predecessor ===
v645 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606406907175871841
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i698 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v679 
values: i662 i696 
=== Succesors ===
=== Usages ===
v680 i696 j708 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v679 values: i662 i696  <|@  <|@
f <@~|@floating>@ <|@
tid i699 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v679 
values: i663 i700 
=== Succesors ===
=== Usages ===
i690 i342 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v679 values: i663 i700  <|@  <|@
f <@~|@floating>@ <|@
tid i700 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v679 
values: i664 i701 
=== Succesors ===
=== Usages ===
i688 i699 i341 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v679 values: i664 i701  <|@  <|@
f <@~|@floating>@ <|@
tid i701 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v679 
values: i665 i695 
=== Succesors ===
=== Usages ===
i687 i700 i340 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v679 values: i665 i695  <|@  <|@
f <@~|@floating>@ <|@
tid i702 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v679 
values: i666 i703 
=== Succesors ===
=== Usages ===
i687 i693 i694 i339 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v679 values: i666 i703  <|@  <|@
f <@~|@floating>@ <|@
tid i703 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v679 
values: i667 i692 
=== Succesors ===
=== Usages ===
i684 i685 i702 i338 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v679 values: i667 i692  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 226
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 18.999999999999982
loopType: POST_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
osrLoop: true
peelings: 2
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v711 
=== Succesors ===
next: v683 
=== Usages ===
v681 v697 i698 i699 i700 i701 i702 i703 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v711 #next: v683  <|@  <|@
f <@~|@floating>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 361]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i698 
y: i11 
=== Succesors ===
=== Usages ===
v683 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i698 y: i11  <|@  <|@
f <@*|@fixed>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 361]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v680 
=== Succesors ===
trueSuccessor: v682 
falseSuccessor: v681 
=== Usages ===
=== Predecessor ===
v679 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v680 #trueSuccessor: v682 #falseSuccessor: v681  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576421901864634512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v682 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 364]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1011 
=== Usages ===
=== Predecessor ===
v683 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1011  <|@  <|@
f <@~|@floating>@ <|@
tid j708 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i698 
=== Succesors ===
=== Usages ===
v1047 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i698  <|@  <|@
f <@~|@floating>@ <|@
tid v1047 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a405 
index: j708 
=== Succesors ===
=== Usages ===
i1011 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a405 index: j708  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1011 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1047 
lastLocationAccess: - 
=== Succesors ===
next: v697 
=== Usages ===
i691 
=== Predecessor ===
v682 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1047 lastLocationAccess: - #next: v697  <|@  <|@
f <@~|@floating>@ <|@
tid i684 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 2]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32 [-2147483648 - 2147483616] bits:x...x00000
=== Inputs ===
x: i703 
y: i109 
=== Succesors ===
=== Usages ===
i686 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i703 y: i109  <|@  <|@
f <@~|@floating>@ <|@
tid i685 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 6]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32 [0 - 31] bits:0...0xxxxx
=== Inputs ===
x: i703 
y: i113 
=== Succesors ===
=== Usages ===
i686 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i703 y: i113  <|@  <|@
f <@~|@floating>@ <|@
tid i686 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 7]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32
=== Inputs ===
x: i684 
y: i685 
=== Succesors ===
=== Usages ===
i689 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i684 y: i685  <|@  <|@
f <@~|@floating>@ <|@
tid i687 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 373]
stamp: i32
=== Inputs ===
x: i701 
y: i702 
=== Succesors ===
=== Usages ===
i688 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i701 y: i702  <|@  <|@
f <@~|@floating>@ <|@
tid i688 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 376]
stamp: i32
=== Inputs ===
x: i687 
y: i700 
=== Succesors ===
=== Usages ===
i689 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i687 y: i700  <|@  <|@
f <@~|@floating>@ <|@
tid i689 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 377]
stamp: i32
=== Inputs ===
x: i686 
y: i688 
=== Succesors ===
=== Usages ===
i690 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i686 y: i688  <|@  <|@
f <@~|@floating>@ <|@
tid i690 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 380]
stamp: i32
=== Inputs ===
x: i689 
y: i699 
=== Succesors ===
=== Usages ===
i691 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i689 y: i699  <|@  <|@
f <@~|@floating>@ <|@
tid i691 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 388]
stamp: i32
=== Inputs ===
x: i690 
y: i1011 
=== Succesors ===
=== Usages ===
i692 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i690 y: i1011  <|@  <|@
f <@~|@floating>@ <|@
tid i692 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 391]
stamp: i32
=== Inputs ===
x: i691 
y: i267 
=== Succesors ===
=== Usages ===
i703 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i691 y: i267  <|@  <|@
f <@~|@floating>@ <|@
tid i693 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 2]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32 [-2147483648 - 1073741824] bits:xx000000000000000000000000000000
=== Inputs ===
x: i702 
y: i127 
=== Succesors ===
=== Usages ===
i695 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i702 y: i127  <|@  <|@
f <@~|@floating>@ <|@
tid i694 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 6]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32 [0 - 1073741823] bits:00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i702 
y: i78 
=== Succesors ===
=== Usages ===
i695 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i702 y: i78  <|@  <|@
f <@~|@floating>@ <|@
tid i695 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 7]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32
=== Inputs ===
x: i693 
y: i694 
=== Succesors ===
=== Usages ===
i701 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i693 y: i694  <|@  <|@
f <@~|@floating>@ <|@
tid i696 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 417]
stamp: i32
=== Inputs ===
x: i698 
y: i61 
=== Succesors ===
=== Usages ===
i698 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i698 y: i61  <|@  <|@
f <@*|@fixed>@ <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: void
=== Inputs ===
loopBegin: v679 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i1011 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v679  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606324590299565887
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v679 
=== Succesors ===
next: v333 
=== Usages ===
=== Predecessor ===
v683 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v679 #next: v333  <|@  <|@
f <@*|@fixed>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v332 
=== Predecessor ===
v681 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: void
=== Inputs ===
=== Succesors ===
next: v953 
=== Usages ===
=== Predecessor ===
v596 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v953  <|@  <|@
f <@~|@floating>@ <|@
tid i954 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
rawvalue: -108315
stableDimension: 0
stamp: i32 [-108315]
stampKind: i32
value: int[-108315|0xfffffffffffe58e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i943 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v953 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v939 
=== Predecessor ===
v595 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B26" 
    xhandlers
    flags 
    probability 4587023449039406622
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
stamp: void
=== Inputs ===
=== Succesors ===
next: v400 
=== Usages ===
=== Predecessor ===
v365 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v400  <|@  <|@
f <@*|@fixed>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v332 
=== Predecessor ===
v363 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: void
=== Inputs ===
=== Succesors ===
next: v948 
=== Usages ===
=== Predecessor ===
v588 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v948  <|@  <|@
f <@~|@floating>@ <|@
tid i949 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
rawvalue: -105755
stableDimension: 0
stamp: i32 [-105755]
stampKind: i32
value: int[-105755|0xfffffffffffe62e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i943 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v948 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v939 
=== Predecessor ===
v587 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B26" 
    xhandlers
    flags 
    probability 4587023449039406624
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
stamp: void
=== Inputs ===
=== Succesors ===
next: v334 
=== Usages ===
=== Predecessor ===
v314 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v334  <|@  <|@
f <@*|@fixed>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v332 
=== Predecessor ===
v312 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B25" "B23" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i342 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v332 
values: i699 i622 i620 
=== Succesors ===
=== Usages ===
?336 i297 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v332 values: i699 i622 i620  <|@  <|@
f <@~|@floating>@ <|@
tid i338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v332 
values: i703 i613 i325 
=== Succesors ===
=== Usages ===
?336 i277 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v332 values: i703 i613 i325  <|@  <|@
f <@~|@floating>@ <|@
tid i339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v332 
values: i702 i616 i613 
=== Succesors ===
=== Usages ===
?336 i282 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v332 values: i702 i616 i613  <|@  <|@
f <@~|@floating>@ <|@
tid i340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v332 
values: i701 i618 i328 
=== Succesors ===
=== Usages ===
?336 i287 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v332 values: i701 i618 i328  <|@  <|@
f <@~|@floating>@ <|@
tid i341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v332 
values: i700 i620 i618 
=== Succesors ===
=== Usages ===
?336 i292 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v332 values: i700 i620 i618  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v333 v334 v400 
=== Succesors ===
next: a1012 
=== Usages ===
i342 i338 i339 i340 i341 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v333 v334 v400 #next: a1012  <|@  <|@
f <@~|@floating>@ <|@
tid v1032 <|@
d <@d|@=== Debug Properties ===
displacement: 52
stamp: void*
stride: S1
=== Inputs ===
base: a611 
index: - 
=== Succesors ===
=== Usages ===
a1012 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a611 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1012 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# int[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: SHA.state
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 424]
stamp: n# int[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1032 
lastLocationAccess: - 
=== Succesors ===
next: i1013 
=== Usages ===
v1038 v1033 v1034 v1035 v1036 v1037 
=== Predecessor ===
v332 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1032 lastLocationAccess: - #next: i1013  <|@  <|@
tid ?336 <|@
d <@d|@=== Debug Properties ===
bci: 423
bytecode: aload_0
code: ResolvedJavaMethodBytecode<SHA.implCompress0(byte[], int)>
localsSize: 10
locksSize: 0
sourceFile: SHA.java
sourceLine: 211
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a611 - - i338 i339 i340 i341 i342 
=== Succesors ===
=== Usages ===
v1056 i1013 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a611 - - i338 i339 i340 i341 i342  <|@  <|@
f <@~|@floating>@ <|@
tid v1033 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1012 
=== Succesors ===
=== Usages ===
i1013 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1012  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1013 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-113931|0xfffffffffffe42f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 429]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?336 
guard: - 
address: v1033 
lastLocationAccess: - 
=== Succesors ===
next: v604 
=== Usages ===
v557 
=== Predecessor ===
a1012 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?336 guard: - address: v1033 lastLocationAccess: - #next: v604  <|@  <|@
f <@~|@floating>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:215) [bci: 476]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1013 
y: i109 
=== Succesors ===
=== Usages ===
v604 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i1013 y: i109  <|@  <|@
f <@*|@fixed>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 432]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v557 
=== Succesors ===
trueSuccessor: v603 
falseSuccessor: v601 
=== Usages ===
=== Predecessor ===
i1013 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v557 #trueSuccessor: v603 #falseSuccessor: v601  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 432]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1056 
=== Usages ===
=== Predecessor ===
v604 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1056  <|@  <|@
f <@*|@fixed>@ <|@
tid v1056 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 523
mayConvertToGuard: true
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 429]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?336 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v603 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?336  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 432]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1014 
=== Usages ===
v461 v503 v475 v517 v489 
=== Predecessor ===
v604 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1014  <|@  <|@
f <@~|@floating>@ <|@
tid v1034 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1012 
=== Succesors ===
=== Usages ===
i1014 v461 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1012  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1014 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 429]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1034 
lastLocationAccess: - 
=== Succesors ===
next: v461 
=== Usages ===
i277 
=== Predecessor ===
v601 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1034 lastLocationAccess: - #next: v461  <|@  <|@
f <@~|@floating>@ <|@
tid i277 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 431]
stamp: i32
=== Inputs ===
x: i338 
y: i1014 
=== Succesors ===
=== Usages ===
v461 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i338 y: i1014  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 432]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v601 
address: v1034 
lastLocationAccess: - 
value: i277 
stateAfter: - 
=== Succesors ===
next: i1015 
=== Usages ===
=== Predecessor ===
i1014 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v601 address: v1034 lastLocationAccess: - value: i277 stateAfter: - #next: i1015  <|@  <|@
f <@~|@floating>@ <|@
tid v1035 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1012 
=== Succesors ===
=== Usages ===
i1015 v475 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1012  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1015 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:212) [bci: 439]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1035 
lastLocationAccess: - 
=== Succesors ===
next: v475 
=== Usages ===
i282 
=== Predecessor ===
v461 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1035 lastLocationAccess: - #next: v475  <|@  <|@
f <@~|@floating>@ <|@
tid i282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:212) [bci: 442]
stamp: i32
=== Inputs ===
x: i339 
y: i1015 
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i339 y: i1015  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:212) [bci: 443]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v601 
address: v1035 
lastLocationAccess: - 
value: i282 
stateAfter: - 
=== Succesors ===
next: i1016 
=== Usages ===
=== Predecessor ===
i1015 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v601 address: v1035 lastLocationAccess: - value: i282 stateAfter: - #next: i1016  <|@  <|@
f <@~|@floating>@ <|@
tid v1036 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1012 
=== Succesors ===
=== Usages ===
i1016 v489 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1012  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1016 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:213) [bci: 450]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1036 
lastLocationAccess: - 
=== Succesors ===
next: v489 
=== Usages ===
i287 
=== Predecessor ===
v475 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1036 lastLocationAccess: - #next: v489  <|@  <|@
f <@~|@floating>@ <|@
tid i287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:213) [bci: 453]
stamp: i32
=== Inputs ===
x: i340 
y: i1016 
=== Succesors ===
=== Usages ===
v489 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i340 y: i1016  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:213) [bci: 454]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v601 
address: v1036 
lastLocationAccess: - 
value: i287 
stateAfter: - 
=== Succesors ===
next: i1017 
=== Usages ===
=== Predecessor ===
i1016 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v601 address: v1036 lastLocationAccess: - value: i287 stateAfter: - #next: i1017  <|@  <|@
f <@~|@floating>@ <|@
tid v1037 <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1012 
=== Succesors ===
=== Usages ===
i1017 v503 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1012  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1017 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:214) [bci: 461]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1037 
lastLocationAccess: - 
=== Succesors ===
next: v503 
=== Usages ===
i292 
=== Predecessor ===
v489 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1037 lastLocationAccess: - #next: v503  <|@  <|@
f <@~|@floating>@ <|@
tid i292 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:214) [bci: 464]
stamp: i32
=== Inputs ===
x: i341 
y: i1017 
=== Succesors ===
=== Usages ===
v503 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i341 y: i1017  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:214) [bci: 465]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v601 
address: v1037 
lastLocationAccess: - 
value: i292 
stateAfter: - 
=== Succesors ===
next: i1018 
=== Usages ===
=== Predecessor ===
i1017 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v601 address: v1037 lastLocationAccess: - value: i292 stateAfter: - #next: i1018  <|@  <|@
f <@~|@floating>@ <|@
tid v1038 <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1012 
=== Succesors ===
=== Usages ===
i1018 v517 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1012  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1018 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:215) [bci: 472]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1038 
lastLocationAccess: - 
=== Succesors ===
next: v517 
=== Usages ===
i297 
=== Predecessor ===
v503 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1038 lastLocationAccess: - #next: v517  <|@  <|@
f <@~|@floating>@ <|@
tid i297 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:215) [bci: 475]
stamp: i32
=== Inputs ===
x: i342 
y: i1018 
=== Succesors ===
=== Usages ===
v517 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i342 y: i1018  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:215) [bci: 476]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v601 
address: v1038 
lastLocationAccess: - 
value: i297 
stateAfter: - 
=== Succesors ===
next: v300 
=== Usages ===
=== Predecessor ===
i1018 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v601 address: v1038 lastLocationAccess: - value: i297 stateAfter: - #next: v300  <|@  <|@
f <@*|@fixed>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:216) [bci: 477]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v517 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1021 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: void
=== Inputs ===
=== Succesors ===
next: v946 
=== Usages ===
=== Predecessor ===
v580 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v946  <|@  <|@
f <@~|@floating>@ <|@
tid j527 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:212) [bci: 439]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j944 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i947 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
rawvalue: -102716
stableDimension: 0
stamp: i32 [-102716]
stampKind: i32
value: int[-102716|0xfffffffffffe6ec4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i943 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v946 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v939 
=== Predecessor ===
v1021 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B24" "B9" "B22" "B8" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i943 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: i32 [-110619 - -102716] bits:1...1001xxxxxx11x0010x
valueDescription: i32
=== Inputs ===
merge: v939 
values: i947 i949 i951 i954 i951 
=== Succesors ===
=== Usages ===
v945 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v939 values: i947 i949 i951 i954 i951  <|@  <|@
f <@~|@floating>@ <|@
tid j944 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: i64 [0 - 664] bits:0...0x0x00xxx00
valueDescription: i64
=== Inputs ===
merge: v939 
values: j527 j942 j952 j942 j952 
=== Succesors ===
=== Usages ===
v945 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v939 values: j527 j942 j952 j942 j952  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v939 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v946 v948 v950 v953 v995 
=== Succesors ===
next: v945 
=== Usages ===
i943 j944 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v946 v948 v950 v953 v995 #next: v945  <|@  <|@
f <@*|@fixed>@ <|@
tid v945 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: void
=== Inputs ===
stateBefore: ?310 
actionAndReason: i943 
speculation: j944 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v939 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?310 actionAndReason: i943 speculation: j944  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@31f9b0c2 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOV input: [v0|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV input: [v0|QWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v0|QWORD + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v0|QWORD + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV input: [v0|QWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV input: [v0|QWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v0|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ st <@st|@sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: v1|QWORD[.] - - v2|DWORD v3|DWORD v4|DWORD v5|DWORD v6|DWORD v7|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B29 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lsun/security/provider/SHA;, resolved>;compressed} state [bci:357] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.9523809523809523 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B25 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B24" 
    xhandlers
    flags 
    probability 4606753504549791646
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV input: [v1|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: v1|QWORD[.] - - v2|DWORD v3|DWORD v4|DWORD v5|DWORD v6|DWORD v7|DWORD - 
>@ <|@ instruction v9|DWORD = MOV input: [v8|DWORD[_] * 8 + 12] size: DWORD state [bci:357] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B23" 
    xhandlers
    flags 
    probability 4606753504549791646
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3087af84 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = ROL x: v2|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = XOR (x: v3|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = XOR (x: v12|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = ADD (x: v11|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = ADD (x: v14|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = ADD (x: v15|DWORD, ~y: [v10|QWORD[.] + v7|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = LEA address: [v16|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = INC value: v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = ROL x: v3|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v18|DWORD trueDestinationProbability: 0.95 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B23 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B10" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = LEA address: [v7|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B10 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B11" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE input: int[78|0x4e] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = SUB (x: v21|DWORD, ~y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOVSXD value: v22|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = ADD (x: v23|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = DEC value: v25|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v27|QWORD, y: v26|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v20|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B7" 
    successors "B12" "B22" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v18|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = ROL x: v17|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = XOR (x: v19|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = XOR (x: v29|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = ADD (x: v28|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = ADD (x: v31|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = ADD (x: v32|DWORD, ~y: [v10|QWORD[.] + v18|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = LEA address: [v33|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = LEA address: [v7|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v35|DWORD y: 80 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = CMOVE (falseValue: int[80|0x50], ~trueValue: v35|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = ROL x: v2|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|DWORD, v17|DWORD, v37|DWORD, v19|DWORD, v4|DWORD, v20|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606406907175871839
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|DWORD, v39|DWORD, v40|DWORD, v41|DWORD, v42|DWORD, v43|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v43|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576421901864634511
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = ROL x: v38|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = XOR (x: v40|DWORD, y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = XOR (x: v45|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = ADD (x: v44|DWORD, y: v46|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = ADD (x: v47|DWORD, y: v42|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = ADD (x: v48|DWORD, ~y: [v10|QWORD[.] + v43|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = LEA address: [v49|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = INC value: v43|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = ROL x: v39|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v50|DWORD, v38|DWORD, v52|DWORD, v40|DWORD, v41|DWORD, v51|DWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606324590299565885
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v43|DWORD, v42|DWORD, v41|DWORD, v40|DWORD, v39|DWORD, v38|DWORD] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" 
    successors "B17" "B18" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4612021107685376776
    begin_IR
      LIR
      nr   -1  <|@ instruction [v53|DWORD, v54|DWORD, v55|DWORD, v56|DWORD, v57|DWORD, v58|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.5789473684210522 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 72 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4608281511566220913
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOV input: [v10|QWORD[.] + v53|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = INC value: v53|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOV input: [v10|QWORD[.] + v60|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = LEA address: [v53|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOV input: [v10|QWORD[.] + v62|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = LEA address: [v53|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOV input: [v10|QWORD[.] + v64|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = LEA address: [v53|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = MOV input: [v10|QWORD[.] + v66|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = LEA address: [v53|DWORD + 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOV input: [v10|QWORD[.] + v68|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = LEA address: [v53|DWORD + 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOV input: [v10|QWORD[.] + v70|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = LEA address: [v53|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = ROL x: v58|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = XOR (x: v56|DWORD, y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = XOR (x: v74|DWORD, y: v55|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = ADD (x: v73|DWORD, y: v75|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = ADD (x: v76|DWORD, y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = ADD (x: v77|DWORD, y: v59|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = LEA address: [v78|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = ROL x: v79|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = ROL x: v57|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = XOR (x: v81|DWORD, y: v58|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = XOR (x: v56|DWORD, y: v82|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = ADD (x: v80|DWORD, y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = ADD (x: v84|DWORD, y: v55|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = ADD (x: v85|DWORD, y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = LEA address: [v86|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = ROL x: v87|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = ROL x: v58|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = XOR (x: v79|DWORD, y: v89|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = XOR (x: v81|DWORD, y: v90|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = ADD (x: v88|DWORD, y: v91|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = ADD (x: v92|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = ADD (x: v93|DWORD, y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = LEA address: [v94|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = ROL x: v95|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = ROL x: v87|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = ROL x: v79|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = ROL x: v95|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = XOR (x: v87|DWORD, y: v98|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = XOR (x: v89|DWORD, y: v100|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = ADD (x: v99|DWORD, y: v101|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = ADD (x: v102|DWORD, y: v81|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = ADD (x: v103|DWORD, y: v65|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = LEA address: [v104|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = ROL x: v105|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = XOR (x: v95|DWORD, y: v97|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = XOR (x: v98|DWORD, y: v107|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = ADD (x: v106|DWORD, y: v108|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = ADD (x: v109|DWORD, y: v89|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = ADD (x: v110|DWORD, y: v67|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = LEA address: [v111|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = ROL x: v112|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = XOR (x: v105|DWORD, y: v96|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = XOR (x: v97|DWORD, y: v114|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = ADD (x: v113|DWORD, y: v115|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = ADD (x: v116|DWORD, y: v98|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = ADD (x: v117|DWORD, y: v69|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = LEA address: [v118|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = ROL x: v119|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = ROL x: v105|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v122|DWORD = XOR (x: v112|DWORD, y: v121|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = XOR (x: v96|DWORD, y: v122|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v124|DWORD = ADD (x: v120|DWORD, y: v123|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = ADD (x: v124|DWORD, y: v97|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = ADD (x: v125|DWORD, y: v71|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v127|DWORD = LEA address: [v126|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v128|DWORD = ROL x: v127|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = ROL x: v112|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v130|DWORD = XOR (x: v119|DWORD, y: v129|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = XOR (x: v121|DWORD, y: v130|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = ADD (x: v128|DWORD, y: v131|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = ADD (x: v132|DWORD, y: v96|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v134|DWORD = ADD (x: v133|DWORD, ~y: [v10|QWORD[.] + v72|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v135|DWORD = LEA address: [v134|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v136|DWORD = ROL x: v119|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v137|DWORD = LEA address: [v53|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v137|DWORD, v121|DWORD, v129|DWORD, v136|DWORD, v127|DWORD, v135|DWORD] destination: B17 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606324590299565886
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v53|DWORD, v54|DWORD, v55|DWORD, v56|DWORD, v57|DWORD, v58|DWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606406907175871841
    begin_IR
      LIR
      nr   -1  <|@ instruction [v138|DWORD, v139|DWORD, v140|DWORD, v141|DWORD, v142|DWORD, v143|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v138|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576421901864634512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v144|DWORD = ROL x: v143|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = XOR (x: v141|DWORD, y: v142|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = XOR (x: v145|DWORD, y: v140|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v147|DWORD = ADD (x: v144|DWORD, y: v146|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v148|DWORD = ADD (x: v147|DWORD, y: v139|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v149|DWORD = ADD (x: v148|DWORD, ~y: [v10|QWORD[.] + v138|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v150|DWORD = LEA address: [v149|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v151|DWORD = ROL x: v142|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v152|DWORD = INC value: v138|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v152|DWORD, v140|DWORD, v141|DWORD, v151|DWORD, v143|DWORD, v150|DWORD] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606324590299565887
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v139|DWORD, v143|DWORD, v142|DWORD, v141|DWORD, v140|DWORD] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B26" 
    xhandlers
    flags 
    probability 4587023449039406624
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v6|DWORD, v2|DWORD, v3|DWORD, v4|DWORD, v5|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B26" 
    xhandlers
    flags 
    probability 4587023449039406622
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v5|DWORD, v17|DWORD, v2|DWORD, v19|DWORD, v4|DWORD] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B25" "B23" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [v153|DWORD, v154|DWORD, v155|DWORD, v156|DWORD, v157|DWORD] = LABEL alignment: 0 numbPhis: 5 label: ? <|@ <|@
      nr   -1  <|@ instruction v158|DWORD[_] = MOV input: [v1|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
locals: v1|QWORD[.] - - v154|DWORD v155|DWORD v156|DWORD v157|DWORD v153|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v158|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 5 size: DWORD inlinedY: null state [bci:423] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 16], y: v154|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 20], y: v155|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 24], y: v156|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 28], y: v157|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 32], y: v153|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-105755|0xfffffffffffe62e5], long[0|0x0]] destination: B24 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-110619|0xfffffffffffe4fe5], long[664|0x298]] destination: B8 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -133915 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
locals: v1|QWORD[.] - - v154|DWORD v155|DWORD v156|DWORD v157|DWORD v153|DWORD - - 
>@ <|@ instruction DEOPT info [bci:423] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-108315|0xfffffffffffe58e5], long[0|0x0]] destination: B22 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-110619|0xfffffffffffe4fe5], long[664|0x298]] destination: B9 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-102716|0xfffffffffffe6ec4], long[20|0x14]] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B24" "B9" "B22" "B8" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v159|DWORD, v160|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v159|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v160|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: v1|QWORD[.] - - v2|DWORD v3|DWORD v4|DWORD v5|DWORD v6|DWORD v7|DWORD - 
>@ <|@ instruction DEOPT info [bci:357] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // W:int[]
     4: ifnonnull     15
     7: aload_0       
     8: bipush        80
    10: newarray      int
    12: putfield      #5          // W:int[]
    15: aload_1       
    16: iload_2       
    17: aload_0       
    18: getfield      #5          // W:int[]
    21: invokestatic  #19         // sun.security.provider.ByteArrayAccess.b2iBig64:(byte[], int, int[])void
    24: bipush        16
    26: istore_3      
    27: iload_3       
    28: bipush        79
    30: if_icmpgt     91
    33: aload_0       
    34: getfield      #5          // W:int[]
    37: iload_3       
    38: iconst_3      
    39: isub          
    40: iaload        
    41: aload_0       
    42: getfield      #5          // W:int[]
    45: iload_3       
    46: bipush        8
    48: isub          
    49: iaload        
    50: ixor          
    51: aload_0       
    52: getfield      #5          // W:int[]
    55: iload_3       
    56: bipush        14
    58: isub          
    59: iaload        
    60: ixor          
    61: aload_0       
    62: getfield      #5          // W:int[]
    65: iload_3       
    66: bipush        16
    68: isub          
    69: iaload        
    70: ixor          
    71: istore        4
    73: aload_0       
    74: getfield      #5          // W:int[]
    77: iload_3       
    78: iload         4
    80: iconst_1      
    81: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
    84: iastore       
    85: iinc          
    88: goto          27
    91: aload_0       
    92: getfield      #1          // state:int[]
    95: iconst_0      
    96: iaload        
    97: istore_3      
    98: aload_0       
    99: getfield      #1          // state:int[]
   102: iconst_1      
   103: iaload        
   104: istore        4
   106: aload_0       
   107: getfield      #1          // state:int[]
   110: iconst_2      
   111: iaload        
   112: istore        5
   114: aload_0       
   115: getfield      #1          // state:int[]
   118: iconst_3      
   119: iaload        
   120: istore        6
   122: aload_0       
   123: getfield      #1          // state:int[]
   126: iconst_4      
   127: iaload        
   128: istore        7
   130: iconst_0      
   131: istore        8
   133: iload         8
   135: bipush        20
   137: if_icmpge     204
   140: iload_3       
   141: iconst_5      
   142: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   145: iload         4
   147: iload         5
   149: iand          
   150: iload         4
   152: iconst_m1     
   153: ixor          
   154: iload         6
   156: iand          
   157: ior           
   158: iadd          
   159: iload         7
   161: iadd          
   162: aload_0       
   163: getfield      #5          // W:int[]
   166: iload         8
   168: iaload        
   169: iadd          
   170: ldc           #100        // 1518500249
   172: iadd          
   173: istore        9
   175: iload         6
   177: istore        7
   179: iload         5
   181: istore        6
   183: iload         4
   185: bipush        30
   187: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   190: istore        5
   192: iload_3       
   193: istore        4
   195: iload         9
   197: istore_3      
   198: iinc          
   201: goto          133
   204: bipush        20
   206: istore        8
   208: iload         8
   210: bipush        40
   212: if_icmpge     274
   215: iload_3       
   216: iconst_5      
   217: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   220: iload         4
   222: iload         5
   224: ixor          
   225: iload         6
   227: ixor          
   228: iadd          
   229: iload         7
   231: iadd          
   232: aload_0       
   233: getfield      #5          // W:int[]
   236: iload         8
   238: iaload        
   239: iadd          
   240: ldc           #101        // 1859775393
   242: iadd          
   243: istore        9
   245: iload         6
   247: istore        7
   249: iload         5
   251: istore        6
   253: iload         4
   255: bipush        30
   257: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   260: istore        5
   262: iload_3       
   263: istore        4
   265: iload         9
   267: istore_3      
   268: iinc          
   271: goto          208
   274: bipush        40
   276: istore        8
   278: iload         8
   280: bipush        60
   282: if_icmpge     353
   285: iload_3       
   286: iconst_5      
   287: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   290: iload         4
   292: iload         5
   294: iand          
   295: iload         4
   297: iload         6
   299: iand          
   300: ior           
   301: iload         5
   303: iload         6
   305: iand          
   306: ior           
   307: iadd          
   308: iload         7
   310: iadd          
   311: aload_0       
   312: getfield      #5          // W:int[]
   315: iload         8
   317: iaload        
   318: iadd          
   319: ldc           #102        // -1894007588
   321: iadd          
   322: istore        9
   324: iload         6
   326: istore        7
   328: iload         5
   330: istore        6
   332: iload         4
   334: bipush        30
   336: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   339: istore        5
   341: iload_3       
   342: istore        4
   344: iload         9
   346: istore_3      
   347: iinc          
   350: goto          278
   353: bipush        60
   355: istore        8
   357: iload         8
   359: bipush        80
   361: if_icmpge     423
   364: iload_3       
   365: iconst_5      
   366: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   369: iload         4
   371: iload         5
   373: ixor          
   374: iload         6
   376: ixor          
   377: iadd          
   378: iload         7
   380: iadd          
   381: aload_0       
   382: getfield      #5          // W:int[]
   385: iload         8
   387: iaload        
   388: iadd          
   389: ldc           #103        // -899497514
   391: iadd          
   392: istore        9
   394: iload         6
   396: istore        7
   398: iload         5
   400: istore        6
   402: iload         4
   404: bipush        30
   406: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   409: istore        5
   411: iload_3       
   412: istore        4
   414: iload         9
   416: istore_3      
   417: iinc          
   420: goto          357
   423: aload_0       
   424: getfield      #1          // state:int[]
   427: iconst_0      
   428: dup2          
   429: iaload        
   430: iload_3       
   431: iadd          
   432: iastore       
   433: aload_0       
   434: getfield      #1          // state:int[]
   437: iconst_1      
   438: dup2          
   439: iaload        
   440: iload         4
   442: iadd          
   443: iastore       
   444: aload_0       
   445: getfield      #1          // state:int[]
   448: iconst_2      
   449: dup2          
   450: iaload        
   451: iload         5
   453: iadd          
   454: iastore       
   455: aload_0       
   456: getfield      #1          // state:int[]
   459: iconst_3      
   460: dup2          
   461: iaload        
   462: iload         6
   464: iadd          
   465: iastore       
   466: aload_0       
   467: getfield      #1          // state:int[]
   470: iconst_4      
   471: dup2          
   472: iaload        
   473: iload         7
   475: iadd          
   476: iastore       
   477: return        
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a611 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a611  <|@  <|@
f <@~|@floating>@ <|@
tid j607 <|@
result v0|QWORD <|@
d <@d|@=== Debug Properties ===
index: 0
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: i64
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v608 v1039 v1040 v1041 v1042 v1043 v1044 v1045 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1039 <|@
result [v0|QWORD + 72] <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j607 
index: - 
=== Succesors ===
=== Usages ===
a611 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j607 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a611 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
accessStamp: a java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: a java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1039 
lastLocationAccess: - 
=== Succesors ===
next: i613 
=== Usages ===
v1055 ?310 ?336 v1027 v1032 
=== Predecessor ===
v606 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1039 lastLocationAccess: - #next: i613  <|@  <|@
f <@~|@floating>@ <|@
tid v1040 <|@
result [v0|QWORD + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
stamp: void*
stride: S1
=== Inputs ===
base: j607 
index: - 
=== Succesors ===
=== Usages ===
i613 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j607 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i613 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1040 
lastLocationAccess: - 
=== Succesors ===
next: i616 
=== Usages ===
?310 i315 i316 i338 i339 i369 i376 i377 
=== Predecessor ===
a611 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1040 lastLocationAccess: - #next: i616  <|@  <|@
f <@~|@floating>@ <|@
tid v1041 <|@
result [v0|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j607 
index: - 
=== Succesors ===
=== Usages ===
i616 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j607 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i616 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1041 
lastLocationAccess: - 
=== Succesors ===
next: i618 
=== Usages ===
?310 i318 i326 i327 i339 
=== Predecessor ===
i613 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1041 lastLocationAccess: - #next: i618  <|@  <|@
f <@~|@floating>@ <|@
tid v1042 <|@
result [v0|QWORD + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: j607 
index: - 
=== Succesors ===
=== Usages ===
i618 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j607 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i618 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1042 
lastLocationAccess: - 
=== Succesors ===
next: i620 
=== Usages ===
?310 i318 i340 i394 i370 i341 
=== Predecessor ===
i616 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1042 lastLocationAccess: - #next: i620  <|@  <|@
f <@~|@floating>@ <|@
tid v1043 <|@
result [v0|QWORD + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: j607 
index: - 
=== Succesors ===
=== Usages ===
i620 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j607 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i620 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1043 
lastLocationAccess: - 
=== Succesors ===
next: i622 
=== Usages ===
?310 i319 i341 i342 i372 
=== Predecessor ===
i618 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1043 lastLocationAccess: - #next: i622  <|@  <|@
f <@~|@floating>@ <|@
tid v1044 <|@
result [v0|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j607 
index: - 
=== Succesors ===
=== Usages ===
i622 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j607 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i622 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1044 
lastLocationAccess: - 
=== Succesors ===
next: i625 
=== Usages ===
?310 i321 i342 
=== Predecessor ===
i620 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1044 lastLocationAccess: - #next: i625  <|@  <|@
f <@~|@floating>@ <|@
tid v1045 <|@
result [v0|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j607 
index: - 
=== Succesors ===
=== Usages ===
i625 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j607 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i625 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1045 
lastLocationAccess: - 
=== Succesors ===
next: v608 
=== Usages ===
?310 v311 j518 i329 i399 v412 i576 i720 
=== Predecessor ===
i622 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1045 lastLocationAccess: - #next: v608  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{OSR_migration_end(long)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[], transition=LEAF_NO_VZERO}
descriptorName: OSR_migration_end
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j607 
=== Succesors ===
next: v997 
=== Usages ===
=== Predecessor ===
i625 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j607 #next: v997  <|@  <|@
tid ?310 <|@
d <@d|@=== Debug Properties ===
bci: 357
bytecode: iload
code: ResolvedJavaMethodBytecode<SHA.implCompress0(byte[], int)>
localsSize: 10
locksSize: 0
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
sourceFile: SHA.java
sourceLine: 202
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a611 - - i613 i616 i618 i620 i622 i625 
=== Succesors ===
=== Usages ===
v945 i999 v997 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a611 - - i613 i616 i618 i620 i622 i625  <|@  <|@
f <@~|@floating>@ <|@
tid v1055 <|@
result [v1|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a611 
index: - 
=== Succesors ===
=== Usages ===
v997 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a611 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v997 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-102716|0xfffffffffffe6ec4]
deoptSpeculation: long[20|0x14]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?310 
guard: - 
address: v1055 
lastLocationAccess: - 
=== Succesors ===
next: v580 
=== Usages ===
v1025 
=== Predecessor ===
v608 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?310 guard: - address: v1055 lastLocationAccess: - #next: v580  <|@  <|@
f <@~|@floating>@ <|@
tid v1024 <|@
result meta{HotSpotType<Lsun/security/provider/SHA;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
rawvalue: meta{HotSpotType<Lsun/security/provider/SHA;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Lsun/security/provider/SHA;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1025 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1025 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v997 
y: v1024 
=== Succesors ===
=== Usages ===
v580 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v997 y: v1024  <|@  <|@
f <@*|@fixed>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v1025 
=== Succesors ===
trueSuccessor: v577 
falseSuccessor: v1021 
=== Usages ===
=== Predecessor ===
v997 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1025 #trueSuccessor: v577 #falseSuccessor: v1021  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@31f9b0c2 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOV input: [v0|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV input: [v0|QWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v0|QWORD + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v0|QWORD + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV input: [v0|QWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV input: [v0|QWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v0|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ st <@st|@sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: v1|QWORD[.] - - v2|DWORD v3|DWORD v4|DWORD v5|DWORD v6|DWORD v7|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B29 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lsun/security/provider/SHA;, resolved>;compressed} state [bci:357] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: void
=== Inputs ===
=== Succesors ===
next: v314 
=== Usages ===
=== Predecessor ===
v580 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v314  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
result int[80|0x50] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:152) [bci: 8]
rawvalue: 80
stableDimension: 0
stamp: i32 [80]
stampKind: i32
value: int[80|0x50]
=== Inputs ===
=== Succesors ===
=== Usages ===
v311 i718 v362 v572 v717 v680 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 361]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i625 
y: i11 
=== Succesors ===
=== Usages ===
v314 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i625 y: i11  <|@  <|@
f <@~|@floating>@ <|@
tid i109 <|@
result int[5|0x5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:170) [bci: 141]
rawvalue: 5
stableDimension: 0
stamp: i32 [5]
stampKind: i32
value: int[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i315 i257 i366 v557 i648 i684 i727 i761 i782 i810 i831 i850 i868 i889 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 361]
profileData: PROFILED designatedSuccessorProbability: 0.9523809523809523
stamp: void
=== Inputs ===
condition: v311 
=== Succesors ===
trueSuccessor: v313 
falseSuccessor: v312 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v311 #trueSuccessor: v313 #falseSuccessor: v312  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.9523809523809523 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B25 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B24" 
    xhandlers
    flags 
    probability 4606753504549791646
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 364]
stamp: void
=== Inputs ===
=== Succesors ===
next: a998 
=== Usages ===
=== Predecessor ===
v314 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a998  <|@  <|@
f <@~|@floating>@ <|@
tid v1027 <|@
result [v1|QWORD[.] + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
stamp: void*
stride: S1
=== Inputs ===
base: a611 
index: - 
=== Succesors ===
=== Usages ===
a998 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a611 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a998 <|@
result v8|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# int[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: SHA.W
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 382]
stamp: n# int[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1027 
lastLocationAccess: - 
=== Succesors ===
next: i999 
=== Usages ===
a405 v1028 
=== Predecessor ===
v313 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1027 lastLocationAccess: - #next: i999  <|@  <|@
f <@~|@floating>@ <|@
tid v1028 <|@
result [v8|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a998 
=== Succesors ===
=== Usages ===
i999 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a998  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i999 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-104203|0xfffffffffffe68f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?310 
guard: - 
address: v1028 
lastLocationAccess: - 
=== Succesors ===
next: v588 
=== Usages ===
v412 v422 v569 j560 
=== Predecessor ===
a998 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?310 guard: - address: v1028 lastLocationAccess: - #next: v588  <|@  <|@
f <@~|@floating>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i625 
y: i999 
=== Succesors ===
=== Usages ===
v588 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i625 y: i999  <|@  <|@
f <@~|@floating>@ <|@
tid j942 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j944 j944 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v412 
=== Succesors ===
trueSuccessor: v585 
falseSuccessor: v587 
=== Usages ===
=== Predecessor ===
i999 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v412 #trueSuccessor: v585 #falseSuccessor: v587  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV input: [v1|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: v1|QWORD[.] - - v2|DWORD v3|DWORD v4|DWORD v5|DWORD v6|DWORD v7|DWORD - 
>@ <|@ instruction v9|DWORD = MOV input: [v8|DWORD[_] * 8 + 12] size: DWORD state [bci:357] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B23" 
    xhandlers
    flags 
    probability 4606753504549791646
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1000 
=== Usages ===
=== Predecessor ===
v588 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1000  <|@  <|@
f <@~|@floating>@ <|@
tid a405 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 382]
op: Uncompress
stamp: a# int[]
=== Inputs ===
value: a998 
=== Succesors ===
=== Usages ===
v1054 v1053 v1029 v1030 v1031 v1046 v1047 v1048 v1049 v1050 v1051 v1052 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a998  <|@  <|@
f <@~|@floating>@ <|@
tid j518 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i625 
=== Succesors ===
=== Usages ===
v1029 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i625  <|@  <|@
f <@~|@floating>@ <|@
tid v1029 <|@
result [v10|QWORD[.] + v7|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a405 
index: j518 
=== Succesors ===
=== Usages ===
i1000 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a405 index: j518  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1000 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1029 
lastLocationAccess: - 
=== Succesors ===
next: v365 
=== Usages ===
i324 
=== Predecessor ===
v585 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1029 lastLocationAccess: - #next: v365  <|@  <|@
f <@~|@floating>@ <|@
tid i315 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 2]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32 [-2147483648 - 2147483616] bits:x...x00000
=== Inputs ===
x: i613 
y: i109 
=== Succesors ===
=== Usages ===
i317 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i613 y: i109  <|@  <|@
f <@~|@floating>@ <|@
tid i113 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 6]
at sun.security.provider.SHA.implCompress0(SHA.java:170) [bci: 142]
rawvalue: 27
stableDimension: 0
stamp: i32 [27]
stampKind: i32
value: int[27|0x1b]
=== Inputs ===
=== Succesors ===
=== Usages ===
i316 i258 i367 i649 i685 i728 i762 i783 i811 i832 i851 i869 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i316 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 6]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32 [0 - 31] bits:0...0xxxxx
=== Inputs ===
x: i613 
y: i113 
=== Succesors ===
=== Usages ===
i317 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i613 y: i113  <|@  <|@
f <@~|@floating>@ <|@
tid i317 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 7]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32
=== Inputs ===
x: i315 
y: i316 
=== Succesors ===
=== Usages ===
i320 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i315 y: i316  <|@  <|@
f <@~|@floating>@ <|@
tid i318 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 373]
stamp: i32
=== Inputs ===
x: i616 
y: i618 
=== Succesors ===
=== Usages ===
i319 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i616 y: i618  <|@  <|@
f <@~|@floating>@ <|@
tid i319 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 376]
stamp: i32
=== Inputs ===
x: i318 
y: i620 
=== Succesors ===
=== Usages ===
i320 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i318 y: i620  <|@  <|@
f <@~|@floating>@ <|@
tid i320 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 377]
stamp: i32
=== Inputs ===
x: i317 
y: i319 
=== Succesors ===
=== Usages ===
i321 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i317 y: i319  <|@  <|@
f <@~|@floating>@ <|@
tid i321 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 380]
stamp: i32
=== Inputs ===
x: i320 
y: i622 
=== Succesors ===
=== Usages ===
i324 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i320 y: i622  <|@  <|@
f <@~|@floating>@ <|@
tid i324 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 388]
stamp: i32
=== Inputs ===
x: i321 
y: i1000 
=== Succesors ===
=== Usages ===
i325 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i321 y: i1000  <|@  <|@
f <@~|@floating>@ <|@
tid i267 <|@
result int[-899497514|0xffffffffca62c1d6] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 389]
rawvalue: -899497514
stableDimension: 0
stamp: i32 [-899497514]
stampKind: i32
value: int[-899497514|0xffffffffca62c1d6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i268 i325 i375 i656 i692 i735 i769 i790 i818 i839 i858 i876 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i325 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 391]
stamp: i32
=== Inputs ===
x: i324 
y: i267 
=== Succesors ===
=== Usages ===
i397 i366 i367 i338 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i324 y: i267  <|@  <|@
f <@~|@floating>@ <|@
tid i61 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:159) [bci: 80]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i329 i273 i660 i696 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i329 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 417]
stamp: i32
=== Inputs ===
x: i625 
y: i61 
=== Succesors ===
=== Usages ===
j519 v362 v422 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i625 y: i61  <|@  <|@
f <@~|@floating>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 361]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i329 
y: i11 
=== Succesors ===
=== Usages ===
v365 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i329 y: i11  <|@  <|@
f <@~|@floating>@ <|@
tid i127 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:174) [bci: 185]
rawvalue: 30
stableDimension: 0
stamp: i32 [30]
stampKind: i32
value: int[30|0x1e]
=== Inputs ===
=== Succesors ===
=== Usages ===
i326 i270 i376 i657 i693 i736 i770 i791 i819 i840 i859 i877 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 2]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32 [-2147483648 - 1073741824] bits:xx000000000000000000000000000000
=== Inputs ===
x: i616 
y: i127 
=== Succesors ===
=== Usages ===
i328 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i616 y: i127  <|@  <|@
f <@~|@floating>@ <|@
tid i78 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:164) [bci: 110]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i327 i771 i860 i271 i377 i399 i878 i658 i754 i694 i792 i737 i841 i820 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i327 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 6]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32 [0 - 1073741823] bits:00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i616 
y: i78 
=== Succesors ===
=== Usages ===
i328 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i616 y: i78  <|@  <|@
f <@~|@floating>@ <|@
tid i328 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 7]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32
=== Inputs ===
x: i326 
y: i327 
=== Succesors ===
=== Usages ===
i395 i369 i340 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i326 y: i327  <|@  <|@
f <@*|@fixed>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 361]
profileData: INJECTED designatedSuccessorProbability: 0.95
stamp: void
=== Inputs ===
condition: v362 
=== Succesors ===
trueSuccessor: v364 
falseSuccessor: v363 
=== Usages ===
=== Predecessor ===
i1000 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v362 #trueSuccessor: v364 #falseSuccessor: v363  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3087af84 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = ROL x: v2|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = XOR (x: v3|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = XOR (x: v12|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = ADD (x: v11|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = ADD (x: v14|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = ADD (x: v15|DWORD, ~y: [v10|QWORD[.] + v7|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = LEA address: [v16|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = INC value: v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = ROL x: v3|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v18|DWORD trueDestinationProbability: 0.95 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B23 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B10" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 364]
stamp: void
=== Inputs ===
=== Succesors ===
next: v986 
=== Usages ===
=== Predecessor ===
v365 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v986  <|@  <|@
f <@~|@floating>@ <|@
tid i399 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 417]
stamp: i32
=== Inputs ===
x: i625 
y: i78 
=== Succesors ===
=== Usages ===
i393 v572 j1019 v569 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i625 y: i78  <|@  <|@
f <@~|@floating>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i399 
y: i11 
=== Succesors ===
=== Usages ===
v986 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i399 y: i11  <|@  <|@
f <@*|@fixed>@ <|@
tid v986 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v572 
=== Succesors ===
trueSuccessor: v985 
falseSuccessor: v982 
=== Usages ===
=== Predecessor ===
v364 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v572 #trueSuccessor: v985 #falseSuccessor: v982  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = LEA address: [v7|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B10 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v985 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: void
=== Inputs ===
=== Succesors ===
next: v994 
=== Usages ===
=== Predecessor ===
v986 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v994  <|@  <|@
f <@~|@floating>@ <|@
tid i575 <|@
result int[78|0x4e] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 78
stableDimension: 0
stamp: i32 [78]
stampKind: i32
value: int[78|0x4e]
=== Inputs ===
=== Succesors ===
=== Usages ===
i576 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i576 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i575 
y: i625 
=== Succesors ===
=== Usages ===
j564 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i575 y: i625  <|@  <|@
f <@~|@floating>@ <|@
tid j564 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i576 
=== Succesors ===
=== Usages ===
j937 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i576  <|@  <|@
f <@~|@floating>@ <|@
tid j1019 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i399 
=== Succesors ===
=== Usages ===
j937 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i399  <|@  <|@
f <@~|@floating>@ <|@
tid j937 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483648 - 6442450942]
=== Inputs ===
x: j564 
y: j1019 
=== Succesors ===
=== Usages ===
j938 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j564 y: j1019  <|@  <|@
f <@~|@floating>@ <|@
tid j565 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1]
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j938 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j938 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483649 - 6442450941]
=== Inputs ===
x: j937 
y: j565 
=== Succesors ===
=== Usages ===
v568 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j937 y: j565  <|@  <|@
f <@~|@floating>@ <|@
tid j560 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i999 
=== Succesors ===
=== Usages ===
v568 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i999  <|@  <|@
f <@~|@floating>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j938 
y: j560 
=== Succesors ===
=== Usages ===
v994 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j938 y: j560  <|@  <|@
f <@~|@floating>@ <|@
tid j952 <|@
result long[664|0x298] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
rawvalue: 664
stableDimension: 0
stamp: i64 [664]
stampKind: i64
value: long[664|0x298]
=== Inputs ===
=== Succesors ===
=== Usages ===
j944 j944 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i951 <|@
result int[-110619|0xfffffffffffe4fe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
rawvalue: -110619
stableDimension: 0
stamp: i32 [-110619]
stampKind: i32
value: int[-110619|0xfffffffffffe4fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i943 i943 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v994 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v568 
=== Succesors ===
trueSuccessor: v993 
falseSuccessor: v990 
=== Usages ===
=== Predecessor ===
v985 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v568 #trueSuccessor: v993 #falseSuccessor: v990  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE input: int[78|0x4e] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = SUB (x: v21|DWORD, ~y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOVSXD value: v22|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = ADD (x: v23|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = DEC value: v25|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v27|QWORD, y: v26|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v993 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: void
=== Inputs ===
=== Succesors ===
next: v992 
=== Usages ===
=== Predecessor ===
v994 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v992  <|@  <|@
f <@~|@floating>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i399 
y: i999 
=== Succesors ===
=== Usages ===
v992 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i399 y: i999  <|@  <|@
f <@*|@fixed>@ <|@
tid v992 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v569 
=== Succesors ===
trueSuccessor: v983 
falseSuccessor: v991 
=== Usages ===
=== Predecessor ===
v993 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v569 #trueSuccessor: v983 #falseSuccessor: v991  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v20|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v983 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: void
=== Inputs ===
=== Succesors ===
next: v981 
=== Usages ===
=== Predecessor ===
v992 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v981  <|@  <|@
f <@*|@fixed>@ <|@
tid v981 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v979 
=== Predecessor ===
v983 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v991 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: void
=== Inputs ===
=== Succesors ===
next: v995 
=== Usages ===
=== Predecessor ===
v992 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v995  <|@  <|@
f <@*|@fixed>@ <|@
tid v995 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v939 
=== Predecessor ===
v991 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-110619|0xfffffffffffe4fe5], long[664|0x298]] destination: B8 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v990 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: void
=== Inputs ===
=== Succesors ===
next: v950 
=== Usages ===
=== Predecessor ===
v994 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v950  <|@  <|@
f <@*|@fixed>@ <|@
tid v950 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v939 
=== Predecessor ===
v990 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-110619|0xfffffffffffe4fe5], long[664|0x298]] destination: B9 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B11" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v982 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: void
=== Inputs ===
=== Succesors ===
next: v980 
=== Usages ===
=== Predecessor ===
v986 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v980  <|@  <|@
f <@*|@fixed>@ <|@
tid v980 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v979 
=== Predecessor ===
v982 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B7" 
    successors "B12" "B22" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v979 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v980 v981 
=== Succesors ===
next: v596 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v980 v981 #next: v596  <|@  <|@
f <@~|@floating>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i329 
y: i999 
=== Succesors ===
=== Usages ===
v596 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i329 y: i999  <|@  <|@
f <@*|@fixed>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v422 
=== Succesors ===
trueSuccessor: v593 
falseSuccessor: v595 
=== Usages ===
=== Predecessor ===
v979 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v422 #trueSuccessor: v593 #falseSuccessor: v595  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v18|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1001 
=== Usages ===
=== Predecessor ===
v596 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1001  <|@  <|@
f <@~|@floating>@ <|@
tid j519 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i329 
=== Succesors ===
=== Usages ===
v1030 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i329  <|@  <|@
f <@~|@floating>@ <|@
tid v1030 <|@
result [v10|QWORD[.] + v18|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a405 
index: j519 
=== Succesors ===
=== Usages ===
i1001 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a405 index: j519  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1001 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1030 
lastLocationAccess: - 
=== Succesors ===
next: v225 
=== Usages ===
i374 
=== Predecessor ===
v593 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1030 lastLocationAccess: - #next: v225  <|@  <|@
f <@~|@floating>@ <|@
tid i366 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 2]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32 [-2147483648 - 2147483616] bits:x...x00000
=== Inputs ===
x: i325 
y: i109 
=== Succesors ===
=== Usages ===
i368 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i325 y: i109  <|@  <|@
f <@~|@floating>@ <|@
tid i367 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 6]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32 [0 - 31] bits:0...0xxxxx
=== Inputs ===
x: i325 
y: i113 
=== Succesors ===
=== Usages ===
i368 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i325 y: i113  <|@  <|@
f <@~|@floating>@ <|@
tid i368 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 7]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32
=== Inputs ===
x: i366 
y: i367 
=== Succesors ===
=== Usages ===
i371 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i366 y: i367  <|@  <|@
f <@~|@floating>@ <|@
tid i369 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 373]
stamp: i32
=== Inputs ===
x: i328 
y: i613 
=== Succesors ===
=== Usages ===
i370 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i328 y: i613  <|@  <|@
f <@~|@floating>@ <|@
tid i370 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 376]
stamp: i32
=== Inputs ===
x: i369 
y: i618 
=== Succesors ===
=== Usages ===
i371 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i369 y: i618  <|@  <|@
f <@~|@floating>@ <|@
tid i371 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 377]
stamp: i32
=== Inputs ===
x: i368 
y: i370 
=== Succesors ===
=== Usages ===
i372 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i368 y: i370  <|@  <|@
f <@~|@floating>@ <|@
tid i372 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 380]
stamp: i32
=== Inputs ===
x: i371 
y: i620 
=== Succesors ===
=== Usages ===
i374 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i371 y: i620  <|@  <|@
f <@~|@floating>@ <|@
tid i374 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 388]
stamp: i32
=== Inputs ===
x: i372 
y: i1001 
=== Succesors ===
=== Usages ===
i375 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i372 y: i1001  <|@  <|@
f <@~|@floating>@ <|@
tid i375 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 391]
stamp: i32
=== Inputs ===
x: i374 
y: i267 
=== Succesors ===
=== Usages ===
i398 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i374 y: i267  <|@  <|@
f <@~|@floating>@ <|@
tid i719 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 3
stableDimension: 0
stamp: i32 [3]
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i720 i802 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i720 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i625 
y: i719 
=== Succesors ===
=== Usages ===
v717 i718 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i625 y: i719  <|@  <|@
f <@~|@floating>@ <|@
tid v717 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i720 
y: i11 
=== Succesors ===
=== Usages ===
i718 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i720 y: i11  <|@  <|@
f <@~|@floating>@ <|@
tid i718 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483648 - 80]
=== Inputs ===
condition: v717 
trueValue: i720 
falseValue: i11 
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v717 trueValue: i720 falseValue: i11  <|@  <|@
f <@~|@floating>@ <|@
tid i376 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 2]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32 [-2147483648 - 1073741824] bits:xx000000000000000000000000000000
=== Inputs ===
x: i613 
y: i127 
=== Succesors ===
=== Usages ===
i378 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i613 y: i127  <|@  <|@
f <@~|@floating>@ <|@
tid i377 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 6]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32 [0 - 1073741823] bits:00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i613 
y: i78 
=== Succesors ===
=== Usages ===
i378 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i613 y: i78  <|@  <|@
f <@~|@floating>@ <|@
tid i378 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 7]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32
=== Inputs ===
x: i376 
y: i377 
=== Succesors ===
=== Usages ===
i396 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i376 y: i377  <|@  <|@
f <@*|@fixed>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
i1001 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = ROL x: v17|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = XOR (x: v19|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = XOR (x: v29|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = ADD (x: v28|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = ADD (x: v31|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = ADD (x: v32|DWORD, ~y: [v10|QWORD[.] + v18|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = LEA address: [v33|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = LEA address: [v7|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v35|DWORD y: 80 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = CMOVE (falseValue: int[80|0x50], ~trueValue: v35|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = ROL x: v2|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|DWORD, v17|DWORD, v37|DWORD, v19|DWORD, v4|DWORD, v20|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606406907175871839
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i398 <|@
result v38|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v226 
values: i375 i268 
=== Succesors ===
=== Usages ===
i397 i258 i667 i257 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v226 values: i375 i268  <|@  <|@
f <@~|@floating>@ <|@
tid i397 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v226 
values: i325 i398 
=== Succesors ===
=== Usages ===
i260 i271 i270 i666 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v226 values: i325 i398  <|@  <|@
f <@~|@floating>@ <|@
tid i396 <|@
result v40|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v226 
values: i378 i272 
=== Succesors ===
=== Usages ===
i395 i260 i665 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v226 values: i378 i272  <|@  <|@
f <@~|@floating>@ <|@
tid i395 <|@
result v41|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v226 
values: i328 i396 
=== Succesors ===
=== Usages ===
i394 i261 i664 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v226 values: i328 i396  <|@  <|@
f <@~|@floating>@ <|@
tid i394 <|@
result v42|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v226 
values: i618 i395 
=== Succesors ===
=== Usages ===
i663 i263 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v226 values: i618 i395  <|@  <|@
f <@~|@floating>@ <|@
tid i393 <|@
result v43|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v226 
values: i399 i273 
=== Succesors ===
=== Usages ===
v244 i273 j520 i662 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v226 values: i399 i273  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 18.999999999999982
loopType: PRE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
osrLoop: true
peelings: 2
rotated: false
splits: 2
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v225 
=== Succesors ===
next: v255 
=== Usages ===
i398 i397 i396 i395 i394 i393 v274 v246 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v225 #next: v255  <|@  <|@
f <@~|@floating>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 361]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i393 
y: i718 
=== Succesors ===
=== Usages ===
v255 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i393 y: i718  <|@  <|@
f <@*|@fixed>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 361]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v244 
=== Succesors ===
trueSuccessor: v254 
falseSuccessor: v246 
=== Usages ===
=== Predecessor ===
v226 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v244 #trueSuccessor: v254 #falseSuccessor: v246  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|DWORD, v39|DWORD, v40|DWORD, v41|DWORD, v42|DWORD, v43|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v43|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576421901864634511
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 364]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1002 
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1002  <|@  <|@
f <@~|@floating>@ <|@
tid j520 <|@
result v43|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i393 
=== Succesors ===
=== Usages ===
v1031 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i393  <|@  <|@
f <@~|@floating>@ <|@
tid v1031 <|@
result [v10|QWORD[.] + v43|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a405 
index: j520 
=== Succesors ===
=== Usages ===
i1002 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a405 index: j520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1002 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1031 
lastLocationAccess: - 
=== Succesors ===
next: v274 
=== Usages ===
i266 
=== Predecessor ===
v254 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1031 lastLocationAccess: - #next: v274  <|@  <|@
f <@~|@floating>@ <|@
tid i257 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 2]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32 [-2147483648 - 2147483616] bits:x...x00000
=== Inputs ===
x: i398 
y: i109 
=== Succesors ===
=== Usages ===
i259 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i398 y: i109  <|@  <|@
f <@~|@floating>@ <|@
tid i258 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 6]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32 [0 - 31] bits:0...0xxxxx
=== Inputs ===
x: i398 
y: i113 
=== Succesors ===
=== Usages ===
i259 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i398 y: i113  <|@  <|@
f <@~|@floating>@ <|@
tid i259 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 7]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32
=== Inputs ===
x: i257 
y: i258 
=== Succesors ===
=== Usages ===
i262 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i257 y: i258  <|@  <|@
f <@~|@floating>@ <|@
tid i260 <|@
result v45|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 373]
stamp: i32
=== Inputs ===
x: i396 
y: i397 
=== Succesors ===
=== Usages ===
i261 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i396 y: i397  <|@  <|@
f <@~|@floating>@ <|@
tid i261 <|@
result v46|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 376]
stamp: i32
=== Inputs ===
x: i260 
y: i395 
=== Succesors ===
=== Usages ===
i262 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i260 y: i395  <|@  <|@
f <@~|@floating>@ <|@
tid i262 <|@
result v47|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 377]
stamp: i32
=== Inputs ===
x: i259 
y: i261 
=== Succesors ===
=== Usages ===
i263 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i259 y: i261  <|@  <|@
f <@~|@floating>@ <|@
tid i263 <|@
result v48|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 380]
stamp: i32
=== Inputs ===
x: i262 
y: i394 
=== Succesors ===
=== Usages ===
i266 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i262 y: i394  <|@  <|@
f <@~|@floating>@ <|@
tid i266 <|@
result v49|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 388]
stamp: i32
=== Inputs ===
x: i263 
y: i1002 
=== Succesors ===
=== Usages ===
i268 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i263 y: i1002  <|@  <|@
f <@~|@floating>@ <|@
tid i268 <|@
result v50|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 391]
stamp: i32
=== Inputs ===
x: i266 
y: i267 
=== Succesors ===
=== Usages ===
i398 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i266 y: i267  <|@  <|@
f <@~|@floating>@ <|@
tid i273 <|@
result v51|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 417]
stamp: i32
=== Inputs ===
x: i393 
y: i61 
=== Succesors ===
=== Usages ===
i393 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i393 y: i61  <|@  <|@
f <@~|@floating>@ <|@
tid i270 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 2]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32 [-2147483648 - 1073741824] bits:xx000000000000000000000000000000
=== Inputs ===
x: i397 
y: i127 
=== Succesors ===
=== Usages ===
i272 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i397 y: i127  <|@  <|@
f <@~|@floating>@ <|@
tid i271 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 6]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32 [0 - 1073741823] bits:00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i397 
y: i78 
=== Succesors ===
=== Usages ===
i272 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i397 y: i78  <|@  <|@
f <@~|@floating>@ <|@
tid i272 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 7]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32
=== Inputs ===
x: i270 
y: i271 
=== Succesors ===
=== Usages ===
i396 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i270 y: i271  <|@  <|@
f <@*|@fixed>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: void
=== Inputs ===
loopBegin: v226 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i1002 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v226  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = ROL x: v38|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = XOR (x: v40|DWORD, y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = XOR (x: v45|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = ADD (x: v44|DWORD, y: v46|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = ADD (x: v47|DWORD, y: v42|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = ADD (x: v48|DWORD, ~y: [v10|QWORD[.] + v43|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = LEA address: [v49|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = INC value: v43|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = ROL x: v39|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v50|DWORD, v38|DWORD, v52|DWORD, v40|DWORD, v41|DWORD, v51|DWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606324590299565885
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v226 
=== Succesors ===
next: v675 
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v226 #next: v675  <|@  <|@
f <@~|@floating>@ <|@
tid i888 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i32 [8]
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i894 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i892 <|@
result int[7|0x7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 417]
rawvalue: 7
stableDimension: 0
stamp: i32 [7]
stampKind: i32
value: int[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i893 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i890 <|@
result int[6|0x6] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 417]
rawvalue: 6
stableDimension: 0
stamp: i32 [6]
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i891 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i801 <|@
result int[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i32 [4]
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i803 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i897 <|@
result int[72|0x48] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 72
stableDimension: 0
stamp: i32 [72]
stampKind: i32
value: int[72|0x48]
=== Inputs ===
=== Succesors ===
=== Usages ===
v644 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v675 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v643 
=== Predecessor ===
v246 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v43|DWORD, v42|DWORD, v41|DWORD, v40|DWORD, v39|DWORD, v38|DWORD] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" 
    successors "B17" "B18" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4612021107685376776
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i662 <|@
result v53|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v643 
values: i393 i894 
=== Succesors ===
=== Usages ===
v644 i660 j672 i698 i754 i802 i803 i889 i891 i893 i894 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v643 values: i393 i894  <|@  <|@
f <@~|@floating>@ <|@
tid i663 <|@
result v54|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v643 
values: i394 i842 
=== Succesors ===
=== Usages ===
i654 i699 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v643 values: i394 i842  <|@  <|@
f <@~|@floating>@ <|@
tid i664 <|@
result v55|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v643 
values: i395 i861 
=== Succesors ===
=== Usages ===
i652 i733 i700 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v643 values: i395 i861  <|@  <|@
f <@~|@floating>@ <|@
tid i665 <|@
result v56|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v643 
values: i396 i879 
=== Succesors ===
=== Usages ===
i651 i767 i701 i731 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v643 values: i396 i879  <|@  <|@
f <@~|@floating>@ <|@
tid i666 <|@
result v57|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v643 
values: i397 i858 
=== Succesors ===
=== Usages ===
i651 i657 i658 i702 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v643 values: i397 i858  <|@  <|@
f <@~|@floating>@ <|@
tid i667 <|@
result v58|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v643 
values: i398 i876 
=== Succesors ===
=== Usages ===
i648 i649 i737 i703 i730 i736 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v643 values: i398 i876  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 226
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 18.999999999999982
loopType: MAIN_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
osrLoop: true
peelings: 2
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 8
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v675 
=== Succesors ===
next: v647 
=== Usages ===
v645 v661 i662 i663 i664 i665 i666 i667 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v675 #next: v647  <|@  <|@
f <@~|@floating>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 361]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i662 
y: i897 
=== Succesors ===
=== Usages ===
v647 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i662 y: i897  <|@  <|@
f <@*|@fixed>@ <|@
tid v647 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 361]
profileData: INJECTED designatedSuccessorProbability: 0.5789473684210522
stamp: void
=== Inputs ===
condition: v644 
=== Succesors ===
trueSuccessor: v646 
falseSuccessor: v645 
=== Usages ===
=== Predecessor ===
v643 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v644 #trueSuccessor: v646 #falseSuccessor: v645  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v53|DWORD, v54|DWORD, v55|DWORD, v56|DWORD, v57|DWORD, v58|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.5789473684210522 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 72 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4608281511566220913
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 364]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1003 
=== Usages ===
=== Predecessor ===
v647 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1003  <|@  <|@
f <@~|@floating>@ <|@
tid j672 <|@
result v53|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i662 
=== Succesors ===
=== Usages ===
v1046 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i662  <|@  <|@
f <@~|@floating>@ <|@
tid v1046 <|@
result [v10|QWORD[.] + v53|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a405 
index: j672 
=== Succesors ===
=== Usages ===
i1003 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a405 index: j672  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1003 <|@
result v59|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1046 
lastLocationAccess: - 
=== Succesors ===
next: i1004 
=== Usages ===
i655 
=== Predecessor ===
v646 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1046 lastLocationAccess: - #next: i1004  <|@  <|@
f <@~|@floating>@ <|@
tid i660 <|@
result v60|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 417]
stamp: i32
=== Inputs ===
x: i662 
y: i61 
=== Succesors ===
=== Usages ===
j745 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i662 y: i61  <|@  <|@
f <@~|@floating>@ <|@
tid j745 <|@
result v60|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i660 
=== Succesors ===
=== Usages ===
v1048 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i660  <|@  <|@
f <@~|@floating>@ <|@
tid v1048 <|@
result [v10|QWORD[.] + v60|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a405 
index: j745 
=== Succesors ===
=== Usages ===
i1004 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a405 index: j745  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1004 <|@
result v61|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1048 
lastLocationAccess: - 
=== Succesors ===
next: i1005 
=== Usages ===
i734 
=== Predecessor ===
i1003 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1048 lastLocationAccess: - #next: i1005  <|@  <|@
f <@~|@floating>@ <|@
tid i754 <|@
result v62|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 417]
stamp: i32
=== Inputs ===
x: i662 
y: i78 
=== Succesors ===
=== Usages ===
j779 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i662 y: i78  <|@  <|@
f <@~|@floating>@ <|@
tid j779 <|@
result v62|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i754 
=== Succesors ===
=== Usages ===
v1049 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i754  <|@  <|@
f <@~|@floating>@ <|@
tid v1049 <|@
result [v10|QWORD[.] + v62|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a405 
index: j779 
=== Succesors ===
=== Usages ===
i1005 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a405 index: j779  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1005 <|@
result v63|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1049 
lastLocationAccess: - 
=== Succesors ===
next: i1006 
=== Usages ===
i768 
=== Predecessor ===
i1004 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1049 lastLocationAccess: - #next: i1006  <|@  <|@
f <@~|@floating>@ <|@
tid i802 <|@
result v64|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 417]
stamp: i32
=== Inputs ===
x: i662 
y: i719 
=== Succesors ===
=== Usages ===
j798 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i662 y: i719  <|@  <|@
f <@~|@floating>@ <|@
tid j798 <|@
result v64|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i802 
=== Succesors ===
=== Usages ===
v1050 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i802  <|@  <|@
f <@~|@floating>@ <|@
tid v1050 <|@
result [v10|QWORD[.] + v64|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a405 
index: j798 
=== Succesors ===
=== Usages ===
i1006 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a405 index: j798  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1006 <|@
result v65|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1050 
lastLocationAccess: - 
=== Succesors ===
next: i1007 
=== Usages ===
i789 
=== Predecessor ===
i1005 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1050 lastLocationAccess: - #next: i1007  <|@  <|@
f <@~|@floating>@ <|@
tid i803 <|@
result v66|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 417]
stamp: i32
=== Inputs ===
x: i662 
y: i801 
=== Succesors ===
=== Usages ===
j828 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i662 y: i801  <|@  <|@
f <@~|@floating>@ <|@
tid j828 <|@
result v66|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i803 
=== Succesors ===
=== Usages ===
v1051 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i803  <|@  <|@
f <@~|@floating>@ <|@
tid v1051 <|@
result [v10|QWORD[.] + v66|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a405 
index: j828 
=== Succesors ===
=== Usages ===
i1007 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a405 index: j828  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1007 <|@
result v67|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1051 
lastLocationAccess: - 
=== Succesors ===
next: i1008 
=== Usages ===
i817 
=== Predecessor ===
i1006 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1051 lastLocationAccess: - #next: i1008  <|@  <|@
f <@~|@floating>@ <|@
tid i889 <|@
result v68|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 417]
stamp: i32
=== Inputs ===
x: i662 
y: i109 
=== Succesors ===
=== Usages ===
j847 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i662 y: i109  <|@  <|@
f <@~|@floating>@ <|@
tid j847 <|@
result v68|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i889 
=== Succesors ===
=== Usages ===
v1052 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i889  <|@  <|@
f <@~|@floating>@ <|@
tid v1052 <|@
result [v10|QWORD[.] + v68|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a405 
index: j847 
=== Succesors ===
=== Usages ===
i1008 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a405 index: j847  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1008 <|@
result v69|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1052 
lastLocationAccess: - 
=== Succesors ===
next: i1009 
=== Usages ===
i838 
=== Predecessor ===
i1007 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1052 lastLocationAccess: - #next: i1009  <|@  <|@
f <@~|@floating>@ <|@
tid i891 <|@
result v70|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 417]
stamp: i32
=== Inputs ===
x: i662 
y: i890 
=== Succesors ===
=== Usages ===
j866 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i662 y: i890  <|@  <|@
f <@~|@floating>@ <|@
tid j866 <|@
result v70|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i891 
=== Succesors ===
=== Usages ===
v1053 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i891  <|@  <|@
f <@~|@floating>@ <|@
tid v1053 <|@
result [v10|QWORD[.] + v70|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a405 
index: j866 
=== Succesors ===
=== Usages ===
i1009 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a405 index: j866  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1009 <|@
result v71|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1053 
lastLocationAccess: - 
=== Succesors ===
next: i1010 
=== Usages ===
i857 
=== Predecessor ===
i1008 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1053 lastLocationAccess: - #next: i1010  <|@  <|@
f <@~|@floating>@ <|@
tid i893 <|@
result v72|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 417]
stamp: i32
=== Inputs ===
x: i662 
y: i892 
=== Succesors ===
=== Usages ===
j884 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i662 y: i892  <|@  <|@
f <@~|@floating>@ <|@
tid j884 <|@
result v72|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i893 
=== Succesors ===
=== Usages ===
v1054 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i893  <|@  <|@
f <@~|@floating>@ <|@
tid v1054 <|@
result [v10|QWORD[.] + v72|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a405 
index: j884 
=== Succesors ===
=== Usages ===
i1010 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a405 index: j884  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1010 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1054 
lastLocationAccess: - 
=== Succesors ===
next: v661 
=== Usages ===
i875 
=== Predecessor ===
i1009 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1054 lastLocationAccess: - #next: v661  <|@  <|@
f <@~|@floating>@ <|@
tid i648 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 2]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32 [-2147483648 - 2147483616] bits:x...x00000
=== Inputs ===
x: i667 
y: i109 
=== Succesors ===
=== Usages ===
i650 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i667 y: i109  <|@  <|@
f <@~|@floating>@ <|@
tid i649 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 6]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32 [0 - 31] bits:0...0xxxxx
=== Inputs ===
x: i667 
y: i113 
=== Succesors ===
=== Usages ===
i650 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i667 y: i113  <|@  <|@
f <@~|@floating>@ <|@
tid i650 <|@
result v73|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 7]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32
=== Inputs ===
x: i648 
y: i649 
=== Succesors ===
=== Usages ===
i653 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i648 y: i649  <|@  <|@
f <@~|@floating>@ <|@
tid i651 <|@
result v74|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 373]
stamp: i32
=== Inputs ===
x: i665 
y: i666 
=== Succesors ===
=== Usages ===
i652 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i665 y: i666  <|@  <|@
f <@~|@floating>@ <|@
tid i652 <|@
result v75|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 376]
stamp: i32
=== Inputs ===
x: i651 
y: i664 
=== Succesors ===
=== Usages ===
i653 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i651 y: i664  <|@  <|@
f <@~|@floating>@ <|@
tid i653 <|@
result v76|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 377]
stamp: i32
=== Inputs ===
x: i650 
y: i652 
=== Succesors ===
=== Usages ===
i654 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i650 y: i652  <|@  <|@
f <@~|@floating>@ <|@
tid i654 <|@
result v77|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 380]
stamp: i32
=== Inputs ===
x: i653 
y: i663 
=== Succesors ===
=== Usages ===
i655 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i653 y: i663  <|@  <|@
f <@~|@floating>@ <|@
tid i655 <|@
result v78|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 388]
stamp: i32
=== Inputs ===
x: i654 
y: i1003 
=== Succesors ===
=== Usages ===
i656 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i654 y: i1003  <|@  <|@
f <@~|@floating>@ <|@
tid i656 <|@
result v79|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 391]
stamp: i32
=== Inputs ===
x: i655 
y: i267 
=== Succesors ===
=== Usages ===
i771 i727 i728 i764 i770 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i655 y: i267  <|@  <|@
f <@~|@floating>@ <|@
tid i727 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 2]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32 [-2147483648 - 2147483616] bits:x...x00000
=== Inputs ===
x: i656 
y: i109 
=== Succesors ===
=== Usages ===
i729 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i656 y: i109  <|@  <|@
f <@~|@floating>@ <|@
tid i728 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 6]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32 [0 - 31] bits:0...0xxxxx
=== Inputs ===
x: i656 
y: i113 
=== Succesors ===
=== Usages ===
i729 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i656 y: i113  <|@  <|@
f <@~|@floating>@ <|@
tid i729 <|@
result v80|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 7]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32
=== Inputs ===
x: i727 
y: i728 
=== Succesors ===
=== Usages ===
i732 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i727 y: i728  <|@  <|@
f <@~|@floating>@ <|@
tid i657 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 2]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32 [-2147483648 - 1073741824] bits:xx000000000000000000000000000000
=== Inputs ===
x: i666 
y: i127 
=== Succesors ===
=== Usages ===
i659 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i666 y: i127  <|@  <|@
f <@~|@floating>@ <|@
tid i658 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 6]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32 [0 - 1073741823] bits:00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i666 
y: i78 
=== Succesors ===
=== Usages ===
i659 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i666 y: i78  <|@  <|@
f <@~|@floating>@ <|@
tid i659 <|@
result v81|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 7]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32
=== Inputs ===
x: i657 
y: i658 
=== Succesors ===
=== Usages ===
i788 i730 i765 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i657 y: i658  <|@  <|@
f <@~|@floating>@ <|@
tid i730 <|@
result v82|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 373]
stamp: i32
=== Inputs ===
x: i659 
y: i667 
=== Succesors ===
=== Usages ===
i731 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i659 y: i667  <|@  <|@
f <@~|@floating>@ <|@
tid i731 <|@
result v83|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 376]
stamp: i32
=== Inputs ===
x: i665 
y: i730 
=== Succesors ===
=== Usages ===
i732 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i665 y: i730  <|@  <|@
f <@~|@floating>@ <|@
tid i732 <|@
result v84|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 377]
stamp: i32
=== Inputs ===
x: i729 
y: i731 
=== Succesors ===
=== Usages ===
i733 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i729 y: i731  <|@  <|@
f <@~|@floating>@ <|@
tid i733 <|@
result v85|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 380]
stamp: i32
=== Inputs ===
x: i664 
y: i732 
=== Succesors ===
=== Usages ===
i734 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i664 y: i732  <|@  <|@
f <@~|@floating>@ <|@
tid i734 <|@
result v86|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 388]
stamp: i32
=== Inputs ===
x: i733 
y: i1004 
=== Succesors ===
=== Usages ===
i735 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i733 y: i1004  <|@  <|@
f <@~|@floating>@ <|@
tid i735 <|@
result v87|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 391]
stamp: i32
=== Inputs ===
x: i734 
y: i267 
=== Succesors ===
=== Usages ===
i792 i761 i762 i785 i791 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i734 y: i267  <|@  <|@
f <@~|@floating>@ <|@
tid i761 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 2]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32 [-2147483648 - 2147483616] bits:x...x00000
=== Inputs ===
x: i735 
y: i109 
=== Succesors ===
=== Usages ===
i763 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i735 y: i109  <|@  <|@
f <@~|@floating>@ <|@
tid i762 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 6]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32 [0 - 31] bits:0...0xxxxx
=== Inputs ===
x: i735 
y: i113 
=== Succesors ===
=== Usages ===
i763 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i735 y: i113  <|@  <|@
f <@~|@floating>@ <|@
tid i763 <|@
result v88|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 7]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32
=== Inputs ===
x: i761 
y: i762 
=== Succesors ===
=== Usages ===
i766 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i761 y: i762  <|@  <|@
f <@~|@floating>@ <|@
tid i736 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 2]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32 [-2147483648 - 1073741824] bits:xx000000000000000000000000000000
=== Inputs ===
x: i667 
y: i127 
=== Succesors ===
=== Usages ===
i738 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i667 y: i127  <|@  <|@
f <@~|@floating>@ <|@
tid i737 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 6]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32 [0 - 1073741823] bits:00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i667 
y: i78 
=== Succesors ===
=== Usages ===
i738 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i667 y: i78  <|@  <|@
f <@~|@floating>@ <|@
tid i738 <|@
result v89|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 7]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32
=== Inputs ===
x: i736 
y: i737 
=== Succesors ===
=== Usages ===
i816 i764 i786 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i736 y: i737  <|@  <|@
f <@~|@floating>@ <|@
tid i764 <|@
result v90|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 373]
stamp: i32
=== Inputs ===
x: i656 
y: i738 
=== Succesors ===
=== Usages ===
i765 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i656 y: i738  <|@  <|@
f <@~|@floating>@ <|@
tid i765 <|@
result v91|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 376]
stamp: i32
=== Inputs ===
x: i659 
y: i764 
=== Succesors ===
=== Usages ===
i766 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i659 y: i764  <|@  <|@
f <@~|@floating>@ <|@
tid i766 <|@
result v92|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 377]
stamp: i32
=== Inputs ===
x: i763 
y: i765 
=== Succesors ===
=== Usages ===
i767 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i763 y: i765  <|@  <|@
f <@~|@floating>@ <|@
tid i767 <|@
result v93|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 380]
stamp: i32
=== Inputs ===
x: i665 
y: i766 
=== Succesors ===
=== Usages ===
i768 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i665 y: i766  <|@  <|@
f <@~|@floating>@ <|@
tid i768 <|@
result v94|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 388]
stamp: i32
=== Inputs ===
x: i767 
y: i1005 
=== Succesors ===
=== Usages ===
i769 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i767 y: i1005  <|@  <|@
f <@~|@floating>@ <|@
tid i769 <|@
result v95|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 391]
stamp: i32
=== Inputs ===
x: i768 
y: i267 
=== Succesors ===
=== Usages ===
i782 i783 i820 i813 i819 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i768 y: i267  <|@  <|@
f <@~|@floating>@ <|@
tid i819 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 2]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32 [-2147483648 - 1073741824] bits:xx000000000000000000000000000000
=== Inputs ===
x: i769 
y: i127 
=== Succesors ===
=== Usages ===
i821 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i769 y: i127  <|@  <|@
f <@~|@floating>@ <|@
tid i820 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 6]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32 [0 - 1073741823] bits:00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i769 
y: i78 
=== Succesors ===
=== Usages ===
i821 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i769 y: i78  <|@  <|@
f <@~|@floating>@ <|@
tid i821 <|@
result v96|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 7]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32
=== Inputs ===
x: i819 
y: i820 
=== Succesors ===
=== Usages ===
i834 i854 i874 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i819 y: i820  <|@  <|@
f <@~|@floating>@ <|@
tid i791 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 2]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32 [-2147483648 - 1073741824] bits:xx000000000000000000000000000000
=== Inputs ===
x: i735 
y: i127 
=== Succesors ===
=== Usages ===
i793 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i735 y: i127  <|@  <|@
f <@~|@floating>@ <|@
tid i792 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 6]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32 [0 - 1073741823] bits:00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i735 
y: i78 
=== Succesors ===
=== Usages ===
i793 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i735 y: i78  <|@  <|@
f <@~|@floating>@ <|@
tid i793 <|@
result v97|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 7]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32
=== Inputs ===
x: i791 
y: i792 
=== Succesors ===
=== Usages ===
i856 i813 i835 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i791 y: i792  <|@  <|@
f <@~|@floating>@ <|@
tid i770 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 2]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32 [-2147483648 - 1073741824] bits:xx000000000000000000000000000000
=== Inputs ===
x: i656 
y: i127 
=== Succesors ===
=== Usages ===
i772 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i656 y: i127  <|@  <|@
f <@~|@floating>@ <|@
tid i771 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 6]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32 [0 - 1073741823] bits:00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i656 
y: i78 
=== Succesors ===
=== Usages ===
i772 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i656 y: i78  <|@  <|@
f <@~|@floating>@ <|@
tid i772 <|@
result v98|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 7]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32
=== Inputs ===
x: i770 
y: i771 
=== Succesors ===
=== Usages ===
i785 i837 i814 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i770 y: i771  <|@  <|@
f <@~|@floating>@ <|@
tid i782 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 2]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32 [-2147483648 - 2147483616] bits:x...x00000
=== Inputs ===
x: i769 
y: i109 
=== Succesors ===
=== Usages ===
i784 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i769 y: i109  <|@  <|@
f <@~|@floating>@ <|@
tid i783 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 6]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32 [0 - 31] bits:0...0xxxxx
=== Inputs ===
x: i769 
y: i113 
=== Succesors ===
=== Usages ===
i784 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i769 y: i113  <|@  <|@
f <@~|@floating>@ <|@
tid i784 <|@
result v99|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 7]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32
=== Inputs ===
x: i782 
y: i783 
=== Succesors ===
=== Usages ===
i787 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i782 y: i783  <|@  <|@
f <@~|@floating>@ <|@
tid i785 <|@
result v100|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 373]
stamp: i32
=== Inputs ===
x: i735 
y: i772 
=== Succesors ===
=== Usages ===
i786 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i735 y: i772  <|@  <|@
f <@~|@floating>@ <|@
tid i786 <|@
result v101|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 376]
stamp: i32
=== Inputs ===
x: i738 
y: i785 
=== Succesors ===
=== Usages ===
i787 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i738 y: i785  <|@  <|@
f <@~|@floating>@ <|@
tid i787 <|@
result v102|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 377]
stamp: i32
=== Inputs ===
x: i784 
y: i786 
=== Succesors ===
=== Usages ===
i788 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i784 y: i786  <|@  <|@
f <@~|@floating>@ <|@
tid i788 <|@
result v103|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 380]
stamp: i32
=== Inputs ===
x: i659 
y: i787 
=== Succesors ===
=== Usages ===
i789 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i659 y: i787  <|@  <|@
f <@~|@floating>@ <|@
tid i789 <|@
result v104|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 388]
stamp: i32
=== Inputs ===
x: i788 
y: i1006 
=== Succesors ===
=== Usages ===
i790 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i788 y: i1006  <|@  <|@
f <@~|@floating>@ <|@
tid i790 <|@
result v105|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 391]
stamp: i32
=== Inputs ===
x: i789 
y: i267 
=== Succesors ===
=== Usages ===
i841 i810 i811 i834 i840 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i789 y: i267  <|@  <|@
f <@~|@floating>@ <|@
tid i810 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 2]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32 [-2147483648 - 2147483616] bits:x...x00000
=== Inputs ===
x: i790 
y: i109 
=== Succesors ===
=== Usages ===
i812 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i790 y: i109  <|@  <|@
f <@~|@floating>@ <|@
tid i811 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 6]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32 [0 - 31] bits:0...0xxxxx
=== Inputs ===
x: i790 
y: i113 
=== Succesors ===
=== Usages ===
i812 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i790 y: i113  <|@  <|@
f <@~|@floating>@ <|@
tid i812 <|@
result v106|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 7]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32
=== Inputs ===
x: i810 
y: i811 
=== Succesors ===
=== Usages ===
i815 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i810 y: i811  <|@  <|@
f <@~|@floating>@ <|@
tid i813 <|@
result v107|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 373]
stamp: i32
=== Inputs ===
x: i769 
y: i793 
=== Succesors ===
=== Usages ===
i814 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i769 y: i793  <|@  <|@
f <@~|@floating>@ <|@
tid i814 <|@
result v108|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 376]
stamp: i32
=== Inputs ===
x: i772 
y: i813 
=== Succesors ===
=== Usages ===
i815 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i772 y: i813  <|@  <|@
f <@~|@floating>@ <|@
tid i815 <|@
result v109|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 377]
stamp: i32
=== Inputs ===
x: i812 
y: i814 
=== Succesors ===
=== Usages ===
i816 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i812 y: i814  <|@  <|@
f <@~|@floating>@ <|@
tid i816 <|@
result v110|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 380]
stamp: i32
=== Inputs ===
x: i738 
y: i815 
=== Succesors ===
=== Usages ===
i817 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i738 y: i815  <|@  <|@
f <@~|@floating>@ <|@
tid i817 <|@
result v111|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 388]
stamp: i32
=== Inputs ===
x: i816 
y: i1007 
=== Succesors ===
=== Usages ===
i818 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i816 y: i1007  <|@  <|@
f <@~|@floating>@ <|@
tid i818 <|@
result v112|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 391]
stamp: i32
=== Inputs ===
x: i817 
y: i267 
=== Succesors ===
=== Usages ===
i831 i832 i853 i859 i860 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i817 y: i267  <|@  <|@
f <@~|@floating>@ <|@
tid i831 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 2]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32 [-2147483648 - 2147483616] bits:x...x00000
=== Inputs ===
x: i818 
y: i109 
=== Succesors ===
=== Usages ===
i833 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i818 y: i109  <|@  <|@
f <@~|@floating>@ <|@
tid i832 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 6]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32 [0 - 31] bits:0...0xxxxx
=== Inputs ===
x: i818 
y: i113 
=== Succesors ===
=== Usages ===
i833 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i818 y: i113  <|@  <|@
f <@~|@floating>@ <|@
tid i833 <|@
result v113|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 7]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32
=== Inputs ===
x: i831 
y: i832 
=== Succesors ===
=== Usages ===
i836 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i831 y: i832  <|@  <|@
f <@~|@floating>@ <|@
tid i834 <|@
result v114|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 373]
stamp: i32
=== Inputs ===
x: i790 
y: i821 
=== Succesors ===
=== Usages ===
i835 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i790 y: i821  <|@  <|@
f <@~|@floating>@ <|@
tid i835 <|@
result v115|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 376]
stamp: i32
=== Inputs ===
x: i793 
y: i834 
=== Succesors ===
=== Usages ===
i836 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i793 y: i834  <|@  <|@
f <@~|@floating>@ <|@
tid i836 <|@
result v116|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 377]
stamp: i32
=== Inputs ===
x: i833 
y: i835 
=== Succesors ===
=== Usages ===
i837 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i833 y: i835  <|@  <|@
f <@~|@floating>@ <|@
tid i837 <|@
result v117|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 380]
stamp: i32
=== Inputs ===
x: i772 
y: i836 
=== Succesors ===
=== Usages ===
i838 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i772 y: i836  <|@  <|@
f <@~|@floating>@ <|@
tid i838 <|@
result v118|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 388]
stamp: i32
=== Inputs ===
x: i837 
y: i1008 
=== Succesors ===
=== Usages ===
i839 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i837 y: i1008  <|@  <|@
f <@~|@floating>@ <|@
tid i839 <|@
result v119|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 391]
stamp: i32
=== Inputs ===
x: i838 
y: i267 
=== Succesors ===
=== Usages ===
i850 i851 i871 i877 i878 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i838 y: i267  <|@  <|@
f <@~|@floating>@ <|@
tid i850 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 2]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32 [-2147483648 - 2147483616] bits:x...x00000
=== Inputs ===
x: i839 
y: i109 
=== Succesors ===
=== Usages ===
i852 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i839 y: i109  <|@  <|@
f <@~|@floating>@ <|@
tid i851 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 6]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32 [0 - 31] bits:0...0xxxxx
=== Inputs ===
x: i839 
y: i113 
=== Succesors ===
=== Usages ===
i852 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i839 y: i113  <|@  <|@
f <@~|@floating>@ <|@
tid i852 <|@
result v120|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 7]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32
=== Inputs ===
x: i850 
y: i851 
=== Succesors ===
=== Usages ===
i855 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i850 y: i851  <|@  <|@
f <@~|@floating>@ <|@
tid i840 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 2]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32 [-2147483648 - 1073741824] bits:xx000000000000000000000000000000
=== Inputs ===
x: i790 
y: i127 
=== Succesors ===
=== Usages ===
i842 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i790 y: i127  <|@  <|@
f <@~|@floating>@ <|@
tid i841 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 6]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32 [0 - 1073741823] bits:00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i790 
y: i78 
=== Succesors ===
=== Usages ===
i842 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i790 y: i78  <|@  <|@
f <@~|@floating>@ <|@
tid i842 <|@
result v121|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 7]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32
=== Inputs ===
x: i840 
y: i841 
=== Succesors ===
=== Usages ===
i853 i872 i663 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i840 y: i841  <|@  <|@
f <@~|@floating>@ <|@
tid i853 <|@
result v122|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 373]
stamp: i32
=== Inputs ===
x: i818 
y: i842 
=== Succesors ===
=== Usages ===
i854 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i818 y: i842  <|@  <|@
f <@~|@floating>@ <|@
tid i854 <|@
result v123|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 376]
stamp: i32
=== Inputs ===
x: i821 
y: i853 
=== Succesors ===
=== Usages ===
i855 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i821 y: i853  <|@  <|@
f <@~|@floating>@ <|@
tid i855 <|@
result v124|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 377]
stamp: i32
=== Inputs ===
x: i852 
y: i854 
=== Succesors ===
=== Usages ===
i856 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i852 y: i854  <|@  <|@
f <@~|@floating>@ <|@
tid i856 <|@
result v125|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 380]
stamp: i32
=== Inputs ===
x: i793 
y: i855 
=== Succesors ===
=== Usages ===
i857 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i793 y: i855  <|@  <|@
f <@~|@floating>@ <|@
tid i857 <|@
result v126|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 388]
stamp: i32
=== Inputs ===
x: i856 
y: i1009 
=== Succesors ===
=== Usages ===
i858 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i856 y: i1009  <|@  <|@
f <@~|@floating>@ <|@
tid i858 <|@
result v127|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 391]
stamp: i32
=== Inputs ===
x: i857 
y: i267 
=== Succesors ===
=== Usages ===
i868 i869 i666 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i857 y: i267  <|@  <|@
f <@~|@floating>@ <|@
tid i868 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 2]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32 [-2147483648 - 2147483616] bits:x...x00000
=== Inputs ===
x: i858 
y: i109 
=== Succesors ===
=== Usages ===
i870 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i858 y: i109  <|@  <|@
f <@~|@floating>@ <|@
tid i869 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 6]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32 [0 - 31] bits:0...0xxxxx
=== Inputs ===
x: i858 
y: i113 
=== Succesors ===
=== Usages ===
i870 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i858 y: i113  <|@  <|@
f <@~|@floating>@ <|@
tid i870 <|@
result v128|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 7]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32
=== Inputs ===
x: i868 
y: i869 
=== Succesors ===
=== Usages ===
i873 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i868 y: i869  <|@  <|@
f <@~|@floating>@ <|@
tid i859 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 2]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32 [-2147483648 - 1073741824] bits:xx000000000000000000000000000000
=== Inputs ===
x: i818 
y: i127 
=== Succesors ===
=== Usages ===
i861 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i818 y: i127  <|@  <|@
f <@~|@floating>@ <|@
tid i860 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 6]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32 [0 - 1073741823] bits:00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i818 
y: i78 
=== Succesors ===
=== Usages ===
i861 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i818 y: i78  <|@  <|@
f <@~|@floating>@ <|@
tid i861 <|@
result v129|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 7]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32
=== Inputs ===
x: i859 
y: i860 
=== Succesors ===
=== Usages ===
i871 i664 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i859 y: i860  <|@  <|@
f <@~|@floating>@ <|@
tid i871 <|@
result v130|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 373]
stamp: i32
=== Inputs ===
x: i839 
y: i861 
=== Succesors ===
=== Usages ===
i872 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i839 y: i861  <|@  <|@
f <@~|@floating>@ <|@
tid i872 <|@
result v131|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 376]
stamp: i32
=== Inputs ===
x: i842 
y: i871 
=== Succesors ===
=== Usages ===
i873 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i842 y: i871  <|@  <|@
f <@~|@floating>@ <|@
tid i873 <|@
result v132|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 377]
stamp: i32
=== Inputs ===
x: i870 
y: i872 
=== Succesors ===
=== Usages ===
i874 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i870 y: i872  <|@  <|@
f <@~|@floating>@ <|@
tid i874 <|@
result v133|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 380]
stamp: i32
=== Inputs ===
x: i821 
y: i873 
=== Succesors ===
=== Usages ===
i875 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i821 y: i873  <|@  <|@
f <@~|@floating>@ <|@
tid i875 <|@
result v134|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 388]
stamp: i32
=== Inputs ===
x: i874 
y: i1010 
=== Succesors ===
=== Usages ===
i876 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i874 y: i1010  <|@  <|@
f <@~|@floating>@ <|@
tid i876 <|@
result v135|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 391]
stamp: i32
=== Inputs ===
x: i875 
y: i267 
=== Succesors ===
=== Usages ===
i667 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i875 y: i267  <|@  <|@
f <@~|@floating>@ <|@
tid i877 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 2]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32 [-2147483648 - 1073741824] bits:xx000000000000000000000000000000
=== Inputs ===
x: i839 
y: i127 
=== Succesors ===
=== Usages ===
i879 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i839 y: i127  <|@  <|@
f <@~|@floating>@ <|@
tid i878 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 6]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32 [0 - 1073741823] bits:00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i839 
y: i78 
=== Succesors ===
=== Usages ===
i879 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i839 y: i78  <|@  <|@
f <@~|@floating>@ <|@
tid i879 <|@
result v136|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 7]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32
=== Inputs ===
x: i877 
y: i878 
=== Succesors ===
=== Usages ===
i665 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i877 y: i878  <|@  <|@
f <@~|@floating>@ <|@
tid i894 <|@
result v137|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 417]
stamp: i32
=== Inputs ===
x: i662 
y: i888 
=== Succesors ===
=== Usages ===
i662 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i662 y: i888  <|@  <|@
f <@*|@fixed>@ <|@
tid v661 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: void
=== Inputs ===
loopBegin: v643 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i1010 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v643  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOV input: [v10|QWORD[.] + v53|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = INC value: v53|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOV input: [v10|QWORD[.] + v60|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = LEA address: [v53|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOV input: [v10|QWORD[.] + v62|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = LEA address: [v53|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOV input: [v10|QWORD[.] + v64|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = LEA address: [v53|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = MOV input: [v10|QWORD[.] + v66|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = LEA address: [v53|DWORD + 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOV input: [v10|QWORD[.] + v68|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = LEA address: [v53|DWORD + 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOV input: [v10|QWORD[.] + v70|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = LEA address: [v53|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = ROL x: v58|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = XOR (x: v56|DWORD, y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = XOR (x: v74|DWORD, y: v55|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = ADD (x: v73|DWORD, y: v75|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = ADD (x: v76|DWORD, y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = ADD (x: v77|DWORD, y: v59|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = LEA address: [v78|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = ROL x: v79|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = ROL x: v57|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = XOR (x: v81|DWORD, y: v58|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = XOR (x: v56|DWORD, y: v82|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = ADD (x: v80|DWORD, y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = ADD (x: v84|DWORD, y: v55|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = ADD (x: v85|DWORD, y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = LEA address: [v86|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = ROL x: v87|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = ROL x: v58|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = XOR (x: v79|DWORD, y: v89|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = XOR (x: v81|DWORD, y: v90|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = ADD (x: v88|DWORD, y: v91|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = ADD (x: v92|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = ADD (x: v93|DWORD, y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = LEA address: [v94|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = ROL x: v95|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = ROL x: v87|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = ROL x: v79|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = ROL x: v95|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = XOR (x: v87|DWORD, y: v98|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = XOR (x: v89|DWORD, y: v100|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = ADD (x: v99|DWORD, y: v101|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = ADD (x: v102|DWORD, y: v81|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = ADD (x: v103|DWORD, y: v65|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = LEA address: [v104|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = ROL x: v105|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = XOR (x: v95|DWORD, y: v97|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = XOR (x: v98|DWORD, y: v107|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = ADD (x: v106|DWORD, y: v108|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = ADD (x: v109|DWORD, y: v89|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = ADD (x: v110|DWORD, y: v67|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = LEA address: [v111|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = ROL x: v112|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = XOR (x: v105|DWORD, y: v96|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = XOR (x: v97|DWORD, y: v114|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = ADD (x: v113|DWORD, y: v115|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = ADD (x: v116|DWORD, y: v98|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = ADD (x: v117|DWORD, y: v69|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = LEA address: [v118|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = ROL x: v119|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = ROL x: v105|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v122|DWORD = XOR (x: v112|DWORD, y: v121|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = XOR (x: v96|DWORD, y: v122|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v124|DWORD = ADD (x: v120|DWORD, y: v123|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = ADD (x: v124|DWORD, y: v97|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = ADD (x: v125|DWORD, y: v71|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v127|DWORD = LEA address: [v126|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v128|DWORD = ROL x: v127|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = ROL x: v112|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v130|DWORD = XOR (x: v119|DWORD, y: v129|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = XOR (x: v121|DWORD, y: v130|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = ADD (x: v128|DWORD, y: v131|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = ADD (x: v132|DWORD, y: v96|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v134|DWORD = ADD (x: v133|DWORD, ~y: [v10|QWORD[.] + v72|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v135|DWORD = LEA address: [v134|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v136|DWORD = ROL x: v119|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v137|DWORD = LEA address: [v53|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v137|DWORD, v121|DWORD, v129|DWORD, v136|DWORD, v127|DWORD, v135|DWORD] destination: B17 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606324590299565886
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v645 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v643 
=== Succesors ===
next: v711 
=== Usages ===
=== Predecessor ===
v647 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v643 #next: v711  <|@  <|@
f <@*|@fixed>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v679 
=== Predecessor ===
v645 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v53|DWORD, v54|DWORD, v55|DWORD, v56|DWORD, v57|DWORD, v58|DWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606406907175871841
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i698 <|@
result v138|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v679 
values: i662 i696 
=== Succesors ===
=== Usages ===
v680 i696 j708 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v679 values: i662 i696  <|@  <|@
f <@~|@floating>@ <|@
tid i699 <|@
result v139|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v679 
values: i663 i700 
=== Succesors ===
=== Usages ===
i690 i342 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v679 values: i663 i700  <|@  <|@
f <@~|@floating>@ <|@
tid i700 <|@
result v140|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v679 
values: i664 i701 
=== Succesors ===
=== Usages ===
i688 i699 i341 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v679 values: i664 i701  <|@  <|@
f <@~|@floating>@ <|@
tid i701 <|@
result v141|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v679 
values: i665 i695 
=== Succesors ===
=== Usages ===
i687 i700 i340 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v679 values: i665 i695  <|@  <|@
f <@~|@floating>@ <|@
tid i702 <|@
result v142|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v679 
values: i666 i703 
=== Succesors ===
=== Usages ===
i687 i693 i694 i339 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v679 values: i666 i703  <|@  <|@
f <@~|@floating>@ <|@
tid i703 <|@
result v143|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v679 
values: i667 i692 
=== Succesors ===
=== Usages ===
i684 i685 i702 i338 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v679 values: i667 i692  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 226
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 18.999999999999982
loopType: POST_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
osrLoop: true
peelings: 2
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v711 
=== Succesors ===
next: v683 
=== Usages ===
v681 v697 i698 i699 i700 i701 i702 i703 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v711 #next: v683  <|@  <|@
f <@~|@floating>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 361]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i698 
y: i11 
=== Succesors ===
=== Usages ===
v683 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i698 y: i11  <|@  <|@
f <@*|@fixed>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 361]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v680 
=== Succesors ===
trueSuccessor: v682 
falseSuccessor: v681 
=== Usages ===
=== Predecessor ===
v679 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v680 #trueSuccessor: v682 #falseSuccessor: v681  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v138|DWORD, v139|DWORD, v140|DWORD, v141|DWORD, v142|DWORD, v143|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v138|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576421901864634512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v682 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 364]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1011 
=== Usages ===
=== Predecessor ===
v683 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1011  <|@  <|@
f <@~|@floating>@ <|@
tid j708 <|@
result v138|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i698 
=== Succesors ===
=== Usages ===
v1047 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i698  <|@  <|@
f <@~|@floating>@ <|@
tid v1047 <|@
result [v10|QWORD[.] + v138|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a405 
index: j708 
=== Succesors ===
=== Usages ===
i1011 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a405 index: j708  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1011 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1047 
lastLocationAccess: - 
=== Succesors ===
next: v697 
=== Usages ===
i691 
=== Predecessor ===
v682 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1047 lastLocationAccess: - #next: v697  <|@  <|@
f <@~|@floating>@ <|@
tid i684 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 2]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32 [-2147483648 - 2147483616] bits:x...x00000
=== Inputs ===
x: i703 
y: i109 
=== Succesors ===
=== Usages ===
i686 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i703 y: i109  <|@  <|@
f <@~|@floating>@ <|@
tid i685 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 6]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32 [0 - 31] bits:0...0xxxxx
=== Inputs ===
x: i703 
y: i113 
=== Succesors ===
=== Usages ===
i686 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i703 y: i113  <|@  <|@
f <@~|@floating>@ <|@
tid i686 <|@
result v144|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 7]
at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 366]
stamp: i32
=== Inputs ===
x: i684 
y: i685 
=== Succesors ===
=== Usages ===
i689 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i684 y: i685  <|@  <|@
f <@~|@floating>@ <|@
tid i687 <|@
result v145|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 373]
stamp: i32
=== Inputs ===
x: i701 
y: i702 
=== Succesors ===
=== Usages ===
i688 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i701 y: i702  <|@  <|@
f <@~|@floating>@ <|@
tid i688 <|@
result v146|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 376]
stamp: i32
=== Inputs ===
x: i687 
y: i700 
=== Succesors ===
=== Usages ===
i689 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i687 y: i700  <|@  <|@
f <@~|@floating>@ <|@
tid i689 <|@
result v147|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 377]
stamp: i32
=== Inputs ===
x: i686 
y: i688 
=== Succesors ===
=== Usages ===
i690 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i686 y: i688  <|@  <|@
f <@~|@floating>@ <|@
tid i690 <|@
result v148|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 380]
stamp: i32
=== Inputs ===
x: i689 
y: i699 
=== Succesors ===
=== Usages ===
i691 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i689 y: i699  <|@  <|@
f <@~|@floating>@ <|@
tid i691 <|@
result v149|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 388]
stamp: i32
=== Inputs ===
x: i690 
y: i1011 
=== Succesors ===
=== Usages ===
i692 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i690 y: i1011  <|@  <|@
f <@~|@floating>@ <|@
tid i692 <|@
result v150|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 391]
stamp: i32
=== Inputs ===
x: i691 
y: i267 
=== Succesors ===
=== Usages ===
i703 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i691 y: i267  <|@  <|@
f <@~|@floating>@ <|@
tid i693 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 2]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32 [-2147483648 - 1073741824] bits:xx000000000000000000000000000000
=== Inputs ===
x: i702 
y: i127 
=== Succesors ===
=== Usages ===
i695 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i702 y: i127  <|@  <|@
f <@~|@floating>@ <|@
tid i694 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 6]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32 [0 - 1073741823] bits:00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i702 
y: i78 
=== Succesors ===
=== Usages ===
i695 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i702 y: i78  <|@  <|@
f <@~|@floating>@ <|@
tid i695 <|@
result v151|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.rotateLeft(Integer.java:1727) [bci: 7]
at sun.security.provider.SHA.implCompress0(SHA.java:207) [bci: 406]
stamp: i32
=== Inputs ===
x: i693 
y: i694 
=== Succesors ===
=== Usages ===
i701 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i693 y: i694  <|@  <|@
f <@~|@floating>@ <|@
tid i696 <|@
result v152|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 417]
stamp: i32
=== Inputs ===
x: i698 
y: i61 
=== Succesors ===
=== Usages ===
i698 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i698 y: i61  <|@  <|@
f <@*|@fixed>@ <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: void
=== Inputs ===
loopBegin: v679 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i1011 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v679  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v144|DWORD = ROL x: v143|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = XOR (x: v141|DWORD, y: v142|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = XOR (x: v145|DWORD, y: v140|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v147|DWORD = ADD (x: v144|DWORD, y: v146|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v148|DWORD = ADD (x: v147|DWORD, y: v139|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v149|DWORD = ADD (x: v148|DWORD, ~y: [v10|QWORD[.] + v138|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v150|DWORD = LEA address: [v149|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v151|DWORD = ROL x: v142|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v152|DWORD = INC value: v138|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v152|DWORD, v140|DWORD, v141|DWORD, v151|DWORD, v143|DWORD, v150|DWORD] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606324590299565887
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v679 
=== Succesors ===
next: v333 
=== Usages ===
=== Predecessor ===
v683 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v679 #next: v333  <|@  <|@
f <@*|@fixed>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v332 
=== Predecessor ===
v681 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v139|DWORD, v143|DWORD, v142|DWORD, v141|DWORD, v140|DWORD] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: void
=== Inputs ===
=== Succesors ===
next: v953 
=== Usages ===
=== Predecessor ===
v596 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v953  <|@  <|@
f <@~|@floating>@ <|@
tid i954 <|@
result int[-108315|0xfffffffffffe58e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
rawvalue: -108315
stableDimension: 0
stamp: i32 [-108315]
stampKind: i32
value: int[-108315|0xfffffffffffe58e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i943 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v953 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v939 
=== Predecessor ===
v595 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-108315|0xfffffffffffe58e5], long[0|0x0]] destination: B22 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B26" 
    xhandlers
    flags 
    probability 4587023449039406622
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
stamp: void
=== Inputs ===
=== Succesors ===
next: v400 
=== Usages ===
=== Predecessor ===
v365 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v400  <|@  <|@
f <@*|@fixed>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v332 
=== Predecessor ===
v363 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v5|DWORD, v17|DWORD, v2|DWORD, v19|DWORD, v4|DWORD] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: void
=== Inputs ===
=== Succesors ===
next: v948 
=== Usages ===
=== Predecessor ===
v588 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v948  <|@  <|@
f <@~|@floating>@ <|@
tid i949 <|@
result int[-105755|0xfffffffffffe62e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
rawvalue: -105755
stableDimension: 0
stamp: i32 [-105755]
stampKind: i32
value: int[-105755|0xfffffffffffe62e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i943 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v948 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v939 
=== Predecessor ===
v587 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-105755|0xfffffffffffe62e5], long[0|0x0]] destination: B24 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B26" 
    xhandlers
    flags 
    probability 4587023449039406624
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
stamp: void
=== Inputs ===
=== Succesors ===
next: v334 
=== Usages ===
=== Predecessor ===
v314 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v334  <|@  <|@
f <@*|@fixed>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v332 
=== Predecessor ===
v312 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v6|DWORD, v2|DWORD, v3|DWORD, v4|DWORD, v5|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B25" "B23" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i342 <|@
result v153|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v332 
values: i699 i622 i620 
=== Succesors ===
=== Usages ===
?336 i297 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v332 values: i699 i622 i620  <|@  <|@
f <@~|@floating>@ <|@
tid i338 <|@
result v154|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v332 
values: i703 i613 i325 
=== Succesors ===
=== Usages ===
?336 i277 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v332 values: i703 i613 i325  <|@  <|@
f <@~|@floating>@ <|@
tid i339 <|@
result v155|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v332 
values: i702 i616 i613 
=== Succesors ===
=== Usages ===
?336 i282 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v332 values: i702 i616 i613  <|@  <|@
f <@~|@floating>@ <|@
tid i340 <|@
result v156|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v332 
values: i701 i618 i328 
=== Succesors ===
=== Usages ===
?336 i287 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v332 values: i701 i618 i328  <|@  <|@
f <@~|@floating>@ <|@
tid i341 <|@
result v157|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v332 
values: i700 i620 i618 
=== Succesors ===
=== Usages ===
?336 i292 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v332 values: i700 i620 i618  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v333 v334 v400 
=== Succesors ===
next: a1012 
=== Usages ===
i342 i338 i339 i340 i341 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v333 v334 v400 #next: a1012  <|@  <|@
f <@~|@floating>@ <|@
tid v1032 <|@
result [v1|QWORD[.] + 52] <|@
d <@d|@=== Debug Properties ===
displacement: 52
stamp: void*
stride: S1
=== Inputs ===
base: a611 
index: - 
=== Succesors ===
=== Usages ===
a1012 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a611 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1012 <|@
result v158|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# int[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: SHA.state
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 424]
stamp: n# int[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1032 
lastLocationAccess: - 
=== Succesors ===
next: i1013 
=== Usages ===
v1038 v1033 v1034 v1035 v1036 v1037 
=== Predecessor ===
v332 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1032 lastLocationAccess: - #next: i1013  <|@  <|@
tid ?336 <|@
d <@d|@=== Debug Properties ===
bci: 423
bytecode: aload_0
code: ResolvedJavaMethodBytecode<SHA.implCompress0(byte[], int)>
localsSize: 10
locksSize: 0
sourceFile: SHA.java
sourceLine: 211
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a611 - - i338 i339 i340 i341 i342 
=== Succesors ===
=== Usages ===
v1056 i1013 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a611 - - i338 i339 i340 i341 i342  <|@  <|@
f <@~|@floating>@ <|@
tid v1033 <|@
result [v158|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1012 
=== Succesors ===
=== Usages ===
i1013 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1012  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1013 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-113931|0xfffffffffffe42f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 429]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?336 
guard: - 
address: v1033 
lastLocationAccess: - 
=== Succesors ===
next: v604 
=== Usages ===
v557 
=== Predecessor ===
a1012 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?336 guard: - address: v1033 lastLocationAccess: - #next: v604  <|@  <|@
f <@~|@floating>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:215) [bci: 476]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1013 
y: i109 
=== Succesors ===
=== Usages ===
v604 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i1013 y: i109  <|@  <|@
f <@*|@fixed>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 432]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v557 
=== Succesors ===
trueSuccessor: v603 
falseSuccessor: v601 
=== Usages ===
=== Predecessor ===
i1013 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v557 #trueSuccessor: v603 #falseSuccessor: v601  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v153|DWORD, v154|DWORD, v155|DWORD, v156|DWORD, v157|DWORD] = LABEL alignment: 0 numbPhis: 5 label: ? <|@ <|@
      nr   -1  <|@ instruction v158|DWORD[_] = MOV input: [v1|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
locals: v1|QWORD[.] - - v154|DWORD v155|DWORD v156|DWORD v157|DWORD v153|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v158|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 5 size: DWORD inlinedY: null state [bci:423] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 432]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1056 
=== Usages ===
=== Predecessor ===
v604 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1056  <|@  <|@
f <@*|@fixed>@ <|@
tid v1056 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 523
mayConvertToGuard: true
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 429]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?336 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v603 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?336  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -133915 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
locals: v1|QWORD[.] - - v154|DWORD v155|DWORD v156|DWORD v157|DWORD v153|DWORD - - 
>@ <|@ instruction DEOPT info [bci:423] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 432]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1014 
=== Usages ===
v461 v503 v475 v517 v489 
=== Predecessor ===
v604 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1014  <|@  <|@
f <@~|@floating>@ <|@
tid v1034 <|@
result [v158|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1012 
=== Succesors ===
=== Usages ===
i1014 v461 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1012  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1014 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 429]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1034 
lastLocationAccess: - 
=== Succesors ===
next: v461 
=== Usages ===
i277 
=== Predecessor ===
v601 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1034 lastLocationAccess: - #next: v461  <|@  <|@
f <@~|@floating>@ <|@
tid i277 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 431]
stamp: i32
=== Inputs ===
x: i338 
y: i1014 
=== Succesors ===
=== Usages ===
v461 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i338 y: i1014  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 432]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v601 
address: v1034 
lastLocationAccess: - 
value: i277 
stateAfter: - 
=== Succesors ===
next: i1015 
=== Usages ===
=== Predecessor ===
i1014 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v601 address: v1034 lastLocationAccess: - value: i277 stateAfter: - #next: i1015  <|@  <|@
f <@~|@floating>@ <|@
tid v1035 <|@
result [v158|DWORD[_] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1012 
=== Succesors ===
=== Usages ===
i1015 v475 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1012  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1015 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:212) [bci: 439]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1035 
lastLocationAccess: - 
=== Succesors ===
next: v475 
=== Usages ===
i282 
=== Predecessor ===
v461 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1035 lastLocationAccess: - #next: v475  <|@  <|@
f <@~|@floating>@ <|@
tid i282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:212) [bci: 442]
stamp: i32
=== Inputs ===
x: i339 
y: i1015 
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i339 y: i1015  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:212) [bci: 443]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v601 
address: v1035 
lastLocationAccess: - 
value: i282 
stateAfter: - 
=== Succesors ===
next: i1016 
=== Usages ===
=== Predecessor ===
i1015 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v601 address: v1035 lastLocationAccess: - value: i282 stateAfter: - #next: i1016  <|@  <|@
f <@~|@floating>@ <|@
tid v1036 <|@
result [v158|DWORD[_] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1012 
=== Succesors ===
=== Usages ===
i1016 v489 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1012  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1016 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:213) [bci: 450]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1036 
lastLocationAccess: - 
=== Succesors ===
next: v489 
=== Usages ===
i287 
=== Predecessor ===
v475 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1036 lastLocationAccess: - #next: v489  <|@  <|@
f <@~|@floating>@ <|@
tid i287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:213) [bci: 453]
stamp: i32
=== Inputs ===
x: i340 
y: i1016 
=== Succesors ===
=== Usages ===
v489 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i340 y: i1016  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:213) [bci: 454]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v601 
address: v1036 
lastLocationAccess: - 
value: i287 
stateAfter: - 
=== Succesors ===
next: i1017 
=== Usages ===
=== Predecessor ===
i1016 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v601 address: v1036 lastLocationAccess: - value: i287 stateAfter: - #next: i1017  <|@  <|@
f <@~|@floating>@ <|@
tid v1037 <|@
result [v158|DWORD[_] * 8 + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1012 
=== Succesors ===
=== Usages ===
i1017 v503 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1012  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1017 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:214) [bci: 461]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1037 
lastLocationAccess: - 
=== Succesors ===
next: v503 
=== Usages ===
i292 
=== Predecessor ===
v489 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1037 lastLocationAccess: - #next: v503  <|@  <|@
f <@~|@floating>@ <|@
tid i292 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:214) [bci: 464]
stamp: i32
=== Inputs ===
x: i341 
y: i1017 
=== Succesors ===
=== Usages ===
v503 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i341 y: i1017  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:214) [bci: 465]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v601 
address: v1037 
lastLocationAccess: - 
value: i292 
stateAfter: - 
=== Succesors ===
next: i1018 
=== Usages ===
=== Predecessor ===
i1017 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v601 address: v1037 lastLocationAccess: - value: i292 stateAfter: - #next: i1018  <|@  <|@
f <@~|@floating>@ <|@
tid v1038 <|@
result [v158|DWORD[_] * 8 + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1012 
=== Succesors ===
=== Usages ===
i1018 v517 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1012  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1018 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:215) [bci: 472]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1038 
lastLocationAccess: - 
=== Succesors ===
next: v517 
=== Usages ===
i297 
=== Predecessor ===
v503 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1038 lastLocationAccess: - #next: v517  <|@  <|@
f <@~|@floating>@ <|@
tid i297 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:215) [bci: 475]
stamp: i32
=== Inputs ===
x: i342 
y: i1018 
=== Succesors ===
=== Usages ===
v517 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i342 y: i1018  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:215) [bci: 476]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v601 
address: v1038 
lastLocationAccess: - 
value: i297 
stateAfter: - 
=== Succesors ===
next: v300 
=== Usages ===
=== Predecessor ===
i1018 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v601 address: v1038 lastLocationAccess: - value: i297 stateAfter: - #next: v300  <|@  <|@
f <@*|@fixed>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:216) [bci: 477]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v517 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 16], y: v154|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 20], y: v155|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 24], y: v156|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 28], y: v157|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 32], y: v153|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1021 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
stamp: void
=== Inputs ===
=== Succesors ===
next: v946 
=== Usages ===
=== Predecessor ===
v580 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v946  <|@  <|@
f <@~|@floating>@ <|@
tid j527 <|@
result long[20|0x14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:212) [bci: 439]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j944 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i947 <|@
result int[-102716|0xfffffffffffe6ec4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
rawvalue: -102716
stableDimension: 0
stamp: i32 [-102716]
stampKind: i32
value: int[-102716|0xfffffffffffe6ec4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i943 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v946 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v939 
=== Predecessor ===
v1021 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-102716|0xfffffffffffe6ec4], long[20|0x14]] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B24" "B9" "B22" "B8" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i943 <|@
result v159|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: i32 [-110619 - -102716] bits:1...1001xxxxxx11x0010x
valueDescription: i32
=== Inputs ===
merge: v939 
values: i947 i949 i951 i954 i951 
=== Succesors ===
=== Usages ===
v945 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v939 values: i947 i949 i951 i954 i951  <|@  <|@
f <@~|@floating>@ <|@
tid j944 <|@
result v160|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: i64 [0 - 664] bits:0...0x0x00xxx00
valueDescription: i64
=== Inputs ===
merge: v939 
values: j527 j942 j952 j942 j952 
=== Succesors ===
=== Usages ===
v945 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v939 values: j527 j942 j952 j942 j952  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v939 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v946 v948 v950 v953 v995 
=== Succesors ===
next: v945 
=== Usages ===
i943 j944 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v946 v948 v950 v953 v995 #next: v945  <|@  <|@
f <@*|@fixed>@ <|@
tid v945 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.security.provider.SHA.implCompress0(SHA.java:203) [bci: 387]
stamp: void
=== Inputs ===
stateBefore: ?310 
actionAndReason: i943 
speculation: j944 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v939 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?310 actionAndReason: i943 speculation: j944  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v159|DWORD, v160|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v159|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v160|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: v1|QWORD[.] - - v2|DWORD v3|DWORD v4|DWORD v5|DWORD v6|DWORD v7|DWORD - 
>@ <|@ instruction DEOPT info [bci:357] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@31f9b0c2 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOV input: [v0|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV input: [v0|QWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v0|QWORD + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v0|QWORD + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV input: [v0|QWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV input: [v0|QWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v0|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ st <@st|@sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: v1|QWORD[.] - - v2|DWORD v3|DWORD v4|DWORD v5|DWORD v6|DWORD v7|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B29 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lsun/security/provider/SHA;, resolved>;compressed} state [bci:357] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.9523809523809523 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B25 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B24" 
    xhandlers
    flags 
    probability 4606753504549791646
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV input: [v1|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: v1|QWORD[.] - - v2|DWORD v3|DWORD v4|DWORD v5|DWORD v6|DWORD v7|DWORD - 
>@ <|@ instruction v9|DWORD = MOV input: [v8|DWORD[_] * 8 + 12] size: DWORD state [bci:357] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B23" 
    xhandlers
    flags 
    probability 4606753504549791646
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3087af84 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = ROL x: v2|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = XOR (x: v3|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = XOR (x: v12|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = ADD (x: v11|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = ADD (x: v14|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = ADD (x: v15|DWORD, ~y: [v10|QWORD[.] + v7|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = LEA address: [v16|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = INC value: v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = ROL x: v3|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v18|DWORD trueDestinationProbability: 0.95 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B23 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B10" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = LEA address: [v7|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B10 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B11" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE input: int[78|0x4e] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = SUB (x: v21|DWORD, ~y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOVSXD value: v22|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = ADD (x: v23|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = DEC value: v25|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v27|QWORD, y: v26|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v20|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B7" 
    successors "B12" "B22" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v18|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = ROL x: v17|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = XOR (x: v19|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = XOR (x: v29|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = ADD (x: v28|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = ADD (x: v31|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = ADD (x: v32|DWORD, ~y: [v10|QWORD[.] + v18|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = LEA address: [v33|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = LEA address: [v7|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v35|DWORD y: 80 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = CMOVE (falseValue: int[80|0x50], ~trueValue: v35|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = ROL x: v2|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|DWORD, v17|DWORD, v37|DWORD, v19|DWORD, v4|DWORD, v20|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606406907175871839
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|DWORD, v39|DWORD, v40|DWORD, v41|DWORD, v42|DWORD, v43|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v43|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576421901864634511
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = ROL x: v38|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = XOR (x: v40|DWORD, y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = XOR (x: v45|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = ADD (x: v44|DWORD, y: v46|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = ADD (x: v47|DWORD, y: v42|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = ADD (x: v48|DWORD, ~y: [v10|QWORD[.] + v43|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = LEA address: [v49|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = INC value: v43|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = ROL x: v39|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v50|DWORD, v38|DWORD, v52|DWORD, v40|DWORD, v41|DWORD, v51|DWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606324590299565885
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v43|DWORD, v42|DWORD, v41|DWORD, v40|DWORD, v39|DWORD, v38|DWORD] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" 
    successors "B17" "B18" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4612021107685376776
    begin_IR
      LIR
      nr   -1  <|@ instruction [v53|DWORD, v54|DWORD, v55|DWORD, v56|DWORD, v57|DWORD, v58|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.5789473684210522 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 72 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4608281511566220913
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOV input: [v10|QWORD[.] + v53|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = INC value: v53|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOV input: [v10|QWORD[.] + v60|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = LEA address: [v53|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOV input: [v10|QWORD[.] + v62|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = LEA address: [v53|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOV input: [v10|QWORD[.] + v64|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = LEA address: [v53|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = MOV input: [v10|QWORD[.] + v66|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = LEA address: [v53|DWORD + 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOV input: [v10|QWORD[.] + v68|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = LEA address: [v53|DWORD + 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOV input: [v10|QWORD[.] + v70|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = LEA address: [v53|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = ROL x: v58|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = XOR (x: v56|DWORD, y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = XOR (x: v74|DWORD, y: v55|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = ADD (x: v73|DWORD, y: v75|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = ADD (x: v76|DWORD, y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = ADD (x: v77|DWORD, y: v59|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = LEA address: [v78|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = ROL x: v79|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = ROL x: v57|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = XOR (x: v81|DWORD, y: v58|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = XOR (x: v56|DWORD, y: v82|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = ADD (x: v80|DWORD, y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = ADD (x: v84|DWORD, y: v55|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = ADD (x: v85|DWORD, y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = LEA address: [v86|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = ROL x: v87|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = ROL x: v58|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = XOR (x: v79|DWORD, y: v89|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = XOR (x: v81|DWORD, y: v90|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = ADD (x: v88|DWORD, y: v91|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = ADD (x: v92|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = ADD (x: v93|DWORD, y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = LEA address: [v94|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = ROL x: v95|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = ROL x: v87|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = ROL x: v79|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = ROL x: v95|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = XOR (x: v87|DWORD, y: v98|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = XOR (x: v89|DWORD, y: v100|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = ADD (x: v99|DWORD, y: v101|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = ADD (x: v102|DWORD, y: v81|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = ADD (x: v103|DWORD, y: v65|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = LEA address: [v104|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = ROL x: v105|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = XOR (x: v95|DWORD, y: v97|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = XOR (x: v98|DWORD, y: v107|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = ADD (x: v106|DWORD, y: v108|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = ADD (x: v109|DWORD, y: v89|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = ADD (x: v110|DWORD, y: v67|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = LEA address: [v111|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = ROL x: v112|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = XOR (x: v105|DWORD, y: v96|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = XOR (x: v97|DWORD, y: v114|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = ADD (x: v113|DWORD, y: v115|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = ADD (x: v116|DWORD, y: v98|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = ADD (x: v117|DWORD, y: v69|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = LEA address: [v118|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = ROL x: v119|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = ROL x: v105|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v122|DWORD = XOR (x: v112|DWORD, y: v121|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = XOR (x: v96|DWORD, y: v122|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v124|DWORD = ADD (x: v120|DWORD, y: v123|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = ADD (x: v124|DWORD, y: v97|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = ADD (x: v125|DWORD, y: v71|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v127|DWORD = LEA address: [v126|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v128|DWORD = ROL x: v127|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = ROL x: v112|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v130|DWORD = XOR (x: v119|DWORD, y: v129|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = XOR (x: v121|DWORD, y: v130|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = ADD (x: v128|DWORD, y: v131|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = ADD (x: v132|DWORD, y: v96|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v134|DWORD = ADD (x: v133|DWORD, ~y: [v10|QWORD[.] + v72|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v135|DWORD = LEA address: [v134|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v136|DWORD = ROL x: v119|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v137|DWORD = LEA address: [v53|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v137|DWORD, v121|DWORD, v129|DWORD, v136|DWORD, v127|DWORD, v135|DWORD] destination: B17 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606324590299565886
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v53|DWORD, v54|DWORD, v55|DWORD, v56|DWORD, v57|DWORD, v58|DWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606406907175871841
    begin_IR
      LIR
      nr   -1  <|@ instruction [v138|DWORD, v139|DWORD, v140|DWORD, v141|DWORD, v142|DWORD, v143|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v138|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576421901864634512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v144|DWORD = ROL x: v143|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = XOR (x: v141|DWORD, y: v142|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = XOR (x: v145|DWORD, y: v140|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v147|DWORD = ADD (x: v144|DWORD, y: v146|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v148|DWORD = ADD (x: v147|DWORD, y: v139|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v149|DWORD = ADD (x: v148|DWORD, ~y: [v10|QWORD[.] + v138|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v150|DWORD = LEA address: [v149|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v151|DWORD = ROL x: v142|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v152|DWORD = INC value: v138|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v152|DWORD, v140|DWORD, v141|DWORD, v151|DWORD, v143|DWORD, v150|DWORD] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606324590299565887
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v139|DWORD, v143|DWORD, v142|DWORD, v141|DWORD, v140|DWORD] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B26" 
    xhandlers
    flags 
    probability 4587023449039406624
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v6|DWORD, v2|DWORD, v3|DWORD, v4|DWORD, v5|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B26" 
    xhandlers
    flags 
    probability 4587023449039406622
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v5|DWORD, v17|DWORD, v2|DWORD, v19|DWORD, v4|DWORD] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B25" "B23" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [v153|DWORD, v154|DWORD, v155|DWORD, v156|DWORD, v157|DWORD] = LABEL alignment: 0 numbPhis: 5 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v158|DWORD[_] = MOV input: [v1|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
locals: v1|QWORD[.] - - v154|DWORD v155|DWORD v156|DWORD v157|DWORD v153|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v158|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 5 size: DWORD inlinedY: null state [bci:423] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 16], y: v154|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 20], y: v155|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 24], y: v156|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 28], y: v157|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 32], y: v153|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-105755|0xfffffffffffe62e5], long[0|0x0]] destination: B24 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-110619|0xfffffffffffe4fe5], long[664|0x298]] destination: B8 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -133915 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
locals: v1|QWORD[.] - - v154|DWORD v155|DWORD v156|DWORD v157|DWORD v153|DWORD - - 
>@ <|@ instruction DEOPT info [bci:423] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-108315|0xfffffffffffe58e5], long[0|0x0]] destination: B22 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-110619|0xfffffffffffe4fe5], long[664|0x298]] destination: B9 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-102716|0xfffffffffffe6ec4], long[20|0x14]] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B24" "B9" "B22" "B8" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v159|DWORD, v160|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v159|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v160|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: v1|QWORD[.] - - v2|DWORD v3|DWORD v4|DWORD v5|DWORD v6|DWORD v7|DWORD - 
>@ <|@ instruction DEOPT info [bci:357] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // W:int[]
     4: ifnonnull     15
     7: aload_0       
     8: bipush        80
    10: newarray      int
    12: putfield      #5          // W:int[]
    15: aload_1       
    16: iload_2       
    17: aload_0       
    18: getfield      #5          // W:int[]
    21: invokestatic  #19         // sun.security.provider.ByteArrayAccess.b2iBig64:(byte[], int, int[])void
    24: bipush        16
    26: istore_3      
    27: iload_3       
    28: bipush        79
    30: if_icmpgt     91
    33: aload_0       
    34: getfield      #5          // W:int[]
    37: iload_3       
    38: iconst_3      
    39: isub          
    40: iaload        
    41: aload_0       
    42: getfield      #5          // W:int[]
    45: iload_3       
    46: bipush        8
    48: isub          
    49: iaload        
    50: ixor          
    51: aload_0       
    52: getfield      #5          // W:int[]
    55: iload_3       
    56: bipush        14
    58: isub          
    59: iaload        
    60: ixor          
    61: aload_0       
    62: getfield      #5          // W:int[]
    65: iload_3       
    66: bipush        16
    68: isub          
    69: iaload        
    70: ixor          
    71: istore        4
    73: aload_0       
    74: getfield      #5          // W:int[]
    77: iload_3       
    78: iload         4
    80: iconst_1      
    81: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
    84: iastore       
    85: iinc          
    88: goto          27
    91: aload_0       
    92: getfield      #1          // state:int[]
    95: iconst_0      
    96: iaload        
    97: istore_3      
    98: aload_0       
    99: getfield      #1          // state:int[]
   102: iconst_1      
   103: iaload        
   104: istore        4
   106: aload_0       
   107: getfield      #1          // state:int[]
   110: iconst_2      
   111: iaload        
   112: istore        5
   114: aload_0       
   115: getfield      #1          // state:int[]
   118: iconst_3      
   119: iaload        
   120: istore        6
   122: aload_0       
   123: getfield      #1          // state:int[]
   126: iconst_4      
   127: iaload        
   128: istore        7
   130: iconst_0      
   131: istore        8
   133: iload         8
   135: bipush        20
   137: if_icmpge     204
   140: iload_3       
   141: iconst_5      
   142: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   145: iload         4
   147: iload         5
   149: iand          
   150: iload         4
   152: iconst_m1     
   153: ixor          
   154: iload         6
   156: iand          
   157: ior           
   158: iadd          
   159: iload         7
   161: iadd          
   162: aload_0       
   163: getfield      #5          // W:int[]
   166: iload         8
   168: iaload        
   169: iadd          
   170: ldc           #100        // 1518500249
   172: iadd          
   173: istore        9
   175: iload         6
   177: istore        7
   179: iload         5
   181: istore        6
   183: iload         4
   185: bipush        30
   187: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   190: istore        5
   192: iload_3       
   193: istore        4
   195: iload         9
   197: istore_3      
   198: iinc          
   201: goto          133
   204: bipush        20
   206: istore        8
   208: iload         8
   210: bipush        40
   212: if_icmpge     274
   215: iload_3       
   216: iconst_5      
   217: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   220: iload         4
   222: iload         5
   224: ixor          
   225: iload         6
   227: ixor          
   228: iadd          
   229: iload         7
   231: iadd          
   232: aload_0       
   233: getfield      #5          // W:int[]
   236: iload         8
   238: iaload        
   239: iadd          
   240: ldc           #101        // 1859775393
   242: iadd          
   243: istore        9
   245: iload         6
   247: istore        7
   249: iload         5
   251: istore        6
   253: iload         4
   255: bipush        30
   257: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   260: istore        5
   262: iload_3       
   263: istore        4
   265: iload         9
   267: istore_3      
   268: iinc          
   271: goto          208
   274: bipush        40
   276: istore        8
   278: iload         8
   280: bipush        60
   282: if_icmpge     353
   285: iload_3       
   286: iconst_5      
   287: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   290: iload         4
   292: iload         5
   294: iand          
   295: iload         4
   297: iload         6
   299: iand          
   300: ior           
   301: iload         5
   303: iload         6
   305: iand          
   306: ior           
   307: iadd          
   308: iload         7
   310: iadd          
   311: aload_0       
   312: getfield      #5          // W:int[]
   315: iload         8
   317: iaload        
   318: iadd          
   319: ldc           #102        // -1894007588
   321: iadd          
   322: istore        9
   324: iload         6
   326: istore        7
   328: iload         5
   330: istore        6
   332: iload         4
   334: bipush        30
   336: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   339: istore        5
   341: iload_3       
   342: istore        4
   344: iload         9
   346: istore_3      
   347: iinc          
   350: goto          278
   353: bipush        60
   355: istore        8
   357: iload         8
   359: bipush        80
   361: if_icmpge     423
   364: iload_3       
   365: iconst_5      
   366: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   369: iload         4
   371: iload         5
   373: ixor          
   374: iload         6
   376: ixor          
   377: iadd          
   378: iload         7
   380: iadd          
   381: aload_0       
   382: getfield      #5          // W:int[]
   385: iload         8
   387: iaload        
   388: iadd          
   389: ldc           #103        // -899497514
   391: iadd          
   392: istore        9
   394: iload         6
   396: istore        7
   398: iload         5
   400: istore        6
   402: iload         4
   404: bipush        30
   406: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   409: istore        5
   411: iload_3       
   412: istore        4
   414: iload         9
   416: istore_3      
   417: iinc          
   420: goto          357
   423: aload_0       
   424: getfield      #1          // state:int[]
   427: iconst_0      
   428: dup2          
   429: iaload        
   430: iload_3       
   431: iadd          
   432: iastore       
   433: aload_0       
   434: getfield      #1          // state:int[]
   437: iconst_1      
   438: dup2          
   439: iaload        
   440: iload         4
   442: iadd          
   443: iastore       
   444: aload_0       
   445: getfield      #1          // state:int[]
   448: iconst_2      
   449: dup2          
   450: iaload        
   451: iload         5
   453: iadd          
   454: iastore       
   455: aload_0       
   456: getfield      #1          // state:int[]
   459: iconst_3      
   460: dup2          
   461: iaload        
   462: iload         6
   464: iadd          
   465: iastore       
   466: aload_0       
   467: getfield      #1          // state:int[]
   470: iconst_4      
   471: dup2          
   472: iaload        
   473: iload         7
   475: iadd          
   476: iastore       
   477: return        
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@31f9b0c2 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOV input: [v0|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV input: [v0|QWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v0|QWORD + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v0|QWORD + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV input: [v0|QWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV input: [v0|QWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v0|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ st <@st|@sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: v1|QWORD[.] - - v2|DWORD v3|DWORD v4|DWORD v5|DWORD v6|DWORD v7|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B29 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lsun/security/provider/SHA;, resolved>;compressed} state [bci:357] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.9523809523809523 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B25 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B24" 
    xhandlers
    flags 
    probability 4606753504549791646
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV input: [v1|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: v1|QWORD[.] - - v2|DWORD v3|DWORD v4|DWORD v5|DWORD v6|DWORD v7|DWORD - 
>@ <|@ instruction v9|DWORD = MOV input: [v8|DWORD[_] * 8 + 12] size: DWORD state [bci:357] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B23" 
    xhandlers
    flags 
    probability 4606753504549791646
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3087af84 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = ROL x: v2|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = XOR (x: v3|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = XOR (x: v12|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = ADD (x: v11|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = ADD (x: v14|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = ADD (x: v15|DWORD, ~y: [v10|QWORD[.] + v7|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = LEA address: [v16|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = INC value: v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = ROL x: v3|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v18|DWORD trueDestinationProbability: 0.95 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B23 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B10" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = LEA address: [v7|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B10 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B11" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE input: int[78|0x4e] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = SUB (x: v21|DWORD, ~y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOVSXD value: v22|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = ADD (x: v23|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = DEC value: v25|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v27|QWORD, y: v26|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v20|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B7" 
    successors "B12" "B22" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v18|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = ROL x: v17|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = XOR (x: v19|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = XOR (x: v29|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = ADD (x: v28|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = ADD (x: v31|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = ADD (x: v32|DWORD, ~y: [v10|QWORD[.] + v18|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = LEA address: [v33|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = LEA address: [v7|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v35|DWORD y: 80 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = CMOVE (falseValue: int[80|0x50], ~trueValue: v35|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = ROL x: v2|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|DWORD, v17|DWORD, v37|DWORD, v19|DWORD, v4|DWORD, v20|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606406907175871839
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|DWORD, v39|DWORD, v40|DWORD, v41|DWORD, v42|DWORD, v43|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v43|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576421901864634511
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = ROL x: v38|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = XOR (x: v40|DWORD, y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = XOR (x: v45|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = ADD (x: v44|DWORD, y: v46|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = ADD (x: v47|DWORD, y: v42|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = ADD (x: v48|DWORD, ~y: [v10|QWORD[.] + v43|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = LEA address: [v49|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = INC value: v43|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = ROL x: v39|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v50|DWORD, v38|DWORD, v52|DWORD, v40|DWORD, v41|DWORD, v51|DWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606324590299565885
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v43|DWORD, v42|DWORD, v41|DWORD, v40|DWORD, v39|DWORD, v38|DWORD] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" 
    successors "B17" "B18" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4612021107685376776
    begin_IR
      LIR
      nr   -1  <|@ instruction [v53|DWORD, v54|DWORD, v55|DWORD, v56|DWORD, v57|DWORD, v58|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.5789473684210522 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 72 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4608281511566220913
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOV input: [v10|QWORD[.] + v53|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = INC value: v53|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOV input: [v10|QWORD[.] + v60|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = LEA address: [v53|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOV input: [v10|QWORD[.] + v62|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = LEA address: [v53|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOV input: [v10|QWORD[.] + v64|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = LEA address: [v53|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = MOV input: [v10|QWORD[.] + v66|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = LEA address: [v53|DWORD + 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOV input: [v10|QWORD[.] + v68|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = LEA address: [v53|DWORD + 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOV input: [v10|QWORD[.] + v70|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = LEA address: [v53|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = ROL x: v58|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = XOR (x: v56|DWORD, y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = XOR (x: v74|DWORD, y: v55|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = ADD (x: v73|DWORD, y: v75|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = ADD (x: v76|DWORD, y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = ADD (x: v77|DWORD, y: v59|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = LEA address: [v78|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = ROL x: v79|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = ROL x: v57|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = XOR (x: v81|DWORD, y: v58|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = XOR (x: v56|DWORD, y: v82|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = ADD (x: v80|DWORD, y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = ADD (x: v84|DWORD, y: v55|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = ADD (x: v85|DWORD, y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = LEA address: [v86|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = ROL x: v87|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = ROL x: v58|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = XOR (x: v79|DWORD, y: v89|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = XOR (x: v81|DWORD, y: v90|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = ADD (x: v88|DWORD, y: v91|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = ADD (x: v92|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = ADD (x: v93|DWORD, y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = LEA address: [v94|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = ROL x: v95|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = ROL x: v87|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = ROL x: v79|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = ROL x: v95|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = XOR (x: v87|DWORD, y: v98|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = XOR (x: v89|DWORD, y: v100|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = ADD (x: v99|DWORD, y: v101|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = ADD (x: v102|DWORD, y: v81|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = ADD (x: v103|DWORD, y: v65|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = LEA address: [v104|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = ROL x: v105|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = XOR (x: v95|DWORD, y: v97|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = XOR (x: v98|DWORD, y: v107|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = ADD (x: v106|DWORD, y: v108|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = ADD (x: v109|DWORD, y: v89|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = ADD (x: v110|DWORD, y: v67|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = LEA address: [v111|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = ROL x: v112|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = XOR (x: v105|DWORD, y: v96|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = XOR (x: v97|DWORD, y: v114|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = ADD (x: v113|DWORD, y: v115|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = ADD (x: v116|DWORD, y: v98|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = ADD (x: v117|DWORD, y: v69|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = LEA address: [v118|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = ROL x: v119|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = ROL x: v105|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v122|DWORD = XOR (x: v112|DWORD, y: v121|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = XOR (x: v96|DWORD, y: v122|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v124|DWORD = ADD (x: v120|DWORD, y: v123|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = ADD (x: v124|DWORD, y: v97|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = ADD (x: v125|DWORD, y: v71|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v127|DWORD = LEA address: [v126|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v128|DWORD = ROL x: v127|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = ROL x: v112|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v130|DWORD = XOR (x: v119|DWORD, y: v129|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = XOR (x: v121|DWORD, y: v130|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = ADD (x: v128|DWORD, y: v131|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = ADD (x: v132|DWORD, y: v96|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v134|DWORD = ADD (x: v133|DWORD, ~y: [v10|QWORD[.] + v72|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v135|DWORD = LEA address: [v134|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v136|DWORD = ROL x: v119|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v137|DWORD = LEA address: [v53|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v137|DWORD, v121|DWORD, v129|DWORD, v136|DWORD, v127|DWORD, v135|DWORD] destination: B17 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606324590299565886
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v53|DWORD, v54|DWORD, v55|DWORD, v56|DWORD, v57|DWORD, v58|DWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606406907175871841
    begin_IR
      LIR
      nr   -1  <|@ instruction [v138|DWORD, v139|DWORD, v140|DWORD, v141|DWORD, v142|DWORD, v143|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v138|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576421901864634512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v144|DWORD = ROL x: v143|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = XOR (x: v141|DWORD, y: v142|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = XOR (x: v145|DWORD, y: v140|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v147|DWORD = ADD (x: v144|DWORD, y: v146|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v148|DWORD = ADD (x: v147|DWORD, y: v139|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v149|DWORD = ADD (x: v148|DWORD, ~y: [v10|QWORD[.] + v138|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v150|DWORD = LEA address: [v149|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v151|DWORD = ROL x: v142|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v152|DWORD = INC value: v138|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v152|DWORD, v140|DWORD, v141|DWORD, v151|DWORD, v143|DWORD, v150|DWORD] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606324590299565887
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v139|DWORD, v143|DWORD, v142|DWORD, v141|DWORD, v140|DWORD] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B26" 
    xhandlers
    flags 
    probability 4587023449039406624
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v6|DWORD, v2|DWORD, v3|DWORD, v4|DWORD, v5|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B26" 
    xhandlers
    flags 
    probability 4587023449039406622
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v5|DWORD, v17|DWORD, v2|DWORD, v19|DWORD, v4|DWORD] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B25" "B23" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [v153|DWORD, v154|DWORD, v155|DWORD, v156|DWORD, v157|DWORD] = LABEL alignment: 0 numbPhis: 5 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v158|DWORD[_] = MOV input: [v1|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
locals: v1|QWORD[.] - - v154|DWORD v155|DWORD v156|DWORD v157|DWORD v153|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v158|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 5 size: DWORD inlinedY: null state [bci:423] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 16], y: v154|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 20], y: v155|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 24], y: v156|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 28], y: v157|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 32], y: v153|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-105755|0xfffffffffffe62e5], long[0|0x0]] destination: B24 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-110619|0xfffffffffffe4fe5], long[664|0x298]] destination: B8 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -133915 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
locals: v1|QWORD[.] - - v154|DWORD v155|DWORD v156|DWORD v157|DWORD v153|DWORD - - 
>@ <|@ instruction DEOPT info [bci:423] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-108315|0xfffffffffffe58e5], long[0|0x0]] destination: B22 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-110619|0xfffffffffffe4fe5], long[664|0x298]] destination: B9 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-102716|0xfffffffffffe6ec4], long[20|0x14]] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B24" "B9" "B22" "B8" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v159|DWORD, v160|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v159|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v160|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: v1|QWORD[.] - - v2|DWORD v3|DWORD v4|DWORD v5|DWORD v6|DWORD v7|DWORD - 
>@ <|@ instruction DEOPT info [bci:357] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // W:int[]
     4: ifnonnull     15
     7: aload_0       
     8: bipush        80
    10: newarray      int
    12: putfield      #5          // W:int[]
    15: aload_1       
    16: iload_2       
    17: aload_0       
    18: getfield      #5          // W:int[]
    21: invokestatic  #19         // sun.security.provider.ByteArrayAccess.b2iBig64:(byte[], int, int[])void
    24: bipush        16
    26: istore_3      
    27: iload_3       
    28: bipush        79
    30: if_icmpgt     91
    33: aload_0       
    34: getfield      #5          // W:int[]
    37: iload_3       
    38: iconst_3      
    39: isub          
    40: iaload        
    41: aload_0       
    42: getfield      #5          // W:int[]
    45: iload_3       
    46: bipush        8
    48: isub          
    49: iaload        
    50: ixor          
    51: aload_0       
    52: getfield      #5          // W:int[]
    55: iload_3       
    56: bipush        14
    58: isub          
    59: iaload        
    60: ixor          
    61: aload_0       
    62: getfield      #5          // W:int[]
    65: iload_3       
    66: bipush        16
    68: isub          
    69: iaload        
    70: ixor          
    71: istore        4
    73: aload_0       
    74: getfield      #5          // W:int[]
    77: iload_3       
    78: iload         4
    80: iconst_1      
    81: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
    84: iastore       
    85: iinc          
    88: goto          27
    91: aload_0       
    92: getfield      #1          // state:int[]
    95: iconst_0      
    96: iaload        
    97: istore_3      
    98: aload_0       
    99: getfield      #1          // state:int[]
   102: iconst_1      
   103: iaload        
   104: istore        4
   106: aload_0       
   107: getfield      #1          // state:int[]
   110: iconst_2      
   111: iaload        
   112: istore        5
   114: aload_0       
   115: getfield      #1          // state:int[]
   118: iconst_3      
   119: iaload        
   120: istore        6
   122: aload_0       
   123: getfield      #1          // state:int[]
   126: iconst_4      
   127: iaload        
   128: istore        7
   130: iconst_0      
   131: istore        8
   133: iload         8
   135: bipush        20
   137: if_icmpge     204
   140: iload_3       
   141: iconst_5      
   142: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   145: iload         4
   147: iload         5
   149: iand          
   150: iload         4
   152: iconst_m1     
   153: ixor          
   154: iload         6
   156: iand          
   157: ior           
   158: iadd          
   159: iload         7
   161: iadd          
   162: aload_0       
   163: getfield      #5          // W:int[]
   166: iload         8
   168: iaload        
   169: iadd          
   170: ldc           #100        // 1518500249
   172: iadd          
   173: istore        9
   175: iload         6
   177: istore        7
   179: iload         5
   181: istore        6
   183: iload         4
   185: bipush        30
   187: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   190: istore        5
   192: iload_3       
   193: istore        4
   195: iload         9
   197: istore_3      
   198: iinc          
   201: goto          133
   204: bipush        20
   206: istore        8
   208: iload         8
   210: bipush        40
   212: if_icmpge     274
   215: iload_3       
   216: iconst_5      
   217: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   220: iload         4
   222: iload         5
   224: ixor          
   225: iload         6
   227: ixor          
   228: iadd          
   229: iload         7
   231: iadd          
   232: aload_0       
   233: getfield      #5          // W:int[]
   236: iload         8
   238: iaload        
   239: iadd          
   240: ldc           #101        // 1859775393
   242: iadd          
   243: istore        9
   245: iload         6
   247: istore        7
   249: iload         5
   251: istore        6
   253: iload         4
   255: bipush        30
   257: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   260: istore        5
   262: iload_3       
   263: istore        4
   265: iload         9
   267: istore_3      
   268: iinc          
   271: goto          208
   274: bipush        40
   276: istore        8
   278: iload         8
   280: bipush        60
   282: if_icmpge     353
   285: iload_3       
   286: iconst_5      
   287: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   290: iload         4
   292: iload         5
   294: iand          
   295: iload         4
   297: iload         6
   299: iand          
   300: ior           
   301: iload         5
   303: iload         6
   305: iand          
   306: ior           
   307: iadd          
   308: iload         7
   310: iadd          
   311: aload_0       
   312: getfield      #5          // W:int[]
   315: iload         8
   317: iaload        
   318: iadd          
   319: ldc           #102        // -1894007588
   321: iadd          
   322: istore        9
   324: iload         6
   326: istore        7
   328: iload         5
   330: istore        6
   332: iload         4
   334: bipush        30
   336: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   339: istore        5
   341: iload_3       
   342: istore        4
   344: iload         9
   346: istore_3      
   347: iinc          
   350: goto          278
   353: bipush        60
   355: istore        8
   357: iload         8
   359: bipush        80
   361: if_icmpge     423
   364: iload_3       
   365: iconst_5      
   366: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   369: iload         4
   371: iload         5
   373: ixor          
   374: iload         6
   376: ixor          
   377: iadd          
   378: iload         7
   380: iadd          
   381: aload_0       
   382: getfield      #5          // W:int[]
   385: iload         8
   387: iaload        
   388: iadd          
   389: ldc           #103        // -899497514
   391: iadd          
   392: istore        9
   394: iload         6
   396: istore        7
   398: iload         5
   400: istore        6
   402: iload         4
   404: bipush        30
   406: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   409: istore        5
   411: iload_3       
   412: istore        4
   414: iload         9
   416: istore_3      
   417: iinc          
   420: goto          357
   423: aload_0       
   424: getfield      #1          // state:int[]
   427: iconst_0      
   428: dup2          
   429: iaload        
   430: iload_3       
   431: iadd          
   432: iastore       
   433: aload_0       
   434: getfield      #1          // state:int[]
   437: iconst_1      
   438: dup2          
   439: iaload        
   440: iload         4
   442: iadd          
   443: iastore       
   444: aload_0       
   445: getfield      #1          // state:int[]
   448: iconst_2      
   449: dup2          
   450: iaload        
   451: iload         5
   453: iadd          
   454: iastore       
   455: aload_0       
   456: getfield      #1          // state:int[]
   459: iconst_3      
   460: dup2          
   461: iaload        
   462: iload         6
   464: iadd          
   465: iastore       
   466: aload_0       
   467: getfield      #1          // state:int[]
   470: iconst_4      
   471: dup2          
   472: iaload        
   473: iload         7
   475: iadd          
   476: iastore       
   477: return        
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@31f9b0c2 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOV input: [v0|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV input: [v0|QWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v0|QWORD + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v0|QWORD + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV input: [v0|QWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV input: [v0|QWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v0|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ st <@st|@sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: v1|QWORD[.] - - v2|DWORD v3|DWORD v4|DWORD v5|DWORD v6|DWORD v7|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B29 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lsun/security/provider/SHA;, resolved>;compressed} state [bci:357] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.9523809523809523 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B25 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B24" 
    xhandlers
    flags 
    probability 4606753504549791646
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV input: [v1|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: v1|QWORD[.] - - v2|DWORD v3|DWORD v4|DWORD v5|DWORD v6|DWORD v7|DWORD - 
>@ <|@ instruction v9|DWORD = MOV input: [v8|DWORD[_] * 8 + 12] size: DWORD state [bci:357] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B23" 
    xhandlers
    flags 
    probability 4606753504549791646
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3087af84 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = ROL x: v2|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = XOR (x: v3|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = XOR (x: v12|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = ADD (x: v11|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = ADD (x: v14|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = ADD (x: v15|DWORD, ~y: [v10|QWORD[.] + v7|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = LEA address: [v16|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = INC value: v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = ROL x: v3|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v18|DWORD trueDestinationProbability: 0.95 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B23 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B10" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = LEA address: [v7|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B10 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B11" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE input: int[78|0x4e] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = SUB (x: v21|DWORD, ~y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOVSXD value: v22|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = ADD (x: v23|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = DEC value: v25|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v27|QWORD, y: v26|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v20|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B7" 
    successors "B12" "B22" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v18|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = ROL x: v17|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = XOR (x: v19|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = XOR (x: v29|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = ADD (x: v28|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = ADD (x: v31|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = ADD (x: v32|DWORD, ~y: [v10|QWORD[.] + v18|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = LEA address: [v33|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = LEA address: [v7|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v35|DWORD y: 80 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = CMOVE (falseValue: int[80|0x50], ~trueValue: v35|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = ROL x: v2|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|DWORD, v17|DWORD, v37|DWORD, v19|DWORD, v4|DWORD, v20|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606406907175871839
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|DWORD, v39|DWORD, v40|DWORD, v41|DWORD, v42|DWORD, v43|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v43|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576421901864634511
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = ROL x: v38|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = XOR (x: v40|DWORD, y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = XOR (x: v45|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = ADD (x: v44|DWORD, y: v46|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = ADD (x: v47|DWORD, y: v42|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = ADD (x: v48|DWORD, ~y: [v10|QWORD[.] + v43|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = LEA address: [v49|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = INC value: v43|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = ROL x: v39|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v50|DWORD, v38|DWORD, v52|DWORD, v40|DWORD, v41|DWORD, v51|DWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606324590299565885
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v43|DWORD, v42|DWORD, v41|DWORD, v40|DWORD, v39|DWORD, v38|DWORD] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" 
    successors "B17" "B18" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4612021107685376776
    begin_IR
      LIR
      nr   -1  <|@ instruction [v53|DWORD, v54|DWORD, v55|DWORD, v56|DWORD, v57|DWORD, v58|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.5789473684210522 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 72 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4608281511566220913
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOV input: [v10|QWORD[.] + v53|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = INC value: v53|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOV input: [v10|QWORD[.] + v60|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = LEA address: [v53|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOV input: [v10|QWORD[.] + v62|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = LEA address: [v53|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOV input: [v10|QWORD[.] + v64|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = LEA address: [v53|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = MOV input: [v10|QWORD[.] + v66|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = LEA address: [v53|DWORD + 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOV input: [v10|QWORD[.] + v68|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = LEA address: [v53|DWORD + 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOV input: [v10|QWORD[.] + v70|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = LEA address: [v53|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = ROL x: v58|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = XOR (x: v56|DWORD, y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = XOR (x: v74|DWORD, y: v55|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = ADD (x: v73|DWORD, y: v75|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = ADD (x: v76|DWORD, y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = ADD (x: v77|DWORD, y: v59|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = LEA address: [v78|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = ROL x: v79|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = ROL x: v57|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = XOR (x: v81|DWORD, y: v58|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = XOR (x: v56|DWORD, y: v82|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = ADD (x: v80|DWORD, y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = ADD (x: v84|DWORD, y: v55|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = ADD (x: v85|DWORD, y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = LEA address: [v86|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = ROL x: v87|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = ROL x: v58|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = XOR (x: v79|DWORD, y: v89|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = XOR (x: v81|DWORD, y: v90|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = ADD (x: v88|DWORD, y: v91|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = ADD (x: v92|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = ADD (x: v93|DWORD, y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = LEA address: [v94|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = ROL x: v95|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = ROL x: v87|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = ROL x: v79|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = ROL x: v95|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = XOR (x: v87|DWORD, y: v98|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = XOR (x: v89|DWORD, y: v100|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = ADD (x: v99|DWORD, y: v101|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = ADD (x: v102|DWORD, y: v81|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = ADD (x: v103|DWORD, y: v65|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = LEA address: [v104|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = ROL x: v105|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = XOR (x: v95|DWORD, y: v97|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = XOR (x: v98|DWORD, y: v107|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = ADD (x: v106|DWORD, y: v108|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = ADD (x: v109|DWORD, y: v89|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = ADD (x: v110|DWORD, y: v67|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = LEA address: [v111|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = ROL x: v112|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = XOR (x: v105|DWORD, y: v96|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = XOR (x: v97|DWORD, y: v114|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = ADD (x: v113|DWORD, y: v115|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = ADD (x: v116|DWORD, y: v98|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = ADD (x: v117|DWORD, y: v69|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = LEA address: [v118|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = ROL x: v119|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = ROL x: v105|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v122|DWORD = XOR (x: v112|DWORD, y: v121|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = XOR (x: v96|DWORD, y: v122|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v124|DWORD = ADD (x: v120|DWORD, y: v123|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = ADD (x: v124|DWORD, y: v97|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = ADD (x: v125|DWORD, y: v71|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v127|DWORD = LEA address: [v126|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v128|DWORD = ROL x: v127|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = ROL x: v112|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v130|DWORD = XOR (x: v119|DWORD, y: v129|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = XOR (x: v121|DWORD, y: v130|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = ADD (x: v128|DWORD, y: v131|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = ADD (x: v132|DWORD, y: v96|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v134|DWORD = ADD (x: v133|DWORD, ~y: [v10|QWORD[.] + v72|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v135|DWORD = LEA address: [v134|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v136|DWORD = ROL x: v119|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v137|DWORD = LEA address: [v53|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v137|DWORD, v121|DWORD, v129|DWORD, v136|DWORD, v127|DWORD, v135|DWORD] destination: B17 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606324590299565886
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v53|DWORD, v54|DWORD, v55|DWORD, v56|DWORD, v57|DWORD, v58|DWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606406907175871841
    begin_IR
      LIR
      nr   -1  <|@ instruction [v138|DWORD, v139|DWORD, v140|DWORD, v141|DWORD, v142|DWORD, v143|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v138|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576421901864634512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v144|DWORD = ROL x: v143|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = XOR (x: v141|DWORD, y: v142|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = XOR (x: v145|DWORD, y: v140|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v147|DWORD = ADD (x: v144|DWORD, y: v146|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v148|DWORD = ADD (x: v147|DWORD, y: v139|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v149|DWORD = ADD (x: v148|DWORD, ~y: [v10|QWORD[.] + v138|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v150|DWORD = LEA address: [v149|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v151|DWORD = ROL x: v142|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v152|DWORD = INC value: v138|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v152|DWORD, v140|DWORD, v141|DWORD, v151|DWORD, v143|DWORD, v150|DWORD] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606324590299565887
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v139|DWORD, v143|DWORD, v142|DWORD, v141|DWORD, v140|DWORD] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B26" 
    xhandlers
    flags 
    probability 4587023449039406624
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v6|DWORD, v2|DWORD, v3|DWORD, v4|DWORD, v5|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B26" 
    xhandlers
    flags 
    probability 4587023449039406622
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v5|DWORD, v17|DWORD, v2|DWORD, v19|DWORD, v4|DWORD] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B25" "B23" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [v153|DWORD, v154|DWORD, v155|DWORD, v156|DWORD, v157|DWORD] = LABEL alignment: 0 numbPhis: 5 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v158|DWORD[_] = MOV input: [v1|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
locals: v1|QWORD[.] - - v154|DWORD v155|DWORD v156|DWORD v157|DWORD v153|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v158|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 5 size: DWORD inlinedY: null state [bci:423] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 16], y: v154|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 20], y: v155|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 24], y: v156|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 28], y: v157|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 32], y: v153|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-105755|0xfffffffffffe62e5], long[0|0x0]] destination: B24 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-110619|0xfffffffffffe4fe5], long[664|0x298]] destination: B8 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -133915 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
locals: v1|QWORD[.] - - v154|DWORD v155|DWORD v156|DWORD v157|DWORD v153|DWORD - - 
>@ <|@ instruction DEOPT info [bci:423] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-108315|0xfffffffffffe58e5], long[0|0x0]] destination: B22 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-110619|0xfffffffffffe4fe5], long[664|0x298]] destination: B9 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-102716|0xfffffffffffe6ec4], long[20|0x14]] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B24" "B9" "B22" "B8" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v159|DWORD, v160|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v159|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v160|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: v1|QWORD[.] - - v2|DWORD v3|DWORD v4|DWORD v5|DWORD v6|DWORD v7|DWORD - 
>@ <|@ instruction DEOPT info [bci:357] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // W:int[]
     4: ifnonnull     15
     7: aload_0       
     8: bipush        80
    10: newarray      int
    12: putfield      #5          // W:int[]
    15: aload_1       
    16: iload_2       
    17: aload_0       
    18: getfield      #5          // W:int[]
    21: invokestatic  #19         // sun.security.provider.ByteArrayAccess.b2iBig64:(byte[], int, int[])void
    24: bipush        16
    26: istore_3      
    27: iload_3       
    28: bipush        79
    30: if_icmpgt     91
    33: aload_0       
    34: getfield      #5          // W:int[]
    37: iload_3       
    38: iconst_3      
    39: isub          
    40: iaload        
    41: aload_0       
    42: getfield      #5          // W:int[]
    45: iload_3       
    46: bipush        8
    48: isub          
    49: iaload        
    50: ixor          
    51: aload_0       
    52: getfield      #5          // W:int[]
    55: iload_3       
    56: bipush        14
    58: isub          
    59: iaload        
    60: ixor          
    61: aload_0       
    62: getfield      #5          // W:int[]
    65: iload_3       
    66: bipush        16
    68: isub          
    69: iaload        
    70: ixor          
    71: istore        4
    73: aload_0       
    74: getfield      #5          // W:int[]
    77: iload_3       
    78: iload         4
    80: iconst_1      
    81: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
    84: iastore       
    85: iinc          
    88: goto          27
    91: aload_0       
    92: getfield      #1          // state:int[]
    95: iconst_0      
    96: iaload        
    97: istore_3      
    98: aload_0       
    99: getfield      #1          // state:int[]
   102: iconst_1      
   103: iaload        
   104: istore        4
   106: aload_0       
   107: getfield      #1          // state:int[]
   110: iconst_2      
   111: iaload        
   112: istore        5
   114: aload_0       
   115: getfield      #1          // state:int[]
   118: iconst_3      
   119: iaload        
   120: istore        6
   122: aload_0       
   123: getfield      #1          // state:int[]
   126: iconst_4      
   127: iaload        
   128: istore        7
   130: iconst_0      
   131: istore        8
   133: iload         8
   135: bipush        20
   137: if_icmpge     204
   140: iload_3       
   141: iconst_5      
   142: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   145: iload         4
   147: iload         5
   149: iand          
   150: iload         4
   152: iconst_m1     
   153: ixor          
   154: iload         6
   156: iand          
   157: ior           
   158: iadd          
   159: iload         7
   161: iadd          
   162: aload_0       
   163: getfield      #5          // W:int[]
   166: iload         8
   168: iaload        
   169: iadd          
   170: ldc           #100        // 1518500249
   172: iadd          
   173: istore        9
   175: iload         6
   177: istore        7
   179: iload         5
   181: istore        6
   183: iload         4
   185: bipush        30
   187: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   190: istore        5
   192: iload_3       
   193: istore        4
   195: iload         9
   197: istore_3      
   198: iinc          
   201: goto          133
   204: bipush        20
   206: istore        8
   208: iload         8
   210: bipush        40
   212: if_icmpge     274
   215: iload_3       
   216: iconst_5      
   217: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   220: iload         4
   222: iload         5
   224: ixor          
   225: iload         6
   227: ixor          
   228: iadd          
   229: iload         7
   231: iadd          
   232: aload_0       
   233: getfield      #5          // W:int[]
   236: iload         8
   238: iaload        
   239: iadd          
   240: ldc           #101        // 1859775393
   242: iadd          
   243: istore        9
   245: iload         6
   247: istore        7
   249: iload         5
   251: istore        6
   253: iload         4
   255: bipush        30
   257: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   260: istore        5
   262: iload_3       
   263: istore        4
   265: iload         9
   267: istore_3      
   268: iinc          
   271: goto          208
   274: bipush        40
   276: istore        8
   278: iload         8
   280: bipush        60
   282: if_icmpge     353
   285: iload_3       
   286: iconst_5      
   287: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   290: iload         4
   292: iload         5
   294: iand          
   295: iload         4
   297: iload         6
   299: iand          
   300: ior           
   301: iload         5
   303: iload         6
   305: iand          
   306: ior           
   307: iadd          
   308: iload         7
   310: iadd          
   311: aload_0       
   312: getfield      #5          // W:int[]
   315: iload         8
   317: iaload        
   318: iadd          
   319: ldc           #102        // -1894007588
   321: iadd          
   322: istore        9
   324: iload         6
   326: istore        7
   328: iload         5
   330: istore        6
   332: iload         4
   334: bipush        30
   336: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   339: istore        5
   341: iload_3       
   342: istore        4
   344: iload         9
   346: istore_3      
   347: iinc          
   350: goto          278
   353: bipush        60
   355: istore        8
   357: iload         8
   359: bipush        80
   361: if_icmpge     423
   364: iload_3       
   365: iconst_5      
   366: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   369: iload         4
   371: iload         5
   373: ixor          
   374: iload         6
   376: ixor          
   377: iadd          
   378: iload         7
   380: iadd          
   381: aload_0       
   382: getfield      #5          // W:int[]
   385: iload         8
   387: iaload        
   388: iadd          
   389: ldc           #103        // -899497514
   391: iadd          
   392: istore        9
   394: iload         6
   396: istore        7
   398: iload         5
   400: istore        6
   402: iload         4
   404: bipush        30
   406: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   409: istore        5
   411: iload_3       
   412: istore        4
   414: iload         9
   416: istore_3      
   417: iinc          
   420: goto          357
   423: aload_0       
   424: getfield      #1          // state:int[]
   427: iconst_0      
   428: dup2          
   429: iaload        
   430: iload_3       
   431: iadd          
   432: iastore       
   433: aload_0       
   434: getfield      #1          // state:int[]
   437: iconst_1      
   438: dup2          
   439: iaload        
   440: iload         4
   442: iadd          
   443: iastore       
   444: aload_0       
   445: getfield      #1          // state:int[]
   448: iconst_2      
   449: dup2          
   450: iaload        
   451: iload         5
   453: iadd          
   454: iastore       
   455: aload_0       
   456: getfield      #1          // state:int[]
   459: iconst_3      
   460: dup2          
   461: iaload        
   462: iload         6
   464: iadd          
   465: iastore       
   466: aload_0       
   467: getfield      #1          // state:int[]
   470: iconst_4      
   471: dup2          
   472: iaload        
   473: iload         7
   475: iadd          
   476: iastore       
   477: return        
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@31f9b0c2 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOV input: [v0|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV input: [v0|QWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v0|QWORD + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v0|QWORD + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV input: [v0|QWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV input: [v0|QWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v0|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ st <@st|@sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: v1|QWORD[.] - - v2|DWORD v3|DWORD v4|DWORD v5|DWORD v6|DWORD v7|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B29 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lsun/security/provider/SHA;, resolved>;compressed} state [bci:357] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.9523809523809523 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B25 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B24" 
    xhandlers
    flags 
    probability 4606753504549791646
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV input: [v1|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: v1|QWORD[.] - - v2|DWORD v3|DWORD v4|DWORD v5|DWORD v6|DWORD v7|DWORD - 
>@ <|@ instruction v9|DWORD = MOV input: [v8|DWORD[_] * 8 + 12] size: DWORD state [bci:357] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B23" 
    xhandlers
    flags 
    probability 4606753504549791646
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3087af84 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = ROL x: v2|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = XOR (x: v3|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = XOR (x: v12|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = ADD (x: v11|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = ADD (x: v14|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = ADD (x: v15|DWORD, ~y: [v10|QWORD[.] + v7|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = LEA address: [v16|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = INC value: v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = ROL x: v3|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v18|DWORD trueDestinationProbability: 0.95 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B23 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B10" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = LEA address: [v7|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B10 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B11" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE input: int[78|0x4e] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = SUB (x: v21|DWORD, ~y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOVSXD value: v22|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = ADD (x: v23|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = DEC value: v25|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v27|QWORD, y: v26|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v20|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B7" 
    successors "B12" "B22" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v18|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = ROL x: v17|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = XOR (x: v19|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = XOR (x: v29|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = ADD (x: v28|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = ADD (x: v31|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = ADD (x: v32|DWORD, ~y: [v10|QWORD[.] + v18|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = LEA address: [v33|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = LEA address: [v7|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v35|DWORD y: 80 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = CMOVE (falseValue: int[80|0x50], ~trueValue: v35|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = ROL x: v2|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|DWORD, v17|DWORD, v37|DWORD, v19|DWORD, v4|DWORD, v20|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606406907175871839
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|DWORD, v39|DWORD, v40|DWORD, v41|DWORD, v42|DWORD, v43|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v43|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576421901864634511
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = ROL x: v38|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = XOR (x: v40|DWORD, y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = XOR (x: v45|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = ADD (x: v44|DWORD, y: v46|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = ADD (x: v47|DWORD, y: v42|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = ADD (x: v48|DWORD, ~y: [v10|QWORD[.] + v43|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = LEA address: [v49|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = INC value: v43|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = ROL x: v39|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v50|DWORD, v38|DWORD, v52|DWORD, v40|DWORD, v41|DWORD, v51|DWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606324590299565885
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v43|DWORD, v42|DWORD, v41|DWORD, v40|DWORD, v39|DWORD, v38|DWORD] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" 
    successors "B17" "B18" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4612021107685376776
    begin_IR
      LIR
      nr   -1  <|@ instruction [v53|DWORD, v54|DWORD, v55|DWORD, v56|DWORD, v57|DWORD, v58|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.5789473684210522 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 72 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4608281511566220913
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOV input: [v10|QWORD[.] + v53|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = INC value: v53|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOV input: [v10|QWORD[.] + v60|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = LEA address: [v53|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOV input: [v10|QWORD[.] + v62|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = LEA address: [v53|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOV input: [v10|QWORD[.] + v64|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = LEA address: [v53|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = MOV input: [v10|QWORD[.] + v66|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = LEA address: [v53|DWORD + 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOV input: [v10|QWORD[.] + v68|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = LEA address: [v53|DWORD + 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOV input: [v10|QWORD[.] + v70|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = LEA address: [v53|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = ROL x: v58|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = XOR (x: v56|DWORD, y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = XOR (x: v74|DWORD, y: v55|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = ADD (x: v73|DWORD, y: v75|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = ADD (x: v76|DWORD, y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = ADD (x: v77|DWORD, y: v59|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = LEA address: [v78|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = ROL x: v79|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = ROL x: v57|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = XOR (x: v81|DWORD, y: v58|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = XOR (x: v56|DWORD, y: v82|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = ADD (x: v80|DWORD, y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = ADD (x: v84|DWORD, y: v55|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = ADD (x: v85|DWORD, y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = LEA address: [v86|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = ROL x: v87|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = ROL x: v58|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = XOR (x: v79|DWORD, y: v89|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = XOR (x: v81|DWORD, y: v90|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = ADD (x: v88|DWORD, y: v91|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = ADD (x: v92|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = ADD (x: v93|DWORD, y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = LEA address: [v94|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = ROL x: v95|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = ROL x: v87|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = ROL x: v79|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = ROL x: v95|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = XOR (x: v87|DWORD, y: v98|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = XOR (x: v89|DWORD, y: v100|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = ADD (x: v99|DWORD, y: v101|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = ADD (x: v102|DWORD, y: v81|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = ADD (x: v103|DWORD, y: v65|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = LEA address: [v104|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = ROL x: v105|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = XOR (x: v95|DWORD, y: v97|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = XOR (x: v98|DWORD, y: v107|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = ADD (x: v106|DWORD, y: v108|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = ADD (x: v109|DWORD, y: v89|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = ADD (x: v110|DWORD, y: v67|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = LEA address: [v111|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = ROL x: v112|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = XOR (x: v105|DWORD, y: v96|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = XOR (x: v97|DWORD, y: v114|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = ADD (x: v113|DWORD, y: v115|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = ADD (x: v116|DWORD, y: v98|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = ADD (x: v117|DWORD, y: v69|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = LEA address: [v118|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = ROL x: v119|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = ROL x: v105|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v122|DWORD = XOR (x: v112|DWORD, y: v121|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = XOR (x: v96|DWORD, y: v122|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v124|DWORD = ADD (x: v120|DWORD, y: v123|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = ADD (x: v124|DWORD, y: v97|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = ADD (x: v125|DWORD, y: v71|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v127|DWORD = LEA address: [v126|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v128|DWORD = ROL x: v127|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = ROL x: v112|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v130|DWORD = XOR (x: v119|DWORD, y: v129|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = XOR (x: v121|DWORD, y: v130|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = ADD (x: v128|DWORD, y: v131|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = ADD (x: v132|DWORD, y: v96|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v134|DWORD = ADD (x: v133|DWORD, ~y: [v10|QWORD[.] + v72|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v135|DWORD = LEA address: [v134|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v136|DWORD = ROL x: v119|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v137|DWORD = LEA address: [v53|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v137|DWORD, v121|DWORD, v129|DWORD, v136|DWORD, v127|DWORD, v135|DWORD] destination: B17 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606324590299565886
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v53|DWORD, v54|DWORD, v55|DWORD, v56|DWORD, v57|DWORD, v58|DWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606406907175871841
    begin_IR
      LIR
      nr   -1  <|@ instruction [v138|DWORD, v139|DWORD, v140|DWORD, v141|DWORD, v142|DWORD, v143|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v138|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576421901864634512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v144|DWORD = ROL x: v143|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = XOR (x: v141|DWORD, y: v142|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = XOR (x: v145|DWORD, y: v140|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v147|DWORD = ADD (x: v144|DWORD, y: v146|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v148|DWORD = ADD (x: v147|DWORD, y: v139|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v149|DWORD = ADD (x: v148|DWORD, ~y: [v10|QWORD[.] + v138|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v150|DWORD = LEA address: [v149|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v151|DWORD = ROL x: v142|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v152|DWORD = INC value: v138|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v152|DWORD, v140|DWORD, v141|DWORD, v151|DWORD, v143|DWORD, v150|DWORD] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606324590299565887
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v139|DWORD, v143|DWORD, v142|DWORD, v141|DWORD, v140|DWORD] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B26" 
    xhandlers
    flags 
    probability 4587023449039406624
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v6|DWORD, v2|DWORD, v3|DWORD, v4|DWORD, v5|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B26" 
    xhandlers
    flags 
    probability 4587023449039406622
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v5|DWORD, v17|DWORD, v2|DWORD, v19|DWORD, v4|DWORD] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B25" "B23" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [v153|DWORD, v154|DWORD, v155|DWORD, v156|DWORD, v157|DWORD] = LABEL alignment: 0 numbPhis: 5 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v158|DWORD[_] = MOV input: [v1|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
locals: v1|QWORD[.] - - v154|DWORD v155|DWORD v156|DWORD v157|DWORD v153|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v158|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 5 size: DWORD inlinedY: null state [bci:423] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 16], y: v154|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 20], y: v155|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 24], y: v156|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 28], y: v157|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 32], y: v153|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-105755|0xfffffffffffe62e5], long[0|0x0]] destination: B24 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-110619|0xfffffffffffe4fe5], long[664|0x298]] destination: B8 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -133915 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
locals: v1|QWORD[.] - - v154|DWORD v155|DWORD v156|DWORD v157|DWORD v153|DWORD - - 
>@ <|@ instruction DEOPT info [bci:423] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-108315|0xfffffffffffe58e5], long[0|0x0]] destination: B22 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-110619|0xfffffffffffe4fe5], long[664|0x298]] destination: B9 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-102716|0xfffffffffffe6ec4], long[20|0x14]] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B24" "B9" "B22" "B8" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v159|DWORD, v160|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v159|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v160|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: v1|QWORD[.] - - v2|DWORD v3|DWORD v4|DWORD v5|DWORD v6|DWORD v7|DWORD - 
>@ <|@ instruction DEOPT info [bci:357] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // W:int[]
     4: ifnonnull     15
     7: aload_0       
     8: bipush        80
    10: newarray      int
    12: putfield      #5          // W:int[]
    15: aload_1       
    16: iload_2       
    17: aload_0       
    18: getfield      #5          // W:int[]
    21: invokestatic  #19         // sun.security.provider.ByteArrayAccess.b2iBig64:(byte[], int, int[])void
    24: bipush        16
    26: istore_3      
    27: iload_3       
    28: bipush        79
    30: if_icmpgt     91
    33: aload_0       
    34: getfield      #5          // W:int[]
    37: iload_3       
    38: iconst_3      
    39: isub          
    40: iaload        
    41: aload_0       
    42: getfield      #5          // W:int[]
    45: iload_3       
    46: bipush        8
    48: isub          
    49: iaload        
    50: ixor          
    51: aload_0       
    52: getfield      #5          // W:int[]
    55: iload_3       
    56: bipush        14
    58: isub          
    59: iaload        
    60: ixor          
    61: aload_0       
    62: getfield      #5          // W:int[]
    65: iload_3       
    66: bipush        16
    68: isub          
    69: iaload        
    70: ixor          
    71: istore        4
    73: aload_0       
    74: getfield      #5          // W:int[]
    77: iload_3       
    78: iload         4
    80: iconst_1      
    81: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
    84: iastore       
    85: iinc          
    88: goto          27
    91: aload_0       
    92: getfield      #1          // state:int[]
    95: iconst_0      
    96: iaload        
    97: istore_3      
    98: aload_0       
    99: getfield      #1          // state:int[]
   102: iconst_1      
   103: iaload        
   104: istore        4
   106: aload_0       
   107: getfield      #1          // state:int[]
   110: iconst_2      
   111: iaload        
   112: istore        5
   114: aload_0       
   115: getfield      #1          // state:int[]
   118: iconst_3      
   119: iaload        
   120: istore        6
   122: aload_0       
   123: getfield      #1          // state:int[]
   126: iconst_4      
   127: iaload        
   128: istore        7
   130: iconst_0      
   131: istore        8
   133: iload         8
   135: bipush        20
   137: if_icmpge     204
   140: iload_3       
   141: iconst_5      
   142: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   145: iload         4
   147: iload         5
   149: iand          
   150: iload         4
   152: iconst_m1     
   153: ixor          
   154: iload         6
   156: iand          
   157: ior           
   158: iadd          
   159: iload         7
   161: iadd          
   162: aload_0       
   163: getfield      #5          // W:int[]
   166: iload         8
   168: iaload        
   169: iadd          
   170: ldc           #100        // 1518500249
   172: iadd          
   173: istore        9
   175: iload         6
   177: istore        7
   179: iload         5
   181: istore        6
   183: iload         4
   185: bipush        30
   187: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   190: istore        5
   192: iload_3       
   193: istore        4
   195: iload         9
   197: istore_3      
   198: iinc          
   201: goto          133
   204: bipush        20
   206: istore        8
   208: iload         8
   210: bipush        40
   212: if_icmpge     274
   215: iload_3       
   216: iconst_5      
   217: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   220: iload         4
   222: iload         5
   224: ixor          
   225: iload         6
   227: ixor          
   228: iadd          
   229: iload         7
   231: iadd          
   232: aload_0       
   233: getfield      #5          // W:int[]
   236: iload         8
   238: iaload        
   239: iadd          
   240: ldc           #101        // 1859775393
   242: iadd          
   243: istore        9
   245: iload         6
   247: istore        7
   249: iload         5
   251: istore        6
   253: iload         4
   255: bipush        30
   257: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   260: istore        5
   262: iload_3       
   263: istore        4
   265: iload         9
   267: istore_3      
   268: iinc          
   271: goto          208
   274: bipush        40
   276: istore        8
   278: iload         8
   280: bipush        60
   282: if_icmpge     353
   285: iload_3       
   286: iconst_5      
   287: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   290: iload         4
   292: iload         5
   294: iand          
   295: iload         4
   297: iload         6
   299: iand          
   300: ior           
   301: iload         5
   303: iload         6
   305: iand          
   306: ior           
   307: iadd          
   308: iload         7
   310: iadd          
   311: aload_0       
   312: getfield      #5          // W:int[]
   315: iload         8
   317: iaload        
   318: iadd          
   319: ldc           #102        // -1894007588
   321: iadd          
   322: istore        9
   324: iload         6
   326: istore        7
   328: iload         5
   330: istore        6
   332: iload         4
   334: bipush        30
   336: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   339: istore        5
   341: iload_3       
   342: istore        4
   344: iload         9
   346: istore_3      
   347: iinc          
   350: goto          278
   353: bipush        60
   355: istore        8
   357: iload         8
   359: bipush        80
   361: if_icmpge     423
   364: iload_3       
   365: iconst_5      
   366: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   369: iload         4
   371: iload         5
   373: ixor          
   374: iload         6
   376: ixor          
   377: iadd          
   378: iload         7
   380: iadd          
   381: aload_0       
   382: getfield      #5          // W:int[]
   385: iload         8
   387: iaload        
   388: iadd          
   389: ldc           #103        // -899497514
   391: iadd          
   392: istore        9
   394: iload         6
   396: istore        7
   398: iload         5
   400: istore        6
   402: iload         4
   404: bipush        30
   406: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   409: istore        5
   411: iload_3       
   412: istore        4
   414: iload         9
   416: istore_3      
   417: iinc          
   420: goto          357
   423: aload_0       
   424: getfield      #1          // state:int[]
   427: iconst_0      
   428: dup2          
   429: iaload        
   430: iload_3       
   431: iadd          
   432: iastore       
   433: aload_0       
   434: getfield      #1          // state:int[]
   437: iconst_1      
   438: dup2          
   439: iaload        
   440: iload         4
   442: iadd          
   443: iastore       
   444: aload_0       
   445: getfield      #1          // state:int[]
   448: iconst_2      
   449: dup2          
   450: iaload        
   451: iload         5
   453: iadd          
   454: iastore       
   455: aload_0       
   456: getfield      #1          // state:int[]
   459: iconst_3      
   460: dup2          
   461: iaload        
   462: iload         6
   464: iadd          
   465: iastore       
   466: aload_0       
   467: getfield      #1          // state:int[]
   470: iconst_4      
   471: dup2          
   472: iaload        
   473: iload         7
   475: iadd          
   476: iastore       
   477: return        
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@31f9b0c2 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOV input: [v0|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV input: [v0|QWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v0|QWORD + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v0|QWORD + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV input: [v0|QWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV input: [v0|QWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v0|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: v1|QWORD[.] - - v2|DWORD v3|DWORD v4|DWORD v5|DWORD v6|DWORD v7|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B29 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lsun/security/provider/SHA;, resolved>;compressed} state [bci:357] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.9523809523809523 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B25 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B24" 
    xhandlers
    flags 
    probability 4606753504549791646
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV input: [v1|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: v1|QWORD[.] - - v2|DWORD v3|DWORD v4|DWORD v5|DWORD v6|DWORD v7|DWORD - 
>@ <|@ instruction v9|DWORD = MOV input: [v8|DWORD[_] * 8 + 12] size: DWORD state [bci:357] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B23" 
    xhandlers
    flags 
    probability 4606753504549791646
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3087af84 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = ROL x: v2|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = XOR (x: v3|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = XOR (x: v12|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = ADD (x: v11|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = ADD (x: v14|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = ADD (x: v15|DWORD, ~y: [v10|QWORD[.] + v7|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = LEA address: [v16|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = INC value: v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = ROL x: v3|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v18|DWORD trueDestinationProbability: 0.95 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B23 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B10" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = LEA address: [v7|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B10 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B11" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE input: int[78|0x4e] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = SUB (x: v21|DWORD, ~y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOVSXD value: v22|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = ADD (x: v23|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = DEC value: v25|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v27|QWORD, y: v26|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v20|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B7" 
    successors "B12" "B22" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v18|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = ROL x: v17|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = XOR (x: v19|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = XOR (x: v29|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = ADD (x: v28|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = ADD (x: v31|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = ADD (x: v32|DWORD, ~y: [v10|QWORD[.] + v18|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = LEA address: [v33|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = LEA address: [v7|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v35|DWORD y: 80 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = CMOVE (falseValue: int[80|0x50], ~trueValue: v35|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = ROL x: v2|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|DWORD, v17|DWORD, v37|DWORD, v19|DWORD, v4|DWORD, v20|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606406907175871839
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|DWORD, v39|DWORD, v40|DWORD, v41|DWORD, v42|DWORD, v43|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v43|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576421901864634511
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = ROL x: v38|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = XOR (x: v40|DWORD, y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = XOR (x: v45|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = ADD (x: v44|DWORD, y: v46|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = ADD (x: v47|DWORD, y: v42|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = ADD (x: v48|DWORD, ~y: [v10|QWORD[.] + v43|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = LEA address: [v49|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = INC value: v43|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = ROL x: v39|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v50|DWORD, v38|DWORD, v52|DWORD, v40|DWORD, v41|DWORD, v51|DWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606324590299565885
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v43|DWORD, v42|DWORD, v41|DWORD, v40|DWORD, v39|DWORD, v38|DWORD] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" 
    successors "B17" "B18" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4612021107685376776
    begin_IR
      LIR
      nr   -1  <|@ instruction [v53|DWORD, v54|DWORD, v55|DWORD, v56|DWORD, v57|DWORD, v58|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.5789473684210522 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 72 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4608281511566220913
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOV input: [v10|QWORD[.] + v53|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = INC value: v53|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOV input: [v10|QWORD[.] + v60|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = LEA address: [v53|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOV input: [v10|QWORD[.] + v62|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = LEA address: [v53|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOV input: [v10|QWORD[.] + v64|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = LEA address: [v53|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = MOV input: [v10|QWORD[.] + v66|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = LEA address: [v53|DWORD + 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOV input: [v10|QWORD[.] + v68|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = LEA address: [v53|DWORD + 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOV input: [v10|QWORD[.] + v70|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = LEA address: [v53|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = ROL x: v58|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = XOR (x: v56|DWORD, y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = XOR (x: v74|DWORD, y: v55|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = ADD (x: v73|DWORD, y: v75|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = ADD (x: v76|DWORD, y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = ADD (x: v77|DWORD, y: v59|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = LEA address: [v78|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = ROL x: v79|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = ROL x: v57|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = XOR (x: v81|DWORD, y: v58|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = XOR (x: v56|DWORD, y: v82|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = ADD (x: v80|DWORD, y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = ADD (x: v84|DWORD, y: v55|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = ADD (x: v85|DWORD, y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = LEA address: [v86|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = ROL x: v87|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = ROL x: v58|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = XOR (x: v79|DWORD, y: v89|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = XOR (x: v81|DWORD, y: v90|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = ADD (x: v88|DWORD, y: v91|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = ADD (x: v92|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = ADD (x: v93|DWORD, y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = LEA address: [v94|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = ROL x: v95|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = ROL x: v87|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = ROL x: v79|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = ROL x: v95|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = XOR (x: v87|DWORD, y: v98|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = XOR (x: v89|DWORD, y: v100|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = ADD (x: v99|DWORD, y: v101|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = ADD (x: v102|DWORD, y: v81|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = ADD (x: v103|DWORD, y: v65|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = LEA address: [v104|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = ROL x: v105|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = XOR (x: v95|DWORD, y: v97|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = XOR (x: v98|DWORD, y: v107|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = ADD (x: v106|DWORD, y: v108|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = ADD (x: v109|DWORD, y: v89|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = ADD (x: v110|DWORD, y: v67|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = LEA address: [v111|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = ROL x: v112|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = XOR (x: v105|DWORD, y: v96|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = XOR (x: v97|DWORD, y: v114|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = ADD (x: v113|DWORD, y: v115|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = ADD (x: v116|DWORD, y: v98|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = ADD (x: v117|DWORD, y: v69|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = LEA address: [v118|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = ROL x: v119|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = ROL x: v105|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v122|DWORD = XOR (x: v112|DWORD, y: v121|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = XOR (x: v96|DWORD, y: v122|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v124|DWORD = ADD (x: v120|DWORD, y: v123|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = ADD (x: v124|DWORD, y: v97|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = ADD (x: v125|DWORD, y: v71|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v127|DWORD = LEA address: [v126|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v128|DWORD = ROL x: v127|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = ROL x: v112|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v130|DWORD = XOR (x: v119|DWORD, y: v129|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = XOR (x: v121|DWORD, y: v130|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = ADD (x: v128|DWORD, y: v131|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = ADD (x: v132|DWORD, y: v96|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v134|DWORD = ADD (x: v133|DWORD, ~y: [v10|QWORD[.] + v72|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v135|DWORD = LEA address: [v134|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v136|DWORD = ROL x: v119|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v137|DWORD = LEA address: [v53|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v137|DWORD, v121|DWORD, v129|DWORD, v136|DWORD, v127|DWORD, v135|DWORD] destination: B17 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606324590299565886
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v53|DWORD, v54|DWORD, v55|DWORD, v56|DWORD, v57|DWORD, v58|DWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606406907175871841
    begin_IR
      LIR
      nr   -1  <|@ instruction [v138|DWORD, v139|DWORD, v140|DWORD, v141|DWORD, v142|DWORD, v143|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v138|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576421901864634512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v144|DWORD = ROL x: v143|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = XOR (x: v141|DWORD, y: v142|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = XOR (x: v145|DWORD, y: v140|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v147|DWORD = ADD (x: v144|DWORD, y: v146|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v148|DWORD = ADD (x: v147|DWORD, y: v139|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v149|DWORD = ADD (x: v148|DWORD, ~y: [v10|QWORD[.] + v138|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v150|DWORD = LEA address: [v149|DWORD - 899497514] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v151|DWORD = ROL x: v142|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v152|DWORD = INC value: v138|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v152|DWORD, v140|DWORD, v141|DWORD, v151|DWORD, v143|DWORD, v150|DWORD] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606324590299565887
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v139|DWORD, v143|DWORD, v142|DWORD, v141|DWORD, v140|DWORD] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B26" 
    xhandlers
    flags 
    probability 4587023449039406624
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v6|DWORD, v2|DWORD, v3|DWORD, v4|DWORD, v5|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B26" 
    xhandlers
    flags 
    probability 4587023449039406622
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v5|DWORD, v17|DWORD, v2|DWORD, v19|DWORD, v4|DWORD] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B25" "B23" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [v153|DWORD, v154|DWORD, v155|DWORD, v156|DWORD, v157|DWORD] = LABEL alignment: 0 numbPhis: 5 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v158|DWORD[_] = MOV input: [v1|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
locals: v1|QWORD[.] - - v154|DWORD v155|DWORD v156|DWORD v157|DWORD v153|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v158|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 5 size: DWORD inlinedY: null state [bci:423] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 16], y: v154|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 20], y: v155|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 24], y: v156|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 28], y: v157|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 32], y: v153|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-105755|0xfffffffffffe62e5], long[0|0x0]] destination: B24 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-110619|0xfffffffffffe4fe5], long[664|0x298]] destination: B8 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -133915 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
locals: v1|QWORD[.] - - v154|DWORD v155|DWORD v156|DWORD v157|DWORD v153|DWORD - - 
>@ <|@ instruction DEOPT info [bci:423] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-108315|0xfffffffffffe58e5], long[0|0x0]] destination: B22 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-110619|0xfffffffffffe4fe5], long[664|0x298]] destination: B9 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-102716|0xfffffffffffe6ec4], long[20|0x14]] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B24" "B9" "B22" "B8" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v159|DWORD, v160|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v159|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v160|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: v1|QWORD[.] - - v2|DWORD v3|DWORD v4|DWORD v5|DWORD v6|DWORD v7|DWORD - 
>@ <|@ instruction DEOPT info [bci:357] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // W:int[]
     4: ifnonnull     15
     7: aload_0       
     8: bipush        80
    10: newarray      int
    12: putfield      #5          // W:int[]
    15: aload_1       
    16: iload_2       
    17: aload_0       
    18: getfield      #5          // W:int[]
    21: invokestatic  #19         // sun.security.provider.ByteArrayAccess.b2iBig64:(byte[], int, int[])void
    24: bipush        16
    26: istore_3      
    27: iload_3       
    28: bipush        79
    30: if_icmpgt     91
    33: aload_0       
    34: getfield      #5          // W:int[]
    37: iload_3       
    38: iconst_3      
    39: isub          
    40: iaload        
    41: aload_0       
    42: getfield      #5          // W:int[]
    45: iload_3       
    46: bipush        8
    48: isub          
    49: iaload        
    50: ixor          
    51: aload_0       
    52: getfield      #5          // W:int[]
    55: iload_3       
    56: bipush        14
    58: isub          
    59: iaload        
    60: ixor          
    61: aload_0       
    62: getfield      #5          // W:int[]
    65: iload_3       
    66: bipush        16
    68: isub          
    69: iaload        
    70: ixor          
    71: istore        4
    73: aload_0       
    74: getfield      #5          // W:int[]
    77: iload_3       
    78: iload         4
    80: iconst_1      
    81: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
    84: iastore       
    85: iinc          
    88: goto          27
    91: aload_0       
    92: getfield      #1          // state:int[]
    95: iconst_0      
    96: iaload        
    97: istore_3      
    98: aload_0       
    99: getfield      #1          // state:int[]
   102: iconst_1      
   103: iaload        
   104: istore        4
   106: aload_0       
   107: getfield      #1          // state:int[]
   110: iconst_2      
   111: iaload        
   112: istore        5
   114: aload_0       
   115: getfield      #1          // state:int[]
   118: iconst_3      
   119: iaload        
   120: istore        6
   122: aload_0       
   123: getfield      #1          // state:int[]
   126: iconst_4      
   127: iaload        
   128: istore        7
   130: iconst_0      
   131: istore        8
   133: iload         8
   135: bipush        20
   137: if_icmpge     204
   140: iload_3       
   141: iconst_5      
   142: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   145: iload         4
   147: iload         5
   149: iand          
   150: iload         4
   152: iconst_m1     
   153: ixor          
   154: iload         6
   156: iand          
   157: ior           
   158: iadd          
   159: iload         7
   161: iadd          
   162: aload_0       
   163: getfield      #5          // W:int[]
   166: iload         8
   168: iaload        
   169: iadd          
   170: ldc           #100        // 1518500249
   172: iadd          
   173: istore        9
   175: iload         6
   177: istore        7
   179: iload         5
   181: istore        6
   183: iload         4
   185: bipush        30
   187: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   190: istore        5
   192: iload_3       
   193: istore        4
   195: iload         9
   197: istore_3      
   198: iinc          
   201: goto          133
   204: bipush        20
   206: istore        8
   208: iload         8
   210: bipush        40
   212: if_icmpge     274
   215: iload_3       
   216: iconst_5      
   217: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   220: iload         4
   222: iload         5
   224: ixor          
   225: iload         6
   227: ixor          
   228: iadd          
   229: iload         7
   231: iadd          
   232: aload_0       
   233: getfield      #5          // W:int[]
   236: iload         8
   238: iaload        
   239: iadd          
   240: ldc           #101        // 1859775393
   242: iadd          
   243: istore        9
   245: iload         6
   247: istore        7
   249: iload         5
   251: istore        6
   253: iload         4
   255: bipush        30
   257: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   260: istore        5
   262: iload_3       
   263: istore        4
   265: iload         9
   267: istore_3      
   268: iinc          
   271: goto          208
   274: bipush        40
   276: istore        8
   278: iload         8
   280: bipush        60
   282: if_icmpge     353
   285: iload_3       
   286: iconst_5      
   287: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   290: iload         4
   292: iload         5
   294: iand          
   295: iload         4
   297: iload         6
   299: iand          
   300: ior           
   301: iload         5
   303: iload         6
   305: iand          
   306: ior           
   307: iadd          
   308: iload         7
   310: iadd          
   311: aload_0       
   312: getfield      #5          // W:int[]
   315: iload         8
   317: iaload        
   318: iadd          
   319: ldc           #102        // -1894007588
   321: iadd          
   322: istore        9
   324: iload         6
   326: istore        7
   328: iload         5
   330: istore        6
   332: iload         4
   334: bipush        30
   336: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   339: istore        5
   341: iload_3       
   342: istore        4
   344: iload         9
   346: istore_3      
   347: iinc          
   350: goto          278
   353: bipush        60
   355: istore        8
   357: iload         8
   359: bipush        80
   361: if_icmpge     423
   364: iload_3       
   365: iconst_5      
   366: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   369: iload         4
   371: iload         5
   373: ixor          
   374: iload         6
   376: ixor          
   377: iadd          
   378: iload         7
   380: iadd          
   381: aload_0       
   382: getfield      #5          // W:int[]
   385: iload         8
   387: iaload        
   388: iadd          
   389: ldc           #103        // -899497514
   391: iadd          
   392: istore        9
   394: iload         6
   396: istore        7
   398: iload         5
   400: istore        6
   402: iload         4
   404: bipush        30
   406: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   409: istore        5
   411: iload_3       
   412: istore        4
   414: iload         9
   416: istore_3      
   417: iinc          
   420: goto          357
   423: aload_0       
   424: getfield      #1          // state:int[]
   427: iconst_0      
   428: dup2          
   429: iaload        
   430: iload_3       
   431: iadd          
   432: iastore       
   433: aload_0       
   434: getfield      #1          // state:int[]
   437: iconst_1      
   438: dup2          
   439: iaload        
   440: iload         4
   442: iadd          
   443: iastore       
   444: aload_0       
   445: getfield      #1          // state:int[]
   448: iconst_2      
   449: dup2          
   450: iaload        
   451: iload         5
   453: iadd          
   454: iastore       
   455: aload_0       
   456: getfield      #1          // state:int[]
   459: iconst_3      
   460: dup2          
   461: iaload        
   462: iload         6
   464: iadd          
   465: iastore       
   466: aload_0       
   467: getfield      #1          // state:int[]
   470: iconst_4      
   471: dup2          
   472: iaload        
   473: iload         7
   475: iadd          
   476: iastore       
   477: return        
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@31f9b0c2 slotKind: QWORD <|@ <|@
      nr   40  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction v1|QWORD[.] = MOV input: [v0|QWORD + 72] size: QWORD <|@ <|@
      nr   44  <|@ instruction v2|DWORD = MOV input: [v0|QWORD + 48] size: DWORD <|@ <|@
      nr   46  <|@ instruction v3|DWORD = MOV input: [v0|QWORD + 40] size: DWORD <|@ <|@
      nr   48  <|@ instruction v4|DWORD = MOV input: [v0|QWORD + 32] size: DWORD <|@ <|@
      nr   50  <|@ instruction v5|DWORD = MOV input: [v0|QWORD + 24] size: DWORD <|@ <|@
      nr   52  <|@ instruction v6|DWORD = MOV input: [v0|QWORD + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction v7|DWORD = MOV input: [v0|QWORD + 8] size: DWORD <|@ <|@
      nr   56  <|@ instruction rsi|QWORD = MOVE input: v0|QWORD moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: v1|QWORD[.] - - v2|DWORD v3|DWORD v4|DWORD v5|DWORD v6|DWORD v7|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B29 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lsun/security/provider/SHA;, resolved>;compressed} state [bci:357] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.9523809523809523 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B25 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B24" 
    xhandlers
    flags 
    probability 4606753504549791646
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction v8|DWORD[_] = MOV input: [v1|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: v1|QWORD[.] - - v2|DWORD v3|DWORD v4|DWORD v5|DWORD v6|DWORD v7|DWORD - 
>@ <|@ instruction v9|DWORD = MOV input: [v8|DWORD[_] * 8 + 12] size: DWORD state [bci:357] <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B23" 
    xhandlers
    flags 
    probability 4606753504549791646
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3087af84 encoding: base: 0 shift: 3 <|@ <|@
      nr  132  <|@ instruction v11|DWORD = ROL x: v2|DWORD y: 5 size: DWORD <|@ <|@
      nr  134  <|@ instruction v12|DWORD = XOR (x: v3|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction v13|DWORD = XOR (x: v12|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction v14|DWORD = ADD (x: v11|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction v15|DWORD = ADD (x: v14|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr  142  <|@ instruction v16|DWORD = ADD (x: v15|DWORD, ~y: [v10|QWORD[.] + v7|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  144  <|@ instruction v17|DWORD = LEA address: [v16|DWORD - 899497514] size: DWORD <|@ <|@
      nr  146  <|@ instruction v18|DWORD = INC value: v7|DWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction v19|DWORD = ROL x: v3|DWORD y: 30 size: DWORD <|@ <|@
      nr  150  <|@ instruction CMPCONSTBRANCH x: v18|DWORD trueDestinationProbability: 0.95 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B23 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B10" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction v20|DWORD = LEA address: [v7|DWORD + 2] size: DWORD <|@ <|@
      nr  170  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B10 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B11" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction v21|DWORD = MOVE input: int[78|0x4e] <|@ <|@
      nr  208  <|@ instruction v22|DWORD = SUB (x: v21|DWORD, ~y: v7|DWORD) size: DWORD <|@ <|@
      nr  210  <|@ instruction v23|QWORD = MOVSXD value: v22|DWORD size: QWORD <|@ <|@
      nr  212  <|@ instruction v24|QWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction v25|QWORD = ADD (x: v23|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr  216  <|@ instruction v26|QWORD = DEC value: v25|QWORD size: QWORD <|@ <|@
      nr  218  <|@ instruction v27|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction CMPBRANCH (x: v27|QWORD, y: v26|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v20|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B7" 
    successors "B12" "B22" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v18|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction v28|DWORD = ROL x: v17|DWORD y: 5 size: DWORD <|@ <|@
      nr  296  <|@ instruction v29|DWORD = XOR (x: v19|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction v30|DWORD = XOR (x: v29|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr  300  <|@ instruction v31|DWORD = ADD (x: v28|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr  302  <|@ instruction v32|DWORD = ADD (x: v31|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr  304  <|@ instruction v33|DWORD = ADD (x: v32|DWORD, ~y: [v10|QWORD[.] + v18|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  306  <|@ instruction v34|DWORD = LEA address: [v33|DWORD - 899497514] size: DWORD <|@ <|@
      nr  308  <|@ instruction v35|DWORD = LEA address: [v7|DWORD + 3] size: DWORD <|@ <|@
      nr  310  <|@ instruction CMP x: v35|DWORD y: 80 size: DWORD <|@ <|@
      nr  312  <|@ instruction v36|DWORD = CMOVE (falseValue: int[80|0x50], ~trueValue: v35|DWORD) condition: < <|@ <|@
      nr  314  <|@ instruction v37|DWORD = ROL x: v2|DWORD y: 30 size: DWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~outgoingValues: [v34|DWORD, v17|DWORD, v37|DWORD, v19|DWORD, v4|DWORD, v20|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606406907175871839
    begin_IR
      LIR
      nr  318  <|@ instruction [v38|DWORD, v39|DWORD, v40|DWORD, v41|DWORD, v42|DWORD, v43|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v43|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576421901864634511
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction v44|DWORD = ROL x: v38|DWORD y: 5 size: DWORD <|@ <|@
      nr  362  <|@ instruction v45|DWORD = XOR (x: v40|DWORD, y: v39|DWORD) size: DWORD <|@ <|@
      nr  364  <|@ instruction v46|DWORD = XOR (x: v45|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr  366  <|@ instruction v47|DWORD = ADD (x: v44|DWORD, y: v46|DWORD) size: DWORD <|@ <|@
      nr  368  <|@ instruction v48|DWORD = ADD (x: v47|DWORD, y: v42|DWORD) size: DWORD <|@ <|@
      nr  370  <|@ instruction v49|DWORD = ADD (x: v48|DWORD, ~y: [v10|QWORD[.] + v43|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  372  <|@ instruction v50|DWORD = LEA address: [v49|DWORD - 899497514] size: DWORD <|@ <|@
      nr  374  <|@ instruction v51|DWORD = INC value: v43|DWORD size: DWORD <|@ <|@
      nr  376  <|@ instruction v52|DWORD = ROL x: v39|DWORD y: 30 size: DWORD <|@ <|@
      nr  378  <|@ instruction JUMP ~outgoingValues: [v50|DWORD, v38|DWORD, v52|DWORD, v40|DWORD, v41|DWORD, v51|DWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606324590299565885
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction JUMP ~outgoingValues: [v43|DWORD, v42|DWORD, v41|DWORD, v40|DWORD, v39|DWORD, v38|DWORD] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" 
    successors "B17" "B18" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4612021107685376776
    begin_IR
      LIR
      nr  390  <|@ instruction [v53|DWORD, v54|DWORD, v55|DWORD, v56|DWORD, v57|DWORD, v58|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.5789473684210522 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 72 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4608281511566220913
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction v59|DWORD = MOV input: [v10|QWORD[.] + v53|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  630  <|@ instruction v60|DWORD = INC value: v53|DWORD size: DWORD <|@ <|@
      nr  632  <|@ instruction v61|DWORD = MOV input: [v10|QWORD[.] + v60|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  634  <|@ instruction v62|DWORD = LEA address: [v53|DWORD + 2] size: DWORD <|@ <|@
      nr  636  <|@ instruction v63|DWORD = MOV input: [v10|QWORD[.] + v62|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  638  <|@ instruction v64|DWORD = LEA address: [v53|DWORD + 3] size: DWORD <|@ <|@
      nr  640  <|@ instruction v65|DWORD = MOV input: [v10|QWORD[.] + v64|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  642  <|@ instruction v66|DWORD = LEA address: [v53|DWORD + 4] size: DWORD <|@ <|@
      nr  644  <|@ instruction v67|DWORD = MOV input: [v10|QWORD[.] + v66|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  646  <|@ instruction v68|DWORD = LEA address: [v53|DWORD + 5] size: DWORD <|@ <|@
      nr  648  <|@ instruction v69|DWORD = MOV input: [v10|QWORD[.] + v68|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  650  <|@ instruction v70|DWORD = LEA address: [v53|DWORD + 6] size: DWORD <|@ <|@
      nr  652  <|@ instruction v71|DWORD = MOV input: [v10|QWORD[.] + v70|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  654  <|@ instruction v72|DWORD = LEA address: [v53|DWORD + 7] size: DWORD <|@ <|@
      nr  656  <|@ instruction v73|DWORD = ROL x: v58|DWORD y: 5 size: DWORD <|@ <|@
      nr  658  <|@ instruction v74|DWORD = XOR (x: v56|DWORD, y: v57|DWORD) size: DWORD <|@ <|@
      nr  660  <|@ instruction v75|DWORD = XOR (x: v74|DWORD, y: v55|DWORD) size: DWORD <|@ <|@
      nr  662  <|@ instruction v76|DWORD = ADD (x: v73|DWORD, y: v75|DWORD) size: DWORD <|@ <|@
      nr  664  <|@ instruction v77|DWORD = ADD (x: v76|DWORD, y: v54|DWORD) size: DWORD <|@ <|@
      nr  666  <|@ instruction v78|DWORD = ADD (x: v77|DWORD, y: v59|DWORD) size: DWORD <|@ <|@
      nr  668  <|@ instruction v79|DWORD = LEA address: [v78|DWORD - 899497514] size: DWORD <|@ <|@
      nr  670  <|@ instruction v80|DWORD = ROL x: v79|DWORD y: 5 size: DWORD <|@ <|@
      nr  672  <|@ instruction v81|DWORD = ROL x: v57|DWORD y: 30 size: DWORD <|@ <|@
      nr  674  <|@ instruction v82|DWORD = XOR (x: v81|DWORD, y: v58|DWORD) size: DWORD <|@ <|@
      nr  676  <|@ instruction v83|DWORD = XOR (x: v56|DWORD, y: v82|DWORD) size: DWORD <|@ <|@
      nr  678  <|@ instruction v84|DWORD = ADD (x: v80|DWORD, y: v83|DWORD) size: DWORD <|@ <|@
      nr  680  <|@ instruction v85|DWORD = ADD (x: v84|DWORD, y: v55|DWORD) size: DWORD <|@ <|@
      nr  682  <|@ instruction v86|DWORD = ADD (x: v85|DWORD, y: v61|DWORD) size: DWORD <|@ <|@
      nr  684  <|@ instruction v87|DWORD = LEA address: [v86|DWORD - 899497514] size: DWORD <|@ <|@
      nr  686  <|@ instruction v88|DWORD = ROL x: v87|DWORD y: 5 size: DWORD <|@ <|@
      nr  688  <|@ instruction v89|DWORD = ROL x: v58|DWORD y: 30 size: DWORD <|@ <|@
      nr  690  <|@ instruction v90|DWORD = XOR (x: v79|DWORD, y: v89|DWORD) size: DWORD <|@ <|@
      nr  692  <|@ instruction v91|DWORD = XOR (x: v81|DWORD, y: v90|DWORD) size: DWORD <|@ <|@
      nr  694  <|@ instruction v92|DWORD = ADD (x: v88|DWORD, y: v91|DWORD) size: DWORD <|@ <|@
      nr  696  <|@ instruction v93|DWORD = ADD (x: v92|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr  698  <|@ instruction v94|DWORD = ADD (x: v93|DWORD, y: v63|DWORD) size: DWORD <|@ <|@
      nr  700  <|@ instruction v95|DWORD = LEA address: [v94|DWORD - 899497514] size: DWORD <|@ <|@
      nr  702  <|@ instruction v96|DWORD = ROL x: v95|DWORD y: 30 size: DWORD <|@ <|@
      nr  704  <|@ instruction v97|DWORD = ROL x: v87|DWORD y: 30 size: DWORD <|@ <|@
      nr  706  <|@ instruction v98|DWORD = ROL x: v79|DWORD y: 30 size: DWORD <|@ <|@
      nr  708  <|@ instruction v99|DWORD = ROL x: v95|DWORD y: 5 size: DWORD <|@ <|@
      nr  710  <|@ instruction v100|DWORD = XOR (x: v87|DWORD, y: v98|DWORD) size: DWORD <|@ <|@
      nr  712  <|@ instruction v101|DWORD = XOR (x: v89|DWORD, y: v100|DWORD) size: DWORD <|@ <|@
      nr  714  <|@ instruction v102|DWORD = ADD (x: v99|DWORD, y: v101|DWORD) size: DWORD <|@ <|@
      nr  716  <|@ instruction v103|DWORD = ADD (x: v102|DWORD, y: v81|DWORD) size: DWORD <|@ <|@
      nr  718  <|@ instruction v104|DWORD = ADD (x: v103|DWORD, y: v65|DWORD) size: DWORD <|@ <|@
      nr  720  <|@ instruction v105|DWORD = LEA address: [v104|DWORD - 899497514] size: DWORD <|@ <|@
      nr  722  <|@ instruction v106|DWORD = ROL x: v105|DWORD y: 5 size: DWORD <|@ <|@
      nr  724  <|@ instruction v107|DWORD = XOR (x: v95|DWORD, y: v97|DWORD) size: DWORD <|@ <|@
      nr  726  <|@ instruction v108|DWORD = XOR (x: v98|DWORD, y: v107|DWORD) size: DWORD <|@ <|@
      nr  728  <|@ instruction v109|DWORD = ADD (x: v106|DWORD, y: v108|DWORD) size: DWORD <|@ <|@
      nr  730  <|@ instruction v110|DWORD = ADD (x: v109|DWORD, y: v89|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction v111|DWORD = ADD (x: v110|DWORD, y: v67|DWORD) size: DWORD <|@ <|@
      nr  734  <|@ instruction v112|DWORD = LEA address: [v111|DWORD - 899497514] size: DWORD <|@ <|@
      nr  736  <|@ instruction v113|DWORD = ROL x: v112|DWORD y: 5 size: DWORD <|@ <|@
      nr  738  <|@ instruction v114|DWORD = XOR (x: v105|DWORD, y: v96|DWORD) size: DWORD <|@ <|@
      nr  740  <|@ instruction v115|DWORD = XOR (x: v97|DWORD, y: v114|DWORD) size: DWORD <|@ <|@
      nr  742  <|@ instruction v116|DWORD = ADD (x: v113|DWORD, y: v115|DWORD) size: DWORD <|@ <|@
      nr  744  <|@ instruction v117|DWORD = ADD (x: v116|DWORD, y: v98|DWORD) size: DWORD <|@ <|@
      nr  746  <|@ instruction v118|DWORD = ADD (x: v117|DWORD, y: v69|DWORD) size: DWORD <|@ <|@
      nr  748  <|@ instruction v119|DWORD = LEA address: [v118|DWORD - 899497514] size: DWORD <|@ <|@
      nr  750  <|@ instruction v120|DWORD = ROL x: v119|DWORD y: 5 size: DWORD <|@ <|@
      nr  752  <|@ instruction v121|DWORD = ROL x: v105|DWORD y: 30 size: DWORD <|@ <|@
      nr  754  <|@ instruction v122|DWORD = XOR (x: v112|DWORD, y: v121|DWORD) size: DWORD <|@ <|@
      nr  756  <|@ instruction v123|DWORD = XOR (x: v96|DWORD, y: v122|DWORD) size: DWORD <|@ <|@
      nr  758  <|@ instruction v124|DWORD = ADD (x: v120|DWORD, y: v123|DWORD) size: DWORD <|@ <|@
      nr  760  <|@ instruction v125|DWORD = ADD (x: v124|DWORD, y: v97|DWORD) size: DWORD <|@ <|@
      nr  762  <|@ instruction v126|DWORD = ADD (x: v125|DWORD, y: v71|DWORD) size: DWORD <|@ <|@
      nr  764  <|@ instruction v127|DWORD = LEA address: [v126|DWORD - 899497514] size: DWORD <|@ <|@
      nr  766  <|@ instruction v128|DWORD = ROL x: v127|DWORD y: 5 size: DWORD <|@ <|@
      nr  768  <|@ instruction v129|DWORD = ROL x: v112|DWORD y: 30 size: DWORD <|@ <|@
      nr  770  <|@ instruction v130|DWORD = XOR (x: v119|DWORD, y: v129|DWORD) size: DWORD <|@ <|@
      nr  772  <|@ instruction v131|DWORD = XOR (x: v121|DWORD, y: v130|DWORD) size: DWORD <|@ <|@
      nr  774  <|@ instruction v132|DWORD = ADD (x: v128|DWORD, y: v131|DWORD) size: DWORD <|@ <|@
      nr  776  <|@ instruction v133|DWORD = ADD (x: v132|DWORD, y: v96|DWORD) size: DWORD <|@ <|@
      nr  778  <|@ instruction v134|DWORD = ADD (x: v133|DWORD, ~y: [v10|QWORD[.] + v72|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  780  <|@ instruction v135|DWORD = LEA address: [v134|DWORD - 899497514] size: DWORD <|@ <|@
      nr  782  <|@ instruction v136|DWORD = ROL x: v119|DWORD y: 30 size: DWORD <|@ <|@
      nr  784  <|@ instruction v137|DWORD = LEA address: [v53|DWORD + 8] size: DWORD <|@ <|@
      nr  786  <|@ instruction JUMP ~outgoingValues: [v137|DWORD, v121|DWORD, v129|DWORD, v136|DWORD, v127|DWORD, v135|DWORD] destination: B17 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606324590299565886
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [v53|DWORD, v54|DWORD, v55|DWORD, v56|DWORD, v57|DWORD, v58|DWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606406907175871841
    begin_IR
      LIR
      nr  798  <|@ instruction [v138|DWORD, v139|DWORD, v140|DWORD, v141|DWORD, v142|DWORD, v143|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction CMPCONSTBRANCH x: v138|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576421901864634512
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction v144|DWORD = ROL x: v143|DWORD y: 5 size: DWORD <|@ <|@
      nr  842  <|@ instruction v145|DWORD = XOR (x: v141|DWORD, y: v142|DWORD) size: DWORD <|@ <|@
      nr  844  <|@ instruction v146|DWORD = XOR (x: v145|DWORD, y: v140|DWORD) size: DWORD <|@ <|@
      nr  846  <|@ instruction v147|DWORD = ADD (x: v144|DWORD, y: v146|DWORD) size: DWORD <|@ <|@
      nr  848  <|@ instruction v148|DWORD = ADD (x: v147|DWORD, y: v139|DWORD) size: DWORD <|@ <|@
      nr  850  <|@ instruction v149|DWORD = ADD (x: v148|DWORD, ~y: [v10|QWORD[.] + v138|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  852  <|@ instruction v150|DWORD = LEA address: [v149|DWORD - 899497514] size: DWORD <|@ <|@
      nr  854  <|@ instruction v151|DWORD = ROL x: v142|DWORD y: 30 size: DWORD <|@ <|@
      nr  856  <|@ instruction v152|DWORD = INC value: v138|DWORD size: DWORD <|@ <|@
      nr  858  <|@ instruction JUMP ~outgoingValues: [v152|DWORD, v140|DWORD, v141|DWORD, v151|DWORD, v143|DWORD, v150|DWORD] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606324590299565887
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction JUMP ~outgoingValues: [v139|DWORD, v143|DWORD, v142|DWORD, v141|DWORD, v140|DWORD] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B26" 
    xhandlers
    flags 
    probability 4587023449039406624
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction JUMP ~outgoingValues: [v6|DWORD, v2|DWORD, v3|DWORD, v4|DWORD, v5|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B26" 
    xhandlers
    flags 
    probability 4587023449039406622
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction JUMP ~outgoingValues: [v5|DWORD, v17|DWORD, v2|DWORD, v19|DWORD, v4|DWORD] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B25" "B23" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  890  <|@ instruction [v153|DWORD, v154|DWORD, v155|DWORD, v156|DWORD, v157|DWORD] = LABEL alignment: 0 numbPhis: 5 label: ? <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction v158|DWORD[_] = MOV input: [v1|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  904  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
locals: v1|QWORD[.] - - v154|DWORD v155|DWORD v156|DWORD v157|DWORD v153|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v158|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 5 size: DWORD inlinedY: null state [bci:423] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 16], y: v154|DWORD) size: DWORD <|@ <|@
      nr  934  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 20], y: v155|DWORD) size: DWORD <|@ <|@
      nr  936  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 24], y: v156|DWORD) size: DWORD <|@ <|@
      nr  938  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 28], y: v157|DWORD) size: DWORD <|@ <|@
      nr  940  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 32], y: v153|DWORD) size: DWORD <|@ <|@
      nr  942  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction JUMP ~outgoingValues: [int[-105755|0xfffffffffffe62e5], long[0|0x0]] destination: B24 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [int[-110619|0xfffffffffffe4fe5], long[664|0x298]] destination: B8 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction MOV x: [r15|QWORD + 1156] y: -133915 size: DWORD <|@ <|@
      nr  982  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  984  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
locals: v1|QWORD[.] - - v154|DWORD v155|DWORD v156|DWORD v157|DWORD v153|DWORD - - 
>@ <|@ instruction DEOPT info [bci:423] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction JUMP ~outgoingValues: [int[-108315|0xfffffffffffe58e5], long[0|0x0]] destination: B22 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  996  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction JUMP ~outgoingValues: [int[-110619|0xfffffffffffe4fe5], long[664|0x298]] destination: B9 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction JUMP ~outgoingValues: [int[-102716|0xfffffffffffe6ec4], long[20|0x14]] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B24" "B9" "B22" "B8" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1016  <|@ instruction [v159|DWORD, v160|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v159|DWORD) size: DWORD <|@ <|@
      nr 1034  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v160|QWORD) size: QWORD <|@ <|@
      nr 1036  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: v1|QWORD[.] - - v2|DWORD v3|DWORD v4|DWORD v5|DWORD v6|DWORD v7|DWORD - 
>@ <|@ instruction DEOPT info [bci:357] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // W:int[]
     4: ifnonnull     15
     7: aload_0       
     8: bipush        80
    10: newarray      int
    12: putfield      #5          // W:int[]
    15: aload_1       
    16: iload_2       
    17: aload_0       
    18: getfield      #5          // W:int[]
    21: invokestatic  #19         // sun.security.provider.ByteArrayAccess.b2iBig64:(byte[], int, int[])void
    24: bipush        16
    26: istore_3      
    27: iload_3       
    28: bipush        79
    30: if_icmpgt     91
    33: aload_0       
    34: getfield      #5          // W:int[]
    37: iload_3       
    38: iconst_3      
    39: isub          
    40: iaload        
    41: aload_0       
    42: getfield      #5          // W:int[]
    45: iload_3       
    46: bipush        8
    48: isub          
    49: iaload        
    50: ixor          
    51: aload_0       
    52: getfield      #5          // W:int[]
    55: iload_3       
    56: bipush        14
    58: isub          
    59: iaload        
    60: ixor          
    61: aload_0       
    62: getfield      #5          // W:int[]
    65: iload_3       
    66: bipush        16
    68: isub          
    69: iaload        
    70: ixor          
    71: istore        4
    73: aload_0       
    74: getfield      #5          // W:int[]
    77: iload_3       
    78: iload         4
    80: iconst_1      
    81: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
    84: iastore       
    85: iinc          
    88: goto          27
    91: aload_0       
    92: getfield      #1          // state:int[]
    95: iconst_0      
    96: iaload        
    97: istore_3      
    98: aload_0       
    99: getfield      #1          // state:int[]
   102: iconst_1      
   103: iaload        
   104: istore        4
   106: aload_0       
   107: getfield      #1          // state:int[]
   110: iconst_2      
   111: iaload        
   112: istore        5
   114: aload_0       
   115: getfield      #1          // state:int[]
   118: iconst_3      
   119: iaload        
   120: istore        6
   122: aload_0       
   123: getfield      #1          // state:int[]
   126: iconst_4      
   127: iaload        
   128: istore        7
   130: iconst_0      
   131: istore        8
   133: iload         8
   135: bipush        20
   137: if_icmpge     204
   140: iload_3       
   141: iconst_5      
   142: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   145: iload         4
   147: iload         5
   149: iand          
   150: iload         4
   152: iconst_m1     
   153: ixor          
   154: iload         6
   156: iand          
   157: ior           
   158: iadd          
   159: iload         7
   161: iadd          
   162: aload_0       
   163: getfield      #5          // W:int[]
   166: iload         8
   168: iaload        
   169: iadd          
   170: ldc           #100        // 1518500249
   172: iadd          
   173: istore        9
   175: iload         6
   177: istore        7
   179: iload         5
   181: istore        6
   183: iload         4
   185: bipush        30
   187: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   190: istore        5
   192: iload_3       
   193: istore        4
   195: iload         9
   197: istore_3      
   198: iinc          
   201: goto          133
   204: bipush        20
   206: istore        8
   208: iload         8
   210: bipush        40
   212: if_icmpge     274
   215: iload_3       
   216: iconst_5      
   217: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   220: iload         4
   222: iload         5
   224: ixor          
   225: iload         6
   227: ixor          
   228: iadd          
   229: iload         7
   231: iadd          
   232: aload_0       
   233: getfield      #5          // W:int[]
   236: iload         8
   238: iaload        
   239: iadd          
   240: ldc           #101        // 1859775393
   242: iadd          
   243: istore        9
   245: iload         6
   247: istore        7
   249: iload         5
   251: istore        6
   253: iload         4
   255: bipush        30
   257: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   260: istore        5
   262: iload_3       
   263: istore        4
   265: iload         9
   267: istore_3      
   268: iinc          
   271: goto          208
   274: bipush        40
   276: istore        8
   278: iload         8
   280: bipush        60
   282: if_icmpge     353
   285: iload_3       
   286: iconst_5      
   287: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   290: iload         4
   292: iload         5
   294: iand          
   295: iload         4
   297: iload         6
   299: iand          
   300: ior           
   301: iload         5
   303: iload         6
   305: iand          
   306: ior           
   307: iadd          
   308: iload         7
   310: iadd          
   311: aload_0       
   312: getfield      #5          // W:int[]
   315: iload         8
   317: iaload        
   318: iadd          
   319: ldc           #102        // -1894007588
   321: iadd          
   322: istore        9
   324: iload         6
   326: istore        7
   328: iload         5
   330: istore        6
   332: iload         4
   334: bipush        30
   336: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   339: istore        5
   341: iload_3       
   342: istore        4
   344: iload         9
   346: istore_3      
   347: iinc          
   350: goto          278
   353: bipush        60
   355: istore        8
   357: iload         8
   359: bipush        80
   361: if_icmpge     423
   364: iload_3       
   365: iconst_5      
   366: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   369: iload         4
   371: iload         5
   373: ixor          
   374: iload         6
   376: ixor          
   377: iadd          
   378: iload         7
   380: iadd          
   381: aload_0       
   382: getfield      #5          // W:int[]
   385: iload         8
   387: iaload        
   388: iadd          
   389: ldc           #103        // -899497514
   391: iadd          
   392: istore        9
   394: iload         6
   396: istore        7
   398: iload         5
   400: istore        6
   402: iload         4
   404: bipush        30
   406: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   409: istore        5
   411: iload_3       
   412: istore        4
   414: iload         9
   416: istore_3      
   417: iinc          
   420: goto          357
   423: aload_0       
   424: getfield      #1          // state:int[]
   427: iconst_0      
   428: dup2          
   429: iaload        
   430: iload_3       
   431: iadd          
   432: iastore       
   433: aload_0       
   434: getfield      #1          // state:int[]
   437: iconst_1      
   438: dup2          
   439: iaload        
   440: iload         4
   442: iadd          
   443: iastore       
   444: aload_0       
   445: getfield      #1          // state:int[]
   448: iconst_2      
   449: dup2          
   450: iaload        
   451: iload         5
   453: iadd          
   454: iastore       
   455: aload_0       
   456: getfield      #1          // state:int[]
   459: iconst_3      
   460: dup2          
   461: iaload        
   462: iload         6
   464: iadd          
   465: iastore       
   466: aload_0       
   467: getfield      #1          // state:int[]
   470: iconst_4      
   471: dup2          
   472: iaload        
   473: iload         7
   475: iadd          
   476: iastore       
   477: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@31f9b0c2 slotKind: QWORD <|@ <|@
      nr   40  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction v1|QWORD[.] = MOV input: [v0|QWORD + 72] size: QWORD <|@ <|@
      nr   44  <|@ instruction v2|DWORD = MOV input: [v0|QWORD + 48] size: DWORD <|@ <|@
      nr   46  <|@ instruction v3|DWORD = MOV input: [v0|QWORD + 40] size: DWORD <|@ <|@
      nr   48  <|@ instruction v4|DWORD = MOV input: [v0|QWORD + 32] size: DWORD <|@ <|@
      nr   50  <|@ instruction v5|DWORD = MOV input: [v0|QWORD + 24] size: DWORD <|@ <|@
      nr   52  <|@ instruction v6|DWORD = MOV input: [v0|QWORD + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction v7|DWORD = MOV input: [v0|QWORD + 8] size: DWORD <|@ <|@
      nr   56  <|@ instruction rsi|QWORD = MOVE input: v0|QWORD moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: v1|QWORD[.] - - v2|DWORD v3|DWORD v4|DWORD v5|DWORD v6|DWORD v7|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B29 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lsun/security/provider/SHA;, resolved>;compressed} state [bci:357] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.9523809523809523 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B25 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B24" 
    xhandlers
    flags 
    probability 4606753504549791646
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction v8|DWORD[_] = MOV input: [v1|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: v1|QWORD[.] - - v2|DWORD v3|DWORD v4|DWORD v5|DWORD v6|DWORD v7|DWORD - 
>@ <|@ instruction v9|DWORD = MOV input: [v8|DWORD[_] * 8 + 12] size: DWORD state [bci:357] <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B23" 
    xhandlers
    flags 
    probability 4606753504549791646
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3087af84 encoding: base: 0 shift: 3 <|@ <|@
      nr  132  <|@ instruction v11|DWORD = ROL x: v2|DWORD y: 5 size: DWORD <|@ <|@
      nr  134  <|@ instruction v12|DWORD = XOR (x: v3|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction v13|DWORD = XOR (x: v12|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction v14|DWORD = ADD (x: v11|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction v15|DWORD = ADD (x: v14|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr  142  <|@ instruction v16|DWORD = ADD (x: v15|DWORD, ~y: [v10|QWORD[.] + v7|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  144  <|@ instruction v17|DWORD = LEA address: [v16|DWORD - 899497514] size: DWORD <|@ <|@
      nr  146  <|@ instruction v18|DWORD = INC value: v7|DWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction v19|DWORD = ROL x: v3|DWORD y: 30 size: DWORD <|@ <|@
      nr  150  <|@ instruction CMPCONSTBRANCH x: v18|DWORD trueDestinationProbability: 0.95 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B23 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B10" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction v20|DWORD = LEA address: [v7|DWORD + 2] size: DWORD <|@ <|@
      nr  170  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B10 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B11" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction v21|DWORD = MOVE input: int[78|0x4e] <|@ <|@
      nr  208  <|@ instruction v22|DWORD = SUB (x: v21|DWORD, ~y: v7|DWORD) size: DWORD <|@ <|@
      nr  210  <|@ instruction v23|QWORD = MOVSXD value: v22|DWORD size: QWORD <|@ <|@
      nr  212  <|@ instruction v24|QWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction v25|QWORD = ADD (x: v23|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr  216  <|@ instruction v26|QWORD = DEC value: v25|QWORD size: QWORD <|@ <|@
      nr  218  <|@ instruction v27|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction CMPBRANCH (x: v27|QWORD, y: v26|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v20|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B7" 
    successors "B12" "B22" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v18|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction v28|DWORD = ROL x: v17|DWORD y: 5 size: DWORD <|@ <|@
      nr  296  <|@ instruction v29|DWORD = XOR (x: v19|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction v30|DWORD = XOR (x: v29|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr  300  <|@ instruction v31|DWORD = ADD (x: v28|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr  302  <|@ instruction v32|DWORD = ADD (x: v31|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr  304  <|@ instruction v33|DWORD = ADD (x: v32|DWORD, ~y: [v10|QWORD[.] + v18|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  306  <|@ instruction v34|DWORD = LEA address: [v33|DWORD - 899497514] size: DWORD <|@ <|@
      nr  308  <|@ instruction v35|DWORD = LEA address: [v7|DWORD + 3] size: DWORD <|@ <|@
      nr  310  <|@ instruction CMP x: v35|DWORD y: 80 size: DWORD <|@ <|@
      nr  312  <|@ instruction v36|DWORD = CMOVE (falseValue: int[80|0x50], ~trueValue: v35|DWORD) condition: < <|@ <|@
      nr  314  <|@ instruction v37|DWORD = ROL x: v2|DWORD y: 30 size: DWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~outgoingValues: [v34|DWORD, v17|DWORD, v37|DWORD, v19|DWORD, v4|DWORD, v20|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606406907175871839
    begin_IR
      LIR
      nr  318  <|@ instruction [v38|DWORD, v39|DWORD, v40|DWORD, v41|DWORD, v42|DWORD, v43|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v43|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576421901864634511
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction v44|DWORD = ROL x: v38|DWORD y: 5 size: DWORD <|@ <|@
      nr  362  <|@ instruction v45|DWORD = XOR (x: v40|DWORD, y: v39|DWORD) size: DWORD <|@ <|@
      nr  364  <|@ instruction v46|DWORD = XOR (x: v45|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr  366  <|@ instruction v47|DWORD = ADD (x: v44|DWORD, y: v46|DWORD) size: DWORD <|@ <|@
      nr  368  <|@ instruction v48|DWORD = ADD (x: v47|DWORD, y: v42|DWORD) size: DWORD <|@ <|@
      nr  370  <|@ instruction v49|DWORD = ADD (x: v48|DWORD, ~y: [v10|QWORD[.] + v43|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  372  <|@ instruction v50|DWORD = LEA address: [v49|DWORD - 899497514] size: DWORD <|@ <|@
      nr  374  <|@ instruction v51|DWORD = INC value: v43|DWORD size: DWORD <|@ <|@
      nr  376  <|@ instruction v52|DWORD = ROL x: v39|DWORD y: 30 size: DWORD <|@ <|@
      nr  378  <|@ instruction JUMP ~outgoingValues: [v50|DWORD, v38|DWORD, v52|DWORD, v40|DWORD, v41|DWORD, v51|DWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606324590299565885
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction JUMP ~outgoingValues: [v43|DWORD, v42|DWORD, v41|DWORD, v40|DWORD, v39|DWORD, v38|DWORD] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" 
    successors "B17" "B18" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4612021107685376776
    begin_IR
      LIR
      nr  390  <|@ instruction [v53|DWORD, v54|DWORD, v55|DWORD, v56|DWORD, v57|DWORD, v58|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.5789473684210522 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 72 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4608281511566220913
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction v59|DWORD = MOV input: [v10|QWORD[.] + v53|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  630  <|@ instruction v60|DWORD = INC value: v53|DWORD size: DWORD <|@ <|@
      nr  632  <|@ instruction v61|DWORD = MOV input: [v10|QWORD[.] + v60|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  634  <|@ instruction v62|DWORD = LEA address: [v53|DWORD + 2] size: DWORD <|@ <|@
      nr  636  <|@ instruction v63|DWORD = MOV input: [v10|QWORD[.] + v62|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  638  <|@ instruction v64|DWORD = LEA address: [v53|DWORD + 3] size: DWORD <|@ <|@
      nr  640  <|@ instruction v65|DWORD = MOV input: [v10|QWORD[.] + v64|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  642  <|@ instruction v66|DWORD = LEA address: [v53|DWORD + 4] size: DWORD <|@ <|@
      nr  644  <|@ instruction v67|DWORD = MOV input: [v10|QWORD[.] + v66|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  646  <|@ instruction v68|DWORD = LEA address: [v53|DWORD + 5] size: DWORD <|@ <|@
      nr  648  <|@ instruction v69|DWORD = MOV input: [v10|QWORD[.] + v68|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  650  <|@ instruction v70|DWORD = LEA address: [v53|DWORD + 6] size: DWORD <|@ <|@
      nr  652  <|@ instruction v71|DWORD = MOV input: [v10|QWORD[.] + v70|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  654  <|@ instruction v72|DWORD = LEA address: [v53|DWORD + 7] size: DWORD <|@ <|@
      nr  656  <|@ instruction v73|DWORD = ROL x: v58|DWORD y: 5 size: DWORD <|@ <|@
      nr  658  <|@ instruction v74|DWORD = XOR (x: v56|DWORD, y: v57|DWORD) size: DWORD <|@ <|@
      nr  660  <|@ instruction v75|DWORD = XOR (x: v74|DWORD, y: v55|DWORD) size: DWORD <|@ <|@
      nr  662  <|@ instruction v76|DWORD = ADD (x: v73|DWORD, y: v75|DWORD) size: DWORD <|@ <|@
      nr  664  <|@ instruction v77|DWORD = ADD (x: v76|DWORD, y: v54|DWORD) size: DWORD <|@ <|@
      nr  666  <|@ instruction v78|DWORD = ADD (x: v77|DWORD, y: v59|DWORD) size: DWORD <|@ <|@
      nr  668  <|@ instruction v79|DWORD = LEA address: [v78|DWORD - 899497514] size: DWORD <|@ <|@
      nr  670  <|@ instruction v80|DWORD = ROL x: v79|DWORD y: 5 size: DWORD <|@ <|@
      nr  672  <|@ instruction v81|DWORD = ROL x: v57|DWORD y: 30 size: DWORD <|@ <|@
      nr  674  <|@ instruction v82|DWORD = XOR (x: v81|DWORD, y: v58|DWORD) size: DWORD <|@ <|@
      nr  676  <|@ instruction v83|DWORD = XOR (x: v56|DWORD, y: v82|DWORD) size: DWORD <|@ <|@
      nr  678  <|@ instruction v84|DWORD = ADD (x: v80|DWORD, y: v83|DWORD) size: DWORD <|@ <|@
      nr  680  <|@ instruction v85|DWORD = ADD (x: v84|DWORD, y: v55|DWORD) size: DWORD <|@ <|@
      nr  682  <|@ instruction v86|DWORD = ADD (x: v85|DWORD, y: v61|DWORD) size: DWORD <|@ <|@
      nr  684  <|@ instruction v87|DWORD = LEA address: [v86|DWORD - 899497514] size: DWORD <|@ <|@
      nr  686  <|@ instruction v88|DWORD = ROL x: v87|DWORD y: 5 size: DWORD <|@ <|@
      nr  688  <|@ instruction v89|DWORD = ROL x: v58|DWORD y: 30 size: DWORD <|@ <|@
      nr  690  <|@ instruction v90|DWORD = XOR (x: v79|DWORD, y: v89|DWORD) size: DWORD <|@ <|@
      nr  692  <|@ instruction v91|DWORD = XOR (x: v81|DWORD, y: v90|DWORD) size: DWORD <|@ <|@
      nr  694  <|@ instruction v92|DWORD = ADD (x: v88|DWORD, y: v91|DWORD) size: DWORD <|@ <|@
      nr  696  <|@ instruction v93|DWORD = ADD (x: v92|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr  698  <|@ instruction v94|DWORD = ADD (x: v93|DWORD, y: v63|DWORD) size: DWORD <|@ <|@
      nr  700  <|@ instruction v95|DWORD = LEA address: [v94|DWORD - 899497514] size: DWORD <|@ <|@
      nr  702  <|@ instruction v96|DWORD = ROL x: v95|DWORD y: 30 size: DWORD <|@ <|@
      nr  704  <|@ instruction v97|DWORD = ROL x: v87|DWORD y: 30 size: DWORD <|@ <|@
      nr  706  <|@ instruction v98|DWORD = ROL x: v79|DWORD y: 30 size: DWORD <|@ <|@
      nr  708  <|@ instruction v99|DWORD = ROL x: v95|DWORD y: 5 size: DWORD <|@ <|@
      nr  710  <|@ instruction v100|DWORD = XOR (x: v87|DWORD, y: v98|DWORD) size: DWORD <|@ <|@
      nr  712  <|@ instruction v101|DWORD = XOR (x: v89|DWORD, y: v100|DWORD) size: DWORD <|@ <|@
      nr  714  <|@ instruction v102|DWORD = ADD (x: v99|DWORD, y: v101|DWORD) size: DWORD <|@ <|@
      nr  716  <|@ instruction v103|DWORD = ADD (x: v102|DWORD, y: v81|DWORD) size: DWORD <|@ <|@
      nr  718  <|@ instruction v104|DWORD = ADD (x: v103|DWORD, y: v65|DWORD) size: DWORD <|@ <|@
      nr  720  <|@ instruction v105|DWORD = LEA address: [v104|DWORD - 899497514] size: DWORD <|@ <|@
      nr  722  <|@ instruction v106|DWORD = ROL x: v105|DWORD y: 5 size: DWORD <|@ <|@
      nr  724  <|@ instruction v107|DWORD = XOR (x: v95|DWORD, y: v97|DWORD) size: DWORD <|@ <|@
      nr  726  <|@ instruction v108|DWORD = XOR (x: v98|DWORD, y: v107|DWORD) size: DWORD <|@ <|@
      nr  728  <|@ instruction v109|DWORD = ADD (x: v106|DWORD, y: v108|DWORD) size: DWORD <|@ <|@
      nr  730  <|@ instruction v110|DWORD = ADD (x: v109|DWORD, y: v89|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction v111|DWORD = ADD (x: v110|DWORD, y: v67|DWORD) size: DWORD <|@ <|@
      nr  734  <|@ instruction v112|DWORD = LEA address: [v111|DWORD - 899497514] size: DWORD <|@ <|@
      nr  736  <|@ instruction v113|DWORD = ROL x: v112|DWORD y: 5 size: DWORD <|@ <|@
      nr  738  <|@ instruction v114|DWORD = XOR (x: v105|DWORD, y: v96|DWORD) size: DWORD <|@ <|@
      nr  740  <|@ instruction v115|DWORD = XOR (x: v97|DWORD, y: v114|DWORD) size: DWORD <|@ <|@
      nr  742  <|@ instruction v116|DWORD = ADD (x: v113|DWORD, y: v115|DWORD) size: DWORD <|@ <|@
      nr  744  <|@ instruction v117|DWORD = ADD (x: v116|DWORD, y: v98|DWORD) size: DWORD <|@ <|@
      nr  746  <|@ instruction v118|DWORD = ADD (x: v117|DWORD, y: v69|DWORD) size: DWORD <|@ <|@
      nr  748  <|@ instruction v119|DWORD = LEA address: [v118|DWORD - 899497514] size: DWORD <|@ <|@
      nr  750  <|@ instruction v120|DWORD = ROL x: v119|DWORD y: 5 size: DWORD <|@ <|@
      nr  752  <|@ instruction v121|DWORD = ROL x: v105|DWORD y: 30 size: DWORD <|@ <|@
      nr  754  <|@ instruction v122|DWORD = XOR (x: v112|DWORD, y: v121|DWORD) size: DWORD <|@ <|@
      nr  756  <|@ instruction v123|DWORD = XOR (x: v96|DWORD, y: v122|DWORD) size: DWORD <|@ <|@
      nr  758  <|@ instruction v124|DWORD = ADD (x: v120|DWORD, y: v123|DWORD) size: DWORD <|@ <|@
      nr  760  <|@ instruction v125|DWORD = ADD (x: v124|DWORD, y: v97|DWORD) size: DWORD <|@ <|@
      nr  762  <|@ instruction v126|DWORD = ADD (x: v125|DWORD, y: v71|DWORD) size: DWORD <|@ <|@
      nr  764  <|@ instruction v127|DWORD = LEA address: [v126|DWORD - 899497514] size: DWORD <|@ <|@
      nr  766  <|@ instruction v128|DWORD = ROL x: v127|DWORD y: 5 size: DWORD <|@ <|@
      nr  768  <|@ instruction v129|DWORD = ROL x: v112|DWORD y: 30 size: DWORD <|@ <|@
      nr  770  <|@ instruction v130|DWORD = XOR (x: v119|DWORD, y: v129|DWORD) size: DWORD <|@ <|@
      nr  772  <|@ instruction v131|DWORD = XOR (x: v121|DWORD, y: v130|DWORD) size: DWORD <|@ <|@
      nr  774  <|@ instruction v132|DWORD = ADD (x: v128|DWORD, y: v131|DWORD) size: DWORD <|@ <|@
      nr  776  <|@ instruction v133|DWORD = ADD (x: v132|DWORD, y: v96|DWORD) size: DWORD <|@ <|@
      nr  778  <|@ instruction v134|DWORD = ADD (x: v133|DWORD, ~y: [v10|QWORD[.] + v72|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  780  <|@ instruction v135|DWORD = LEA address: [v134|DWORD - 899497514] size: DWORD <|@ <|@
      nr  782  <|@ instruction v136|DWORD = ROL x: v119|DWORD y: 30 size: DWORD <|@ <|@
      nr  784  <|@ instruction v137|DWORD = LEA address: [v53|DWORD + 8] size: DWORD <|@ <|@
      nr  786  <|@ instruction JUMP ~outgoingValues: [v137|DWORD, v121|DWORD, v129|DWORD, v136|DWORD, v127|DWORD, v135|DWORD] destination: B17 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606324590299565886
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [v53|DWORD, v54|DWORD, v55|DWORD, v56|DWORD, v57|DWORD, v58|DWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606406907175871841
    begin_IR
      LIR
      nr  798  <|@ instruction [v138|DWORD, v139|DWORD, v140|DWORD, v141|DWORD, v142|DWORD, v143|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction CMPCONSTBRANCH x: v138|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576421901864634512
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction v144|DWORD = ROL x: v143|DWORD y: 5 size: DWORD <|@ <|@
      nr  842  <|@ instruction v145|DWORD = XOR (x: v141|DWORD, y: v142|DWORD) size: DWORD <|@ <|@
      nr  844  <|@ instruction v146|DWORD = XOR (x: v145|DWORD, y: v140|DWORD) size: DWORD <|@ <|@
      nr  846  <|@ instruction v147|DWORD = ADD (x: v144|DWORD, y: v146|DWORD) size: DWORD <|@ <|@
      nr  848  <|@ instruction v148|DWORD = ADD (x: v147|DWORD, y: v139|DWORD) size: DWORD <|@ <|@
      nr  850  <|@ instruction v149|DWORD = ADD (x: v148|DWORD, ~y: [v10|QWORD[.] + v138|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  852  <|@ instruction v150|DWORD = LEA address: [v149|DWORD - 899497514] size: DWORD <|@ <|@
      nr  854  <|@ instruction v151|DWORD = ROL x: v142|DWORD y: 30 size: DWORD <|@ <|@
      nr  856  <|@ instruction v152|DWORD = INC value: v138|DWORD size: DWORD <|@ <|@
      nr  858  <|@ instruction JUMP ~outgoingValues: [v152|DWORD, v140|DWORD, v141|DWORD, v151|DWORD, v143|DWORD, v150|DWORD] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606324590299565887
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction JUMP ~outgoingValues: [v139|DWORD, v143|DWORD, v142|DWORD, v141|DWORD, v140|DWORD] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B26" 
    xhandlers
    flags 
    probability 4587023449039406624
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction JUMP ~outgoingValues: [v6|DWORD, v2|DWORD, v3|DWORD, v4|DWORD, v5|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B26" 
    xhandlers
    flags 
    probability 4587023449039406622
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction JUMP ~outgoingValues: [v5|DWORD, v17|DWORD, v2|DWORD, v19|DWORD, v4|DWORD] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B25" "B23" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  890  <|@ instruction [v153|DWORD, v154|DWORD, v155|DWORD, v156|DWORD, v157|DWORD] = LABEL alignment: 0 numbPhis: 5 label: ? <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction v158|DWORD[_] = MOV input: [v1|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  904  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
locals: v1|QWORD[.] - - v154|DWORD v155|DWORD v156|DWORD v157|DWORD v153|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v158|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 5 size: DWORD inlinedY: null state [bci:423] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 16], y: v154|DWORD) size: DWORD <|@ <|@
      nr  934  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 20], y: v155|DWORD) size: DWORD <|@ <|@
      nr  936  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 24], y: v156|DWORD) size: DWORD <|@ <|@
      nr  938  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 28], y: v157|DWORD) size: DWORD <|@ <|@
      nr  940  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 32], y: v153|DWORD) size: DWORD <|@ <|@
      nr  942  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction JUMP ~outgoingValues: [int[-105755|0xfffffffffffe62e5], long[0|0x0]] destination: B24 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [int[-110619|0xfffffffffffe4fe5], long[664|0x298]] destination: B8 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction MOV x: [r15|QWORD + 1156] y: -133915 size: DWORD <|@ <|@
      nr  982  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  984  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
locals: v1|QWORD[.] - - v154|DWORD v155|DWORD v156|DWORD v157|DWORD v153|DWORD - - 
>@ <|@ instruction DEOPT info [bci:423] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction JUMP ~outgoingValues: [int[-108315|0xfffffffffffe58e5], long[0|0x0]] destination: B22 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  996  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction JUMP ~outgoingValues: [int[-110619|0xfffffffffffe4fe5], long[664|0x298]] destination: B9 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction JUMP ~outgoingValues: [int[-102716|0xfffffffffffe6ec4], long[20|0x14]] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B24" "B9" "B22" "B8" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1016  <|@ instruction [v159|DWORD, v160|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v159|DWORD) size: DWORD <|@ <|@
      nr 1034  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v160|QWORD) size: QWORD <|@ <|@
      nr 1036  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: v1|QWORD[.] - - v2|DWORD v3|DWORD v4|DWORD v5|DWORD v6|DWORD v7|DWORD - 
>@ <|@ instruction DEOPT info [bci:357] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // W:int[]
     4: ifnonnull     15
     7: aload_0       
     8: bipush        80
    10: newarray      int
    12: putfield      #5          // W:int[]
    15: aload_1       
    16: iload_2       
    17: aload_0       
    18: getfield      #5          // W:int[]
    21: invokestatic  #19         // sun.security.provider.ByteArrayAccess.b2iBig64:(byte[], int, int[])void
    24: bipush        16
    26: istore_3      
    27: iload_3       
    28: bipush        79
    30: if_icmpgt     91
    33: aload_0       
    34: getfield      #5          // W:int[]
    37: iload_3       
    38: iconst_3      
    39: isub          
    40: iaload        
    41: aload_0       
    42: getfield      #5          // W:int[]
    45: iload_3       
    46: bipush        8
    48: isub          
    49: iaload        
    50: ixor          
    51: aload_0       
    52: getfield      #5          // W:int[]
    55: iload_3       
    56: bipush        14
    58: isub          
    59: iaload        
    60: ixor          
    61: aload_0       
    62: getfield      #5          // W:int[]
    65: iload_3       
    66: bipush        16
    68: isub          
    69: iaload        
    70: ixor          
    71: istore        4
    73: aload_0       
    74: getfield      #5          // W:int[]
    77: iload_3       
    78: iload         4
    80: iconst_1      
    81: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
    84: iastore       
    85: iinc          
    88: goto          27
    91: aload_0       
    92: getfield      #1          // state:int[]
    95: iconst_0      
    96: iaload        
    97: istore_3      
    98: aload_0       
    99: getfield      #1          // state:int[]
   102: iconst_1      
   103: iaload        
   104: istore        4
   106: aload_0       
   107: getfield      #1          // state:int[]
   110: iconst_2      
   111: iaload        
   112: istore        5
   114: aload_0       
   115: getfield      #1          // state:int[]
   118: iconst_3      
   119: iaload        
   120: istore        6
   122: aload_0       
   123: getfield      #1          // state:int[]
   126: iconst_4      
   127: iaload        
   128: istore        7
   130: iconst_0      
   131: istore        8
   133: iload         8
   135: bipush        20
   137: if_icmpge     204
   140: iload_3       
   141: iconst_5      
   142: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   145: iload         4
   147: iload         5
   149: iand          
   150: iload         4
   152: iconst_m1     
   153: ixor          
   154: iload         6
   156: iand          
   157: ior           
   158: iadd          
   159: iload         7
   161: iadd          
   162: aload_0       
   163: getfield      #5          // W:int[]
   166: iload         8
   168: iaload        
   169: iadd          
   170: ldc           #100        // 1518500249
   172: iadd          
   173: istore        9
   175: iload         6
   177: istore        7
   179: iload         5
   181: istore        6
   183: iload         4
   185: bipush        30
   187: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   190: istore        5
   192: iload_3       
   193: istore        4
   195: iload         9
   197: istore_3      
   198: iinc          
   201: goto          133
   204: bipush        20
   206: istore        8
   208: iload         8
   210: bipush        40
   212: if_icmpge     274
   215: iload_3       
   216: iconst_5      
   217: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   220: iload         4
   222: iload         5
   224: ixor          
   225: iload         6
   227: ixor          
   228: iadd          
   229: iload         7
   231: iadd          
   232: aload_0       
   233: getfield      #5          // W:int[]
   236: iload         8
   238: iaload        
   239: iadd          
   240: ldc           #101        // 1859775393
   242: iadd          
   243: istore        9
   245: iload         6
   247: istore        7
   249: iload         5
   251: istore        6
   253: iload         4
   255: bipush        30
   257: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   260: istore        5
   262: iload_3       
   263: istore        4
   265: iload         9
   267: istore_3      
   268: iinc          
   271: goto          208
   274: bipush        40
   276: istore        8
   278: iload         8
   280: bipush        60
   282: if_icmpge     353
   285: iload_3       
   286: iconst_5      
   287: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   290: iload         4
   292: iload         5
   294: iand          
   295: iload         4
   297: iload         6
   299: iand          
   300: ior           
   301: iload         5
   303: iload         6
   305: iand          
   306: ior           
   307: iadd          
   308: iload         7
   310: iadd          
   311: aload_0       
   312: getfield      #5          // W:int[]
   315: iload         8
   317: iaload        
   318: iadd          
   319: ldc           #102        // -1894007588
   321: iadd          
   322: istore        9
   324: iload         6
   326: istore        7
   328: iload         5
   330: istore        6
   332: iload         4
   334: bipush        30
   336: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   339: istore        5
   341: iload_3       
   342: istore        4
   344: iload         9
   346: istore_3      
   347: iinc          
   350: goto          278
   353: bipush        60
   355: istore        8
   357: iload         8
   359: bipush        80
   361: if_icmpge     423
   364: iload_3       
   365: iconst_5      
   366: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   369: iload         4
   371: iload         5
   373: ixor          
   374: iload         6
   376: ixor          
   377: iadd          
   378: iload         7
   380: iadd          
   381: aload_0       
   382: getfield      #5          // W:int[]
   385: iload         8
   387: iaload        
   388: iadd          
   389: ldc           #103        // -899497514
   391: iadd          
   392: istore        9
   394: iload         6
   396: istore        7
   398: iload         5
   400: istore        6
   402: iload         4
   404: bipush        30
   406: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   409: istore        5
   411: iload_3       
   412: istore        4
   414: iload         9
   416: istore_3      
   417: iinc          
   420: goto          357
   423: aload_0       
   424: getfield      #1          // state:int[]
   427: iconst_0      
   428: dup2          
   429: iaload        
   430: iload_3       
   431: iadd          
   432: iastore       
   433: aload_0       
   434: getfield      #1          // state:int[]
   437: iconst_1      
   438: dup2          
   439: iaload        
   440: iload         4
   442: iadd          
   443: iastore       
   444: aload_0       
   445: getfield      #1          // state:int[]
   448: iconst_2      
   449: dup2          
   450: iaload        
   451: iload         5
   453: iadd          
   454: iastore       
   455: aload_0       
   456: getfield      #1          // state:int[]
   459: iconst_3      
   460: dup2          
   461: iaload        
   462: iload         6
   464: iadd          
   465: iastore       
   466: aload_0       
   467: getfield      #1          // state:int[]
   470: iconst_4      
   471: dup2          
   472: iaload        
   473: iload         7
   475: iadd          
   476: iastore       
   477: return        
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 36[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v0|q [0, 40[[56, 58[ "NoOptimization"
  v0|q QWORD "[v0|q]" v0|q rsi|q [40, 56[40 MustHaveRegister 42 MustHaveRegister 44 MustHaveRegister 46 MustHaveRegister 48 MustHaveRegister 50 MustHaveRegister 52 MustHaveRegister 54 MustHaveRegister 56 ShouldHaveRegister  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q -1 [42, 906[[944, 985[[986, 1037[42 MustHaveRegister 60 MustHaveRegister 88 MustHaveRegister 902 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [44, 314[[870, 879[[880, 889[[944, 964[[986, 1037[44 MustHaveRegister 132 MustHaveRegister 296 ShouldHaveRegister 314 MustHaveRegister 878 ShouldHaveRegister 888 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [46, 256[[870, 879[[944, 964[[986, 1037[46 MustHaveRegister 134 ShouldHaveRegister 148 MustHaveRegister 878 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d v42|d [48, 317[[870, 879[[880, 889[[944, 964[[986, 1037[48 MustHaveRegister 134 ShouldHaveRegister 298 ShouldHaveRegister 316 ShouldHaveRegister 878 ShouldHaveRegister 888 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [50, 302[[870, 879[[880, 889[[944, 964[[986, 1037[50 MustHaveRegister 136 ShouldHaveRegister 302 ShouldHaveRegister 878 ShouldHaveRegister 888 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d -1 [52, 256[[870, 879[[944, 964[[986, 1037[52 MustHaveRegister 140 ShouldHaveRegister 878 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d -1 [54, 308[[944, 964[[986, 1037[54 MustHaveRegister 72 ShouldHaveRegister 92 ShouldHaveRegister 142 MustHaveRegister 146 ShouldHaveRegister 168 MustHaveRegister 208 ShouldHaveRegister 308 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d -1 [88, 130[88 MustHaveRegister 90 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d -1 [90, 254[90 MustHaveRegister 92 MustHaveRegister 218 ShouldHaveRegister 232 MustHaveRegister 254 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[v10|q]" v10|q v8|d [130, 860[130 MustHaveRegister 142 MustHaveRegister 304 MustHaveRegister 370 MustHaveRegister 379 LiveAtLoopEnd 628 MustHaveRegister 632 MustHaveRegister 636 MustHaveRegister 640 MustHaveRegister 644 MustHaveRegister 648 MustHaveRegister 652 MustHaveRegister 778 MustHaveRegister 787 LiveAtLoopEnd 850 MustHaveRegister 859 LiveAtLoopEnd  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d v2|d [132, 138[132 MustHaveRegister 138 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d v3|d [134, 136[134 MustHaveRegister 136 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[v13|d]" v13|d v12|d [136, 138[136 MustHaveRegister 138 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[v14|d]" v14|d v11|d [138, 140[138 MustHaveRegister 140 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[v15|d]" v15|d v14|d [140, 142[140 MustHaveRegister 142 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[v16|d]" v16|d v15|d [142, 144[142 MustHaveRegister 144 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[v17|d]" v17|d v39|d [144, 317[[880, 889[144 MustHaveRegister 294 MustHaveRegister 316 ShouldHaveRegister 888 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[v18|d]" v18|d v7|d [146, 305[146 MustHaveRegister 150 ShouldHaveRegister 254 ShouldHaveRegister 304 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[v19|d]" v19|d v3|d [148, 317[[880, 889[148 MustHaveRegister 296 ShouldHaveRegister 316 ShouldHaveRegister 888 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[v20|d]" v20|d v43|d [168, 317[168 MustHaveRegister 170 ShouldHaveRegister 212 ShouldHaveRegister 232 ShouldHaveRegister 316 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[v21|d]" v21|d -1 [206, 208[206 MustHaveRegister 208 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[v22|d]" v22|d v21|d [208, 210[208 MustHaveRegister 210 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[v23|q]" v23|q -1 [210, 214[210 MustHaveRegister 214 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[v24|q]" v24|q v20|d [212, 214[212 MustHaveRegister 214 ShouldHaveRegister  "NoSpillStore"
  v25|q QWORD "[v25|q]" v25|q v23|q [214, 216[214 MustHaveRegister 216 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[v26|q]" v26|q v25|q [216, 220[216 MustHaveRegister 220 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[v27|q]" v27|q v9|d [218, 220[218 MustHaveRegister 220 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[v28|d]" v28|d v17|d [294, 300[294 MustHaveRegister 300 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[v29|d]" v29|d v19|d [296, 298[296 MustHaveRegister 298 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[v30|d]" v30|d v29|d [298, 300[298 MustHaveRegister 300 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[v31|d]" v31|d v28|d [300, 302[300 MustHaveRegister 302 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[v32|d]" v32|d v31|d [302, 304[302 MustHaveRegister 304 MustHaveRegister  "NoSpillStore"
  v33|d DWORD "[v33|d]" v33|d v32|d [304, 306[304 MustHaveRegister 306 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[v34|d]" v34|d v38|d [306, 317[306 MustHaveRegister 316 ShouldHaveRegister  "NoSpillStore"
  v35|d DWORD "[v35|d]" v35|d -1 [308, 313[308 MustHaveRegister 310 ShouldHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v36|d DWORD "[v36|d]" v36|d -1 [312, 380[312 MustHaveRegister 328 MustHaveRegister 379 LiveAtLoopEnd  "NoSpillStore"
  v37|d DWORD "[v37|d]" v37|d v2|d [314, 317[314 MustHaveRegister 316 ShouldHaveRegister  "NoSpillStore"
  v38|d DWORD "[v38|d]" v38|d v34|d [318, 379[[380, 389[360 MustHaveRegister 378 ShouldHaveRegister 388 ShouldHaveRegister  "NoSpillStore"
  v39|d DWORD "[v39|d]" v39|d v17|d [318, 376[[380, 389[362 ShouldHaveRegister 376 MustHaveRegister 388 ShouldHaveRegister  "NoSpillStore"
  v40|d DWORD "[v40|d]" v40|d v37|d [318, 379[[380, 389[362 ShouldHaveRegister 378 ShouldHaveRegister 388 ShouldHaveRegister  "NoSpillStore"
  v41|d DWORD "[v41|d]" v41|d v19|d [318, 379[[380, 389[364 ShouldHaveRegister 378 ShouldHaveRegister 388 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[v42|d]" v42|d v4|d [318, 368[[380, 389[368 ShouldHaveRegister 388 ShouldHaveRegister  "NoSpillStore"
  v43|d DWORD "[v43|d]" v43|d v20|d [318, 374[[380, 389[328 ShouldHaveRegister 370 MustHaveRegister 374 ShouldHaveRegister 388 ShouldHaveRegister  "NoSpillStore"
  v44|d DWORD "[v44|d]" v44|d v38|d [360, 366[360 MustHaveRegister 366 ShouldHaveRegister  "NoSpillStore"
  v45|d DWORD "[v45|d]" v45|d v40|d [362, 364[362 MustHaveRegister 364 ShouldHaveRegister  "NoSpillStore"
  v46|d DWORD "[v46|d]" v46|d v45|d [364, 366[364 MustHaveRegister 366 ShouldHaveRegister  "NoSpillStore"
  v47|d DWORD "[v47|d]" v47|d v44|d [366, 368[366 MustHaveRegister 368 ShouldHaveRegister  "NoSpillStore"
  v48|d DWORD "[v48|d]" v48|d v47|d [368, 370[368 MustHaveRegister 370 MustHaveRegister  "NoSpillStore"
  v49|d DWORD "[v49|d]" v49|d v48|d [370, 372[370 MustHaveRegister 372 MustHaveRegister  "NoSpillStore"
  v50|d DWORD "[v50|d]" v50|d -1 [372, 379[372 MustHaveRegister 378 ShouldHaveRegister  "NoSpillStore"
  v51|d DWORD "[v51|d]" v51|d v43|d [374, 379[374 MustHaveRegister 378 ShouldHaveRegister  "NoSpillStore"
  v52|d DWORD "[v52|d]" v52|d v39|d [376, 379[376 MustHaveRegister 378 ShouldHaveRegister  "NoSpillStore"
  v53|d DWORD "[v53|d]" v53|d v137|d [390, 784[[788, 797[400 ShouldHaveRegister 628 MustHaveRegister 630 ShouldHaveRegister 634 MustHaveRegister 638 MustHaveRegister 642 MustHaveRegister 646 MustHaveRegister 650 MustHaveRegister 654 MustHaveRegister 784 MustHaveRegister 796 ShouldHaveRegister  "NoSpillStore"
  v54|d DWORD "[v54|d]" v54|d v121|d [390, 664[[788, 797[664 ShouldHaveRegister 796 ShouldHaveRegister  "NoSpillStore"
  v55|d DWORD "[v55|d]" v55|d v129|d [390, 680[[788, 797[660 ShouldHaveRegister 680 ShouldHaveRegister 796 ShouldHaveRegister  "NoSpillStore"
  v56|d DWORD "[v56|d]" v56|d v136|d [390, 696[[788, 797[658 ShouldHaveRegister 676 ShouldHaveRegister 696 ShouldHaveRegister 796 ShouldHaveRegister  "NoSpillStore"
  v57|d DWORD "[v57|d]" v57|d v127|d [390, 672[[788, 797[658 ShouldHaveRegister 672 MustHaveRegister 796 ShouldHaveRegister  "NoSpillStore"
  v58|d DWORD "[v58|d]" v58|d v135|d [390, 688[[788, 797[656 MustHaveRegister 674 ShouldHaveRegister 688 MustHaveRegister 796 ShouldHaveRegister  "NoSpillStore"
  v59|d DWORD "[v59|d]" v59|d -1 [628, 666[628 MustHaveRegister 666 ShouldHaveRegister  "NoSpillStore"
  v60|d DWORD "[v60|d]" v60|d v53|d [630, 632[630 MustHaveRegister 632 MustHaveRegister  "NoSpillStore"
  v61|d DWORD "[v61|d]" v61|d -1 [632, 682[632 MustHaveRegister 682 ShouldHaveRegister  "NoSpillStore"
  v62|d DWORD "[v62|d]" v62|d -1 [634, 636[634 MustHaveRegister 636 MustHaveRegister  "NoSpillStore"
  v63|d DWORD "[v63|d]" v63|d -1 [636, 698[636 MustHaveRegister 698 ShouldHaveRegister  "NoSpillStore"
  v64|d DWORD "[v64|d]" v64|d -1 [638, 640[638 MustHaveRegister 640 MustHaveRegister  "NoSpillStore"
  v65|d DWORD "[v65|d]" v65|d -1 [640, 718[640 MustHaveRegister 718 ShouldHaveRegister  "NoSpillStore"
  v66|d DWORD "[v66|d]" v66|d -1 [642, 644[642 MustHaveRegister 644 MustHaveRegister  "NoSpillStore"
  v67|d DWORD "[v67|d]" v67|d -1 [644, 732[644 MustHaveRegister 732 ShouldHaveRegister  "NoSpillStore"
  v68|d DWORD "[v68|d]" v68|d -1 [646, 648[646 MustHaveRegister 648 MustHaveRegister  "NoSpillStore"
  v69|d DWORD "[v69|d]" v69|d -1 [648, 746[648 MustHaveRegister 746 ShouldHaveRegister  "NoSpillStore"
  v70|d DWORD "[v70|d]" v70|d -1 [650, 652[650 MustHaveRegister 652 MustHaveRegister  "NoSpillStore"
  v71|d DWORD "[v71|d]" v71|d -1 [652, 762[652 MustHaveRegister 762 ShouldHaveRegister  "NoSpillStore"
  v72|d DWORD "[v72|d]" v72|d -1 [654, 779[654 MustHaveRegister 778 MustHaveRegister  "NoSpillStore"
  v73|d DWORD "[v73|d]" v73|d v58|d [656, 662[656 MustHaveRegister 662 ShouldHaveRegister  "NoSpillStore"
  v74|d DWORD "[v74|d]" v74|d v56|d [658, 660[658 MustHaveRegister 660 ShouldHaveRegister  "NoSpillStore"
  v75|d DWORD "[v75|d]" v75|d v74|d [660, 662[660 MustHaveRegister 662 ShouldHaveRegister  "NoSpillStore"
  v76|d DWORD "[v76|d]" v76|d v73|d [662, 664[662 MustHaveRegister 664 ShouldHaveRegister  "NoSpillStore"
  v77|d DWORD "[v77|d]" v77|d v76|d [664, 666[664 MustHaveRegister 666 ShouldHaveRegister  "NoSpillStore"
  v78|d DWORD "[v78|d]" v78|d v77|d [666, 668[666 MustHaveRegister 668 MustHaveRegister  "NoSpillStore"
  v79|d DWORD "[v79|d]" v79|d -1 [668, 706[668 MustHaveRegister 670 MustHaveRegister 690 ShouldHaveRegister 706 MustHaveRegister  "NoSpillStore"
  v80|d DWORD "[v80|d]" v80|d v79|d [670, 678[670 MustHaveRegister 678 ShouldHaveRegister  "NoSpillStore"
  v81|d DWORD "[v81|d]" v81|d v57|d [672, 716[672 MustHaveRegister 674 ShouldHaveRegister 692 ShouldHaveRegister 716 ShouldHaveRegister  "NoSpillStore"
  v82|d DWORD "[v82|d]" v82|d v81|d [674, 676[674 MustHaveRegister 676 ShouldHaveRegister  "NoSpillStore"
  v83|d DWORD "[v83|d]" v83|d v56|d [676, 678[676 MustHaveRegister 678 ShouldHaveRegister  "NoSpillStore"
  v84|d DWORD "[v84|d]" v84|d v80|d [678, 680[678 MustHaveRegister 680 ShouldHaveRegister  "NoSpillStore"
  v85|d DWORD "[v85|d]" v85|d v84|d [680, 682[680 MustHaveRegister 682 ShouldHaveRegister  "NoSpillStore"
  v86|d DWORD "[v86|d]" v86|d v85|d [682, 684[682 MustHaveRegister 684 MustHaveRegister  "NoSpillStore"
  v87|d DWORD "[v87|d]" v87|d -1 [684, 710[684 MustHaveRegister 686 MustHaveRegister 704 MustHaveRegister 710 ShouldHaveRegister  "NoSpillStore"
  v88|d DWORD "[v88|d]" v88|d v87|d [686, 694[686 MustHaveRegister 694 ShouldHaveRegister  "NoSpillStore"
  v89|d DWORD "[v89|d]" v89|d v58|d [688, 730[688 MustHaveRegister 690 ShouldHaveRegister 712 ShouldHaveRegister 730 ShouldHaveRegister  "NoSpillStore"
  v90|d DWORD "[v90|d]" v90|d v79|d [690, 692[690 MustHaveRegister 692 ShouldHaveRegister  "NoSpillStore"
  v91|d DWORD "[v91|d]" v91|d v81|d [692, 694[692 MustHaveRegister 694 ShouldHaveRegister  "NoSpillStore"
  v92|d DWORD "[v92|d]" v92|d v88|d [694, 696[694 MustHaveRegister 696 ShouldHaveRegister  "NoSpillStore"
  v93|d DWORD "[v93|d]" v93|d v92|d [696, 698[696 MustHaveRegister 698 ShouldHaveRegister  "NoSpillStore"
  v94|d DWORD "[v94|d]" v94|d v93|d [698, 700[698 MustHaveRegister 700 MustHaveRegister  "NoSpillStore"
  v95|d DWORD "[v95|d]" v95|d -1 [700, 724[700 MustHaveRegister 702 MustHaveRegister 708 MustHaveRegister 724 ShouldHaveRegister  "NoSpillStore"
  v96|d DWORD "[v96|d]" v96|d v95|d [702, 776[702 MustHaveRegister 738 ShouldHaveRegister 756 ShouldHaveRegister 776 ShouldHaveRegister  "NoSpillStore"
  v97|d DWORD "[v97|d]" v97|d v87|d [704, 760[704 MustHaveRegister 724 ShouldHaveRegister 740 ShouldHaveRegister 760 ShouldHaveRegister  "NoSpillStore"
  v98|d DWORD "[v98|d]" v98|d v79|d [706, 744[706 MustHaveRegister 710 ShouldHaveRegister 726 ShouldHaveRegister 744 ShouldHaveRegister  "NoSpillStore"
  v99|d DWORD "[v99|d]" v99|d v95|d [708, 714[708 MustHaveRegister 714 ShouldHaveRegister  "NoSpillStore"
  v100|d DWORD "[v100|d]" v100|d v87|d [710, 712[710 MustHaveRegister 712 ShouldHaveRegister  "NoSpillStore"
  v101|d DWORD "[v101|d]" v101|d v89|d [712, 714[712 MustHaveRegister 714 ShouldHaveRegister  "NoSpillStore"
  v102|d DWORD "[v102|d]" v102|d v99|d [714, 716[714 MustHaveRegister 716 ShouldHaveRegister  "NoSpillStore"
  v103|d DWORD "[v103|d]" v103|d v102|d [716, 718[716 MustHaveRegister 718 ShouldHaveRegister  "NoSpillStore"
  v104|d DWORD "[v104|d]" v104|d v103|d [718, 720[718 MustHaveRegister 720 MustHaveRegister  "NoSpillStore"
  v105|d DWORD "[v105|d]" v105|d -1 [720, 752[720 MustHaveRegister 722 MustHaveRegister 738 ShouldHaveRegister 752 MustHaveRegister  "NoSpillStore"
  v106|d DWORD "[v106|d]" v106|d v105|d [722, 728[722 MustHaveRegister 728 ShouldHaveRegister  "NoSpillStore"
  v107|d DWORD "[v107|d]" v107|d v95|d [724, 726[724 MustHaveRegister 726 ShouldHaveRegister  "NoSpillStore"
  v108|d DWORD "[v108|d]" v108|d v98|d [726, 728[726 MustHaveRegister 728 ShouldHaveRegister  "NoSpillStore"
  v109|d DWORD "[v109|d]" v109|d v106|d [728, 730[728 MustHaveRegister 730 ShouldHaveRegister  "NoSpillStore"
  v110|d DWORD "[v110|d]" v110|d v109|d [730, 732[730 MustHaveRegister 732 ShouldHaveRegister  "NoSpillStore"
  v111|d DWORD "[v111|d]" v111|d v110|d [732, 734[732 MustHaveRegister 734 MustHaveRegister  "NoSpillStore"
  v112|d DWORD "[v112|d]" v112|d -1 [734, 768[734 MustHaveRegister 736 MustHaveRegister 754 ShouldHaveRegister 768 MustHaveRegister  "NoSpillStore"
  v113|d DWORD "[v113|d]" v113|d v112|d [736, 742[736 MustHaveRegister 742 ShouldHaveRegister  "NoSpillStore"
  v114|d DWORD "[v114|d]" v114|d v105|d [738, 740[738 MustHaveRegister 740 ShouldHaveRegister  "NoSpillStore"
  v115|d DWORD "[v115|d]" v115|d v97|d [740, 742[740 MustHaveRegister 742 ShouldHaveRegister  "NoSpillStore"
  v116|d DWORD "[v116|d]" v116|d v113|d [742, 744[742 MustHaveRegister 744 ShouldHaveRegister  "NoSpillStore"
  v117|d DWORD "[v117|d]" v117|d v116|d [744, 746[744 MustHaveRegister 746 ShouldHaveRegister  "NoSpillStore"
  v118|d DWORD "[v118|d]" v118|d v117|d [746, 748[746 MustHaveRegister 748 MustHaveRegister  "NoSpillStore"
  v119|d DWORD "[v119|d]" v119|d -1 [748, 782[748 MustHaveRegister 750 MustHaveRegister 770 ShouldHaveRegister 782 MustHaveRegister  "NoSpillStore"
  v120|d DWORD "[v120|d]" v120|d v119|d [750, 758[750 MustHaveRegister 758 ShouldHaveRegister  "NoSpillStore"
  v121|d DWORD "[v121|d]" v121|d v105|d [752, 787[752 MustHaveRegister 754 ShouldHaveRegister 772 ShouldHaveRegister 786 ShouldHaveRegister  "NoSpillStore"
  v122|d DWORD "[v122|d]" v122|d v112|d [754, 756[754 MustHaveRegister 756 ShouldHaveRegister  "NoSpillStore"
  v123|d DWORD "[v123|d]" v123|d v96|d [756, 758[756 MustHaveRegister 758 ShouldHaveRegister  "NoSpillStore"
  v124|d DWORD "[v124|d]" v124|d v120|d [758, 760[758 MustHaveRegister 760 ShouldHaveRegister  "NoSpillStore"
  v125|d DWORD "[v125|d]" v125|d v124|d [760, 762[760 MustHaveRegister 762 ShouldHaveRegister  "NoSpillStore"
  v126|d DWORD "[v126|d]" v126|d v125|d [762, 764[762 MustHaveRegister 764 MustHaveRegister  "NoSpillStore"
  v127|d DWORD "[v127|d]" v127|d v57|d [764, 787[764 MustHaveRegister 766 MustHaveRegister 786 ShouldHaveRegister  "NoSpillStore"
  v128|d DWORD "[v128|d]" v128|d v127|d [766, 774[766 MustHaveRegister 774 ShouldHaveRegister  "NoSpillStore"
  v129|d DWORD "[v129|d]" v129|d v112|d [768, 787[768 MustHaveRegister 770 ShouldHaveRegister 786 ShouldHaveRegister  "NoSpillStore"
  v130|d DWORD "[v130|d]" v130|d v119|d [770, 772[770 MustHaveRegister 772 ShouldHaveRegister  "NoSpillStore"
  v131|d DWORD "[v131|d]" v131|d v121|d [772, 774[772 MustHaveRegister 774 ShouldHaveRegister  "NoSpillStore"
  v132|d DWORD "[v132|d]" v132|d v128|d [774, 776[774 MustHaveRegister 776 ShouldHaveRegister  "NoSpillStore"
  v133|d DWORD "[v133|d]" v133|d v132|d [776, 778[776 MustHaveRegister 778 MustHaveRegister  "NoSpillStore"
  v134|d DWORD "[v134|d]" v134|d v133|d [778, 780[778 MustHaveRegister 780 MustHaveRegister  "NoSpillStore"
  v135|d DWORD "[v135|d]" v135|d v58|d [780, 787[780 MustHaveRegister 786 ShouldHaveRegister  "NoSpillStore"
  v136|d DWORD "[v136|d]" v136|d v119|d [782, 787[782 MustHaveRegister 786 ShouldHaveRegister  "NoSpillStore"
  v137|d DWORD "[v137|d]" v137|d v53|d [784, 787[784 MustHaveRegister 786 ShouldHaveRegister  "NoSpillStore"
  v138|d DWORD "[v138|d]" v138|d v53|d [798, 856[808 ShouldHaveRegister 850 MustHaveRegister 856 ShouldHaveRegister  "NoSpillStore"
  v139|d DWORD "[v139|d]" v139|d v54|d [798, 848[[860, 869[848 ShouldHaveRegister 868 ShouldHaveRegister  "NoSpillStore"
  v140|d DWORD "[v140|d]" v140|d v55|d [798, 859[[860, 869[844 ShouldHaveRegister 858 ShouldHaveRegister 868 ShouldHaveRegister  "NoSpillStore"
  v141|d DWORD "[v141|d]" v141|d v56|d [798, 859[[860, 869[842 ShouldHaveRegister 858 ShouldHaveRegister 868 ShouldHaveRegister  "NoSpillStore"
  v142|d DWORD "[v142|d]" v142|d v57|d [798, 854[[860, 869[842 ShouldHaveRegister 854 MustHaveRegister 868 ShouldHaveRegister  "NoSpillStore"
  v143|d DWORD "[v143|d]" v143|d v58|d [798, 859[[860, 869[840 MustHaveRegister 858 ShouldHaveRegister 868 ShouldHaveRegister  "NoSpillStore"
  v144|d DWORD "[v144|d]" v144|d v143|d [840, 846[840 MustHaveRegister 846 ShouldHaveRegister  "NoSpillStore"
  v145|d DWORD "[v145|d]" v145|d v141|d [842, 844[842 MustHaveRegister 844 ShouldHaveRegister  "NoSpillStore"
  v146|d DWORD "[v146|d]" v146|d v145|d [844, 846[844 MustHaveRegister 846 ShouldHaveRegister  "NoSpillStore"
  v147|d DWORD "[v147|d]" v147|d v144|d [846, 848[846 MustHaveRegister 848 ShouldHaveRegister  "NoSpillStore"
  v148|d DWORD "[v148|d]" v148|d v147|d [848, 850[848 MustHaveRegister 850 MustHaveRegister  "NoSpillStore"
  v149|d DWORD "[v149|d]" v149|d v148|d [850, 852[850 MustHaveRegister 852 MustHaveRegister  "NoSpillStore"
  v150|d DWORD "[v150|d]" v150|d -1 [852, 859[852 MustHaveRegister 858 ShouldHaveRegister  "NoSpillStore"
  v151|d DWORD "[v151|d]" v151|d v142|d [854, 859[854 MustHaveRegister 858 ShouldHaveRegister  "NoSpillStore"
  v152|d DWORD "[v152|d]" v152|d v138|d [856, 859[856 MustHaveRegister 858 ShouldHaveRegister  "NoSpillStore"
  v153|d DWORD "[v153|d]" v153|d v139|d [890, 940[[964, 985[940 MustHaveRegister  "NoSpillStore"
  v154|d DWORD "[v154|d]" v154|d v143|d [890, 932[[964, 985[932 MustHaveRegister  "NoSpillStore"
  v155|d DWORD "[v155|d]" v155|d v142|d [890, 934[[964, 985[934 MustHaveRegister  "NoSpillStore"
  v156|d DWORD "[v156|d]" v156|d v141|d [890, 936[[964, 985[936 MustHaveRegister  "NoSpillStore"
  v157|d DWORD "[v157|d]" v157|d v140|d [890, 938[[964, 985[938 MustHaveRegister  "NoSpillStore"
  v158|d DWORD "[v158|d]" v158|d -1 [902, 940[902 MustHaveRegister 904 MustHaveRegister 932 MustHaveRegister 934 MustHaveRegister 936 MustHaveRegister 938 MustHaveRegister 940 MustHaveRegister  "NoSpillStore"
  v159|d DWORD "[v159|d]" v159|d -1 [1016, 1032[1032 MustHaveRegister  "NoSpillStore"
  v160|q QWORD "[v160|q]" v160|q -1 [1016, 1034[1034 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 36[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v0|q [0, 40[[56, 58[ "NoOptimization"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [40, 56[40 MustHaveRegister 42 MustHaveRegister 44 MustHaveRegister 46 MustHaveRegister 48 MustHaveRegister 50 MustHaveRegister 52 MustHaveRegister 54 MustHaveRegister 56 ShouldHaveRegister  "NoSpillStore"
  v1|q QWORD "[r10|q]" v1|q -1 [42, 182[42 MustHaveRegister 60 MustHaveRegister 88 MustHaveRegister  "OneSpillStore"
  v2|d DWORD "[r11|d]" v2|d -1 [44, 314[[870, 879[[880, 889[[944, 964[[986, 1037[44 MustHaveRegister 132 MustHaveRegister 296 ShouldHaveRegister 314 MustHaveRegister 878 ShouldHaveRegister 888 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[r8|d]" v3|d -1 [46, 182[46 MustHaveRegister 134 ShouldHaveRegister 148 MustHaveRegister  "OneSpillStore"
  v4|d DWORD "[r9|d]" v4|d v42|d [48, 317[[870, 879[[880, 889[[944, 964[[986, 1037[48 MustHaveRegister 134 ShouldHaveRegister 298 ShouldHaveRegister 316 ShouldHaveRegister 878 ShouldHaveRegister 888 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[rcx|d]" v5|d -1 [50, 302[[870, 879[[880, 889[[944, 964[[986, 1037[50 MustHaveRegister 136 ShouldHaveRegister 302 ShouldHaveRegister 878 ShouldHaveRegister 888 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[rbx|d]" v6|d -1 [52, 256[[870, 879[[944, 964[[986, 1037[52 MustHaveRegister 140 ShouldHaveRegister 878 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[rdi|d]" v7|d -1 [54, 308[[944, 964[[986, 1037[54 MustHaveRegister 72 ShouldHaveRegister 92 ShouldHaveRegister 142 MustHaveRegister 146 ShouldHaveRegister 168 MustHaveRegister 208 ShouldHaveRegister 308 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[rdx|d]" v8|d -1 [88, 130[88 MustHaveRegister 90 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[rsi|d]" v9|d -1 [90, 254[90 MustHaveRegister 92 MustHaveRegister 218 ShouldHaveRegister 232 MustHaveRegister 254 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rdx|q]" v10|q v8|d [130, 653[130 MustHaveRegister 142 MustHaveRegister 304 MustHaveRegister 370 MustHaveRegister 379 LiveAtLoopEnd 628 MustHaveRegister 632 MustHaveRegister 636 MustHaveRegister 640 MustHaveRegister 644 MustHaveRegister 648 MustHaveRegister 652 MustHaveRegister  "SpillInDominator"
  v11|d DWORD "[rax|d]" v11|d v2|d [132, 138[132 MustHaveRegister 138 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[rbp|d]" v12|d v3|d [134, 136[134 MustHaveRegister 136 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[rbp|d]" v13|d v12|d [136, 138[136 MustHaveRegister 138 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[rax|d]" v14|d v11|d [138, 140[138 MustHaveRegister 140 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[rax|d]" v15|d v14|d [140, 142[140 MustHaveRegister 142 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[rax|d]" v16|d v15|d [142, 144[142 MustHaveRegister 144 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d v39|d [144, 317[[880, 889[144 MustHaveRegister 294 MustHaveRegister 316 ShouldHaveRegister 888 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[rbp|d]" v18|d v7|d [146, 305[146 MustHaveRegister 150 ShouldHaveRegister 254 ShouldHaveRegister 304 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[r13|d]" v19|d v3|d [148, 317[[880, 889[148 MustHaveRegister 296 ShouldHaveRegister 316 ShouldHaveRegister 888 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[r14|d]" v20|d v43|d [168, 317[168 MustHaveRegister 170 ShouldHaveRegister 212 ShouldHaveRegister 232 ShouldHaveRegister 316 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[r10|d]" v21|d -1 [206, 208[206 MustHaveRegister 208 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[r10|d]" v22|d v21|d [208, 210[208 MustHaveRegister 210 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[r10|q]" v23|q -1 [210, 214[210 MustHaveRegister 214 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[r8|q]" v24|q v20|d [212, 214[212 MustHaveRegister 214 ShouldHaveRegister  "NoSpillStore"
  v25|q QWORD "[r10|q]" v25|q v23|q [214, 216[214 MustHaveRegister 216 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[r10|q]" v26|q v25|q [216, 220[216 MustHaveRegister 220 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[r8|q]" v27|q v9|d [218, 220[218 MustHaveRegister 220 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[r10|d]" v28|d v17|d [294, 300[294 MustHaveRegister 300 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[r8|d]" v29|d v19|d [296, 298[296 MustHaveRegister 298 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[r8|d]" v30|d v29|d [298, 300[298 MustHaveRegister 300 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[r10|d]" v31|d v28|d [300, 302[300 MustHaveRegister 302 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[r10|d]" v32|d v31|d [302, 304[302 MustHaveRegister 304 MustHaveRegister  "NoSpillStore"
  v33|d DWORD "[r10|d]" v33|d v32|d [304, 306[304 MustHaveRegister 306 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[r10|d]" v34|d v38|d [306, 317[306 MustHaveRegister 316 ShouldHaveRegister  "NoSpillStore"
  v35|d DWORD "[r8|d]" v35|d -1 [308, 313[308 MustHaveRegister 310 ShouldHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v36|d DWORD "[rcx|d]" v36|d -1 [312, 380[312 MustHaveRegister 328 MustHaveRegister 379 LiveAtLoopEnd  "NoSpillStore"
  v37|d DWORD "[r11|d]" v37|d v2|d [314, 317[314 MustHaveRegister 316 ShouldHaveRegister  "NoSpillStore"
  v38|d DWORD "[r10|d]" v38|d v34|d [318, 379[[380, 389[360 MustHaveRegister 378 ShouldHaveRegister 388 ShouldHaveRegister  "NoSpillStore"
  v39|d DWORD "[rax|d]" v39|d v17|d [318, 376[[380, 389[362 ShouldHaveRegister 376 MustHaveRegister 388 ShouldHaveRegister  "NoSpillStore"
  v40|d DWORD "[r11|d]" v40|d v37|d [318, 379[[380, 389[362 ShouldHaveRegister 378 ShouldHaveRegister 388 ShouldHaveRegister  "NoSpillStore"
  v41|d DWORD "[r13|d]" v41|d v19|d [318, 379[[380, 389[364 ShouldHaveRegister 378 ShouldHaveRegister 388 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[r9|d]" v42|d v4|d [318, 368[[380, 389[368 ShouldHaveRegister 388 ShouldHaveRegister  "NoSpillStore"
  v43|d DWORD "[r14|d]" v43|d v20|d [318, 374[[380, 389[328 ShouldHaveRegister 370 MustHaveRegister 374 ShouldHaveRegister 388 ShouldHaveRegister  "NoSpillStore"
  v44|d DWORD "[r8|d]" v44|d v38|d [360, 366[360 MustHaveRegister 366 ShouldHaveRegister  "NoSpillStore"
  v45|d DWORD "[rbx|d]" v45|d v40|d [362, 364[362 MustHaveRegister 364 ShouldHaveRegister  "NoSpillStore"
  v46|d DWORD "[rbx|d]" v46|d v45|d [364, 366[364 MustHaveRegister 366 ShouldHaveRegister  "NoSpillStore"
  v47|d DWORD "[r8|d]" v47|d v44|d [366, 368[366 MustHaveRegister 368 ShouldHaveRegister  "NoSpillStore"
  v48|d DWORD "[r8|d]" v48|d v47|d [368, 370[368 MustHaveRegister 370 MustHaveRegister  "NoSpillStore"
  v49|d DWORD "[r8|d]" v49|d v48|d [370, 372[370 MustHaveRegister 372 MustHaveRegister  "NoSpillStore"
  v50|d DWORD "[r8|d]" v50|d -1 [372, 379[372 MustHaveRegister 378 ShouldHaveRegister  "NoSpillStore"
  v51|d DWORD "[r14|d]" v51|d v43|d [374, 379[374 MustHaveRegister 378 ShouldHaveRegister  "NoSpillStore"
  v52|d DWORD "[rax|d]" v52|d v39|d [376, 379[376 MustHaveRegister 378 ShouldHaveRegister  "NoSpillStore"
  v53|d DWORD "[r10|d]" v53|d v137|d [390, 655[400 ShouldHaveRegister 628 MustHaveRegister 630 ShouldHaveRegister 634 MustHaveRegister 638 MustHaveRegister 642 MustHaveRegister 646 MustHaveRegister 650 MustHaveRegister 654 MustHaveRegister  "OneSpillStore"
  v54|d DWORD "[r11|d]" v54|d v121|d [390, 664[[788, 797[664 ShouldHaveRegister 796 ShouldHaveRegister  "NoSpillStore"
  v55|d DWORD "[r8|d]" v55|d v129|d [390, 680[[788, 797[660 ShouldHaveRegister 680 ShouldHaveRegister 796 ShouldHaveRegister  "NoSpillStore"
  v56|d DWORD "[r9|d]" v56|d v136|d [390, 696[[788, 797[658 ShouldHaveRegister 676 ShouldHaveRegister 696 ShouldHaveRegister 796 ShouldHaveRegister  "NoSpillStore"
  v57|d DWORD "[rcx|d]" v57|d v127|d [390, 672[[788, 797[658 ShouldHaveRegister 672 MustHaveRegister 796 ShouldHaveRegister  "NoSpillStore"
  v58|d DWORD "[rbx|d]" v58|d v135|d [390, 688[[788, 797[656 MustHaveRegister 674 ShouldHaveRegister 688 MustHaveRegister 796 ShouldHaveRegister  "NoSpillStore"
  v59|d DWORD "[rdi|d]" v59|d -1 [628, 666[628 MustHaveRegister 666 ShouldHaveRegister  "NoSpillStore"
  v60|d DWORD "[rsi|d]" v60|d v53|d [630, 632[630 MustHaveRegister 632 MustHaveRegister  "NoSpillStore"
  v61|d DWORD "[rsi|d]" v61|d -1 [632, 682[632 MustHaveRegister 682 ShouldHaveRegister  "NoSpillStore"
  v62|d DWORD "[rax|d]" v62|d -1 [634, 636[634 MustHaveRegister 636 MustHaveRegister  "NoSpillStore"
  v63|d DWORD "[rax|d]" v63|d -1 [636, 698[636 MustHaveRegister 698 ShouldHaveRegister  "NoSpillStore"
  v64|d DWORD "[rbp|d]" v64|d -1 [638, 640[638 MustHaveRegister 640 MustHaveRegister  "NoSpillStore"
  v65|d DWORD "[rbp|d]" v65|d -1 [640, 718[640 MustHaveRegister 718 ShouldHaveRegister  "NoSpillStore"
  v66|d DWORD "[r13|d]" v66|d -1 [642, 644[642 MustHaveRegister 644 MustHaveRegister  "NoSpillStore"
  v67|d DWORD "[r13|d]" v67|d -1 [644, 732[644 MustHaveRegister 732 ShouldHaveRegister  "NoSpillStore"
  v68|d DWORD "[r14|d]" v68|d -1 [646, 648[646 MustHaveRegister 648 MustHaveRegister  "NoSpillStore"
  v69|d DWORD "[r14|d]" v69|d -1 [648, 649[648 MustHaveRegister  "OneSpillStore"
  v70|d DWORD "[r14|d]" v70|d -1 [650, 652[650 MustHaveRegister 652 MustHaveRegister  "NoSpillStore"
  v71|d DWORD "[r14|d]" v71|d -1 [652, 762[652 MustHaveRegister 762 ShouldHaveRegister  "NoSpillStore"
  v72|d DWORD "[rdx|d]" v72|d -1 [654, 657[654 MustHaveRegister  "OneSpillStore"
  v73|d DWORD "[r10|d]" v73|d v58|d [656, 662[656 MustHaveRegister 662 ShouldHaveRegister  "NoSpillStore"
  v74|d DWORD "[rdx|d]" v74|d v56|d [658, 660[658 MustHaveRegister 660 ShouldHaveRegister  "NoSpillStore"
  v75|d DWORD "[rdx|d]" v75|d v74|d [660, 662[660 MustHaveRegister 662 ShouldHaveRegister  "NoSpillStore"
  v76|d DWORD "[r10|d]" v76|d v73|d [662, 664[662 MustHaveRegister 664 ShouldHaveRegister  "NoSpillStore"
  v77|d DWORD "[r10|d]" v77|d v76|d [664, 666[664 MustHaveRegister 666 ShouldHaveRegister  "NoSpillStore"
  v78|d DWORD "[r10|d]" v78|d v77|d [666, 668[666 MustHaveRegister 668 MustHaveRegister  "NoSpillStore"
  v79|d DWORD "[r10|d]" v79|d -1 [668, 706[668 MustHaveRegister 670 MustHaveRegister 690 ShouldHaveRegister 706 MustHaveRegister  "NoSpillStore"
  v80|d DWORD "[r11|d]" v80|d v79|d [670, 678[670 MustHaveRegister 678 ShouldHaveRegister  "NoSpillStore"
  v81|d DWORD "[rcx|d]" v81|d v57|d [672, 716[672 MustHaveRegister 674 ShouldHaveRegister 692 ShouldHaveRegister 716 ShouldHaveRegister  "NoSpillStore"
  v82|d DWORD "[rdi|d]" v82|d v81|d [674, 676[674 MustHaveRegister 676 ShouldHaveRegister  "NoSpillStore"
  v83|d DWORD "[rdi|d]" v83|d v56|d [676, 678[676 MustHaveRegister 678 ShouldHaveRegister  "NoSpillStore"
  v84|d DWORD "[r11|d]" v84|d v80|d [678, 680[678 MustHaveRegister 680 ShouldHaveRegister  "NoSpillStore"
  v85|d DWORD "[r11|d]" v85|d v84|d [680, 682[680 MustHaveRegister 682 ShouldHaveRegister  "NoSpillStore"
  v86|d DWORD "[r11|d]" v86|d v85|d [682, 684[682 MustHaveRegister 684 MustHaveRegister  "NoSpillStore"
  v87|d DWORD "[r11|d]" v87|d -1 [684, 710[684 MustHaveRegister 686 MustHaveRegister 704 MustHaveRegister 710 ShouldHaveRegister  "NoSpillStore"
  v88|d DWORD "[r8|d]" v88|d v87|d [686, 694[686 MustHaveRegister 694 ShouldHaveRegister  "NoSpillStore"
  v89|d DWORD "[rbx|d]" v89|d v58|d [688, 730[688 MustHaveRegister 690 ShouldHaveRegister 712 ShouldHaveRegister 730 ShouldHaveRegister  "NoSpillStore"
  v90|d DWORD "[rdi|d]" v90|d v79|d [690, 692[690 MustHaveRegister 692 ShouldHaveRegister  "NoSpillStore"
  v91|d DWORD "[rdi|d]" v91|d v81|d [692, 694[692 MustHaveRegister 694 ShouldHaveRegister  "NoSpillStore"
  v92|d DWORD "[r8|d]" v92|d v88|d [694, 696[694 MustHaveRegister 696 ShouldHaveRegister  "NoSpillStore"
  v93|d DWORD "[r8|d]" v93|d v92|d [696, 698[696 MustHaveRegister 698 ShouldHaveRegister  "NoSpillStore"
  v94|d DWORD "[r8|d]" v94|d v93|d [698, 700[698 MustHaveRegister 700 MustHaveRegister  "NoSpillStore"
  v95|d DWORD "[r8|d]" v95|d -1 [700, 724[700 MustHaveRegister 702 MustHaveRegister 708 MustHaveRegister 724 ShouldHaveRegister  "NoSpillStore"
  v96|d DWORD "[r9|d]" v96|d v95|d [702, 776[702 MustHaveRegister 738 ShouldHaveRegister 756 ShouldHaveRegister 776 ShouldHaveRegister  "NoSpillStore"
  v97|d DWORD "[rdi|d]" v97|d v87|d [704, 760[704 MustHaveRegister 724 ShouldHaveRegister 740 ShouldHaveRegister 760 ShouldHaveRegister  "NoSpillStore"
  v98|d DWORD "[r10|d]" v98|d v79|d [706, 744[706 MustHaveRegister 710 ShouldHaveRegister 726 ShouldHaveRegister 744 ShouldHaveRegister  "NoSpillStore"
  v99|d DWORD "[rdx|d]" v99|d v95|d [708, 714[708 MustHaveRegister 714 ShouldHaveRegister  "NoSpillStore"
  v100|d DWORD "[r11|d]" v100|d v87|d [710, 712[710 MustHaveRegister 712 ShouldHaveRegister  "NoSpillStore"
  v101|d DWORD "[r11|d]" v101|d v89|d [712, 714[712 MustHaveRegister 714 ShouldHaveRegister  "NoSpillStore"
  v102|d DWORD "[rdx|d]" v102|d v99|d [714, 716[714 MustHaveRegister 716 ShouldHaveRegister  "NoSpillStore"
  v103|d DWORD "[rdx|d]" v103|d v102|d [716, 718[716 MustHaveRegister 718 ShouldHaveRegister  "NoSpillStore"
  v104|d DWORD "[rdx|d]" v104|d v103|d [718, 720[718 MustHaveRegister 720 MustHaveRegister  "NoSpillStore"
  v105|d DWORD "[r11|d]" v105|d -1 [720, 752[720 MustHaveRegister 722 MustHaveRegister 738 ShouldHaveRegister 752 MustHaveRegister  "NoSpillStore"
  v106|d DWORD "[rcx|d]" v106|d v105|d [722, 728[722 MustHaveRegister 728 ShouldHaveRegister  "NoSpillStore"
  v107|d DWORD "[r8|d]" v107|d v95|d [724, 726[724 MustHaveRegister 726 ShouldHaveRegister  "NoSpillStore"
  v108|d DWORD "[r8|d]" v108|d v98|d [726, 728[726 MustHaveRegister 728 ShouldHaveRegister  "NoSpillStore"
  v109|d DWORD "[rcx|d]" v109|d v106|d [728, 730[728 MustHaveRegister 730 ShouldHaveRegister  "NoSpillStore"
  v110|d DWORD "[rcx|d]" v110|d v109|d [730, 732[730 MustHaveRegister 732 ShouldHaveRegister  "NoSpillStore"
  v111|d DWORD "[rcx|d]" v111|d v110|d [732, 734[732 MustHaveRegister 734 MustHaveRegister  "NoSpillStore"
  v112|d DWORD "[r8|d]" v112|d -1 [734, 768[734 MustHaveRegister 736 MustHaveRegister 754 ShouldHaveRegister 768 MustHaveRegister  "NoSpillStore"
  v113|d DWORD "[rcx|d]" v113|d v112|d [736, 742[736 MustHaveRegister 742 ShouldHaveRegister  "NoSpillStore"
  v114|d DWORD "[rbx|d]" v114|d v105|d [738, 740[738 MustHaveRegister 740 ShouldHaveRegister  "NoSpillStore"
  v115|d DWORD "[rbx|d]" v115|d v97|d [740, 742[740 MustHaveRegister 742 ShouldHaveRegister  "NoSpillStore"
  v116|d DWORD "[rcx|d]" v116|d v113|d [742, 744[742 MustHaveRegister 744 ShouldHaveRegister  "NoSpillStore"
  v117|d DWORD "[rcx|d]" v117|d v116|d [744, 746[744 MustHaveRegister 746 ShouldHaveRegister  "NoSpillStore"
  v118|d DWORD "[rcx|d]" v118|d v117|d [746, 748[746 MustHaveRegister 748 MustHaveRegister  "NoSpillStore"
  v119|d DWORD "[r10|d]" v119|d -1 [748, 782[748 MustHaveRegister 750 MustHaveRegister 770 ShouldHaveRegister 782 MustHaveRegister  "NoSpillStore"
  v120|d DWORD "[rcx|d]" v120|d v119|d [750, 758[750 MustHaveRegister 758 ShouldHaveRegister  "NoSpillStore"
  v121|d DWORD "[r11|d]" v121|d v105|d [752, 787[752 MustHaveRegister 754 ShouldHaveRegister 772 ShouldHaveRegister 786 ShouldHaveRegister  "NoSpillStore"
  v122|d DWORD "[rbx|d]" v122|d v112|d [754, 756[754 MustHaveRegister 756 ShouldHaveRegister  "NoSpillStore"
  v123|d DWORD "[rbx|d]" v123|d v96|d [756, 758[756 MustHaveRegister 758 ShouldHaveRegister  "NoSpillStore"
  v124|d DWORD "[rcx|d]" v124|d v120|d [758, 760[758 MustHaveRegister 760 ShouldHaveRegister  "NoSpillStore"
  v125|d DWORD "[rcx|d]" v125|d v124|d [760, 762[760 MustHaveRegister 762 ShouldHaveRegister  "NoSpillStore"
  v126|d DWORD "[rcx|d]" v126|d v125|d [762, 764[762 MustHaveRegister 764 MustHaveRegister  "NoSpillStore"
  v127|d DWORD "[rcx|d]" v127|d v57|d [764, 787[764 MustHaveRegister 766 MustHaveRegister 786 ShouldHaveRegister  "NoSpillStore"
  v128|d DWORD "[rbx|d]" v128|d v127|d [766, 774[766 MustHaveRegister 774 ShouldHaveRegister  "NoSpillStore"
  v129|d DWORD "[r8|d]" v129|d v112|d [768, 787[768 MustHaveRegister 770 ShouldHaveRegister 786 ShouldHaveRegister  "NoSpillStore"
  v130|d DWORD "[rdi|d]" v130|d v119|d [770, 772[770 MustHaveRegister 772 ShouldHaveRegister  "NoSpillStore"
  v131|d DWORD "[rdi|d]" v131|d v121|d [772, 774[772 MustHaveRegister 774 ShouldHaveRegister  "NoSpillStore"
  v132|d DWORD "[rbx|d]" v132|d v128|d [774, 776[774 MustHaveRegister 776 ShouldHaveRegister  "NoSpillStore"
  v133|d DWORD "[rbx|d]" v133|d v132|d [776, 778[776 MustHaveRegister 778 MustHaveRegister  "NoSpillStore"
  v134|d DWORD "[rbx|d]" v134|d v133|d [778, 780[778 MustHaveRegister 780 MustHaveRegister  "NoSpillStore"
  v135|d DWORD "[rbx|d]" v135|d v58|d [780, 787[780 MustHaveRegister 786 ShouldHaveRegister  "NoSpillStore"
  v136|d DWORD "[r10|d]" v136|d v119|d [782, 787[782 MustHaveRegister 786 ShouldHaveRegister  "NoSpillStore"
  v137|d DWORD "[r9|d]" v137|d v53|d [784, 787[784 MustHaveRegister 786 ShouldHaveRegister  "NoSpillStore"
  v138|d DWORD "[r10|d]" v138|d v53|d [798, 856[808 ShouldHaveRegister 850 MustHaveRegister 856 ShouldHaveRegister  "NoSpillStore"
  v139|d DWORD "[r11|d]" v139|d v54|d [798, 848[[860, 869[848 ShouldHaveRegister 868 ShouldHaveRegister  "NoSpillStore"
  v140|d DWORD "[r8|d]" v140|d v55|d [798, 859[[860, 869[844 ShouldHaveRegister 858 ShouldHaveRegister 868 ShouldHaveRegister  "NoSpillStore"
  v141|d DWORD "[r9|d]" v141|d v56|d [798, 859[[860, 869[842 ShouldHaveRegister 858 ShouldHaveRegister 868 ShouldHaveRegister  "NoSpillStore"
  v142|d DWORD "[rcx|d]" v142|d v57|d [798, 854[[860, 869[842 ShouldHaveRegister 854 MustHaveRegister 868 ShouldHaveRegister  "NoSpillStore"
  v143|d DWORD "[rbx|d]" v143|d v58|d [798, 859[[860, 869[840 MustHaveRegister 858 ShouldHaveRegister 868 ShouldHaveRegister  "NoSpillStore"
  v144|d DWORD "[rdx|d]" v144|d v143|d [840, 846[840 MustHaveRegister 846 ShouldHaveRegister  "NoSpillStore"
  v145|d DWORD "[rsi|d]" v145|d v141|d [842, 844[842 MustHaveRegister 844 ShouldHaveRegister  "NoSpillStore"
  v146|d DWORD "[rsi|d]" v146|d v145|d [844, 846[844 MustHaveRegister 846 ShouldHaveRegister  "NoSpillStore"
  v147|d DWORD "[rdx|d]" v147|d v144|d [846, 848[846 MustHaveRegister 848 ShouldHaveRegister  "NoSpillStore"
  v148|d DWORD "[rdx|d]" v148|d v147|d [848, 850[848 MustHaveRegister 850 MustHaveRegister  "NoSpillStore"
  v149|d DWORD "[rdx|d]" v149|d v148|d [850, 852[850 MustHaveRegister 852 MustHaveRegister  "NoSpillStore"
  v150|d DWORD "[r11|d]" v150|d -1 [852, 859[852 MustHaveRegister 858 ShouldHaveRegister  "NoSpillStore"
  v151|d DWORD "[rcx|d]" v151|d v142|d [854, 859[854 MustHaveRegister 858 ShouldHaveRegister  "NoSpillStore"
  v152|d DWORD "[r10|d]" v152|d v138|d [856, 859[856 MustHaveRegister 858 ShouldHaveRegister  "NoSpillStore"
  v153|d DWORD "[r11|d]" v153|d v139|d [890, 940[[964, 985[940 MustHaveRegister  "NoSpillStore"
  v154|d DWORD "[rbx|d]" v154|d v143|d [890, 932[[964, 985[932 MustHaveRegister  "NoSpillStore"
  v155|d DWORD "[rcx|d]" v155|d v142|d [890, 934[[964, 985[934 MustHaveRegister  "NoSpillStore"
  v156|d DWORD "[r9|d]" v156|d v141|d [890, 936[[964, 985[936 MustHaveRegister  "NoSpillStore"
  v157|d DWORD "[r8|d]" v157|d v140|d [890, 938[[964, 985[938 MustHaveRegister  "NoSpillStore"
  v158|d DWORD "[rdi|d]" v158|d -1 [902, 940[902 MustHaveRegister 904 MustHaveRegister 932 MustHaveRegister 934 MustHaveRegister 936 MustHaveRegister 938 MustHaveRegister 940 MustHaveRegister  "NoSpillStore"
  v159|d DWORD "[r8|d]" v159|d -1 [1016, 1032[1032 MustHaveRegister  "NoSpillStore"
  v160|q QWORD "[rdx|q]" v160|q -1 [1016, 1034[1034 MustHaveRegister  "NoSpillStore"
  v161|q QWORD "[r10|q]" v1|q v1|q [890, 906[[944, 985[[986, 1037[902 MustHaveRegister  "OneSpillStore"
  v162|q QWORD "[vstack:0|q]" v1|q v1|q [182, 890[ "OneSpillStore"
  v163|d DWORD "[rsi|d]" v3|d v3|d [1016, 1037[ "OneSpillStore"
  v164|d DWORD "[vstack:1|d]" v3|d v3|d [182, 256[[870, 879[[944, 964[[986, 1016[878 ShouldHaveRegister  "OneSpillStore"
  v165|d DWORD "[vstack:2|d]" v69|d v69|d [649, 746[746 ShouldHaveRegister  "OneSpillStore"
  v166|q QWORD "[rdi|q]" v10|q v10|q [777, 860[778 MustHaveRegister 787 LiveAtLoopEnd 850 MustHaveRegister 859 LiveAtLoopEnd  "SpillInDominator"
  v167|q QWORD "[vstack:3|q]" v10|q v10|q [653, 777[ "SpillInDominator"
  v168|d DWORD "[rdx|d]" v53|d v53|d [783, 784[[788, 797[784 MustHaveRegister 796 ShouldHaveRegister  "OneSpillStore"
  v169|d DWORD "[vstack:4|d]" v53|d v53|d [655, 783[ "OneSpillStore"
  v170|d DWORD "[rdx|d]" v72|d v72|d [777, 779[778 MustHaveRegister  "OneSpillStore"
  v171|d DWORD "[vstack:5|d]" v72|d v72|d [657, 777[ "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@31f9b0c2 slotKind: QWORD <|@ <|@
      nr   40  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction v1|QWORD[.] = MOV input: [v0|QWORD + 72] size: QWORD <|@ <|@
      nr   44  <|@ instruction v2|DWORD = MOV input: [v0|QWORD + 48] size: DWORD <|@ <|@
      nr   46  <|@ instruction v3|DWORD = MOV input: [v0|QWORD + 40] size: DWORD <|@ <|@
      nr   48  <|@ instruction v4|DWORD = MOV input: [v0|QWORD + 32] size: DWORD <|@ <|@
      nr   50  <|@ instruction v5|DWORD = MOV input: [v0|QWORD + 24] size: DWORD <|@ <|@
      nr   52  <|@ instruction v6|DWORD = MOV input: [v0|QWORD + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction v7|DWORD = MOV input: [v0|QWORD + 8] size: DWORD <|@ <|@
      nr   56  <|@ instruction rsi|QWORD = MOVE input: v0|QWORD moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: v1|QWORD[.] - - v2|DWORD v3|DWORD v4|DWORD v5|DWORD v6|DWORD v7|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B29 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lsun/security/provider/SHA;, resolved>;compressed} state [bci:357] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.9523809523809523 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B25 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B24" 
    xhandlers
    flags 
    probability 4606753504549791646
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction v8|DWORD[_] = MOV input: [v1|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: v1|QWORD[.] - - v2|DWORD v3|DWORD v4|DWORD v5|DWORD v6|DWORD v7|DWORD - 
>@ <|@ instruction v9|DWORD = MOV input: [v8|DWORD[_] * 8 + 12] size: DWORD state [bci:357] <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B23" 
    xhandlers
    flags 
    probability 4606753504549791646
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3087af84 encoding: base: 0 shift: 3 <|@ <|@
      nr  132  <|@ instruction v11|DWORD = ROL x: v2|DWORD y: 5 size: DWORD <|@ <|@
      nr  134  <|@ instruction v12|DWORD = XOR (x: v3|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction v13|DWORD = XOR (x: v12|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction v14|DWORD = ADD (x: v11|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction v15|DWORD = ADD (x: v14|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr  142  <|@ instruction v16|DWORD = ADD (x: v15|DWORD, ~y: [v10|QWORD[.] + v7|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  144  <|@ instruction v17|DWORD = LEA address: [v16|DWORD - 899497514] size: DWORD <|@ <|@
      nr  146  <|@ instruction v18|DWORD = INC value: v7|DWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction v19|DWORD = ROL x: v3|DWORD y: 30 size: DWORD <|@ <|@
      nr  150  <|@ instruction CMPCONSTBRANCH x: v18|DWORD trueDestinationProbability: 0.95 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B23 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B10" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction v20|DWORD = LEA address: [v7|DWORD + 2] size: DWORD <|@ <|@
      nr  170  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B10 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B11" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction v21|DWORD = MOVE input: int[78|0x4e] <|@ <|@
      nr  208  <|@ instruction v22|DWORD = SUB (x: v21|DWORD, ~y: v7|DWORD) size: DWORD <|@ <|@
      nr  210  <|@ instruction v23|QWORD = MOVSXD value: v22|DWORD size: QWORD <|@ <|@
      nr  212  <|@ instruction v24|QWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction v25|QWORD = ADD (x: v23|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr  216  <|@ instruction v26|QWORD = DEC value: v25|QWORD size: QWORD <|@ <|@
      nr  218  <|@ instruction v27|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction CMPBRANCH (x: v27|QWORD, y: v26|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v20|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B7" 
    successors "B12" "B22" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v18|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction v28|DWORD = ROL x: v17|DWORD y: 5 size: DWORD <|@ <|@
      nr  296  <|@ instruction v29|DWORD = XOR (x: v19|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction v30|DWORD = XOR (x: v29|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr  300  <|@ instruction v31|DWORD = ADD (x: v28|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr  302  <|@ instruction v32|DWORD = ADD (x: v31|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr  304  <|@ instruction v33|DWORD = ADD (x: v32|DWORD, ~y: [v10|QWORD[.] + v18|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  306  <|@ instruction v34|DWORD = LEA address: [v33|DWORD - 899497514] size: DWORD <|@ <|@
      nr  308  <|@ instruction v35|DWORD = LEA address: [v7|DWORD + 3] size: DWORD <|@ <|@
      nr  310  <|@ instruction CMP x: v35|DWORD y: 80 size: DWORD <|@ <|@
      nr  312  <|@ instruction v36|DWORD = CMOVE (falseValue: int[80|0x50], ~trueValue: v35|DWORD) condition: < <|@ <|@
      nr  314  <|@ instruction v37|DWORD = ROL x: v2|DWORD y: 30 size: DWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~outgoingValues: [v34|DWORD, v17|DWORD, v37|DWORD, v19|DWORD, v4|DWORD, v20|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606406907175871839
    begin_IR
      LIR
      nr  318  <|@ instruction [v38|DWORD, v39|DWORD, v40|DWORD, v41|DWORD, v42|DWORD, v43|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v43|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576421901864634511
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction v44|DWORD = ROL x: v38|DWORD y: 5 size: DWORD <|@ <|@
      nr  362  <|@ instruction v45|DWORD = XOR (x: v40|DWORD, y: v39|DWORD) size: DWORD <|@ <|@
      nr  364  <|@ instruction v46|DWORD = XOR (x: v45|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr  366  <|@ instruction v47|DWORD = ADD (x: v44|DWORD, y: v46|DWORD) size: DWORD <|@ <|@
      nr  368  <|@ instruction v48|DWORD = ADD (x: v47|DWORD, y: v42|DWORD) size: DWORD <|@ <|@
      nr  370  <|@ instruction v49|DWORD = ADD (x: v48|DWORD, ~y: [v10|QWORD[.] + v43|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  372  <|@ instruction v50|DWORD = LEA address: [v49|DWORD - 899497514] size: DWORD <|@ <|@
      nr  374  <|@ instruction v51|DWORD = INC value: v43|DWORD size: DWORD <|@ <|@
      nr  376  <|@ instruction v52|DWORD = ROL x: v39|DWORD y: 30 size: DWORD <|@ <|@
      nr  378  <|@ instruction JUMP ~outgoingValues: [v50|DWORD, v38|DWORD, v52|DWORD, v40|DWORD, v41|DWORD, v51|DWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606324590299565885
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction JUMP ~outgoingValues: [v43|DWORD, v42|DWORD, v41|DWORD, v40|DWORD, v39|DWORD, v38|DWORD] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" 
    successors "B17" "B18" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4612021107685376776
    begin_IR
      LIR
      nr  390  <|@ instruction [v53|DWORD, v54|DWORD, v55|DWORD, v56|DWORD, v57|DWORD, v58|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.5789473684210522 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 72 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4608281511566220913
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction v59|DWORD = MOV input: [v10|QWORD[.] + v53|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  630  <|@ instruction v60|DWORD = INC value: v53|DWORD size: DWORD <|@ <|@
      nr  632  <|@ instruction v61|DWORD = MOV input: [v10|QWORD[.] + v60|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  634  <|@ instruction v62|DWORD = LEA address: [v53|DWORD + 2] size: DWORD <|@ <|@
      nr  636  <|@ instruction v63|DWORD = MOV input: [v10|QWORD[.] + v62|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  638  <|@ instruction v64|DWORD = LEA address: [v53|DWORD + 3] size: DWORD <|@ <|@
      nr  640  <|@ instruction v65|DWORD = MOV input: [v10|QWORD[.] + v64|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  642  <|@ instruction v66|DWORD = LEA address: [v53|DWORD + 4] size: DWORD <|@ <|@
      nr  644  <|@ instruction v67|DWORD = MOV input: [v10|QWORD[.] + v66|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  646  <|@ instruction v68|DWORD = LEA address: [v53|DWORD + 5] size: DWORD <|@ <|@
      nr  648  <|@ instruction v69|DWORD = MOV input: [v10|QWORD[.] + v68|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v165|DWORD = MOVE input: v69|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  650  <|@ instruction v70|DWORD = LEA address: [v53|DWORD + 6] size: DWORD <|@ <|@
      nr  652  <|@ instruction v71|DWORD = MOV input: [v10|QWORD[.] + v70|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v167|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  654  <|@ instruction v72|DWORD = LEA address: [v53|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v169|DWORD = MOVE input: v53|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  656  <|@ instruction v73|DWORD = ROL x: v58|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v171|DWORD = MOVE input: v72|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  658  <|@ instruction v74|DWORD = XOR (x: v56|DWORD, y: v57|DWORD) size: DWORD <|@ <|@
      nr  660  <|@ instruction v75|DWORD = XOR (x: v74|DWORD, y: v55|DWORD) size: DWORD <|@ <|@
      nr  662  <|@ instruction v76|DWORD = ADD (x: v73|DWORD, y: v75|DWORD) size: DWORD <|@ <|@
      nr  664  <|@ instruction v77|DWORD = ADD (x: v76|DWORD, y: v54|DWORD) size: DWORD <|@ <|@
      nr  666  <|@ instruction v78|DWORD = ADD (x: v77|DWORD, y: v59|DWORD) size: DWORD <|@ <|@
      nr  668  <|@ instruction v79|DWORD = LEA address: [v78|DWORD - 899497514] size: DWORD <|@ <|@
      nr  670  <|@ instruction v80|DWORD = ROL x: v79|DWORD y: 5 size: DWORD <|@ <|@
      nr  672  <|@ instruction v81|DWORD = ROL x: v57|DWORD y: 30 size: DWORD <|@ <|@
      nr  674  <|@ instruction v82|DWORD = XOR (x: v81|DWORD, y: v58|DWORD) size: DWORD <|@ <|@
      nr  676  <|@ instruction v83|DWORD = XOR (x: v56|DWORD, y: v82|DWORD) size: DWORD <|@ <|@
      nr  678  <|@ instruction v84|DWORD = ADD (x: v80|DWORD, y: v83|DWORD) size: DWORD <|@ <|@
      nr  680  <|@ instruction v85|DWORD = ADD (x: v84|DWORD, y: v55|DWORD) size: DWORD <|@ <|@
      nr  682  <|@ instruction v86|DWORD = ADD (x: v85|DWORD, y: v61|DWORD) size: DWORD <|@ <|@
      nr  684  <|@ instruction v87|DWORD = LEA address: [v86|DWORD - 899497514] size: DWORD <|@ <|@
      nr  686  <|@ instruction v88|DWORD = ROL x: v87|DWORD y: 5 size: DWORD <|@ <|@
      nr  688  <|@ instruction v89|DWORD = ROL x: v58|DWORD y: 30 size: DWORD <|@ <|@
      nr  690  <|@ instruction v90|DWORD = XOR (x: v79|DWORD, y: v89|DWORD) size: DWORD <|@ <|@
      nr  692  <|@ instruction v91|DWORD = XOR (x: v81|DWORD, y: v90|DWORD) size: DWORD <|@ <|@
      nr  694  <|@ instruction v92|DWORD = ADD (x: v88|DWORD, y: v91|DWORD) size: DWORD <|@ <|@
      nr  696  <|@ instruction v93|DWORD = ADD (x: v92|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr  698  <|@ instruction v94|DWORD = ADD (x: v93|DWORD, y: v63|DWORD) size: DWORD <|@ <|@
      nr  700  <|@ instruction v95|DWORD = LEA address: [v94|DWORD - 899497514] size: DWORD <|@ <|@
      nr  702  <|@ instruction v96|DWORD = ROL x: v95|DWORD y: 30 size: DWORD <|@ <|@
      nr  704  <|@ instruction v97|DWORD = ROL x: v87|DWORD y: 30 size: DWORD <|@ <|@
      nr  706  <|@ instruction v98|DWORD = ROL x: v79|DWORD y: 30 size: DWORD <|@ <|@
      nr  708  <|@ instruction v99|DWORD = ROL x: v95|DWORD y: 5 size: DWORD <|@ <|@
      nr  710  <|@ instruction v100|DWORD = XOR (x: v87|DWORD, y: v98|DWORD) size: DWORD <|@ <|@
      nr  712  <|@ instruction v101|DWORD = XOR (x: v89|DWORD, y: v100|DWORD) size: DWORD <|@ <|@
      nr  714  <|@ instruction v102|DWORD = ADD (x: v99|DWORD, y: v101|DWORD) size: DWORD <|@ <|@
      nr  716  <|@ instruction v103|DWORD = ADD (x: v102|DWORD, y: v81|DWORD) size: DWORD <|@ <|@
      nr  718  <|@ instruction v104|DWORD = ADD (x: v103|DWORD, y: v65|DWORD) size: DWORD <|@ <|@
      nr  720  <|@ instruction v105|DWORD = LEA address: [v104|DWORD - 899497514] size: DWORD <|@ <|@
      nr  722  <|@ instruction v106|DWORD = ROL x: v105|DWORD y: 5 size: DWORD <|@ <|@
      nr  724  <|@ instruction v107|DWORD = XOR (x: v95|DWORD, y: v97|DWORD) size: DWORD <|@ <|@
      nr  726  <|@ instruction v108|DWORD = XOR (x: v98|DWORD, y: v107|DWORD) size: DWORD <|@ <|@
      nr  728  <|@ instruction v109|DWORD = ADD (x: v106|DWORD, y: v108|DWORD) size: DWORD <|@ <|@
      nr  730  <|@ instruction v110|DWORD = ADD (x: v109|DWORD, y: v89|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction v111|DWORD = ADD (x: v110|DWORD, y: v67|DWORD) size: DWORD <|@ <|@
      nr  734  <|@ instruction v112|DWORD = LEA address: [v111|DWORD - 899497514] size: DWORD <|@ <|@
      nr  736  <|@ instruction v113|DWORD = ROL x: v112|DWORD y: 5 size: DWORD <|@ <|@
      nr  738  <|@ instruction v114|DWORD = XOR (x: v105|DWORD, y: v96|DWORD) size: DWORD <|@ <|@
      nr  740  <|@ instruction v115|DWORD = XOR (x: v97|DWORD, y: v114|DWORD) size: DWORD <|@ <|@
      nr  742  <|@ instruction v116|DWORD = ADD (x: v113|DWORD, y: v115|DWORD) size: DWORD <|@ <|@
      nr  744  <|@ instruction v117|DWORD = ADD (x: v116|DWORD, y: v98|DWORD) size: DWORD <|@ <|@
      nr  746  <|@ instruction v118|DWORD = ADD (x: v117|DWORD, y: v69|DWORD) size: DWORD <|@ <|@
      nr  748  <|@ instruction v119|DWORD = LEA address: [v118|DWORD - 899497514] size: DWORD <|@ <|@
      nr  750  <|@ instruction v120|DWORD = ROL x: v119|DWORD y: 5 size: DWORD <|@ <|@
      nr  752  <|@ instruction v121|DWORD = ROL x: v105|DWORD y: 30 size: DWORD <|@ <|@
      nr  754  <|@ instruction v122|DWORD = XOR (x: v112|DWORD, y: v121|DWORD) size: DWORD <|@ <|@
      nr  756  <|@ instruction v123|DWORD = XOR (x: v96|DWORD, y: v122|DWORD) size: DWORD <|@ <|@
      nr  758  <|@ instruction v124|DWORD = ADD (x: v120|DWORD, y: v123|DWORD) size: DWORD <|@ <|@
      nr  760  <|@ instruction v125|DWORD = ADD (x: v124|DWORD, y: v97|DWORD) size: DWORD <|@ <|@
      nr  762  <|@ instruction v126|DWORD = ADD (x: v125|DWORD, y: v71|DWORD) size: DWORD <|@ <|@
      nr  764  <|@ instruction v127|DWORD = LEA address: [v126|DWORD - 899497514] size: DWORD <|@ <|@
      nr  766  <|@ instruction v128|DWORD = ROL x: v127|DWORD y: 5 size: DWORD <|@ <|@
      nr  768  <|@ instruction v129|DWORD = ROL x: v112|DWORD y: 30 size: DWORD <|@ <|@
      nr  770  <|@ instruction v130|DWORD = XOR (x: v119|DWORD, y: v129|DWORD) size: DWORD <|@ <|@
      nr  772  <|@ instruction v131|DWORD = XOR (x: v121|DWORD, y: v130|DWORD) size: DWORD <|@ <|@
      nr  774  <|@ instruction v132|DWORD = ADD (x: v128|DWORD, y: v131|DWORD) size: DWORD <|@ <|@
      nr  776  <|@ instruction v133|DWORD = ADD (x: v132|DWORD, y: v96|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v166|QWORD[.] = MOVE input: v167|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v170|DWORD = MOVE input: v171|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  778  <|@ instruction v134|DWORD = ADD (x: v133|DWORD, ~y: [v10|QWORD[.] + v72|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  780  <|@ instruction v135|DWORD = LEA address: [v134|DWORD - 899497514] size: DWORD <|@ <|@
      nr  782  <|@ instruction v136|DWORD = ROL x: v119|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v168|DWORD = MOVE input: v169|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  784  <|@ instruction v137|DWORD = LEA address: [v53|DWORD + 8] size: DWORD <|@ <|@
      nr  786  <|@ instruction JUMP ~outgoingValues: [v137|DWORD, v121|DWORD, v129|DWORD, v136|DWORD, v127|DWORD, v135|DWORD] destination: B17 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606324590299565886
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [v53|DWORD, v54|DWORD, v55|DWORD, v56|DWORD, v57|DWORD, v58|DWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606406907175871841
    begin_IR
      LIR
      nr  798  <|@ instruction [v138|DWORD, v139|DWORD, v140|DWORD, v141|DWORD, v142|DWORD, v143|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction CMPCONSTBRANCH x: v138|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576421901864634512
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction v144|DWORD = ROL x: v143|DWORD y: 5 size: DWORD <|@ <|@
      nr  842  <|@ instruction v145|DWORD = XOR (x: v141|DWORD, y: v142|DWORD) size: DWORD <|@ <|@
      nr  844  <|@ instruction v146|DWORD = XOR (x: v145|DWORD, y: v140|DWORD) size: DWORD <|@ <|@
      nr  846  <|@ instruction v147|DWORD = ADD (x: v144|DWORD, y: v146|DWORD) size: DWORD <|@ <|@
      nr  848  <|@ instruction v148|DWORD = ADD (x: v147|DWORD, y: v139|DWORD) size: DWORD <|@ <|@
      nr  850  <|@ instruction v149|DWORD = ADD (x: v148|DWORD, ~y: [v10|QWORD[.] + v138|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  852  <|@ instruction v150|DWORD = LEA address: [v149|DWORD - 899497514] size: DWORD <|@ <|@
      nr  854  <|@ instruction v151|DWORD = ROL x: v142|DWORD y: 30 size: DWORD <|@ <|@
      nr  856  <|@ instruction v152|DWORD = INC value: v138|DWORD size: DWORD <|@ <|@
      nr  858  <|@ instruction JUMP ~outgoingValues: [v152|DWORD, v140|DWORD, v141|DWORD, v151|DWORD, v143|DWORD, v150|DWORD] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606324590299565887
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction JUMP ~outgoingValues: [v139|DWORD, v143|DWORD, v142|DWORD, v141|DWORD, v140|DWORD] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B26" 
    xhandlers
    flags 
    probability 4587023449039406624
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction JUMP ~outgoingValues: [v6|DWORD, v2|DWORD, v3|DWORD, v4|DWORD, v5|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B26" 
    xhandlers
    flags 
    probability 4587023449039406622
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction JUMP ~outgoingValues: [v5|DWORD, v17|DWORD, v2|DWORD, v19|DWORD, v4|DWORD] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B25" "B23" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  890  <|@ instruction [v153|DWORD, v154|DWORD, v155|DWORD, v156|DWORD, v157|DWORD] = LABEL alignment: 0 numbPhis: 5 label: ? <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction v158|DWORD[_] = MOV input: [v1|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  904  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
locals: v1|QWORD[.] - - v154|DWORD v155|DWORD v156|DWORD v157|DWORD v153|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v158|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 5 size: DWORD inlinedY: null state [bci:423] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 16], y: v154|DWORD) size: DWORD <|@ <|@
      nr  934  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 20], y: v155|DWORD) size: DWORD <|@ <|@
      nr  936  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 24], y: v156|DWORD) size: DWORD <|@ <|@
      nr  938  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 28], y: v157|DWORD) size: DWORD <|@ <|@
      nr  940  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 32], y: v153|DWORD) size: DWORD <|@ <|@
      nr  942  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction JUMP ~outgoingValues: [int[-105755|0xfffffffffffe62e5], long[0|0x0]] destination: B24 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [int[-110619|0xfffffffffffe4fe5], long[664|0x298]] destination: B8 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction MOV x: [r15|QWORD + 1156] y: -133915 size: DWORD <|@ <|@
      nr  982  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  984  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
locals: v1|QWORD[.] - - v154|DWORD v155|DWORD v156|DWORD v157|DWORD v153|DWORD - - 
>@ <|@ instruction DEOPT info [bci:423] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction JUMP ~outgoingValues: [int[-108315|0xfffffffffffe58e5], long[0|0x0]] destination: B22 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  996  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction JUMP ~outgoingValues: [int[-110619|0xfffffffffffe4fe5], long[664|0x298]] destination: B9 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction JUMP ~outgoingValues: [int[-102716|0xfffffffffffe6ec4], long[20|0x14]] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B24" "B9" "B22" "B8" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1016  <|@ instruction [v159|DWORD, v160|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v159|DWORD) size: DWORD <|@ <|@
      nr 1034  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v160|QWORD) size: QWORD <|@ <|@
      nr 1036  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: v1|QWORD[.] - - v2|DWORD v3|DWORD v4|DWORD v5|DWORD v6|DWORD v7|DWORD - 
>@ <|@ instruction DEOPT info [bci:357] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // W:int[]
     4: ifnonnull     15
     7: aload_0       
     8: bipush        80
    10: newarray      int
    12: putfield      #5          // W:int[]
    15: aload_1       
    16: iload_2       
    17: aload_0       
    18: getfield      #5          // W:int[]
    21: invokestatic  #19         // sun.security.provider.ByteArrayAccess.b2iBig64:(byte[], int, int[])void
    24: bipush        16
    26: istore_3      
    27: iload_3       
    28: bipush        79
    30: if_icmpgt     91
    33: aload_0       
    34: getfield      #5          // W:int[]
    37: iload_3       
    38: iconst_3      
    39: isub          
    40: iaload        
    41: aload_0       
    42: getfield      #5          // W:int[]
    45: iload_3       
    46: bipush        8
    48: isub          
    49: iaload        
    50: ixor          
    51: aload_0       
    52: getfield      #5          // W:int[]
    55: iload_3       
    56: bipush        14
    58: isub          
    59: iaload        
    60: ixor          
    61: aload_0       
    62: getfield      #5          // W:int[]
    65: iload_3       
    66: bipush        16
    68: isub          
    69: iaload        
    70: ixor          
    71: istore        4
    73: aload_0       
    74: getfield      #5          // W:int[]
    77: iload_3       
    78: iload         4
    80: iconst_1      
    81: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
    84: iastore       
    85: iinc          
    88: goto          27
    91: aload_0       
    92: getfield      #1          // state:int[]
    95: iconst_0      
    96: iaload        
    97: istore_3      
    98: aload_0       
    99: getfield      #1          // state:int[]
   102: iconst_1      
   103: iaload        
   104: istore        4
   106: aload_0       
   107: getfield      #1          // state:int[]
   110: iconst_2      
   111: iaload        
   112: istore        5
   114: aload_0       
   115: getfield      #1          // state:int[]
   118: iconst_3      
   119: iaload        
   120: istore        6
   122: aload_0       
   123: getfield      #1          // state:int[]
   126: iconst_4      
   127: iaload        
   128: istore        7
   130: iconst_0      
   131: istore        8
   133: iload         8
   135: bipush        20
   137: if_icmpge     204
   140: iload_3       
   141: iconst_5      
   142: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   145: iload         4
   147: iload         5
   149: iand          
   150: iload         4
   152: iconst_m1     
   153: ixor          
   154: iload         6
   156: iand          
   157: ior           
   158: iadd          
   159: iload         7
   161: iadd          
   162: aload_0       
   163: getfield      #5          // W:int[]
   166: iload         8
   168: iaload        
   169: iadd          
   170: ldc           #100        // 1518500249
   172: iadd          
   173: istore        9
   175: iload         6
   177: istore        7
   179: iload         5
   181: istore        6
   183: iload         4
   185: bipush        30
   187: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   190: istore        5
   192: iload_3       
   193: istore        4
   195: iload         9
   197: istore_3      
   198: iinc          
   201: goto          133
   204: bipush        20
   206: istore        8
   208: iload         8
   210: bipush        40
   212: if_icmpge     274
   215: iload_3       
   216: iconst_5      
   217: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   220: iload         4
   222: iload         5
   224: ixor          
   225: iload         6
   227: ixor          
   228: iadd          
   229: iload         7
   231: iadd          
   232: aload_0       
   233: getfield      #5          // W:int[]
   236: iload         8
   238: iaload        
   239: iadd          
   240: ldc           #101        // 1859775393
   242: iadd          
   243: istore        9
   245: iload         6
   247: istore        7
   249: iload         5
   251: istore        6
   253: iload         4
   255: bipush        30
   257: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   260: istore        5
   262: iload_3       
   263: istore        4
   265: iload         9
   267: istore_3      
   268: iinc          
   271: goto          208
   274: bipush        40
   276: istore        8
   278: iload         8
   280: bipush        60
   282: if_icmpge     353
   285: iload_3       
   286: iconst_5      
   287: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   290: iload         4
   292: iload         5
   294: iand          
   295: iload         4
   297: iload         6
   299: iand          
   300: ior           
   301: iload         5
   303: iload         6
   305: iand          
   306: ior           
   307: iadd          
   308: iload         7
   310: iadd          
   311: aload_0       
   312: getfield      #5          // W:int[]
   315: iload         8
   317: iaload        
   318: iadd          
   319: ldc           #102        // -1894007588
   321: iadd          
   322: istore        9
   324: iload         6
   326: istore        7
   328: iload         5
   330: istore        6
   332: iload         4
   334: bipush        30
   336: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   339: istore        5
   341: iload_3       
   342: istore        4
   344: iload         9
   346: istore_3      
   347: iinc          
   350: goto          278
   353: bipush        60
   355: istore        8
   357: iload         8
   359: bipush        80
   361: if_icmpge     423
   364: iload_3       
   365: iconst_5      
   366: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   369: iload         4
   371: iload         5
   373: ixor          
   374: iload         6
   376: ixor          
   377: iadd          
   378: iload         7
   380: iadd          
   381: aload_0       
   382: getfield      #5          // W:int[]
   385: iload         8
   387: iaload        
   388: iadd          
   389: ldc           #103        // -899497514
   391: iadd          
   392: istore        9
   394: iload         6
   396: istore        7
   398: iload         5
   400: istore        6
   402: iload         4
   404: bipush        30
   406: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   409: istore        5
   411: iload_3       
   412: istore        4
   414: iload         9
   416: istore_3      
   417: iinc          
   420: goto          357
   423: aload_0       
   424: getfield      #1          // state:int[]
   427: iconst_0      
   428: dup2          
   429: iaload        
   430: iload_3       
   431: iadd          
   432: iastore       
   433: aload_0       
   434: getfield      #1          // state:int[]
   437: iconst_1      
   438: dup2          
   439: iaload        
   440: iload         4
   442: iadd          
   443: iastore       
   444: aload_0       
   445: getfield      #1          // state:int[]
   448: iconst_2      
   449: dup2          
   450: iaload        
   451: iload         5
   453: iadd          
   454: iastore       
   455: aload_0       
   456: getfield      #1          // state:int[]
   459: iconst_3      
   460: dup2          
   461: iaload        
   462: iload         6
   464: iadd          
   465: iastore       
   466: aload_0       
   467: getfield      #1          // state:int[]
   470: iconst_4      
   471: dup2          
   472: iaload        
   473: iload         7
   475: iadd          
   476: iastore       
   477: return        
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 36[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v0|q [0, 40[[56, 58[ "NoOptimization"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [40, 56[40 MustHaveRegister 42 MustHaveRegister 44 MustHaveRegister 46 MustHaveRegister 48 MustHaveRegister 50 MustHaveRegister 52 MustHaveRegister 54 MustHaveRegister 56 ShouldHaveRegister  "NoSpillStore"
  v1|q QWORD "[r10|q]" v1|q -1 [42, 182[42 MustHaveRegister 60 MustHaveRegister 88 MustHaveRegister  "OneSpillStore"
  v2|d DWORD "[r11|d]" v2|d -1 [44, 314[[870, 879[[880, 889[[944, 964[[986, 1037[44 MustHaveRegister 132 MustHaveRegister 296 ShouldHaveRegister 314 MustHaveRegister 878 ShouldHaveRegister 888 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[r8|d]" v3|d -1 [46, 182[46 MustHaveRegister 134 ShouldHaveRegister 148 MustHaveRegister  "OneSpillStore"
  v4|d DWORD "[r9|d]" v4|d v42|d [48, 317[[870, 879[[880, 889[[944, 964[[986, 1037[48 MustHaveRegister 134 ShouldHaveRegister 298 ShouldHaveRegister 316 ShouldHaveRegister 878 ShouldHaveRegister 888 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[rcx|d]" v5|d -1 [50, 302[[870, 879[[880, 889[[944, 964[[986, 1037[50 MustHaveRegister 136 ShouldHaveRegister 302 ShouldHaveRegister 878 ShouldHaveRegister 888 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[rbx|d]" v6|d -1 [52, 256[[870, 879[[944, 964[[986, 1037[52 MustHaveRegister 140 ShouldHaveRegister 878 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[rdi|d]" v7|d -1 [54, 308[[944, 964[[986, 1037[54 MustHaveRegister 72 ShouldHaveRegister 92 ShouldHaveRegister 142 MustHaveRegister 146 ShouldHaveRegister 168 MustHaveRegister 208 ShouldHaveRegister 308 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[rdx|d]" v8|d -1 [88, 130[88 MustHaveRegister 90 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[rsi|d]" v9|d -1 [90, 254[90 MustHaveRegister 92 MustHaveRegister 218 ShouldHaveRegister 232 MustHaveRegister 254 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rdx|q]" v10|q v8|d [130, 653[130 MustHaveRegister 142 MustHaveRegister 304 MustHaveRegister 370 MustHaveRegister 379 LiveAtLoopEnd 628 MustHaveRegister 632 MustHaveRegister 636 MustHaveRegister 640 MustHaveRegister 644 MustHaveRegister 648 MustHaveRegister 652 MustHaveRegister  "SpillInDominator"
  v11|d DWORD "[rax|d]" v11|d v2|d [132, 138[132 MustHaveRegister 138 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[rbp|d]" v12|d v3|d [134, 136[134 MustHaveRegister 136 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[rbp|d]" v13|d v12|d [136, 138[136 MustHaveRegister 138 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[rax|d]" v14|d v11|d [138, 140[138 MustHaveRegister 140 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[rax|d]" v15|d v14|d [140, 142[140 MustHaveRegister 142 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[rax|d]" v16|d v15|d [142, 144[142 MustHaveRegister 144 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d v39|d [144, 317[[880, 889[144 MustHaveRegister 294 MustHaveRegister 316 ShouldHaveRegister 888 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[rbp|d]" v18|d v7|d [146, 305[146 MustHaveRegister 150 ShouldHaveRegister 254 ShouldHaveRegister 304 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[r13|d]" v19|d v3|d [148, 317[[880, 889[148 MustHaveRegister 296 ShouldHaveRegister 316 ShouldHaveRegister 888 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[r14|d]" v20|d v43|d [168, 317[168 MustHaveRegister 170 ShouldHaveRegister 212 ShouldHaveRegister 232 ShouldHaveRegister 316 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[r10|d]" v21|d -1 [206, 208[206 MustHaveRegister 208 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[r10|d]" v22|d v21|d [208, 210[208 MustHaveRegister 210 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[r10|q]" v23|q -1 [210, 214[210 MustHaveRegister 214 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[r8|q]" v24|q v20|d [212, 214[212 MustHaveRegister 214 ShouldHaveRegister  "NoSpillStore"
  v25|q QWORD "[r10|q]" v25|q v23|q [214, 216[214 MustHaveRegister 216 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[r10|q]" v26|q v25|q [216, 220[216 MustHaveRegister 220 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[r8|q]" v27|q v9|d [218, 220[218 MustHaveRegister 220 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[r10|d]" v28|d v17|d [294, 300[294 MustHaveRegister 300 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[r8|d]" v29|d v19|d [296, 298[296 MustHaveRegister 298 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[r8|d]" v30|d v29|d [298, 300[298 MustHaveRegister 300 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[r10|d]" v31|d v28|d [300, 302[300 MustHaveRegister 302 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[r10|d]" v32|d v31|d [302, 304[302 MustHaveRegister 304 MustHaveRegister  "NoSpillStore"
  v33|d DWORD "[r10|d]" v33|d v32|d [304, 306[304 MustHaveRegister 306 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[r10|d]" v34|d v38|d [306, 317[306 MustHaveRegister 316 ShouldHaveRegister  "NoSpillStore"
  v35|d DWORD "[r8|d]" v35|d -1 [308, 313[308 MustHaveRegister 310 ShouldHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v36|d DWORD "[rcx|d]" v36|d -1 [312, 380[312 MustHaveRegister 328 MustHaveRegister 379 LiveAtLoopEnd  "NoSpillStore"
  v37|d DWORD "[r11|d]" v37|d v2|d [314, 317[314 MustHaveRegister 316 ShouldHaveRegister  "NoSpillStore"
  v38|d DWORD "[r10|d]" v38|d v34|d [318, 379[[380, 389[360 MustHaveRegister 378 ShouldHaveRegister 388 ShouldHaveRegister  "NoSpillStore"
  v39|d DWORD "[rax|d]" v39|d v17|d [318, 376[[380, 389[362 ShouldHaveRegister 376 MustHaveRegister 388 ShouldHaveRegister  "NoSpillStore"
  v40|d DWORD "[r11|d]" v40|d v37|d [318, 379[[380, 389[362 ShouldHaveRegister 378 ShouldHaveRegister 388 ShouldHaveRegister  "NoSpillStore"
  v41|d DWORD "[r13|d]" v41|d v19|d [318, 379[[380, 389[364 ShouldHaveRegister 378 ShouldHaveRegister 388 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[r9|d]" v42|d v4|d [318, 368[[380, 389[368 ShouldHaveRegister 388 ShouldHaveRegister  "NoSpillStore"
  v43|d DWORD "[r14|d]" v43|d v20|d [318, 374[[380, 389[328 ShouldHaveRegister 370 MustHaveRegister 374 ShouldHaveRegister 388 ShouldHaveRegister  "NoSpillStore"
  v44|d DWORD "[r8|d]" v44|d v38|d [360, 366[360 MustHaveRegister 366 ShouldHaveRegister  "NoSpillStore"
  v45|d DWORD "[rbx|d]" v45|d v40|d [362, 364[362 MustHaveRegister 364 ShouldHaveRegister  "NoSpillStore"
  v46|d DWORD "[rbx|d]" v46|d v45|d [364, 366[364 MustHaveRegister 366 ShouldHaveRegister  "NoSpillStore"
  v47|d DWORD "[r8|d]" v47|d v44|d [366, 368[366 MustHaveRegister 368 ShouldHaveRegister  "NoSpillStore"
  v48|d DWORD "[r8|d]" v48|d v47|d [368, 370[368 MustHaveRegister 370 MustHaveRegister  "NoSpillStore"
  v49|d DWORD "[r8|d]" v49|d v48|d [370, 372[370 MustHaveRegister 372 MustHaveRegister  "NoSpillStore"
  v50|d DWORD "[r8|d]" v50|d -1 [372, 379[372 MustHaveRegister 378 ShouldHaveRegister  "NoSpillStore"
  v51|d DWORD "[r14|d]" v51|d v43|d [374, 379[374 MustHaveRegister 378 ShouldHaveRegister  "NoSpillStore"
  v52|d DWORD "[rax|d]" v52|d v39|d [376, 379[376 MustHaveRegister 378 ShouldHaveRegister  "NoSpillStore"
  v53|d DWORD "[r10|d]" v53|d v137|d [390, 655[400 ShouldHaveRegister 628 MustHaveRegister 630 ShouldHaveRegister 634 MustHaveRegister 638 MustHaveRegister 642 MustHaveRegister 646 MustHaveRegister 650 MustHaveRegister 654 MustHaveRegister  "OneSpillStore"
  v54|d DWORD "[r11|d]" v54|d v121|d [390, 664[[788, 797[664 ShouldHaveRegister 796 ShouldHaveRegister  "NoSpillStore"
  v55|d DWORD "[r8|d]" v55|d v129|d [390, 680[[788, 797[660 ShouldHaveRegister 680 ShouldHaveRegister 796 ShouldHaveRegister  "NoSpillStore"
  v56|d DWORD "[r9|d]" v56|d v136|d [390, 696[[788, 797[658 ShouldHaveRegister 676 ShouldHaveRegister 696 ShouldHaveRegister 796 ShouldHaveRegister  "NoSpillStore"
  v57|d DWORD "[rcx|d]" v57|d v127|d [390, 672[[788, 797[658 ShouldHaveRegister 672 MustHaveRegister 796 ShouldHaveRegister  "NoSpillStore"
  v58|d DWORD "[rbx|d]" v58|d v135|d [390, 688[[788, 797[656 MustHaveRegister 674 ShouldHaveRegister 688 MustHaveRegister 796 ShouldHaveRegister  "NoSpillStore"
  v59|d DWORD "[rdi|d]" v59|d -1 [628, 666[628 MustHaveRegister 666 ShouldHaveRegister  "NoSpillStore"
  v60|d DWORD "[rsi|d]" v60|d v53|d [630, 632[630 MustHaveRegister 632 MustHaveRegister  "NoSpillStore"
  v61|d DWORD "[rsi|d]" v61|d -1 [632, 682[632 MustHaveRegister 682 ShouldHaveRegister  "NoSpillStore"
  v62|d DWORD "[rax|d]" v62|d -1 [634, 636[634 MustHaveRegister 636 MustHaveRegister  "NoSpillStore"
  v63|d DWORD "[rax|d]" v63|d -1 [636, 698[636 MustHaveRegister 698 ShouldHaveRegister  "NoSpillStore"
  v64|d DWORD "[rbp|d]" v64|d -1 [638, 640[638 MustHaveRegister 640 MustHaveRegister  "NoSpillStore"
  v65|d DWORD "[rbp|d]" v65|d -1 [640, 718[640 MustHaveRegister 718 ShouldHaveRegister  "NoSpillStore"
  v66|d DWORD "[r13|d]" v66|d -1 [642, 644[642 MustHaveRegister 644 MustHaveRegister  "NoSpillStore"
  v67|d DWORD "[r13|d]" v67|d -1 [644, 732[644 MustHaveRegister 732 ShouldHaveRegister  "NoSpillStore"
  v68|d DWORD "[r14|d]" v68|d -1 [646, 648[646 MustHaveRegister 648 MustHaveRegister  "NoSpillStore"
  v69|d DWORD "[r14|d]" v69|d -1 [648, 649[648 MustHaveRegister  "OneSpillStore"
  v70|d DWORD "[r14|d]" v70|d -1 [650, 652[650 MustHaveRegister 652 MustHaveRegister  "NoSpillStore"
  v71|d DWORD "[r14|d]" v71|d -1 [652, 762[652 MustHaveRegister 762 ShouldHaveRegister  "NoSpillStore"
  v72|d DWORD "[rdx|d]" v72|d -1 [654, 657[654 MustHaveRegister  "OneSpillStore"
  v73|d DWORD "[r10|d]" v73|d v58|d [656, 662[656 MustHaveRegister 662 ShouldHaveRegister  "NoSpillStore"
  v74|d DWORD "[rdx|d]" v74|d v56|d [658, 660[658 MustHaveRegister 660 ShouldHaveRegister  "NoSpillStore"
  v75|d DWORD "[rdx|d]" v75|d v74|d [660, 662[660 MustHaveRegister 662 ShouldHaveRegister  "NoSpillStore"
  v76|d DWORD "[r10|d]" v76|d v73|d [662, 664[662 MustHaveRegister 664 ShouldHaveRegister  "NoSpillStore"
  v77|d DWORD "[r10|d]" v77|d v76|d [664, 666[664 MustHaveRegister 666 ShouldHaveRegister  "NoSpillStore"
  v78|d DWORD "[r10|d]" v78|d v77|d [666, 668[666 MustHaveRegister 668 MustHaveRegister  "NoSpillStore"
  v79|d DWORD "[r10|d]" v79|d -1 [668, 706[668 MustHaveRegister 670 MustHaveRegister 690 ShouldHaveRegister 706 MustHaveRegister  "NoSpillStore"
  v80|d DWORD "[r11|d]" v80|d v79|d [670, 678[670 MustHaveRegister 678 ShouldHaveRegister  "NoSpillStore"
  v81|d DWORD "[rcx|d]" v81|d v57|d [672, 716[672 MustHaveRegister 674 ShouldHaveRegister 692 ShouldHaveRegister 716 ShouldHaveRegister  "NoSpillStore"
  v82|d DWORD "[rdi|d]" v82|d v81|d [674, 676[674 MustHaveRegister 676 ShouldHaveRegister  "NoSpillStore"
  v83|d DWORD "[rdi|d]" v83|d v56|d [676, 678[676 MustHaveRegister 678 ShouldHaveRegister  "NoSpillStore"
  v84|d DWORD "[r11|d]" v84|d v80|d [678, 680[678 MustHaveRegister 680 ShouldHaveRegister  "NoSpillStore"
  v85|d DWORD "[r11|d]" v85|d v84|d [680, 682[680 MustHaveRegister 682 ShouldHaveRegister  "NoSpillStore"
  v86|d DWORD "[r11|d]" v86|d v85|d [682, 684[682 MustHaveRegister 684 MustHaveRegister  "NoSpillStore"
  v87|d DWORD "[r11|d]" v87|d -1 [684, 710[684 MustHaveRegister 686 MustHaveRegister 704 MustHaveRegister 710 ShouldHaveRegister  "NoSpillStore"
  v88|d DWORD "[r8|d]" v88|d v87|d [686, 694[686 MustHaveRegister 694 ShouldHaveRegister  "NoSpillStore"
  v89|d DWORD "[rbx|d]" v89|d v58|d [688, 730[688 MustHaveRegister 690 ShouldHaveRegister 712 ShouldHaveRegister 730 ShouldHaveRegister  "NoSpillStore"
  v90|d DWORD "[rdi|d]" v90|d v79|d [690, 692[690 MustHaveRegister 692 ShouldHaveRegister  "NoSpillStore"
  v91|d DWORD "[rdi|d]" v91|d v81|d [692, 694[692 MustHaveRegister 694 ShouldHaveRegister  "NoSpillStore"
  v92|d DWORD "[r8|d]" v92|d v88|d [694, 696[694 MustHaveRegister 696 ShouldHaveRegister  "NoSpillStore"
  v93|d DWORD "[r8|d]" v93|d v92|d [696, 698[696 MustHaveRegister 698 ShouldHaveRegister  "NoSpillStore"
  v94|d DWORD "[r8|d]" v94|d v93|d [698, 700[698 MustHaveRegister 700 MustHaveRegister  "NoSpillStore"
  v95|d DWORD "[r8|d]" v95|d -1 [700, 724[700 MustHaveRegister 702 MustHaveRegister 708 MustHaveRegister 724 ShouldHaveRegister  "NoSpillStore"
  v96|d DWORD "[r9|d]" v96|d v95|d [702, 776[702 MustHaveRegister 738 ShouldHaveRegister 756 ShouldHaveRegister 776 ShouldHaveRegister  "NoSpillStore"
  v97|d DWORD "[rdi|d]" v97|d v87|d [704, 760[704 MustHaveRegister 724 ShouldHaveRegister 740 ShouldHaveRegister 760 ShouldHaveRegister  "NoSpillStore"
  v98|d DWORD "[r10|d]" v98|d v79|d [706, 744[706 MustHaveRegister 710 ShouldHaveRegister 726 ShouldHaveRegister 744 ShouldHaveRegister  "NoSpillStore"
  v99|d DWORD "[rdx|d]" v99|d v95|d [708, 714[708 MustHaveRegister 714 ShouldHaveRegister  "NoSpillStore"
  v100|d DWORD "[r11|d]" v100|d v87|d [710, 712[710 MustHaveRegister 712 ShouldHaveRegister  "NoSpillStore"
  v101|d DWORD "[r11|d]" v101|d v89|d [712, 714[712 MustHaveRegister 714 ShouldHaveRegister  "NoSpillStore"
  v102|d DWORD "[rdx|d]" v102|d v99|d [714, 716[714 MustHaveRegister 716 ShouldHaveRegister  "NoSpillStore"
  v103|d DWORD "[rdx|d]" v103|d v102|d [716, 718[716 MustHaveRegister 718 ShouldHaveRegister  "NoSpillStore"
  v104|d DWORD "[rdx|d]" v104|d v103|d [718, 720[718 MustHaveRegister 720 MustHaveRegister  "NoSpillStore"
  v105|d DWORD "[r11|d]" v105|d -1 [720, 752[720 MustHaveRegister 722 MustHaveRegister 738 ShouldHaveRegister 752 MustHaveRegister  "NoSpillStore"
  v106|d DWORD "[rcx|d]" v106|d v105|d [722, 728[722 MustHaveRegister 728 ShouldHaveRegister  "NoSpillStore"
  v107|d DWORD "[r8|d]" v107|d v95|d [724, 726[724 MustHaveRegister 726 ShouldHaveRegister  "NoSpillStore"
  v108|d DWORD "[r8|d]" v108|d v98|d [726, 728[726 MustHaveRegister 728 ShouldHaveRegister  "NoSpillStore"
  v109|d DWORD "[rcx|d]" v109|d v106|d [728, 730[728 MustHaveRegister 730 ShouldHaveRegister  "NoSpillStore"
  v110|d DWORD "[rcx|d]" v110|d v109|d [730, 732[730 MustHaveRegister 732 ShouldHaveRegister  "NoSpillStore"
  v111|d DWORD "[rcx|d]" v111|d v110|d [732, 734[732 MustHaveRegister 734 MustHaveRegister  "NoSpillStore"
  v112|d DWORD "[r8|d]" v112|d -1 [734, 768[734 MustHaveRegister 736 MustHaveRegister 754 ShouldHaveRegister 768 MustHaveRegister  "NoSpillStore"
  v113|d DWORD "[rcx|d]" v113|d v112|d [736, 742[736 MustHaveRegister 742 ShouldHaveRegister  "NoSpillStore"
  v114|d DWORD "[rbx|d]" v114|d v105|d [738, 740[738 MustHaveRegister 740 ShouldHaveRegister  "NoSpillStore"
  v115|d DWORD "[rbx|d]" v115|d v97|d [740, 742[740 MustHaveRegister 742 ShouldHaveRegister  "NoSpillStore"
  v116|d DWORD "[rcx|d]" v116|d v113|d [742, 744[742 MustHaveRegister 744 ShouldHaveRegister  "NoSpillStore"
  v117|d DWORD "[rcx|d]" v117|d v116|d [744, 746[744 MustHaveRegister 746 ShouldHaveRegister  "NoSpillStore"
  v118|d DWORD "[rcx|d]" v118|d v117|d [746, 748[746 MustHaveRegister 748 MustHaveRegister  "NoSpillStore"
  v119|d DWORD "[r10|d]" v119|d -1 [748, 782[748 MustHaveRegister 750 MustHaveRegister 770 ShouldHaveRegister 782 MustHaveRegister  "NoSpillStore"
  v120|d DWORD "[rcx|d]" v120|d v119|d [750, 758[750 MustHaveRegister 758 ShouldHaveRegister  "NoSpillStore"
  v121|d DWORD "[r11|d]" v121|d v105|d [752, 787[752 MustHaveRegister 754 ShouldHaveRegister 772 ShouldHaveRegister 786 ShouldHaveRegister  "NoSpillStore"
  v122|d DWORD "[rbx|d]" v122|d v112|d [754, 756[754 MustHaveRegister 756 ShouldHaveRegister  "NoSpillStore"
  v123|d DWORD "[rbx|d]" v123|d v96|d [756, 758[756 MustHaveRegister 758 ShouldHaveRegister  "NoSpillStore"
  v124|d DWORD "[rcx|d]" v124|d v120|d [758, 760[758 MustHaveRegister 760 ShouldHaveRegister  "NoSpillStore"
  v125|d DWORD "[rcx|d]" v125|d v124|d [760, 762[760 MustHaveRegister 762 ShouldHaveRegister  "NoSpillStore"
  v126|d DWORD "[rcx|d]" v126|d v125|d [762, 764[762 MustHaveRegister 764 MustHaveRegister  "NoSpillStore"
  v127|d DWORD "[rcx|d]" v127|d v57|d [764, 787[764 MustHaveRegister 766 MustHaveRegister 786 ShouldHaveRegister  "NoSpillStore"
  v128|d DWORD "[rbx|d]" v128|d v127|d [766, 774[766 MustHaveRegister 774 ShouldHaveRegister  "NoSpillStore"
  v129|d DWORD "[r8|d]" v129|d v112|d [768, 787[768 MustHaveRegister 770 ShouldHaveRegister 786 ShouldHaveRegister  "NoSpillStore"
  v130|d DWORD "[rdi|d]" v130|d v119|d [770, 772[770 MustHaveRegister 772 ShouldHaveRegister  "NoSpillStore"
  v131|d DWORD "[rdi|d]" v131|d v121|d [772, 774[772 MustHaveRegister 774 ShouldHaveRegister  "NoSpillStore"
  v132|d DWORD "[rbx|d]" v132|d v128|d [774, 776[774 MustHaveRegister 776 ShouldHaveRegister  "NoSpillStore"
  v133|d DWORD "[rbx|d]" v133|d v132|d [776, 778[776 MustHaveRegister 778 MustHaveRegister  "NoSpillStore"
  v134|d DWORD "[rbx|d]" v134|d v133|d [778, 780[778 MustHaveRegister 780 MustHaveRegister  "NoSpillStore"
  v135|d DWORD "[rbx|d]" v135|d v58|d [780, 787[780 MustHaveRegister 786 ShouldHaveRegister  "NoSpillStore"
  v136|d DWORD "[r10|d]" v136|d v119|d [782, 787[782 MustHaveRegister 786 ShouldHaveRegister  "NoSpillStore"
  v137|d DWORD "[r9|d]" v137|d v53|d [784, 787[784 MustHaveRegister 786 ShouldHaveRegister  "NoSpillStore"
  v138|d DWORD "[r10|d]" v138|d v53|d [798, 856[808 ShouldHaveRegister 850 MustHaveRegister 856 ShouldHaveRegister  "NoSpillStore"
  v139|d DWORD "[r11|d]" v139|d v54|d [798, 848[[860, 869[848 ShouldHaveRegister 868 ShouldHaveRegister  "NoSpillStore"
  v140|d DWORD "[r8|d]" v140|d v55|d [798, 859[[860, 869[844 ShouldHaveRegister 858 ShouldHaveRegister 868 ShouldHaveRegister  "NoSpillStore"
  v141|d DWORD "[r9|d]" v141|d v56|d [798, 859[[860, 869[842 ShouldHaveRegister 858 ShouldHaveRegister 868 ShouldHaveRegister  "NoSpillStore"
  v142|d DWORD "[rcx|d]" v142|d v57|d [798, 854[[860, 869[842 ShouldHaveRegister 854 MustHaveRegister 868 ShouldHaveRegister  "NoSpillStore"
  v143|d DWORD "[rbx|d]" v143|d v58|d [798, 859[[860, 869[840 MustHaveRegister 858 ShouldHaveRegister 868 ShouldHaveRegister  "NoSpillStore"
  v144|d DWORD "[rdx|d]" v144|d v143|d [840, 846[840 MustHaveRegister 846 ShouldHaveRegister  "NoSpillStore"
  v145|d DWORD "[rsi|d]" v145|d v141|d [842, 844[842 MustHaveRegister 844 ShouldHaveRegister  "NoSpillStore"
  v146|d DWORD "[rsi|d]" v146|d v145|d [844, 846[844 MustHaveRegister 846 ShouldHaveRegister  "NoSpillStore"
  v147|d DWORD "[rdx|d]" v147|d v144|d [846, 848[846 MustHaveRegister 848 ShouldHaveRegister  "NoSpillStore"
  v148|d DWORD "[rdx|d]" v148|d v147|d [848, 850[848 MustHaveRegister 850 MustHaveRegister  "NoSpillStore"
  v149|d DWORD "[rdx|d]" v149|d v148|d [850, 852[850 MustHaveRegister 852 MustHaveRegister  "NoSpillStore"
  v150|d DWORD "[r11|d]" v150|d -1 [852, 859[852 MustHaveRegister 858 ShouldHaveRegister  "NoSpillStore"
  v151|d DWORD "[rcx|d]" v151|d v142|d [854, 859[854 MustHaveRegister 858 ShouldHaveRegister  "NoSpillStore"
  v152|d DWORD "[r10|d]" v152|d v138|d [856, 859[856 MustHaveRegister 858 ShouldHaveRegister  "NoSpillStore"
  v153|d DWORD "[r11|d]" v153|d v139|d [890, 940[[964, 985[940 MustHaveRegister  "NoSpillStore"
  v154|d DWORD "[rbx|d]" v154|d v143|d [890, 932[[964, 985[932 MustHaveRegister  "NoSpillStore"
  v155|d DWORD "[rcx|d]" v155|d v142|d [890, 934[[964, 985[934 MustHaveRegister  "NoSpillStore"
  v156|d DWORD "[r9|d]" v156|d v141|d [890, 936[[964, 985[936 MustHaveRegister  "NoSpillStore"
  v157|d DWORD "[r8|d]" v157|d v140|d [890, 938[[964, 985[938 MustHaveRegister  "NoSpillStore"
  v158|d DWORD "[rdi|d]" v158|d -1 [902, 940[902 MustHaveRegister 904 MustHaveRegister 932 MustHaveRegister 934 MustHaveRegister 936 MustHaveRegister 938 MustHaveRegister 940 MustHaveRegister  "NoSpillStore"
  v159|d DWORD "[r8|d]" v159|d -1 [1016, 1032[1032 MustHaveRegister  "NoSpillStore"
  v160|q QWORD "[rdx|q]" v160|q -1 [1016, 1034[1034 MustHaveRegister  "NoSpillStore"
  v161|q QWORD "[r10|q]" v1|q v1|q [890, 906[[944, 985[[986, 1037[902 MustHaveRegister  "OneSpillStore"
  v162|q QWORD "[vstack:0|q]" v1|q v1|q [182, 890[ "OneSpillStore"
  v163|d DWORD "[rsi|d]" v3|d v3|d [1016, 1037[ "OneSpillStore"
  v164|d DWORD "[vstack:1|d]" v3|d v3|d [182, 256[[870, 879[[944, 964[[986, 1016[878 ShouldHaveRegister  "OneSpillStore"
  v165|d DWORD "[vstack:2|d]" v69|d v69|d [649, 746[746 ShouldHaveRegister  "OneSpillStore"
  v166|q QWORD "[rdi|q]" v10|q v10|q [777, 860[778 MustHaveRegister 787 LiveAtLoopEnd 850 MustHaveRegister 859 LiveAtLoopEnd  "SpillInDominator"
  v167|q QWORD "[vstack:3|q]" v10|q v10|q [653, 777[ "SpillInDominator"
  v168|d DWORD "[rdx|d]" v53|d v53|d [783, 784[[788, 797[784 MustHaveRegister 796 ShouldHaveRegister  "OneSpillStore"
  v169|d DWORD "[vstack:4|d]" v53|d v53|d [655, 783[ "OneSpillStore"
  v170|d DWORD "[rdx|d]" v72|d v72|d [777, 779[778 MustHaveRegister  "OneSpillStore"
  v171|d DWORD "[vstack:5|d]" v72|d v72|d [657, 777[ "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@31f9b0c2 slotKind: QWORD <|@ <|@
      nr   40  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction v1|QWORD[.] = MOV input: [v0|QWORD + 72] size: QWORD <|@ <|@
      nr   44  <|@ instruction v2|DWORD = MOV input: [v0|QWORD + 48] size: DWORD <|@ <|@
      nr   46  <|@ instruction v3|DWORD = MOV input: [v0|QWORD + 40] size: DWORD <|@ <|@
      nr   48  <|@ instruction v4|DWORD = MOV input: [v0|QWORD + 32] size: DWORD <|@ <|@
      nr   50  <|@ instruction v5|DWORD = MOV input: [v0|QWORD + 24] size: DWORD <|@ <|@
      nr   52  <|@ instruction v6|DWORD = MOV input: [v0|QWORD + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction v7|DWORD = MOV input: [v0|QWORD + 8] size: DWORD <|@ <|@
      nr   56  <|@ instruction rsi|QWORD = MOVE input: v0|QWORD moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: v1|QWORD[.] - - v2|DWORD v3|DWORD v4|DWORD v5|DWORD v6|DWORD v7|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B29 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lsun/security/provider/SHA;, resolved>;compressed} state [bci:357] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.9523809523809523 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B25 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B24" 
    xhandlers
    flags 
    probability 4606753504549791646
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction v8|DWORD[_] = MOV input: [v1|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: v1|QWORD[.] - - v2|DWORD v3|DWORD v4|DWORD v5|DWORD v6|DWORD v7|DWORD - 
>@ <|@ instruction v9|DWORD = MOV input: [v8|DWORD[_] * 8 + 12] size: DWORD state [bci:357] <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B23" 
    xhandlers
    flags 
    probability 4606753504549791646
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3087af84 encoding: base: 0 shift: 3 <|@ <|@
      nr  132  <|@ instruction v11|DWORD = ROL x: v2|DWORD y: 5 size: DWORD <|@ <|@
      nr  134  <|@ instruction v12|DWORD = XOR (x: v3|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction v13|DWORD = XOR (x: v12|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction v14|DWORD = ADD (x: v11|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction v15|DWORD = ADD (x: v14|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr  142  <|@ instruction v16|DWORD = ADD (x: v15|DWORD, ~y: [v10|QWORD[.] + v7|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  144  <|@ instruction v17|DWORD = LEA address: [v16|DWORD - 899497514] size: DWORD <|@ <|@
      nr  146  <|@ instruction v18|DWORD = INC value: v7|DWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction v19|DWORD = ROL x: v3|DWORD y: 30 size: DWORD <|@ <|@
      nr  150  <|@ instruction CMPCONSTBRANCH x: v18|DWORD trueDestinationProbability: 0.95 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B23 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B10" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction v20|DWORD = LEA address: [v7|DWORD + 2] size: DWORD <|@ <|@
      nr  170  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B10 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B11" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction v21|DWORD = MOVE input: int[78|0x4e] <|@ <|@
      nr  208  <|@ instruction v22|DWORD = SUB (x: v21|DWORD, ~y: v7|DWORD) size: DWORD <|@ <|@
      nr  210  <|@ instruction v23|QWORD = MOVSXD value: v22|DWORD size: QWORD <|@ <|@
      nr  212  <|@ instruction v24|QWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction v25|QWORD = ADD (x: v23|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr  216  <|@ instruction v26|QWORD = DEC value: v25|QWORD size: QWORD <|@ <|@
      nr  218  <|@ instruction v27|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction CMPBRANCH (x: v27|QWORD, y: v26|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v20|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B7" 
    successors "B12" "B22" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v18|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction v28|DWORD = ROL x: v17|DWORD y: 5 size: DWORD <|@ <|@
      nr  296  <|@ instruction v29|DWORD = XOR (x: v19|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction v30|DWORD = XOR (x: v29|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr  300  <|@ instruction v31|DWORD = ADD (x: v28|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr  302  <|@ instruction v32|DWORD = ADD (x: v31|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr  304  <|@ instruction v33|DWORD = ADD (x: v32|DWORD, ~y: [v10|QWORD[.] + v18|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  306  <|@ instruction v34|DWORD = LEA address: [v33|DWORD - 899497514] size: DWORD <|@ <|@
      nr  308  <|@ instruction v35|DWORD = LEA address: [v7|DWORD + 3] size: DWORD <|@ <|@
      nr  310  <|@ instruction CMP x: v35|DWORD y: 80 size: DWORD <|@ <|@
      nr  312  <|@ instruction v36|DWORD = CMOVE (falseValue: int[80|0x50], ~trueValue: v35|DWORD) condition: < <|@ <|@
      nr  314  <|@ instruction v37|DWORD = ROL x: v2|DWORD y: 30 size: DWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~outgoingValues: [v34|DWORD, v17|DWORD, v37|DWORD, v19|DWORD, v4|DWORD, v20|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606406907175871839
    begin_IR
      LIR
      nr  318  <|@ instruction [v38|DWORD, v39|DWORD, v40|DWORD, v41|DWORD, v42|DWORD, v43|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v43|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576421901864634511
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction v44|DWORD = ROL x: v38|DWORD y: 5 size: DWORD <|@ <|@
      nr  362  <|@ instruction v45|DWORD = XOR (x: v40|DWORD, y: v39|DWORD) size: DWORD <|@ <|@
      nr  364  <|@ instruction v46|DWORD = XOR (x: v45|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr  366  <|@ instruction v47|DWORD = ADD (x: v44|DWORD, y: v46|DWORD) size: DWORD <|@ <|@
      nr  368  <|@ instruction v48|DWORD = ADD (x: v47|DWORD, y: v42|DWORD) size: DWORD <|@ <|@
      nr  370  <|@ instruction v49|DWORD = ADD (x: v48|DWORD, ~y: [v10|QWORD[.] + v43|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  372  <|@ instruction v50|DWORD = LEA address: [v49|DWORD - 899497514] size: DWORD <|@ <|@
      nr  374  <|@ instruction v51|DWORD = INC value: v43|DWORD size: DWORD <|@ <|@
      nr  376  <|@ instruction v52|DWORD = ROL x: v39|DWORD y: 30 size: DWORD <|@ <|@
      nr  378  <|@ instruction JUMP ~outgoingValues: [v50|DWORD, v38|DWORD, v52|DWORD, v40|DWORD, v41|DWORD, v51|DWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606324590299565885
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:3|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // LSRAOptimizeSpillPos: optimize spill pos <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction JUMP ~outgoingValues: [v43|DWORD, v42|DWORD, v41|DWORD, v40|DWORD, v39|DWORD, v38|DWORD] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" 
    successors "B17" "B18" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4612021107685376776
    begin_IR
      LIR
      nr  390  <|@ instruction [v53|DWORD, v54|DWORD, v55|DWORD, v56|DWORD, v57|DWORD, v58|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.5789473684210522 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 72 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4608281511566220913
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction v59|DWORD = MOV input: [v10|QWORD[.] + v53|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  630  <|@ instruction v60|DWORD = INC value: v53|DWORD size: DWORD <|@ <|@
      nr  632  <|@ instruction v61|DWORD = MOV input: [v10|QWORD[.] + v60|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  634  <|@ instruction v62|DWORD = LEA address: [v53|DWORD + 2] size: DWORD <|@ <|@
      nr  636  <|@ instruction v63|DWORD = MOV input: [v10|QWORD[.] + v62|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  638  <|@ instruction v64|DWORD = LEA address: [v53|DWORD + 3] size: DWORD <|@ <|@
      nr  640  <|@ instruction v65|DWORD = MOV input: [v10|QWORD[.] + v64|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  642  <|@ instruction v66|DWORD = LEA address: [v53|DWORD + 4] size: DWORD <|@ <|@
      nr  644  <|@ instruction v67|DWORD = MOV input: [v10|QWORD[.] + v66|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  646  <|@ instruction v68|DWORD = LEA address: [v53|DWORD + 5] size: DWORD <|@ <|@
      nr  648  <|@ instruction v69|DWORD = MOV input: [v10|QWORD[.] + v68|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v165|DWORD = MOVE input: v69|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  650  <|@ instruction v70|DWORD = LEA address: [v53|DWORD + 6] size: DWORD <|@ <|@
      nr  652  <|@ instruction v71|DWORD = MOV input: [v10|QWORD[.] + v70|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v167|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  654  <|@ instruction v72|DWORD = LEA address: [v53|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v169|DWORD = MOVE input: v53|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  656  <|@ instruction v73|DWORD = ROL x: v58|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v171|DWORD = MOVE input: v72|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  658  <|@ instruction v74|DWORD = XOR (x: v56|DWORD, y: v57|DWORD) size: DWORD <|@ <|@
      nr  660  <|@ instruction v75|DWORD = XOR (x: v74|DWORD, y: v55|DWORD) size: DWORD <|@ <|@
      nr  662  <|@ instruction v76|DWORD = ADD (x: v73|DWORD, y: v75|DWORD) size: DWORD <|@ <|@
      nr  664  <|@ instruction v77|DWORD = ADD (x: v76|DWORD, y: v54|DWORD) size: DWORD <|@ <|@
      nr  666  <|@ instruction v78|DWORD = ADD (x: v77|DWORD, y: v59|DWORD) size: DWORD <|@ <|@
      nr  668  <|@ instruction v79|DWORD = LEA address: [v78|DWORD - 899497514] size: DWORD <|@ <|@
      nr  670  <|@ instruction v80|DWORD = ROL x: v79|DWORD y: 5 size: DWORD <|@ <|@
      nr  672  <|@ instruction v81|DWORD = ROL x: v57|DWORD y: 30 size: DWORD <|@ <|@
      nr  674  <|@ instruction v82|DWORD = XOR (x: v81|DWORD, y: v58|DWORD) size: DWORD <|@ <|@
      nr  676  <|@ instruction v83|DWORD = XOR (x: v56|DWORD, y: v82|DWORD) size: DWORD <|@ <|@
      nr  678  <|@ instruction v84|DWORD = ADD (x: v80|DWORD, y: v83|DWORD) size: DWORD <|@ <|@
      nr  680  <|@ instruction v85|DWORD = ADD (x: v84|DWORD, y: v55|DWORD) size: DWORD <|@ <|@
      nr  682  <|@ instruction v86|DWORD = ADD (x: v85|DWORD, y: v61|DWORD) size: DWORD <|@ <|@
      nr  684  <|@ instruction v87|DWORD = LEA address: [v86|DWORD - 899497514] size: DWORD <|@ <|@
      nr  686  <|@ instruction v88|DWORD = ROL x: v87|DWORD y: 5 size: DWORD <|@ <|@
      nr  688  <|@ instruction v89|DWORD = ROL x: v58|DWORD y: 30 size: DWORD <|@ <|@
      nr  690  <|@ instruction v90|DWORD = XOR (x: v79|DWORD, y: v89|DWORD) size: DWORD <|@ <|@
      nr  692  <|@ instruction v91|DWORD = XOR (x: v81|DWORD, y: v90|DWORD) size: DWORD <|@ <|@
      nr  694  <|@ instruction v92|DWORD = ADD (x: v88|DWORD, y: v91|DWORD) size: DWORD <|@ <|@
      nr  696  <|@ instruction v93|DWORD = ADD (x: v92|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr  698  <|@ instruction v94|DWORD = ADD (x: v93|DWORD, y: v63|DWORD) size: DWORD <|@ <|@
      nr  700  <|@ instruction v95|DWORD = LEA address: [v94|DWORD - 899497514] size: DWORD <|@ <|@
      nr  702  <|@ instruction v96|DWORD = ROL x: v95|DWORD y: 30 size: DWORD <|@ <|@
      nr  704  <|@ instruction v97|DWORD = ROL x: v87|DWORD y: 30 size: DWORD <|@ <|@
      nr  706  <|@ instruction v98|DWORD = ROL x: v79|DWORD y: 30 size: DWORD <|@ <|@
      nr  708  <|@ instruction v99|DWORD = ROL x: v95|DWORD y: 5 size: DWORD <|@ <|@
      nr  710  <|@ instruction v100|DWORD = XOR (x: v87|DWORD, y: v98|DWORD) size: DWORD <|@ <|@
      nr  712  <|@ instruction v101|DWORD = XOR (x: v89|DWORD, y: v100|DWORD) size: DWORD <|@ <|@
      nr  714  <|@ instruction v102|DWORD = ADD (x: v99|DWORD, y: v101|DWORD) size: DWORD <|@ <|@
      nr  716  <|@ instruction v103|DWORD = ADD (x: v102|DWORD, y: v81|DWORD) size: DWORD <|@ <|@
      nr  718  <|@ instruction v104|DWORD = ADD (x: v103|DWORD, y: v65|DWORD) size: DWORD <|@ <|@
      nr  720  <|@ instruction v105|DWORD = LEA address: [v104|DWORD - 899497514] size: DWORD <|@ <|@
      nr  722  <|@ instruction v106|DWORD = ROL x: v105|DWORD y: 5 size: DWORD <|@ <|@
      nr  724  <|@ instruction v107|DWORD = XOR (x: v95|DWORD, y: v97|DWORD) size: DWORD <|@ <|@
      nr  726  <|@ instruction v108|DWORD = XOR (x: v98|DWORD, y: v107|DWORD) size: DWORD <|@ <|@
      nr  728  <|@ instruction v109|DWORD = ADD (x: v106|DWORD, y: v108|DWORD) size: DWORD <|@ <|@
      nr  730  <|@ instruction v110|DWORD = ADD (x: v109|DWORD, y: v89|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction v111|DWORD = ADD (x: v110|DWORD, y: v67|DWORD) size: DWORD <|@ <|@
      nr  734  <|@ instruction v112|DWORD = LEA address: [v111|DWORD - 899497514] size: DWORD <|@ <|@
      nr  736  <|@ instruction v113|DWORD = ROL x: v112|DWORD y: 5 size: DWORD <|@ <|@
      nr  738  <|@ instruction v114|DWORD = XOR (x: v105|DWORD, y: v96|DWORD) size: DWORD <|@ <|@
      nr  740  <|@ instruction v115|DWORD = XOR (x: v97|DWORD, y: v114|DWORD) size: DWORD <|@ <|@
      nr  742  <|@ instruction v116|DWORD = ADD (x: v113|DWORD, y: v115|DWORD) size: DWORD <|@ <|@
      nr  744  <|@ instruction v117|DWORD = ADD (x: v116|DWORD, y: v98|DWORD) size: DWORD <|@ <|@
      nr  746  <|@ instruction v118|DWORD = ADD (x: v117|DWORD, y: v69|DWORD) size: DWORD <|@ <|@
      nr  748  <|@ instruction v119|DWORD = LEA address: [v118|DWORD - 899497514] size: DWORD <|@ <|@
      nr  750  <|@ instruction v120|DWORD = ROL x: v119|DWORD y: 5 size: DWORD <|@ <|@
      nr  752  <|@ instruction v121|DWORD = ROL x: v105|DWORD y: 30 size: DWORD <|@ <|@
      nr  754  <|@ instruction v122|DWORD = XOR (x: v112|DWORD, y: v121|DWORD) size: DWORD <|@ <|@
      nr  756  <|@ instruction v123|DWORD = XOR (x: v96|DWORD, y: v122|DWORD) size: DWORD <|@ <|@
      nr  758  <|@ instruction v124|DWORD = ADD (x: v120|DWORD, y: v123|DWORD) size: DWORD <|@ <|@
      nr  760  <|@ instruction v125|DWORD = ADD (x: v124|DWORD, y: v97|DWORD) size: DWORD <|@ <|@
      nr  762  <|@ instruction v126|DWORD = ADD (x: v125|DWORD, y: v71|DWORD) size: DWORD <|@ <|@
      nr  764  <|@ instruction v127|DWORD = LEA address: [v126|DWORD - 899497514] size: DWORD <|@ <|@
      nr  766  <|@ instruction v128|DWORD = ROL x: v127|DWORD y: 5 size: DWORD <|@ <|@
      nr  768  <|@ instruction v129|DWORD = ROL x: v112|DWORD y: 30 size: DWORD <|@ <|@
      nr  770  <|@ instruction v130|DWORD = XOR (x: v119|DWORD, y: v129|DWORD) size: DWORD <|@ <|@
      nr  772  <|@ instruction v131|DWORD = XOR (x: v121|DWORD, y: v130|DWORD) size: DWORD <|@ <|@
      nr  774  <|@ instruction v132|DWORD = ADD (x: v128|DWORD, y: v131|DWORD) size: DWORD <|@ <|@
      nr  776  <|@ instruction v133|DWORD = ADD (x: v132|DWORD, y: v96|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v166|QWORD[.] = MOVE input: v167|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v170|DWORD = MOVE input: v171|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  778  <|@ instruction v134|DWORD = ADD (x: v133|DWORD, ~y: [v10|QWORD[.] + v72|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  780  <|@ instruction v135|DWORD = LEA address: [v134|DWORD - 899497514] size: DWORD <|@ <|@
      nr  782  <|@ instruction v136|DWORD = ROL x: v119|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v168|DWORD = MOVE input: v169|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  784  <|@ instruction v137|DWORD = LEA address: [v53|DWORD + 8] size: DWORD <|@ <|@
      nr  786  <|@ instruction JUMP ~outgoingValues: [v137|DWORD, v121|DWORD, v129|DWORD, v136|DWORD, v127|DWORD, v135|DWORD] destination: B17 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606324590299565886
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [v53|DWORD, v54|DWORD, v55|DWORD, v56|DWORD, v57|DWORD, v58|DWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606406907175871841
    begin_IR
      LIR
      nr  798  <|@ instruction [v138|DWORD, v139|DWORD, v140|DWORD, v141|DWORD, v142|DWORD, v143|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction CMPCONSTBRANCH x: v138|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576421901864634512
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction v144|DWORD = ROL x: v143|DWORD y: 5 size: DWORD <|@ <|@
      nr  842  <|@ instruction v145|DWORD = XOR (x: v141|DWORD, y: v142|DWORD) size: DWORD <|@ <|@
      nr  844  <|@ instruction v146|DWORD = XOR (x: v145|DWORD, y: v140|DWORD) size: DWORD <|@ <|@
      nr  846  <|@ instruction v147|DWORD = ADD (x: v144|DWORD, y: v146|DWORD) size: DWORD <|@ <|@
      nr  848  <|@ instruction v148|DWORD = ADD (x: v147|DWORD, y: v139|DWORD) size: DWORD <|@ <|@
      nr  850  <|@ instruction v149|DWORD = ADD (x: v148|DWORD, ~y: [v10|QWORD[.] + v138|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  852  <|@ instruction v150|DWORD = LEA address: [v149|DWORD - 899497514] size: DWORD <|@ <|@
      nr  854  <|@ instruction v151|DWORD = ROL x: v142|DWORD y: 30 size: DWORD <|@ <|@
      nr  856  <|@ instruction v152|DWORD = INC value: v138|DWORD size: DWORD <|@ <|@
      nr  858  <|@ instruction JUMP ~outgoingValues: [v152|DWORD, v140|DWORD, v141|DWORD, v151|DWORD, v143|DWORD, v150|DWORD] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606324590299565887
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction JUMP ~outgoingValues: [v139|DWORD, v143|DWORD, v142|DWORD, v141|DWORD, v140|DWORD] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B26" 
    xhandlers
    flags 
    probability 4587023449039406624
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction JUMP ~outgoingValues: [v6|DWORD, v2|DWORD, v3|DWORD, v4|DWORD, v5|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B26" 
    xhandlers
    flags 
    probability 4587023449039406622
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction JUMP ~outgoingValues: [v5|DWORD, v17|DWORD, v2|DWORD, v19|DWORD, v4|DWORD] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B25" "B23" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  890  <|@ instruction [v153|DWORD, v154|DWORD, v155|DWORD, v156|DWORD, v157|DWORD] = LABEL alignment: 0 numbPhis: 5 label: ? <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction v158|DWORD[_] = MOV input: [v1|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  904  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
locals: v1|QWORD[.] - - v154|DWORD v155|DWORD v156|DWORD v157|DWORD v153|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v158|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 5 size: DWORD inlinedY: null state [bci:423] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 16], y: v154|DWORD) size: DWORD <|@ <|@
      nr  934  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 20], y: v155|DWORD) size: DWORD <|@ <|@
      nr  936  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 24], y: v156|DWORD) size: DWORD <|@ <|@
      nr  938  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 28], y: v157|DWORD) size: DWORD <|@ <|@
      nr  940  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 32], y: v153|DWORD) size: DWORD <|@ <|@
      nr  942  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction JUMP ~outgoingValues: [int[-105755|0xfffffffffffe62e5], long[0|0x0]] destination: B24 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [int[-110619|0xfffffffffffe4fe5], long[664|0x298]] destination: B8 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction MOV x: [r15|QWORD + 1156] y: -133915 size: DWORD <|@ <|@
      nr  982  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  984  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
locals: v1|QWORD[.] - - v154|DWORD v155|DWORD v156|DWORD v157|DWORD v153|DWORD - - 
>@ <|@ instruction DEOPT info [bci:423] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction JUMP ~outgoingValues: [int[-108315|0xfffffffffffe58e5], long[0|0x0]] destination: B22 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  996  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction JUMP ~outgoingValues: [int[-110619|0xfffffffffffe4fe5], long[664|0x298]] destination: B9 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction JUMP ~outgoingValues: [int[-102716|0xfffffffffffe6ec4], long[20|0x14]] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B24" "B9" "B22" "B8" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1016  <|@ instruction [v159|DWORD, v160|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v159|DWORD) size: DWORD <|@ <|@
      nr 1034  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v160|QWORD) size: QWORD <|@ <|@
      nr 1036  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: v1|QWORD[.] - - v2|DWORD v3|DWORD v4|DWORD v5|DWORD v6|DWORD v7|DWORD - 
>@ <|@ instruction DEOPT info [bci:357] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // W:int[]
     4: ifnonnull     15
     7: aload_0       
     8: bipush        80
    10: newarray      int
    12: putfield      #5          // W:int[]
    15: aload_1       
    16: iload_2       
    17: aload_0       
    18: getfield      #5          // W:int[]
    21: invokestatic  #19         // sun.security.provider.ByteArrayAccess.b2iBig64:(byte[], int, int[])void
    24: bipush        16
    26: istore_3      
    27: iload_3       
    28: bipush        79
    30: if_icmpgt     91
    33: aload_0       
    34: getfield      #5          // W:int[]
    37: iload_3       
    38: iconst_3      
    39: isub          
    40: iaload        
    41: aload_0       
    42: getfield      #5          // W:int[]
    45: iload_3       
    46: bipush        8
    48: isub          
    49: iaload        
    50: ixor          
    51: aload_0       
    52: getfield      #5          // W:int[]
    55: iload_3       
    56: bipush        14
    58: isub          
    59: iaload        
    60: ixor          
    61: aload_0       
    62: getfield      #5          // W:int[]
    65: iload_3       
    66: bipush        16
    68: isub          
    69: iaload        
    70: ixor          
    71: istore        4
    73: aload_0       
    74: getfield      #5          // W:int[]
    77: iload_3       
    78: iload         4
    80: iconst_1      
    81: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
    84: iastore       
    85: iinc          
    88: goto          27
    91: aload_0       
    92: getfield      #1          // state:int[]
    95: iconst_0      
    96: iaload        
    97: istore_3      
    98: aload_0       
    99: getfield      #1          // state:int[]
   102: iconst_1      
   103: iaload        
   104: istore        4
   106: aload_0       
   107: getfield      #1          // state:int[]
   110: iconst_2      
   111: iaload        
   112: istore        5
   114: aload_0       
   115: getfield      #1          // state:int[]
   118: iconst_3      
   119: iaload        
   120: istore        6
   122: aload_0       
   123: getfield      #1          // state:int[]
   126: iconst_4      
   127: iaload        
   128: istore        7
   130: iconst_0      
   131: istore        8
   133: iload         8
   135: bipush        20
   137: if_icmpge     204
   140: iload_3       
   141: iconst_5      
   142: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   145: iload         4
   147: iload         5
   149: iand          
   150: iload         4
   152: iconst_m1     
   153: ixor          
   154: iload         6
   156: iand          
   157: ior           
   158: iadd          
   159: iload         7
   161: iadd          
   162: aload_0       
   163: getfield      #5          // W:int[]
   166: iload         8
   168: iaload        
   169: iadd          
   170: ldc           #100        // 1518500249
   172: iadd          
   173: istore        9
   175: iload         6
   177: istore        7
   179: iload         5
   181: istore        6
   183: iload         4
   185: bipush        30
   187: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   190: istore        5
   192: iload_3       
   193: istore        4
   195: iload         9
   197: istore_3      
   198: iinc          
   201: goto          133
   204: bipush        20
   206: istore        8
   208: iload         8
   210: bipush        40
   212: if_icmpge     274
   215: iload_3       
   216: iconst_5      
   217: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   220: iload         4
   222: iload         5
   224: ixor          
   225: iload         6
   227: ixor          
   228: iadd          
   229: iload         7
   231: iadd          
   232: aload_0       
   233: getfield      #5          // W:int[]
   236: iload         8
   238: iaload        
   239: iadd          
   240: ldc           #101        // 1859775393
   242: iadd          
   243: istore        9
   245: iload         6
   247: istore        7
   249: iload         5
   251: istore        6
   253: iload         4
   255: bipush        30
   257: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   260: istore        5
   262: iload_3       
   263: istore        4
   265: iload         9
   267: istore_3      
   268: iinc          
   271: goto          208
   274: bipush        40
   276: istore        8
   278: iload         8
   280: bipush        60
   282: if_icmpge     353
   285: iload_3       
   286: iconst_5      
   287: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   290: iload         4
   292: iload         5
   294: iand          
   295: iload         4
   297: iload         6
   299: iand          
   300: ior           
   301: iload         5
   303: iload         6
   305: iand          
   306: ior           
   307: iadd          
   308: iload         7
   310: iadd          
   311: aload_0       
   312: getfield      #5          // W:int[]
   315: iload         8
   317: iaload        
   318: iadd          
   319: ldc           #102        // -1894007588
   321: iadd          
   322: istore        9
   324: iload         6
   326: istore        7
   328: iload         5
   330: istore        6
   332: iload         4
   334: bipush        30
   336: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   339: istore        5
   341: iload_3       
   342: istore        4
   344: iload         9
   346: istore_3      
   347: iinc          
   350: goto          278
   353: bipush        60
   355: istore        8
   357: iload         8
   359: bipush        80
   361: if_icmpge     423
   364: iload_3       
   365: iconst_5      
   366: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   369: iload         4
   371: iload         5
   373: ixor          
   374: iload         6
   376: ixor          
   377: iadd          
   378: iload         7
   380: iadd          
   381: aload_0       
   382: getfield      #5          // W:int[]
   385: iload         8
   387: iaload        
   388: iadd          
   389: ldc           #103        // -899497514
   391: iadd          
   392: istore        9
   394: iload         6
   396: istore        7
   398: iload         5
   400: istore        6
   402: iload         4
   404: bipush        30
   406: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   409: istore        5
   411: iload_3       
   412: istore        4
   414: iload         9
   416: istore_3      
   417: iinc          
   420: goto          357
   423: aload_0       
   424: getfield      #1          // state:int[]
   427: iconst_0      
   428: dup2          
   429: iaload        
   430: iload_3       
   431: iadd          
   432: iastore       
   433: aload_0       
   434: getfield      #1          // state:int[]
   437: iconst_1      
   438: dup2          
   439: iaload        
   440: iload         4
   442: iadd          
   443: iastore       
   444: aload_0       
   445: getfield      #1          // state:int[]
   448: iconst_2      
   449: dup2          
   450: iaload        
   451: iload         5
   453: iadd          
   454: iastore       
   455: aload_0       
   456: getfield      #1          // state:int[]
   459: iconst_3      
   460: dup2          
   461: iaload        
   462: iload         6
   464: iadd          
   465: iastore       
   466: aload_0       
   467: getfield      #1          // state:int[]
   470: iconst_4      
   471: dup2          
   472: iaload        
   473: iload         7
   475: iadd          
   476: iastore       
   477: return        
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 36[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v0|q [0, 40[[56, 58[ "NoOptimization"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [40, 56[40 MustHaveRegister 42 MustHaveRegister 44 MustHaveRegister 46 MustHaveRegister 48 MustHaveRegister 50 MustHaveRegister 52 MustHaveRegister 54 MustHaveRegister 56 ShouldHaveRegister  "NoSpillStore"
  v1|q QWORD "[r10|q]" v1|q -1 [42, 182[42 MustHaveRegister 60 MustHaveRegister 88 MustHaveRegister  "OneSpillStore"
  v2|d DWORD "[r11|d]" v2|d -1 [44, 314[[870, 879[[880, 889[[944, 964[[986, 1037[44 MustHaveRegister 132 MustHaveRegister 296 ShouldHaveRegister 314 MustHaveRegister 878 ShouldHaveRegister 888 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[r8|d]" v3|d -1 [46, 182[46 MustHaveRegister 134 ShouldHaveRegister 148 MustHaveRegister  "OneSpillStore"
  v4|d DWORD "[r9|d]" v4|d v42|d [48, 317[[870, 879[[880, 889[[944, 964[[986, 1037[48 MustHaveRegister 134 ShouldHaveRegister 298 ShouldHaveRegister 316 ShouldHaveRegister 878 ShouldHaveRegister 888 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[rcx|d]" v5|d -1 [50, 302[[870, 879[[880, 889[[944, 964[[986, 1037[50 MustHaveRegister 136 ShouldHaveRegister 302 ShouldHaveRegister 878 ShouldHaveRegister 888 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[rbx|d]" v6|d -1 [52, 256[[870, 879[[944, 964[[986, 1037[52 MustHaveRegister 140 ShouldHaveRegister 878 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[rdi|d]" v7|d -1 [54, 308[[944, 964[[986, 1037[54 MustHaveRegister 72 ShouldHaveRegister 92 ShouldHaveRegister 142 MustHaveRegister 146 ShouldHaveRegister 168 MustHaveRegister 208 ShouldHaveRegister 308 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[rdx|d]" v8|d -1 [88, 130[88 MustHaveRegister 90 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[rsi|d]" v9|d -1 [90, 254[90 MustHaveRegister 92 MustHaveRegister 218 ShouldHaveRegister 232 MustHaveRegister 254 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rdx|q]" v10|q v8|d [130, 653[130 MustHaveRegister 142 MustHaveRegister 304 MustHaveRegister 370 MustHaveRegister 379 LiveAtLoopEnd 628 MustHaveRegister 632 MustHaveRegister 636 MustHaveRegister 640 MustHaveRegister 644 MustHaveRegister 648 MustHaveRegister 652 MustHaveRegister  "SpillInDominator"
  v11|d DWORD "[rax|d]" v11|d v2|d [132, 138[132 MustHaveRegister 138 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[rbp|d]" v12|d v3|d [134, 136[134 MustHaveRegister 136 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[rbp|d]" v13|d v12|d [136, 138[136 MustHaveRegister 138 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[rax|d]" v14|d v11|d [138, 140[138 MustHaveRegister 140 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[rax|d]" v15|d v14|d [140, 142[140 MustHaveRegister 142 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[rax|d]" v16|d v15|d [142, 144[142 MustHaveRegister 144 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d v39|d [144, 317[[880, 889[144 MustHaveRegister 294 MustHaveRegister 316 ShouldHaveRegister 888 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[rbp|d]" v18|d v7|d [146, 305[146 MustHaveRegister 150 ShouldHaveRegister 254 ShouldHaveRegister 304 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[r13|d]" v19|d v3|d [148, 317[[880, 889[148 MustHaveRegister 296 ShouldHaveRegister 316 ShouldHaveRegister 888 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[r14|d]" v20|d v43|d [168, 317[168 MustHaveRegister 170 ShouldHaveRegister 212 ShouldHaveRegister 232 ShouldHaveRegister 316 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[r10|d]" v21|d -1 [206, 208[206 MustHaveRegister 208 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[r10|d]" v22|d v21|d [208, 210[208 MustHaveRegister 210 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[r10|q]" v23|q -1 [210, 214[210 MustHaveRegister 214 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[r8|q]" v24|q v20|d [212, 214[212 MustHaveRegister 214 ShouldHaveRegister  "NoSpillStore"
  v25|q QWORD "[r10|q]" v25|q v23|q [214, 216[214 MustHaveRegister 216 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[r10|q]" v26|q v25|q [216, 220[216 MustHaveRegister 220 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[r8|q]" v27|q v9|d [218, 220[218 MustHaveRegister 220 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[r10|d]" v28|d v17|d [294, 300[294 MustHaveRegister 300 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[r8|d]" v29|d v19|d [296, 298[296 MustHaveRegister 298 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[r8|d]" v30|d v29|d [298, 300[298 MustHaveRegister 300 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[r10|d]" v31|d v28|d [300, 302[300 MustHaveRegister 302 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[r10|d]" v32|d v31|d [302, 304[302 MustHaveRegister 304 MustHaveRegister  "NoSpillStore"
  v33|d DWORD "[r10|d]" v33|d v32|d [304, 306[304 MustHaveRegister 306 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[r10|d]" v34|d v38|d [306, 317[306 MustHaveRegister 316 ShouldHaveRegister  "NoSpillStore"
  v35|d DWORD "[r8|d]" v35|d -1 [308, 313[308 MustHaveRegister 310 ShouldHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v36|d DWORD "[rcx|d]" v36|d -1 [312, 380[312 MustHaveRegister 328 MustHaveRegister 379 LiveAtLoopEnd  "NoSpillStore"
  v37|d DWORD "[r11|d]" v37|d v2|d [314, 317[314 MustHaveRegister 316 ShouldHaveRegister  "NoSpillStore"
  v38|d DWORD "[r10|d]" v38|d v34|d [318, 379[[380, 389[360 MustHaveRegister 378 ShouldHaveRegister 388 ShouldHaveRegister  "NoSpillStore"
  v39|d DWORD "[rax|d]" v39|d v17|d [318, 376[[380, 389[362 ShouldHaveRegister 376 MustHaveRegister 388 ShouldHaveRegister  "NoSpillStore"
  v40|d DWORD "[r11|d]" v40|d v37|d [318, 379[[380, 389[362 ShouldHaveRegister 378 ShouldHaveRegister 388 ShouldHaveRegister  "NoSpillStore"
  v41|d DWORD "[r13|d]" v41|d v19|d [318, 379[[380, 389[364 ShouldHaveRegister 378 ShouldHaveRegister 388 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[r9|d]" v42|d v4|d [318, 368[[380, 389[368 ShouldHaveRegister 388 ShouldHaveRegister  "NoSpillStore"
  v43|d DWORD "[r14|d]" v43|d v20|d [318, 374[[380, 389[328 ShouldHaveRegister 370 MustHaveRegister 374 ShouldHaveRegister 388 ShouldHaveRegister  "NoSpillStore"
  v44|d DWORD "[r8|d]" v44|d v38|d [360, 366[360 MustHaveRegister 366 ShouldHaveRegister  "NoSpillStore"
  v45|d DWORD "[rbx|d]" v45|d v40|d [362, 364[362 MustHaveRegister 364 ShouldHaveRegister  "NoSpillStore"
  v46|d DWORD "[rbx|d]" v46|d v45|d [364, 366[364 MustHaveRegister 366 ShouldHaveRegister  "NoSpillStore"
  v47|d DWORD "[r8|d]" v47|d v44|d [366, 368[366 MustHaveRegister 368 ShouldHaveRegister  "NoSpillStore"
  v48|d DWORD "[r8|d]" v48|d v47|d [368, 370[368 MustHaveRegister 370 MustHaveRegister  "NoSpillStore"
  v49|d DWORD "[r8|d]" v49|d v48|d [370, 372[370 MustHaveRegister 372 MustHaveRegister  "NoSpillStore"
  v50|d DWORD "[r8|d]" v50|d -1 [372, 379[372 MustHaveRegister 378 ShouldHaveRegister  "NoSpillStore"
  v51|d DWORD "[r14|d]" v51|d v43|d [374, 379[374 MustHaveRegister 378 ShouldHaveRegister  "NoSpillStore"
  v52|d DWORD "[rax|d]" v52|d v39|d [376, 379[376 MustHaveRegister 378 ShouldHaveRegister  "NoSpillStore"
  v53|d DWORD "[r10|d]" v53|d v137|d [390, 655[400 ShouldHaveRegister 628 MustHaveRegister 630 ShouldHaveRegister 634 MustHaveRegister 638 MustHaveRegister 642 MustHaveRegister 646 MustHaveRegister 650 MustHaveRegister 654 MustHaveRegister  "OneSpillStore"
  v54|d DWORD "[r11|d]" v54|d v121|d [390, 664[[788, 797[664 ShouldHaveRegister 796 ShouldHaveRegister  "NoSpillStore"
  v55|d DWORD "[r8|d]" v55|d v129|d [390, 680[[788, 797[660 ShouldHaveRegister 680 ShouldHaveRegister 796 ShouldHaveRegister  "NoSpillStore"
  v56|d DWORD "[r9|d]" v56|d v136|d [390, 696[[788, 797[658 ShouldHaveRegister 676 ShouldHaveRegister 696 ShouldHaveRegister 796 ShouldHaveRegister  "NoSpillStore"
  v57|d DWORD "[rcx|d]" v57|d v127|d [390, 672[[788, 797[658 ShouldHaveRegister 672 MustHaveRegister 796 ShouldHaveRegister  "NoSpillStore"
  v58|d DWORD "[rbx|d]" v58|d v135|d [390, 688[[788, 797[656 MustHaveRegister 674 ShouldHaveRegister 688 MustHaveRegister 796 ShouldHaveRegister  "NoSpillStore"
  v59|d DWORD "[rdi|d]" v59|d -1 [628, 666[628 MustHaveRegister 666 ShouldHaveRegister  "NoSpillStore"
  v60|d DWORD "[rsi|d]" v60|d v53|d [630, 632[630 MustHaveRegister 632 MustHaveRegister  "NoSpillStore"
  v61|d DWORD "[rsi|d]" v61|d -1 [632, 682[632 MustHaveRegister 682 ShouldHaveRegister  "NoSpillStore"
  v62|d DWORD "[rax|d]" v62|d -1 [634, 636[634 MustHaveRegister 636 MustHaveRegister  "NoSpillStore"
  v63|d DWORD "[rax|d]" v63|d -1 [636, 698[636 MustHaveRegister 698 ShouldHaveRegister  "NoSpillStore"
  v64|d DWORD "[rbp|d]" v64|d -1 [638, 640[638 MustHaveRegister 640 MustHaveRegister  "NoSpillStore"
  v65|d DWORD "[rbp|d]" v65|d -1 [640, 718[640 MustHaveRegister 718 ShouldHaveRegister  "NoSpillStore"
  v66|d DWORD "[r13|d]" v66|d -1 [642, 644[642 MustHaveRegister 644 MustHaveRegister  "NoSpillStore"
  v67|d DWORD "[r13|d]" v67|d -1 [644, 732[644 MustHaveRegister 732 ShouldHaveRegister  "NoSpillStore"
  v68|d DWORD "[r14|d]" v68|d -1 [646, 648[646 MustHaveRegister 648 MustHaveRegister  "NoSpillStore"
  v69|d DWORD "[r14|d]" v69|d -1 [648, 649[648 MustHaveRegister  "OneSpillStore"
  v70|d DWORD "[r14|d]" v70|d -1 [650, 652[650 MustHaveRegister 652 MustHaveRegister  "NoSpillStore"
  v71|d DWORD "[r14|d]" v71|d -1 [652, 762[652 MustHaveRegister 762 ShouldHaveRegister  "NoSpillStore"
  v72|d DWORD "[rdx|d]" v72|d -1 [654, 657[654 MustHaveRegister  "OneSpillStore"
  v73|d DWORD "[r10|d]" v73|d v58|d [656, 662[656 MustHaveRegister 662 ShouldHaveRegister  "NoSpillStore"
  v74|d DWORD "[rdx|d]" v74|d v56|d [658, 660[658 MustHaveRegister 660 ShouldHaveRegister  "NoSpillStore"
  v75|d DWORD "[rdx|d]" v75|d v74|d [660, 662[660 MustHaveRegister 662 ShouldHaveRegister  "NoSpillStore"
  v76|d DWORD "[r10|d]" v76|d v73|d [662, 664[662 MustHaveRegister 664 ShouldHaveRegister  "NoSpillStore"
  v77|d DWORD "[r10|d]" v77|d v76|d [664, 666[664 MustHaveRegister 666 ShouldHaveRegister  "NoSpillStore"
  v78|d DWORD "[r10|d]" v78|d v77|d [666, 668[666 MustHaveRegister 668 MustHaveRegister  "NoSpillStore"
  v79|d DWORD "[r10|d]" v79|d -1 [668, 706[668 MustHaveRegister 670 MustHaveRegister 690 ShouldHaveRegister 706 MustHaveRegister  "NoSpillStore"
  v80|d DWORD "[r11|d]" v80|d v79|d [670, 678[670 MustHaveRegister 678 ShouldHaveRegister  "NoSpillStore"
  v81|d DWORD "[rcx|d]" v81|d v57|d [672, 716[672 MustHaveRegister 674 ShouldHaveRegister 692 ShouldHaveRegister 716 ShouldHaveRegister  "NoSpillStore"
  v82|d DWORD "[rdi|d]" v82|d v81|d [674, 676[674 MustHaveRegister 676 ShouldHaveRegister  "NoSpillStore"
  v83|d DWORD "[rdi|d]" v83|d v56|d [676, 678[676 MustHaveRegister 678 ShouldHaveRegister  "NoSpillStore"
  v84|d DWORD "[r11|d]" v84|d v80|d [678, 680[678 MustHaveRegister 680 ShouldHaveRegister  "NoSpillStore"
  v85|d DWORD "[r11|d]" v85|d v84|d [680, 682[680 MustHaveRegister 682 ShouldHaveRegister  "NoSpillStore"
  v86|d DWORD "[r11|d]" v86|d v85|d [682, 684[682 MustHaveRegister 684 MustHaveRegister  "NoSpillStore"
  v87|d DWORD "[r11|d]" v87|d -1 [684, 710[684 MustHaveRegister 686 MustHaveRegister 704 MustHaveRegister 710 ShouldHaveRegister  "NoSpillStore"
  v88|d DWORD "[r8|d]" v88|d v87|d [686, 694[686 MustHaveRegister 694 ShouldHaveRegister  "NoSpillStore"
  v89|d DWORD "[rbx|d]" v89|d v58|d [688, 730[688 MustHaveRegister 690 ShouldHaveRegister 712 ShouldHaveRegister 730 ShouldHaveRegister  "NoSpillStore"
  v90|d DWORD "[rdi|d]" v90|d v79|d [690, 692[690 MustHaveRegister 692 ShouldHaveRegister  "NoSpillStore"
  v91|d DWORD "[rdi|d]" v91|d v81|d [692, 694[692 MustHaveRegister 694 ShouldHaveRegister  "NoSpillStore"
  v92|d DWORD "[r8|d]" v92|d v88|d [694, 696[694 MustHaveRegister 696 ShouldHaveRegister  "NoSpillStore"
  v93|d DWORD "[r8|d]" v93|d v92|d [696, 698[696 MustHaveRegister 698 ShouldHaveRegister  "NoSpillStore"
  v94|d DWORD "[r8|d]" v94|d v93|d [698, 700[698 MustHaveRegister 700 MustHaveRegister  "NoSpillStore"
  v95|d DWORD "[r8|d]" v95|d -1 [700, 724[700 MustHaveRegister 702 MustHaveRegister 708 MustHaveRegister 724 ShouldHaveRegister  "NoSpillStore"
  v96|d DWORD "[r9|d]" v96|d v95|d [702, 776[702 MustHaveRegister 738 ShouldHaveRegister 756 ShouldHaveRegister 776 ShouldHaveRegister  "NoSpillStore"
  v97|d DWORD "[rdi|d]" v97|d v87|d [704, 760[704 MustHaveRegister 724 ShouldHaveRegister 740 ShouldHaveRegister 760 ShouldHaveRegister  "NoSpillStore"
  v98|d DWORD "[r10|d]" v98|d v79|d [706, 744[706 MustHaveRegister 710 ShouldHaveRegister 726 ShouldHaveRegister 744 ShouldHaveRegister  "NoSpillStore"
  v99|d DWORD "[rdx|d]" v99|d v95|d [708, 714[708 MustHaveRegister 714 ShouldHaveRegister  "NoSpillStore"
  v100|d DWORD "[r11|d]" v100|d v87|d [710, 712[710 MustHaveRegister 712 ShouldHaveRegister  "NoSpillStore"
  v101|d DWORD "[r11|d]" v101|d v89|d [712, 714[712 MustHaveRegister 714 ShouldHaveRegister  "NoSpillStore"
  v102|d DWORD "[rdx|d]" v102|d v99|d [714, 716[714 MustHaveRegister 716 ShouldHaveRegister  "NoSpillStore"
  v103|d DWORD "[rdx|d]" v103|d v102|d [716, 718[716 MustHaveRegister 718 ShouldHaveRegister  "NoSpillStore"
  v104|d DWORD "[rdx|d]" v104|d v103|d [718, 720[718 MustHaveRegister 720 MustHaveRegister  "NoSpillStore"
  v105|d DWORD "[r11|d]" v105|d -1 [720, 752[720 MustHaveRegister 722 MustHaveRegister 738 ShouldHaveRegister 752 MustHaveRegister  "NoSpillStore"
  v106|d DWORD "[rcx|d]" v106|d v105|d [722, 728[722 MustHaveRegister 728 ShouldHaveRegister  "NoSpillStore"
  v107|d DWORD "[r8|d]" v107|d v95|d [724, 726[724 MustHaveRegister 726 ShouldHaveRegister  "NoSpillStore"
  v108|d DWORD "[r8|d]" v108|d v98|d [726, 728[726 MustHaveRegister 728 ShouldHaveRegister  "NoSpillStore"
  v109|d DWORD "[rcx|d]" v109|d v106|d [728, 730[728 MustHaveRegister 730 ShouldHaveRegister  "NoSpillStore"
  v110|d DWORD "[rcx|d]" v110|d v109|d [730, 732[730 MustHaveRegister 732 ShouldHaveRegister  "NoSpillStore"
  v111|d DWORD "[rcx|d]" v111|d v110|d [732, 734[732 MustHaveRegister 734 MustHaveRegister  "NoSpillStore"
  v112|d DWORD "[r8|d]" v112|d -1 [734, 768[734 MustHaveRegister 736 MustHaveRegister 754 ShouldHaveRegister 768 MustHaveRegister  "NoSpillStore"
  v113|d DWORD "[rcx|d]" v113|d v112|d [736, 742[736 MustHaveRegister 742 ShouldHaveRegister  "NoSpillStore"
  v114|d DWORD "[rbx|d]" v114|d v105|d [738, 740[738 MustHaveRegister 740 ShouldHaveRegister  "NoSpillStore"
  v115|d DWORD "[rbx|d]" v115|d v97|d [740, 742[740 MustHaveRegister 742 ShouldHaveRegister  "NoSpillStore"
  v116|d DWORD "[rcx|d]" v116|d v113|d [742, 744[742 MustHaveRegister 744 ShouldHaveRegister  "NoSpillStore"
  v117|d DWORD "[rcx|d]" v117|d v116|d [744, 746[744 MustHaveRegister 746 ShouldHaveRegister  "NoSpillStore"
  v118|d DWORD "[rcx|d]" v118|d v117|d [746, 748[746 MustHaveRegister 748 MustHaveRegister  "NoSpillStore"
  v119|d DWORD "[r10|d]" v119|d -1 [748, 782[748 MustHaveRegister 750 MustHaveRegister 770 ShouldHaveRegister 782 MustHaveRegister  "NoSpillStore"
  v120|d DWORD "[rcx|d]" v120|d v119|d [750, 758[750 MustHaveRegister 758 ShouldHaveRegister  "NoSpillStore"
  v121|d DWORD "[r11|d]" v121|d v105|d [752, 787[752 MustHaveRegister 754 ShouldHaveRegister 772 ShouldHaveRegister 786 ShouldHaveRegister  "NoSpillStore"
  v122|d DWORD "[rbx|d]" v122|d v112|d [754, 756[754 MustHaveRegister 756 ShouldHaveRegister  "NoSpillStore"
  v123|d DWORD "[rbx|d]" v123|d v96|d [756, 758[756 MustHaveRegister 758 ShouldHaveRegister  "NoSpillStore"
  v124|d DWORD "[rcx|d]" v124|d v120|d [758, 760[758 MustHaveRegister 760 ShouldHaveRegister  "NoSpillStore"
  v125|d DWORD "[rcx|d]" v125|d v124|d [760, 762[760 MustHaveRegister 762 ShouldHaveRegister  "NoSpillStore"
  v126|d DWORD "[rcx|d]" v126|d v125|d [762, 764[762 MustHaveRegister 764 MustHaveRegister  "NoSpillStore"
  v127|d DWORD "[rcx|d]" v127|d v57|d [764, 787[764 MustHaveRegister 766 MustHaveRegister 786 ShouldHaveRegister  "NoSpillStore"
  v128|d DWORD "[rbx|d]" v128|d v127|d [766, 774[766 MustHaveRegister 774 ShouldHaveRegister  "NoSpillStore"
  v129|d DWORD "[r8|d]" v129|d v112|d [768, 787[768 MustHaveRegister 770 ShouldHaveRegister 786 ShouldHaveRegister  "NoSpillStore"
  v130|d DWORD "[rdi|d]" v130|d v119|d [770, 772[770 MustHaveRegister 772 ShouldHaveRegister  "NoSpillStore"
  v131|d DWORD "[rdi|d]" v131|d v121|d [772, 774[772 MustHaveRegister 774 ShouldHaveRegister  "NoSpillStore"
  v132|d DWORD "[rbx|d]" v132|d v128|d [774, 776[774 MustHaveRegister 776 ShouldHaveRegister  "NoSpillStore"
  v133|d DWORD "[rbx|d]" v133|d v132|d [776, 778[776 MustHaveRegister 778 MustHaveRegister  "NoSpillStore"
  v134|d DWORD "[rbx|d]" v134|d v133|d [778, 780[778 MustHaveRegister 780 MustHaveRegister  "NoSpillStore"
  v135|d DWORD "[rbx|d]" v135|d v58|d [780, 787[780 MustHaveRegister 786 ShouldHaveRegister  "NoSpillStore"
  v136|d DWORD "[r10|d]" v136|d v119|d [782, 787[782 MustHaveRegister 786 ShouldHaveRegister  "NoSpillStore"
  v137|d DWORD "[r9|d]" v137|d v53|d [784, 787[784 MustHaveRegister 786 ShouldHaveRegister  "NoSpillStore"
  v138|d DWORD "[r10|d]" v138|d v53|d [798, 856[808 ShouldHaveRegister 850 MustHaveRegister 856 ShouldHaveRegister  "NoSpillStore"
  v139|d DWORD "[r11|d]" v139|d v54|d [798, 848[[860, 869[848 ShouldHaveRegister 868 ShouldHaveRegister  "NoSpillStore"
  v140|d DWORD "[r8|d]" v140|d v55|d [798, 859[[860, 869[844 ShouldHaveRegister 858 ShouldHaveRegister 868 ShouldHaveRegister  "NoSpillStore"
  v141|d DWORD "[r9|d]" v141|d v56|d [798, 859[[860, 869[842 ShouldHaveRegister 858 ShouldHaveRegister 868 ShouldHaveRegister  "NoSpillStore"
  v142|d DWORD "[rcx|d]" v142|d v57|d [798, 854[[860, 869[842 ShouldHaveRegister 854 MustHaveRegister 868 ShouldHaveRegister  "NoSpillStore"
  v143|d DWORD "[rbx|d]" v143|d v58|d [798, 859[[860, 869[840 MustHaveRegister 858 ShouldHaveRegister 868 ShouldHaveRegister  "NoSpillStore"
  v144|d DWORD "[rdx|d]" v144|d v143|d [840, 846[840 MustHaveRegister 846 ShouldHaveRegister  "NoSpillStore"
  v145|d DWORD "[rsi|d]" v145|d v141|d [842, 844[842 MustHaveRegister 844 ShouldHaveRegister  "NoSpillStore"
  v146|d DWORD "[rsi|d]" v146|d v145|d [844, 846[844 MustHaveRegister 846 ShouldHaveRegister  "NoSpillStore"
  v147|d DWORD "[rdx|d]" v147|d v144|d [846, 848[846 MustHaveRegister 848 ShouldHaveRegister  "NoSpillStore"
  v148|d DWORD "[rdx|d]" v148|d v147|d [848, 850[848 MustHaveRegister 850 MustHaveRegister  "NoSpillStore"
  v149|d DWORD "[rdx|d]" v149|d v148|d [850, 852[850 MustHaveRegister 852 MustHaveRegister  "NoSpillStore"
  v150|d DWORD "[r11|d]" v150|d -1 [852, 859[852 MustHaveRegister 858 ShouldHaveRegister  "NoSpillStore"
  v151|d DWORD "[rcx|d]" v151|d v142|d [854, 859[854 MustHaveRegister 858 ShouldHaveRegister  "NoSpillStore"
  v152|d DWORD "[r10|d]" v152|d v138|d [856, 859[856 MustHaveRegister 858 ShouldHaveRegister  "NoSpillStore"
  v153|d DWORD "[r11|d]" v153|d v139|d [890, 940[[964, 985[940 MustHaveRegister  "NoSpillStore"
  v154|d DWORD "[rbx|d]" v154|d v143|d [890, 932[[964, 985[932 MustHaveRegister  "NoSpillStore"
  v155|d DWORD "[rcx|d]" v155|d v142|d [890, 934[[964, 985[934 MustHaveRegister  "NoSpillStore"
  v156|d DWORD "[r9|d]" v156|d v141|d [890, 936[[964, 985[936 MustHaveRegister  "NoSpillStore"
  v157|d DWORD "[r8|d]" v157|d v140|d [890, 938[[964, 985[938 MustHaveRegister  "NoSpillStore"
  v158|d DWORD "[rdi|d]" v158|d -1 [902, 940[902 MustHaveRegister 904 MustHaveRegister 932 MustHaveRegister 934 MustHaveRegister 936 MustHaveRegister 938 MustHaveRegister 940 MustHaveRegister  "NoSpillStore"
  v159|d DWORD "[r8|d]" v159|d -1 [1016, 1032[1032 MustHaveRegister  "NoSpillStore"
  v160|q QWORD "[rdx|q]" v160|q -1 [1016, 1034[1034 MustHaveRegister  "NoSpillStore"
  v161|q QWORD "[r10|q]" v1|q v1|q [890, 906[[944, 985[[986, 1037[902 MustHaveRegister  "OneSpillStore"
  v162|q QWORD "[vstack:0|q]" v1|q v1|q [182, 890[ "OneSpillStore"
  v163|d DWORD "[rsi|d]" v3|d v3|d [1016, 1037[ "OneSpillStore"
  v164|d DWORD "[vstack:1|d]" v3|d v3|d [182, 256[[870, 879[[944, 964[[986, 1016[878 ShouldHaveRegister  "OneSpillStore"
  v165|d DWORD "[vstack:2|d]" v69|d v69|d [649, 746[746 ShouldHaveRegister  "OneSpillStore"
  v166|q QWORD "[rdi|q]" v10|q v10|q [777, 860[778 MustHaveRegister 787 LiveAtLoopEnd 850 MustHaveRegister 859 LiveAtLoopEnd  "SpillInDominator"
  v167|q QWORD "[vstack:3|q]" v10|q v10|q [653, 777[ "SpillInDominator"
  v168|d DWORD "[rdx|d]" v53|d v53|d [783, 784[[788, 797[784 MustHaveRegister 796 ShouldHaveRegister  "OneSpillStore"
  v169|d DWORD "[vstack:4|d]" v53|d v53|d [655, 783[ "OneSpillStore"
  v170|d DWORD "[rdx|d]" v72|d v72|d [777, 779[778 MustHaveRegister  "OneSpillStore"
  v171|d DWORD "[vstack:5|d]" v72|d v72|d [657, 777[ "OneSpillStore"
  v172|d DWORD "[vstack:6|d]" v172|d -1 [1, 2[ "NoDefinitionFound"
  v173|d DWORD "[vstack:7|d]" v173|d -1 [1, 2[ "NoDefinitionFound"
  v174|d DWORD "[vstack:8|d]" v174|d -1 [1, 2[ "NoDefinitionFound"
  v175|d DWORD "[vstack:9|d]" v175|d -1 [1, 2[ "NoDefinitionFound"
  v176|d DWORD "[vstack:10|d]" v176|d -1 [1, 2[ "NoDefinitionFound"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@31f9b0c2 slotKind: QWORD <|@ <|@
      nr   40  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction v1|QWORD[.] = MOV input: [v0|QWORD + 72] size: QWORD <|@ <|@
      nr   44  <|@ instruction v2|DWORD = MOV input: [v0|QWORD + 48] size: DWORD <|@ <|@
      nr   46  <|@ instruction v3|DWORD = MOV input: [v0|QWORD + 40] size: DWORD <|@ <|@
      nr   48  <|@ instruction v4|DWORD = MOV input: [v0|QWORD + 32] size: DWORD <|@ <|@
      nr   50  <|@ instruction v5|DWORD = MOV input: [v0|QWORD + 24] size: DWORD <|@ <|@
      nr   52  <|@ instruction v6|DWORD = MOV input: [v0|QWORD + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction v7|DWORD = MOV input: [v0|QWORD + 8] size: DWORD <|@ <|@
      nr   56  <|@ instruction rsi|QWORD = MOVE input: v0|QWORD moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: v1|QWORD[.] - - v2|DWORD v3|DWORD v4|DWORD v5|DWORD v6|DWORD v7|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B29 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lsun/security/provider/SHA;, resolved>;compressed} state [bci:357] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.9523809523809523 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B25 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B24" 
    xhandlers
    flags 
    probability 4606753504549791646
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction v8|DWORD[_] = MOV input: [v1|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: v1|QWORD[.] - - v2|DWORD v3|DWORD v4|DWORD v5|DWORD v6|DWORD v7|DWORD - 
>@ <|@ instruction v9|DWORD = MOV input: [v8|DWORD[_] * 8 + 12] size: DWORD state [bci:357] <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B23" 
    xhandlers
    flags 
    probability 4606753504549791646
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3087af84 encoding: base: 0 shift: 3 <|@ <|@
      nr  132  <|@ instruction v11|DWORD = ROL x: v2|DWORD y: 5 size: DWORD <|@ <|@
      nr  134  <|@ instruction v12|DWORD = XOR (x: v3|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction v13|DWORD = XOR (x: v12|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction v14|DWORD = ADD (x: v11|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction v15|DWORD = ADD (x: v14|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr  142  <|@ instruction v16|DWORD = ADD (x: v15|DWORD, ~y: [v10|QWORD[.] + v7|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  144  <|@ instruction v17|DWORD = LEA address: [v16|DWORD - 899497514] size: DWORD <|@ <|@
      nr  146  <|@ instruction v18|DWORD = INC value: v7|DWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction v19|DWORD = ROL x: v3|DWORD y: 30 size: DWORD <|@ <|@
      nr  150  <|@ instruction CMPCONSTBRANCH x: v18|DWORD trueDestinationProbability: 0.95 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B23 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B10" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction v20|DWORD = LEA address: [v7|DWORD + 2] size: DWORD <|@ <|@
      nr  170  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B10 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B11" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v164|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v162|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v164|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v162|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction v21|DWORD = MOVE input: int[78|0x4e] <|@ <|@
      nr  208  <|@ instruction v22|DWORD = SUB (x: v21|DWORD, ~y: v7|DWORD) size: DWORD <|@ <|@
      nr  210  <|@ instruction v23|QWORD = MOVSXD value: v22|DWORD size: QWORD <|@ <|@
      nr  212  <|@ instruction v24|QWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction v25|QWORD = ADD (x: v23|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr  216  <|@ instruction v26|QWORD = DEC value: v25|QWORD size: QWORD <|@ <|@
      nr  218  <|@ instruction v27|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction CMPBRANCH (x: v27|QWORD, y: v26|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v20|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B7" 
    successors "B12" "B22" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v18|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction v28|DWORD = ROL x: v17|DWORD y: 5 size: DWORD <|@ <|@
      nr  296  <|@ instruction v29|DWORD = XOR (x: v19|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction v30|DWORD = XOR (x: v29|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr  300  <|@ instruction v31|DWORD = ADD (x: v28|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr  302  <|@ instruction v32|DWORD = ADD (x: v31|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr  304  <|@ instruction v33|DWORD = ADD (x: v32|DWORD, ~y: [v10|QWORD[.] + v18|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  306  <|@ instruction v34|DWORD = LEA address: [v33|DWORD - 899497514] size: DWORD <|@ <|@
      nr  308  <|@ instruction v35|DWORD = LEA address: [v7|DWORD + 3] size: DWORD <|@ <|@
      nr  310  <|@ instruction CMP x: v35|DWORD y: 80 size: DWORD <|@ <|@
      nr  312  <|@ instruction v36|DWORD = CMOVE (falseValue: int[80|0x50], ~trueValue: v35|DWORD) condition: < <|@ <|@
      nr  314  <|@ instruction v37|DWORD = ROL x: v2|DWORD y: 30 size: DWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606406907175871839
    begin_IR
      LIR
      nr  318  <|@ instruction [v38|DWORD, v39|DWORD, v40|DWORD, v41|DWORD, v42|DWORD, v43|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v43|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576421901864634511
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction v44|DWORD = ROL x: v38|DWORD y: 5 size: DWORD <|@ <|@
      nr  362  <|@ instruction v45|DWORD = XOR (x: v40|DWORD, y: v39|DWORD) size: DWORD <|@ <|@
      nr  364  <|@ instruction v46|DWORD = XOR (x: v45|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr  366  <|@ instruction v47|DWORD = ADD (x: v44|DWORD, y: v46|DWORD) size: DWORD <|@ <|@
      nr  368  <|@ instruction v48|DWORD = ADD (x: v47|DWORD, y: v42|DWORD) size: DWORD <|@ <|@
      nr  370  <|@ instruction v49|DWORD = ADD (x: v48|DWORD, ~y: [v10|QWORD[.] + v43|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  372  <|@ instruction v50|DWORD = LEA address: [v49|DWORD - 899497514] size: DWORD <|@ <|@
      nr  374  <|@ instruction v51|DWORD = INC value: v43|DWORD size: DWORD <|@ <|@
      nr  376  <|@ instruction v52|DWORD = ROL x: v39|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVE input: v41|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOVE input: v40|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOVE input: v52|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVE input: v38|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOVE input: v50|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  378  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606324590299565885
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:3|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // LSRAOptimizeSpillPos: optimize spill pos <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVE input: v38|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = MOVE input: v39|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOVE input: v41|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVE input: v43|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v172|DWORD = MOVE input: v42|DWORD moveKind: DWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVE input: v40|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVE input: v172|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  388  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" 
    successors "B17" "B18" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4612021107685376776
    begin_IR
      LIR
      nr  390  <|@ instruction [v53|DWORD, v54|DWORD, v55|DWORD, v56|DWORD, v57|DWORD, v58|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.5789473684210522 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 72 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4608281511566220913
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction v59|DWORD = MOV input: [v10|QWORD[.] + v53|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  630  <|@ instruction v60|DWORD = INC value: v53|DWORD size: DWORD <|@ <|@
      nr  632  <|@ instruction v61|DWORD = MOV input: [v10|QWORD[.] + v60|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  634  <|@ instruction v62|DWORD = LEA address: [v53|DWORD + 2] size: DWORD <|@ <|@
      nr  636  <|@ instruction v63|DWORD = MOV input: [v10|QWORD[.] + v62|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  638  <|@ instruction v64|DWORD = LEA address: [v53|DWORD + 3] size: DWORD <|@ <|@
      nr  640  <|@ instruction v65|DWORD = MOV input: [v10|QWORD[.] + v64|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  642  <|@ instruction v66|DWORD = LEA address: [v53|DWORD + 4] size: DWORD <|@ <|@
      nr  644  <|@ instruction v67|DWORD = MOV input: [v10|QWORD[.] + v66|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  646  <|@ instruction v68|DWORD = LEA address: [v53|DWORD + 5] size: DWORD <|@ <|@
      nr  648  <|@ instruction v69|DWORD = MOV input: [v10|QWORD[.] + v68|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v165|DWORD = MOVE input: v69|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  650  <|@ instruction v70|DWORD = LEA address: [v53|DWORD + 6] size: DWORD <|@ <|@
      nr  652  <|@ instruction v71|DWORD = MOV input: [v10|QWORD[.] + v70|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v167|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  654  <|@ instruction v72|DWORD = LEA address: [v53|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v169|DWORD = MOVE input: v53|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  656  <|@ instruction v73|DWORD = ROL x: v58|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v171|DWORD = MOVE input: v72|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  658  <|@ instruction v74|DWORD = XOR (x: v56|DWORD, y: v57|DWORD) size: DWORD <|@ <|@
      nr  660  <|@ instruction v75|DWORD = XOR (x: v74|DWORD, y: v55|DWORD) size: DWORD <|@ <|@
      nr  662  <|@ instruction v76|DWORD = ADD (x: v73|DWORD, y: v75|DWORD) size: DWORD <|@ <|@
      nr  664  <|@ instruction v77|DWORD = ADD (x: v76|DWORD, y: v54|DWORD) size: DWORD <|@ <|@
      nr  666  <|@ instruction v78|DWORD = ADD (x: v77|DWORD, y: v59|DWORD) size: DWORD <|@ <|@
      nr  668  <|@ instruction v79|DWORD = LEA address: [v78|DWORD - 899497514] size: DWORD <|@ <|@
      nr  670  <|@ instruction v80|DWORD = ROL x: v79|DWORD y: 5 size: DWORD <|@ <|@
      nr  672  <|@ instruction v81|DWORD = ROL x: v57|DWORD y: 30 size: DWORD <|@ <|@
      nr  674  <|@ instruction v82|DWORD = XOR (x: v81|DWORD, y: v58|DWORD) size: DWORD <|@ <|@
      nr  676  <|@ instruction v83|DWORD = XOR (x: v56|DWORD, y: v82|DWORD) size: DWORD <|@ <|@
      nr  678  <|@ instruction v84|DWORD = ADD (x: v80|DWORD, y: v83|DWORD) size: DWORD <|@ <|@
      nr  680  <|@ instruction v85|DWORD = ADD (x: v84|DWORD, y: v55|DWORD) size: DWORD <|@ <|@
      nr  682  <|@ instruction v86|DWORD = ADD (x: v85|DWORD, y: v61|DWORD) size: DWORD <|@ <|@
      nr  684  <|@ instruction v87|DWORD = LEA address: [v86|DWORD - 899497514] size: DWORD <|@ <|@
      nr  686  <|@ instruction v88|DWORD = ROL x: v87|DWORD y: 5 size: DWORD <|@ <|@
      nr  688  <|@ instruction v89|DWORD = ROL x: v58|DWORD y: 30 size: DWORD <|@ <|@
      nr  690  <|@ instruction v90|DWORD = XOR (x: v79|DWORD, y: v89|DWORD) size: DWORD <|@ <|@
      nr  692  <|@ instruction v91|DWORD = XOR (x: v81|DWORD, y: v90|DWORD) size: DWORD <|@ <|@
      nr  694  <|@ instruction v92|DWORD = ADD (x: v88|DWORD, y: v91|DWORD) size: DWORD <|@ <|@
      nr  696  <|@ instruction v93|DWORD = ADD (x: v92|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr  698  <|@ instruction v94|DWORD = ADD (x: v93|DWORD, y: v63|DWORD) size: DWORD <|@ <|@
      nr  700  <|@ instruction v95|DWORD = LEA address: [v94|DWORD - 899497514] size: DWORD <|@ <|@
      nr  702  <|@ instruction v96|DWORD = ROL x: v95|DWORD y: 30 size: DWORD <|@ <|@
      nr  704  <|@ instruction v97|DWORD = ROL x: v87|DWORD y: 30 size: DWORD <|@ <|@
      nr  706  <|@ instruction v98|DWORD = ROL x: v79|DWORD y: 30 size: DWORD <|@ <|@
      nr  708  <|@ instruction v99|DWORD = ROL x: v95|DWORD y: 5 size: DWORD <|@ <|@
      nr  710  <|@ instruction v100|DWORD = XOR (x: v87|DWORD, y: v98|DWORD) size: DWORD <|@ <|@
      nr  712  <|@ instruction v101|DWORD = XOR (x: v89|DWORD, y: v100|DWORD) size: DWORD <|@ <|@
      nr  714  <|@ instruction v102|DWORD = ADD (x: v99|DWORD, y: v101|DWORD) size: DWORD <|@ <|@
      nr  716  <|@ instruction v103|DWORD = ADD (x: v102|DWORD, y: v81|DWORD) size: DWORD <|@ <|@
      nr  718  <|@ instruction v104|DWORD = ADD (x: v103|DWORD, y: v65|DWORD) size: DWORD <|@ <|@
      nr  720  <|@ instruction v105|DWORD = LEA address: [v104|DWORD - 899497514] size: DWORD <|@ <|@
      nr  722  <|@ instruction v106|DWORD = ROL x: v105|DWORD y: 5 size: DWORD <|@ <|@
      nr  724  <|@ instruction v107|DWORD = XOR (x: v95|DWORD, y: v97|DWORD) size: DWORD <|@ <|@
      nr  726  <|@ instruction v108|DWORD = XOR (x: v98|DWORD, y: v107|DWORD) size: DWORD <|@ <|@
      nr  728  <|@ instruction v109|DWORD = ADD (x: v106|DWORD, y: v108|DWORD) size: DWORD <|@ <|@
      nr  730  <|@ instruction v110|DWORD = ADD (x: v109|DWORD, y: v89|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction v111|DWORD = ADD (x: v110|DWORD, y: v67|DWORD) size: DWORD <|@ <|@
      nr  734  <|@ instruction v112|DWORD = LEA address: [v111|DWORD - 899497514] size: DWORD <|@ <|@
      nr  736  <|@ instruction v113|DWORD = ROL x: v112|DWORD y: 5 size: DWORD <|@ <|@
      nr  738  <|@ instruction v114|DWORD = XOR (x: v105|DWORD, y: v96|DWORD) size: DWORD <|@ <|@
      nr  740  <|@ instruction v115|DWORD = XOR (x: v97|DWORD, y: v114|DWORD) size: DWORD <|@ <|@
      nr  742  <|@ instruction v116|DWORD = ADD (x: v113|DWORD, y: v115|DWORD) size: DWORD <|@ <|@
      nr  744  <|@ instruction v117|DWORD = ADD (x: v116|DWORD, y: v98|DWORD) size: DWORD <|@ <|@
      nr  746  <|@ instruction v118|DWORD = ADD (x: v117|DWORD, y: v69|DWORD) size: DWORD <|@ <|@
      nr  748  <|@ instruction v119|DWORD = LEA address: [v118|DWORD - 899497514] size: DWORD <|@ <|@
      nr  750  <|@ instruction v120|DWORD = ROL x: v119|DWORD y: 5 size: DWORD <|@ <|@
      nr  752  <|@ instruction v121|DWORD = ROL x: v105|DWORD y: 30 size: DWORD <|@ <|@
      nr  754  <|@ instruction v122|DWORD = XOR (x: v112|DWORD, y: v121|DWORD) size: DWORD <|@ <|@
      nr  756  <|@ instruction v123|DWORD = XOR (x: v96|DWORD, y: v122|DWORD) size: DWORD <|@ <|@
      nr  758  <|@ instruction v124|DWORD = ADD (x: v120|DWORD, y: v123|DWORD) size: DWORD <|@ <|@
      nr  760  <|@ instruction v125|DWORD = ADD (x: v124|DWORD, y: v97|DWORD) size: DWORD <|@ <|@
      nr  762  <|@ instruction v126|DWORD = ADD (x: v125|DWORD, y: v71|DWORD) size: DWORD <|@ <|@
      nr  764  <|@ instruction v127|DWORD = LEA address: [v126|DWORD - 899497514] size: DWORD <|@ <|@
      nr  766  <|@ instruction v128|DWORD = ROL x: v127|DWORD y: 5 size: DWORD <|@ <|@
      nr  768  <|@ instruction v129|DWORD = ROL x: v112|DWORD y: 30 size: DWORD <|@ <|@
      nr  770  <|@ instruction v130|DWORD = XOR (x: v119|DWORD, y: v129|DWORD) size: DWORD <|@ <|@
      nr  772  <|@ instruction v131|DWORD = XOR (x: v121|DWORD, y: v130|DWORD) size: DWORD <|@ <|@
      nr  774  <|@ instruction v132|DWORD = ADD (x: v128|DWORD, y: v131|DWORD) size: DWORD <|@ <|@
      nr  776  <|@ instruction v133|DWORD = ADD (x: v132|DWORD, y: v96|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v166|QWORD[.] = MOVE input: v167|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v170|DWORD = MOVE input: v171|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  778  <|@ instruction v134|DWORD = ADD (x: v133|DWORD, ~y: [v10|QWORD[.] + v72|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  780  <|@ instruction v135|DWORD = LEA address: [v134|DWORD - 899497514] size: DWORD <|@ <|@
      nr  782  <|@ instruction v136|DWORD = ROL x: v119|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v168|DWORD = MOVE input: v169|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  784  <|@ instruction v137|DWORD = LEA address: [v53|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = MOVE input: v166|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v173|DWORD = MOVE input: v137|DWORD moveKind: DWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVE input: v136|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVE input: v173|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  786  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606324590299565886
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v166|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v168|DWORD = MOVE input: v53|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v168|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606406907175871841
    begin_IR
      LIR
      nr  798  <|@ instruction [v138|DWORD, v139|DWORD, v140|DWORD, v141|DWORD, v142|DWORD, v143|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction CMPCONSTBRANCH x: v138|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576421901864634512
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction v144|DWORD = ROL x: v143|DWORD y: 5 size: DWORD <|@ <|@
      nr  842  <|@ instruction v145|DWORD = XOR (x: v141|DWORD, y: v142|DWORD) size: DWORD <|@ <|@
      nr  844  <|@ instruction v146|DWORD = XOR (x: v145|DWORD, y: v140|DWORD) size: DWORD <|@ <|@
      nr  846  <|@ instruction v147|DWORD = ADD (x: v144|DWORD, y: v146|DWORD) size: DWORD <|@ <|@
      nr  848  <|@ instruction v148|DWORD = ADD (x: v147|DWORD, y: v139|DWORD) size: DWORD <|@ <|@
      nr  850  <|@ instruction v149|DWORD = ADD (x: v148|DWORD, ~y: [v10|QWORD[.] + v138|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  852  <|@ instruction v150|DWORD = LEA address: [v149|DWORD - 899497514] size: DWORD <|@ <|@
      nr  854  <|@ instruction v151|DWORD = ROL x: v142|DWORD y: 30 size: DWORD <|@ <|@
      nr  856  <|@ instruction v152|DWORD = INC value: v138|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v174|DWORD = MOVE input: v140|DWORD moveKind: DWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction v140|DWORD = MOVE input: v141|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v141|DWORD = MOVE input: v151|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v142|DWORD = MOVE input: v143|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v143|DWORD = MOVE input: v150|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = MOVE input: v174|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  858  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606324590299565887
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v161|QWORD[.] = MOVE input: v162|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  868  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B26" 
    xhandlers
    flags 
    probability 4587023449039406624
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v164|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v162|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v157|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v155|DWORD = MOVE input: v164|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v161|QWORD[.] = MOVE input: v162|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v175|DWORD = MOVE input: v6|DWORD moveKind: DWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction v154|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v153|DWORD = MOVE input: v175|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  878  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B26" 
    xhandlers
    flags 
    probability 4587023449039406622
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v162|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v157|DWORD = MOVE input: v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v156|DWORD = MOVE input: v19|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v154|DWORD = MOVE input: v17|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v161|QWORD[.] = MOVE input: v162|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v176|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction v155|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v153|DWORD = MOVE input: v176|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  888  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B25" "B23" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  890  <|@ instruction [v153|DWORD, v154|DWORD, v155|DWORD, v156|DWORD, v157|DWORD] = LABEL alignment: 0 numbPhis: 5 label: ? <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction v158|DWORD[_] = MOV input: [v1|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  904  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
locals: v1|QWORD[.] - - v154|DWORD v155|DWORD v156|DWORD v157|DWORD v153|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v158|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 5 size: DWORD inlinedY: null state [bci:423] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 16], y: v154|DWORD) size: DWORD <|@ <|@
      nr  934  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 20], y: v155|DWORD) size: DWORD <|@ <|@
      nr  936  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 24], y: v156|DWORD) size: DWORD <|@ <|@
      nr  938  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 28], y: v157|DWORD) size: DWORD <|@ <|@
      nr  940  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 32], y: v153|DWORD) size: DWORD <|@ <|@
      nr  942  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v164|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v160|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v159|DWORD = MOVE input: int[-105755|0xfffffffffffe62e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v163|DWORD = MOVE input: v164|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  952  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v161|QWORD[.] = MOVE input: v162|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v160|QWORD = MOVE input: long[664|0x298] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v159|DWORD = MOVE input: int[-110619|0xfffffffffffe4fe5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v163|DWORD = MOVE input: v164|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction MOV x: [r15|QWORD + 1156] y: -133915 size: DWORD <|@ <|@
      nr  982  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  984  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
locals: v1|QWORD[.] - - v154|DWORD v155|DWORD v156|DWORD v157|DWORD v153|DWORD - - 
>@ <|@ instruction DEOPT info [bci:423] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v161|QWORD[.] = MOVE input: v162|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v160|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v159|DWORD = MOVE input: int[-108315|0xfffffffffffe58e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v163|DWORD = MOVE input: v164|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  994  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  996  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v161|QWORD[.] = MOVE input: v162|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v160|QWORD = MOVE input: long[664|0x298] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v159|DWORD = MOVE input: int[-110619|0xfffffffffffe4fe5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v163|DWORD = MOVE input: v164|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1004  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v164|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v160|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v159|DWORD = MOVE input: int[-102716|0xfffffffffffe6ec4] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v163|DWORD = MOVE input: v164|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1014  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B24" "B9" "B22" "B8" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1016  <|@ instruction [v159|DWORD, v160|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v159|DWORD) size: DWORD <|@ <|@
      nr 1034  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v160|QWORD) size: QWORD <|@ <|@
      nr 1036  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: v1|QWORD[.] - - v2|DWORD v3|DWORD v4|DWORD v5|DWORD v6|DWORD v7|DWORD - 
>@ <|@ instruction DEOPT info [bci:357] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // W:int[]
     4: ifnonnull     15
     7: aload_0       
     8: bipush        80
    10: newarray      int
    12: putfield      #5          // W:int[]
    15: aload_1       
    16: iload_2       
    17: aload_0       
    18: getfield      #5          // W:int[]
    21: invokestatic  #19         // sun.security.provider.ByteArrayAccess.b2iBig64:(byte[], int, int[])void
    24: bipush        16
    26: istore_3      
    27: iload_3       
    28: bipush        79
    30: if_icmpgt     91
    33: aload_0       
    34: getfield      #5          // W:int[]
    37: iload_3       
    38: iconst_3      
    39: isub          
    40: iaload        
    41: aload_0       
    42: getfield      #5          // W:int[]
    45: iload_3       
    46: bipush        8
    48: isub          
    49: iaload        
    50: ixor          
    51: aload_0       
    52: getfield      #5          // W:int[]
    55: iload_3       
    56: bipush        14
    58: isub          
    59: iaload        
    60: ixor          
    61: aload_0       
    62: getfield      #5          // W:int[]
    65: iload_3       
    66: bipush        16
    68: isub          
    69: iaload        
    70: ixor          
    71: istore        4
    73: aload_0       
    74: getfield      #5          // W:int[]
    77: iload_3       
    78: iload         4
    80: iconst_1      
    81: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
    84: iastore       
    85: iinc          
    88: goto          27
    91: aload_0       
    92: getfield      #1          // state:int[]
    95: iconst_0      
    96: iaload        
    97: istore_3      
    98: aload_0       
    99: getfield      #1          // state:int[]
   102: iconst_1      
   103: iaload        
   104: istore        4
   106: aload_0       
   107: getfield      #1          // state:int[]
   110: iconst_2      
   111: iaload        
   112: istore        5
   114: aload_0       
   115: getfield      #1          // state:int[]
   118: iconst_3      
   119: iaload        
   120: istore        6
   122: aload_0       
   123: getfield      #1          // state:int[]
   126: iconst_4      
   127: iaload        
   128: istore        7
   130: iconst_0      
   131: istore        8
   133: iload         8
   135: bipush        20
   137: if_icmpge     204
   140: iload_3       
   141: iconst_5      
   142: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   145: iload         4
   147: iload         5
   149: iand          
   150: iload         4
   152: iconst_m1     
   153: ixor          
   154: iload         6
   156: iand          
   157: ior           
   158: iadd          
   159: iload         7
   161: iadd          
   162: aload_0       
   163: getfield      #5          // W:int[]
   166: iload         8
   168: iaload        
   169: iadd          
   170: ldc           #100        // 1518500249
   172: iadd          
   173: istore        9
   175: iload         6
   177: istore        7
   179: iload         5
   181: istore        6
   183: iload         4
   185: bipush        30
   187: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   190: istore        5
   192: iload_3       
   193: istore        4
   195: iload         9
   197: istore_3      
   198: iinc          
   201: goto          133
   204: bipush        20
   206: istore        8
   208: iload         8
   210: bipush        40
   212: if_icmpge     274
   215: iload_3       
   216: iconst_5      
   217: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   220: iload         4
   222: iload         5
   224: ixor          
   225: iload         6
   227: ixor          
   228: iadd          
   229: iload         7
   231: iadd          
   232: aload_0       
   233: getfield      #5          // W:int[]
   236: iload         8
   238: iaload        
   239: iadd          
   240: ldc           #101        // 1859775393
   242: iadd          
   243: istore        9
   245: iload         6
   247: istore        7
   249: iload         5
   251: istore        6
   253: iload         4
   255: bipush        30
   257: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   260: istore        5
   262: iload_3       
   263: istore        4
   265: iload         9
   267: istore_3      
   268: iinc          
   271: goto          208
   274: bipush        40
   276: istore        8
   278: iload         8
   280: bipush        60
   282: if_icmpge     353
   285: iload_3       
   286: iconst_5      
   287: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   290: iload         4
   292: iload         5
   294: iand          
   295: iload         4
   297: iload         6
   299: iand          
   300: ior           
   301: iload         5
   303: iload         6
   305: iand          
   306: ior           
   307: iadd          
   308: iload         7
   310: iadd          
   311: aload_0       
   312: getfield      #5          // W:int[]
   315: iload         8
   317: iaload        
   318: iadd          
   319: ldc           #102        // -1894007588
   321: iadd          
   322: istore        9
   324: iload         6
   326: istore        7
   328: iload         5
   330: istore        6
   332: iload         4
   334: bipush        30
   336: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   339: istore        5
   341: iload_3       
   342: istore        4
   344: iload         9
   346: istore_3      
   347: iinc          
   350: goto          278
   353: bipush        60
   355: istore        8
   357: iload         8
   359: bipush        80
   361: if_icmpge     423
   364: iload_3       
   365: iconst_5      
   366: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   369: iload         4
   371: iload         5
   373: ixor          
   374: iload         6
   376: ixor          
   377: iadd          
   378: iload         7
   380: iadd          
   381: aload_0       
   382: getfield      #5          // W:int[]
   385: iload         8
   387: iaload        
   388: iadd          
   389: ldc           #103        // -899497514
   391: iadd          
   392: istore        9
   394: iload         6
   396: istore        7
   398: iload         5
   400: istore        6
   402: iload         4
   404: bipush        30
   406: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   409: istore        5
   411: iload_3       
   412: istore        4
   414: iload         9
   416: istore_3      
   417: iinc          
   420: goto          357
   423: aload_0       
   424: getfield      #1          // state:int[]
   427: iconst_0      
   428: dup2          
   429: iaload        
   430: iload_3       
   431: iadd          
   432: iastore       
   433: aload_0       
   434: getfield      #1          // state:int[]
   437: iconst_1      
   438: dup2          
   439: iaload        
   440: iload         4
   442: iadd          
   443: iastore       
   444: aload_0       
   445: getfield      #1          // state:int[]
   448: iconst_2      
   449: dup2          
   450: iaload        
   451: iload         5
   453: iadd          
   454: iastore       
   455: aload_0       
   456: getfield      #1          // state:int[]
   459: iconst_3      
   460: dup2          
   461: iaload        
   462: iload         6
   464: iadd          
   465: iastore       
   466: aload_0       
   467: getfield      #1          // state:int[]
   470: iconst_4      
   471: dup2          
   472: iaload        
   473: iload         7
   475: iadd          
   476: iastore       
   477: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@31f9b0c2 slotKind: QWORD <|@ <|@
      nr   40  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction v1|QWORD[.] = MOV input: [v0|QWORD + 72] size: QWORD <|@ <|@
      nr   44  <|@ instruction v2|DWORD = MOV input: [v0|QWORD + 48] size: DWORD <|@ <|@
      nr   46  <|@ instruction v3|DWORD = MOV input: [v0|QWORD + 40] size: DWORD <|@ <|@
      nr   48  <|@ instruction v4|DWORD = MOV input: [v0|QWORD + 32] size: DWORD <|@ <|@
      nr   50  <|@ instruction v5|DWORD = MOV input: [v0|QWORD + 24] size: DWORD <|@ <|@
      nr   52  <|@ instruction v6|DWORD = MOV input: [v0|QWORD + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction v7|DWORD = MOV input: [v0|QWORD + 8] size: DWORD <|@ <|@
      nr   56  <|@ instruction rsi|QWORD = MOVE input: v0|QWORD moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: v1|QWORD[.] - - v2|DWORD v3|DWORD v4|DWORD v5|DWORD v6|DWORD v7|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B29 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lsun/security/provider/SHA;, resolved>;compressed} state [bci:357] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.9523809523809523 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B25 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B24" 
    xhandlers
    flags 
    probability 4606753504549791646
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction v8|DWORD[_] = MOV input: [v1|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: v1|QWORD[.] - - v2|DWORD v3|DWORD v4|DWORD v5|DWORD v6|DWORD v7|DWORD - 
>@ <|@ instruction v9|DWORD = MOV input: [v8|DWORD[_] * 8 + 12] size: DWORD state [bci:357] <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B23" 
    xhandlers
    flags 
    probability 4606753504549791646
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3087af84 encoding: base: 0 shift: 3 <|@ <|@
      nr  132  <|@ instruction v11|DWORD = ROL x: v2|DWORD y: 5 size: DWORD <|@ <|@
      nr  134  <|@ instruction v12|DWORD = XOR (x: v3|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction v13|DWORD = XOR (x: v12|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction v14|DWORD = ADD (x: v11|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction v15|DWORD = ADD (x: v14|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr  142  <|@ instruction v16|DWORD = ADD (x: v15|DWORD, ~y: [v10|QWORD[.] + v7|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  144  <|@ instruction v17|DWORD = LEA address: [v16|DWORD - 899497514] size: DWORD <|@ <|@
      nr  146  <|@ instruction v18|DWORD = INC value: v7|DWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction v19|DWORD = ROL x: v3|DWORD y: 30 size: DWORD <|@ <|@
      nr  150  <|@ instruction CMPCONSTBRANCH x: v18|DWORD trueDestinationProbability: 0.95 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B23 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B10" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction v20|DWORD = LEA address: [v7|DWORD + 2] size: DWORD <|@ <|@
      nr  170  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B10 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B11" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v164|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v162|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v164|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v162|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction v21|DWORD = MOVE input: int[78|0x4e] <|@ <|@
      nr  208  <|@ instruction v22|DWORD = SUB (x: v21|DWORD, ~y: v7|DWORD) size: DWORD <|@ <|@
      nr  210  <|@ instruction v23|QWORD = MOVSXD value: v22|DWORD size: QWORD <|@ <|@
      nr  212  <|@ instruction v24|QWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction v25|QWORD = ADD (x: v23|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr  216  <|@ instruction v26|QWORD = DEC value: v25|QWORD size: QWORD <|@ <|@
      nr  218  <|@ instruction v27|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction CMPBRANCH (x: v27|QWORD, y: v26|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v20|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B7" 
    successors "B12" "B22" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v18|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction v28|DWORD = ROL x: v17|DWORD y: 5 size: DWORD <|@ <|@
      nr  296  <|@ instruction v29|DWORD = XOR (x: v19|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction v30|DWORD = XOR (x: v29|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr  300  <|@ instruction v31|DWORD = ADD (x: v28|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr  302  <|@ instruction v32|DWORD = ADD (x: v31|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr  304  <|@ instruction v33|DWORD = ADD (x: v32|DWORD, ~y: [v10|QWORD[.] + v18|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  306  <|@ instruction v34|DWORD = LEA address: [v33|DWORD - 899497514] size: DWORD <|@ <|@
      nr  308  <|@ instruction v35|DWORD = LEA address: [v7|DWORD + 3] size: DWORD <|@ <|@
      nr  310  <|@ instruction CMP x: v35|DWORD y: 80 size: DWORD <|@ <|@
      nr  312  <|@ instruction v36|DWORD = CMOVE (falseValue: int[80|0x50], ~trueValue: v35|DWORD) condition: < <|@ <|@
      nr  314  <|@ instruction v37|DWORD = ROL x: v2|DWORD y: 30 size: DWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606406907175871839
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v43|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576421901864634511
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction v44|DWORD = ROL x: v38|DWORD y: 5 size: DWORD <|@ <|@
      nr  362  <|@ instruction v45|DWORD = XOR (x: v40|DWORD, y: v39|DWORD) size: DWORD <|@ <|@
      nr  364  <|@ instruction v46|DWORD = XOR (x: v45|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr  366  <|@ instruction v47|DWORD = ADD (x: v44|DWORD, y: v46|DWORD) size: DWORD <|@ <|@
      nr  368  <|@ instruction v48|DWORD = ADD (x: v47|DWORD, y: v42|DWORD) size: DWORD <|@ <|@
      nr  370  <|@ instruction v49|DWORD = ADD (x: v48|DWORD, ~y: [v10|QWORD[.] + v43|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  372  <|@ instruction v50|DWORD = LEA address: [v49|DWORD - 899497514] size: DWORD <|@ <|@
      nr  374  <|@ instruction v51|DWORD = INC value: v43|DWORD size: DWORD <|@ <|@
      nr  376  <|@ instruction v52|DWORD = ROL x: v39|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVE input: v41|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOVE input: v40|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOVE input: v52|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVE input: v38|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOVE input: v50|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  378  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606324590299565885
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:3|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // LSRAOptimizeSpillPos: optimize spill pos <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVE input: v38|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = MOVE input: v39|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOVE input: v41|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVE input: v43|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v172|DWORD = MOVE input: v42|DWORD moveKind: DWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVE input: v40|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVE input: v172|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  388  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" 
    successors "B17" "B18" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4612021107685376776
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.5789473684210522 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 72 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4608281511566220913
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction v59|DWORD = MOV input: [v10|QWORD[.] + v53|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  630  <|@ instruction v60|DWORD = INC value: v53|DWORD size: DWORD <|@ <|@
      nr  632  <|@ instruction v61|DWORD = MOV input: [v10|QWORD[.] + v60|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  634  <|@ instruction v62|DWORD = LEA address: [v53|DWORD + 2] size: DWORD <|@ <|@
      nr  636  <|@ instruction v63|DWORD = MOV input: [v10|QWORD[.] + v62|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  638  <|@ instruction v64|DWORD = LEA address: [v53|DWORD + 3] size: DWORD <|@ <|@
      nr  640  <|@ instruction v65|DWORD = MOV input: [v10|QWORD[.] + v64|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  642  <|@ instruction v66|DWORD = LEA address: [v53|DWORD + 4] size: DWORD <|@ <|@
      nr  644  <|@ instruction v67|DWORD = MOV input: [v10|QWORD[.] + v66|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  646  <|@ instruction v68|DWORD = LEA address: [v53|DWORD + 5] size: DWORD <|@ <|@
      nr  648  <|@ instruction v69|DWORD = MOV input: [v10|QWORD[.] + v68|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v165|DWORD = MOVE input: v69|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  650  <|@ instruction v70|DWORD = LEA address: [v53|DWORD + 6] size: DWORD <|@ <|@
      nr  652  <|@ instruction v71|DWORD = MOV input: [v10|QWORD[.] + v70|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  654  <|@ instruction v72|DWORD = LEA address: [v53|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v169|DWORD = MOVE input: v53|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  656  <|@ instruction v73|DWORD = ROL x: v58|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v171|DWORD = MOVE input: v72|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  658  <|@ instruction v74|DWORD = XOR (x: v56|DWORD, y: v57|DWORD) size: DWORD <|@ <|@
      nr  660  <|@ instruction v75|DWORD = XOR (x: v74|DWORD, y: v55|DWORD) size: DWORD <|@ <|@
      nr  662  <|@ instruction v76|DWORD = ADD (x: v73|DWORD, y: v75|DWORD) size: DWORD <|@ <|@
      nr  664  <|@ instruction v77|DWORD = ADD (x: v76|DWORD, y: v54|DWORD) size: DWORD <|@ <|@
      nr  666  <|@ instruction v78|DWORD = ADD (x: v77|DWORD, y: v59|DWORD) size: DWORD <|@ <|@
      nr  668  <|@ instruction v79|DWORD = LEA address: [v78|DWORD - 899497514] size: DWORD <|@ <|@
      nr  670  <|@ instruction v80|DWORD = ROL x: v79|DWORD y: 5 size: DWORD <|@ <|@
      nr  672  <|@ instruction v81|DWORD = ROL x: v57|DWORD y: 30 size: DWORD <|@ <|@
      nr  674  <|@ instruction v82|DWORD = XOR (x: v81|DWORD, y: v58|DWORD) size: DWORD <|@ <|@
      nr  676  <|@ instruction v83|DWORD = XOR (x: v56|DWORD, y: v82|DWORD) size: DWORD <|@ <|@
      nr  678  <|@ instruction v84|DWORD = ADD (x: v80|DWORD, y: v83|DWORD) size: DWORD <|@ <|@
      nr  680  <|@ instruction v85|DWORD = ADD (x: v84|DWORD, y: v55|DWORD) size: DWORD <|@ <|@
      nr  682  <|@ instruction v86|DWORD = ADD (x: v85|DWORD, y: v61|DWORD) size: DWORD <|@ <|@
      nr  684  <|@ instruction v87|DWORD = LEA address: [v86|DWORD - 899497514] size: DWORD <|@ <|@
      nr  686  <|@ instruction v88|DWORD = ROL x: v87|DWORD y: 5 size: DWORD <|@ <|@
      nr  688  <|@ instruction v89|DWORD = ROL x: v58|DWORD y: 30 size: DWORD <|@ <|@
      nr  690  <|@ instruction v90|DWORD = XOR (x: v79|DWORD, y: v89|DWORD) size: DWORD <|@ <|@
      nr  692  <|@ instruction v91|DWORD = XOR (x: v81|DWORD, y: v90|DWORD) size: DWORD <|@ <|@
      nr  694  <|@ instruction v92|DWORD = ADD (x: v88|DWORD, y: v91|DWORD) size: DWORD <|@ <|@
      nr  696  <|@ instruction v93|DWORD = ADD (x: v92|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr  698  <|@ instruction v94|DWORD = ADD (x: v93|DWORD, y: v63|DWORD) size: DWORD <|@ <|@
      nr  700  <|@ instruction v95|DWORD = LEA address: [v94|DWORD - 899497514] size: DWORD <|@ <|@
      nr  702  <|@ instruction v96|DWORD = ROL x: v95|DWORD y: 30 size: DWORD <|@ <|@
      nr  704  <|@ instruction v97|DWORD = ROL x: v87|DWORD y: 30 size: DWORD <|@ <|@
      nr  706  <|@ instruction v98|DWORD = ROL x: v79|DWORD y: 30 size: DWORD <|@ <|@
      nr  708  <|@ instruction v99|DWORD = ROL x: v95|DWORD y: 5 size: DWORD <|@ <|@
      nr  710  <|@ instruction v100|DWORD = XOR (x: v87|DWORD, y: v98|DWORD) size: DWORD <|@ <|@
      nr  712  <|@ instruction v101|DWORD = XOR (x: v89|DWORD, y: v100|DWORD) size: DWORD <|@ <|@
      nr  714  <|@ instruction v102|DWORD = ADD (x: v99|DWORD, y: v101|DWORD) size: DWORD <|@ <|@
      nr  716  <|@ instruction v103|DWORD = ADD (x: v102|DWORD, y: v81|DWORD) size: DWORD <|@ <|@
      nr  718  <|@ instruction v104|DWORD = ADD (x: v103|DWORD, y: v65|DWORD) size: DWORD <|@ <|@
      nr  720  <|@ instruction v105|DWORD = LEA address: [v104|DWORD - 899497514] size: DWORD <|@ <|@
      nr  722  <|@ instruction v106|DWORD = ROL x: v105|DWORD y: 5 size: DWORD <|@ <|@
      nr  724  <|@ instruction v107|DWORD = XOR (x: v95|DWORD, y: v97|DWORD) size: DWORD <|@ <|@
      nr  726  <|@ instruction v108|DWORD = XOR (x: v98|DWORD, y: v107|DWORD) size: DWORD <|@ <|@
      nr  728  <|@ instruction v109|DWORD = ADD (x: v106|DWORD, y: v108|DWORD) size: DWORD <|@ <|@
      nr  730  <|@ instruction v110|DWORD = ADD (x: v109|DWORD, y: v89|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction v111|DWORD = ADD (x: v110|DWORD, y: v67|DWORD) size: DWORD <|@ <|@
      nr  734  <|@ instruction v112|DWORD = LEA address: [v111|DWORD - 899497514] size: DWORD <|@ <|@
      nr  736  <|@ instruction v113|DWORD = ROL x: v112|DWORD y: 5 size: DWORD <|@ <|@
      nr  738  <|@ instruction v114|DWORD = XOR (x: v105|DWORD, y: v96|DWORD) size: DWORD <|@ <|@
      nr  740  <|@ instruction v115|DWORD = XOR (x: v97|DWORD, y: v114|DWORD) size: DWORD <|@ <|@
      nr  742  <|@ instruction v116|DWORD = ADD (x: v113|DWORD, y: v115|DWORD) size: DWORD <|@ <|@
      nr  744  <|@ instruction v117|DWORD = ADD (x: v116|DWORD, y: v98|DWORD) size: DWORD <|@ <|@
      nr  746  <|@ instruction v118|DWORD = ADD (x: v117|DWORD, y: v69|DWORD) size: DWORD <|@ <|@
      nr  748  <|@ instruction v119|DWORD = LEA address: [v118|DWORD - 899497514] size: DWORD <|@ <|@
      nr  750  <|@ instruction v120|DWORD = ROL x: v119|DWORD y: 5 size: DWORD <|@ <|@
      nr  752  <|@ instruction v121|DWORD = ROL x: v105|DWORD y: 30 size: DWORD <|@ <|@
      nr  754  <|@ instruction v122|DWORD = XOR (x: v112|DWORD, y: v121|DWORD) size: DWORD <|@ <|@
      nr  756  <|@ instruction v123|DWORD = XOR (x: v96|DWORD, y: v122|DWORD) size: DWORD <|@ <|@
      nr  758  <|@ instruction v124|DWORD = ADD (x: v120|DWORD, y: v123|DWORD) size: DWORD <|@ <|@
      nr  760  <|@ instruction v125|DWORD = ADD (x: v124|DWORD, y: v97|DWORD) size: DWORD <|@ <|@
      nr  762  <|@ instruction v126|DWORD = ADD (x: v125|DWORD, y: v71|DWORD) size: DWORD <|@ <|@
      nr  764  <|@ instruction v127|DWORD = LEA address: [v126|DWORD - 899497514] size: DWORD <|@ <|@
      nr  766  <|@ instruction v128|DWORD = ROL x: v127|DWORD y: 5 size: DWORD <|@ <|@
      nr  768  <|@ instruction v129|DWORD = ROL x: v112|DWORD y: 30 size: DWORD <|@ <|@
      nr  770  <|@ instruction v130|DWORD = XOR (x: v119|DWORD, y: v129|DWORD) size: DWORD <|@ <|@
      nr  772  <|@ instruction v131|DWORD = XOR (x: v121|DWORD, y: v130|DWORD) size: DWORD <|@ <|@
      nr  774  <|@ instruction v132|DWORD = ADD (x: v128|DWORD, y: v131|DWORD) size: DWORD <|@ <|@
      nr  776  <|@ instruction v133|DWORD = ADD (x: v132|DWORD, y: v96|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v166|QWORD[.] = MOVE input: v167|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v170|DWORD = MOVE input: v171|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  778  <|@ instruction v134|DWORD = ADD (x: v133|DWORD, ~y: [v10|QWORD[.] + v72|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  780  <|@ instruction v135|DWORD = LEA address: [v134|DWORD - 899497514] size: DWORD <|@ <|@
      nr  782  <|@ instruction v136|DWORD = ROL x: v119|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v168|DWORD = MOVE input: v169|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  784  <|@ instruction v137|DWORD = LEA address: [v53|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = MOVE input: v166|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v173|DWORD = MOVE input: v137|DWORD moveKind: DWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVE input: v136|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVE input: v173|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  786  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606324590299565886
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v166|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v168|DWORD = MOVE input: v53|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v168|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606406907175871841
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction CMPCONSTBRANCH x: v138|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576421901864634512
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction v144|DWORD = ROL x: v143|DWORD y: 5 size: DWORD <|@ <|@
      nr  842  <|@ instruction v145|DWORD = XOR (x: v141|DWORD, y: v142|DWORD) size: DWORD <|@ <|@
      nr  844  <|@ instruction v146|DWORD = XOR (x: v145|DWORD, y: v140|DWORD) size: DWORD <|@ <|@
      nr  846  <|@ instruction v147|DWORD = ADD (x: v144|DWORD, y: v146|DWORD) size: DWORD <|@ <|@
      nr  848  <|@ instruction v148|DWORD = ADD (x: v147|DWORD, y: v139|DWORD) size: DWORD <|@ <|@
      nr  850  <|@ instruction v149|DWORD = ADD (x: v148|DWORD, ~y: [v10|QWORD[.] + v138|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  852  <|@ instruction v150|DWORD = LEA address: [v149|DWORD - 899497514] size: DWORD <|@ <|@
      nr  854  <|@ instruction v151|DWORD = ROL x: v142|DWORD y: 30 size: DWORD <|@ <|@
      nr  856  <|@ instruction v152|DWORD = INC value: v138|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v174|DWORD = MOVE input: v140|DWORD moveKind: DWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction v140|DWORD = MOVE input: v141|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v141|DWORD = MOVE input: v151|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v142|DWORD = MOVE input: v143|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v143|DWORD = MOVE input: v150|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = MOVE input: v174|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  858  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606324590299565887
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v161|QWORD[.] = MOVE input: v162|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  868  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B26" 
    xhandlers
    flags 
    probability 4587023449039406624
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v164|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v162|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v157|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v155|DWORD = MOVE input: v164|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v161|QWORD[.] = MOVE input: v162|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v175|DWORD = MOVE input: v6|DWORD moveKind: DWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction v154|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v153|DWORD = MOVE input: v175|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  878  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B26" 
    xhandlers
    flags 
    probability 4587023449039406622
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v162|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v157|DWORD = MOVE input: v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v156|DWORD = MOVE input: v19|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v154|DWORD = MOVE input: v17|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v161|QWORD[.] = MOVE input: v162|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v176|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction v155|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v153|DWORD = MOVE input: v176|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  888  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B25" "B23" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL alignment: 0 numbPhis: 5 label: ? <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction v158|DWORD[_] = MOV input: [v1|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  904  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
locals: v1|QWORD[.] - - v154|DWORD v155|DWORD v156|DWORD v157|DWORD v153|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v158|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 5 size: DWORD inlinedY: null state [bci:423] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 16], y: v154|DWORD) size: DWORD <|@ <|@
      nr  934  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 20], y: v155|DWORD) size: DWORD <|@ <|@
      nr  936  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 24], y: v156|DWORD) size: DWORD <|@ <|@
      nr  938  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 28], y: v157|DWORD) size: DWORD <|@ <|@
      nr  940  <|@ instruction ADD (x: [v158|DWORD[_] * 8 + 32], y: v153|DWORD) size: DWORD <|@ <|@
      nr  942  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v164|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v160|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v159|DWORD = MOVE input: int[-105755|0xfffffffffffe62e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v163|DWORD = MOVE input: v164|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  952  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v161|QWORD[.] = MOVE input: v162|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v160|QWORD = MOVE input: long[664|0x298] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v159|DWORD = MOVE input: int[-110619|0xfffffffffffe4fe5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v163|DWORD = MOVE input: v164|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction MOV x: [r15|QWORD + 1156] y: -133915 size: DWORD <|@ <|@
      nr  982  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  984  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
locals: v1|QWORD[.] - - v154|DWORD v155|DWORD v156|DWORD v157|DWORD v153|DWORD - - 
>@ <|@ instruction DEOPT info [bci:423] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v161|QWORD[.] = MOVE input: v162|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v160|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v159|DWORD = MOVE input: int[-108315|0xfffffffffffe58e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v163|DWORD = MOVE input: v164|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  994  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  996  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v161|QWORD[.] = MOVE input: v162|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v160|QWORD = MOVE input: long[664|0x298] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v159|DWORD = MOVE input: int[-110619|0xfffffffffffe4fe5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v163|DWORD = MOVE input: v164|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1004  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v164|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v160|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v159|DWORD = MOVE input: int[-102716|0xfffffffffffe6ec4] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v163|DWORD = MOVE input: v164|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1014  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B24" "B9" "B22" "B8" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v159|DWORD) size: DWORD <|@ <|@
      nr 1034  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v160|QWORD) size: QWORD <|@ <|@
      nr 1036  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: v1|QWORD[.] - - v2|DWORD v3|DWORD v4|DWORD v5|DWORD v6|DWORD v7|DWORD - 
>@ <|@ instruction DEOPT info [bci:357] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // W:int[]
     4: ifnonnull     15
     7: aload_0       
     8: bipush        80
    10: newarray      int
    12: putfield      #5          // W:int[]
    15: aload_1       
    16: iload_2       
    17: aload_0       
    18: getfield      #5          // W:int[]
    21: invokestatic  #19         // sun.security.provider.ByteArrayAccess.b2iBig64:(byte[], int, int[])void
    24: bipush        16
    26: istore_3      
    27: iload_3       
    28: bipush        79
    30: if_icmpgt     91
    33: aload_0       
    34: getfield      #5          // W:int[]
    37: iload_3       
    38: iconst_3      
    39: isub          
    40: iaload        
    41: aload_0       
    42: getfield      #5          // W:int[]
    45: iload_3       
    46: bipush        8
    48: isub          
    49: iaload        
    50: ixor          
    51: aload_0       
    52: getfield      #5          // W:int[]
    55: iload_3       
    56: bipush        14
    58: isub          
    59: iaload        
    60: ixor          
    61: aload_0       
    62: getfield      #5          // W:int[]
    65: iload_3       
    66: bipush        16
    68: isub          
    69: iaload        
    70: ixor          
    71: istore        4
    73: aload_0       
    74: getfield      #5          // W:int[]
    77: iload_3       
    78: iload         4
    80: iconst_1      
    81: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
    84: iastore       
    85: iinc          
    88: goto          27
    91: aload_0       
    92: getfield      #1          // state:int[]
    95: iconst_0      
    96: iaload        
    97: istore_3      
    98: aload_0       
    99: getfield      #1          // state:int[]
   102: iconst_1      
   103: iaload        
   104: istore        4
   106: aload_0       
   107: getfield      #1          // state:int[]
   110: iconst_2      
   111: iaload        
   112: istore        5
   114: aload_0       
   115: getfield      #1          // state:int[]
   118: iconst_3      
   119: iaload        
   120: istore        6
   122: aload_0       
   123: getfield      #1          // state:int[]
   126: iconst_4      
   127: iaload        
   128: istore        7
   130: iconst_0      
   131: istore        8
   133: iload         8
   135: bipush        20
   137: if_icmpge     204
   140: iload_3       
   141: iconst_5      
   142: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   145: iload         4
   147: iload         5
   149: iand          
   150: iload         4
   152: iconst_m1     
   153: ixor          
   154: iload         6
   156: iand          
   157: ior           
   158: iadd          
   159: iload         7
   161: iadd          
   162: aload_0       
   163: getfield      #5          // W:int[]
   166: iload         8
   168: iaload        
   169: iadd          
   170: ldc           #100        // 1518500249
   172: iadd          
   173: istore        9
   175: iload         6
   177: istore        7
   179: iload         5
   181: istore        6
   183: iload         4
   185: bipush        30
   187: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   190: istore        5
   192: iload_3       
   193: istore        4
   195: iload         9
   197: istore_3      
   198: iinc          
   201: goto          133
   204: bipush        20
   206: istore        8
   208: iload         8
   210: bipush        40
   212: if_icmpge     274
   215: iload_3       
   216: iconst_5      
   217: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   220: iload         4
   222: iload         5
   224: ixor          
   225: iload         6
   227: ixor          
   228: iadd          
   229: iload         7
   231: iadd          
   232: aload_0       
   233: getfield      #5          // W:int[]
   236: iload         8
   238: iaload        
   239: iadd          
   240: ldc           #101        // 1859775393
   242: iadd          
   243: istore        9
   245: iload         6
   247: istore        7
   249: iload         5
   251: istore        6
   253: iload         4
   255: bipush        30
   257: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   260: istore        5
   262: iload_3       
   263: istore        4
   265: iload         9
   267: istore_3      
   268: iinc          
   271: goto          208
   274: bipush        40
   276: istore        8
   278: iload         8
   280: bipush        60
   282: if_icmpge     353
   285: iload_3       
   286: iconst_5      
   287: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   290: iload         4
   292: iload         5
   294: iand          
   295: iload         4
   297: iload         6
   299: iand          
   300: ior           
   301: iload         5
   303: iload         6
   305: iand          
   306: ior           
   307: iadd          
   308: iload         7
   310: iadd          
   311: aload_0       
   312: getfield      #5          // W:int[]
   315: iload         8
   317: iaload        
   318: iadd          
   319: ldc           #102        // -1894007588
   321: iadd          
   322: istore        9
   324: iload         6
   326: istore        7
   328: iload         5
   330: istore        6
   332: iload         4
   334: bipush        30
   336: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   339: istore        5
   341: iload_3       
   342: istore        4
   344: iload         9
   346: istore_3      
   347: iinc          
   350: goto          278
   353: bipush        60
   355: istore        8
   357: iload         8
   359: bipush        80
   361: if_icmpge     423
   364: iload_3       
   365: iconst_5      
   366: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   369: iload         4
   371: iload         5
   373: ixor          
   374: iload         6
   376: ixor          
   377: iadd          
   378: iload         7
   380: iadd          
   381: aload_0       
   382: getfield      #5          // W:int[]
   385: iload         8
   387: iaload        
   388: iadd          
   389: ldc           #103        // -899497514
   391: iadd          
   392: istore        9
   394: iload         6
   396: istore        7
   398: iload         5
   400: istore        6
   402: iload         4
   404: bipush        30
   406: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   409: istore        5
   411: iload_3       
   412: istore        4
   414: iload         9
   416: istore_3      
   417: iinc          
   420: goto          357
   423: aload_0       
   424: getfield      #1          // state:int[]
   427: iconst_0      
   428: dup2          
   429: iaload        
   430: iload_3       
   431: iadd          
   432: iastore       
   433: aload_0       
   434: getfield      #1          // state:int[]
   437: iconst_1      
   438: dup2          
   439: iaload        
   440: iload         4
   442: iadd          
   443: iastore       
   444: aload_0       
   445: getfield      #1          // state:int[]
   448: iconst_2      
   449: dup2          
   450: iaload        
   451: iload         5
   453: iadd          
   454: iastore       
   455: aload_0       
   456: getfield      #1          // state:int[]
   459: iconst_3      
   460: dup2          
   461: iaload        
   462: iload         6
   464: iadd          
   465: iastore       
   466: aload_0       
   467: getfield      #1          // state:int[]
   470: iconst_4      
   471: dup2          
   472: iaload        
   473: iload         7
   475: iadd          
   476: iastore       
   477: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@31f9b0c2 slotKind: QWORD <|@ <|@
      nr   42  <|@ instruction r10|QWORD[.] = MOV input: [rsi|QWORD + 72] size: QWORD <|@ <|@
      nr   44  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD + 48] size: DWORD <|@ <|@
      nr   46  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD + 40] size: DWORD <|@ <|@
      nr   48  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD + 32] size: DWORD <|@ <|@
      nr   50  <|@ instruction rcx|DWORD = MOV input: [rsi|QWORD + 24] size: DWORD <|@ <|@
      nr   52  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction rdi|DWORD = MOV input: [rsi|QWORD + 8] size: DWORD <|@ <|@
      nr   58  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: r10|QWORD[.] - - r11|DWORD r8|DWORD r9|DWORD rcx|DWORD rbx|DWORD rdi|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B29 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lsun/security/provider/SHA;, resolved>;compressed} state [bci:357] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 0.9523809523809523 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B25 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B24" 
    xhandlers
    flags 
    probability 4606753504549791646
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction rdx|DWORD[_] = MOV input: [r10|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: r10|QWORD[.] - - r11|DWORD r8|DWORD r9|DWORD rcx|DWORD rbx|DWORD rdi|DWORD - 
>@ <|@ instruction rsi|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:357] <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B23" 
    xhandlers
    flags 
    probability 4606753504549791646
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3087af84 encoding: base: 0 shift: 3 <|@ <|@
      nr  132  <|@ instruction rax|DWORD = ROL x: r11|DWORD y: 5 size: DWORD <|@ <|@
      nr  134  <|@ instruction rbp|DWORD = XOR (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction rbp|DWORD = XOR (x: rbp|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  142  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [rdx|QWORD[.] + rdi|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  144  <|@ instruction rax|DWORD = LEA address: [rax|DWORD - 899497514] size: DWORD <|@ <|@
      nr  146  <|@ instruction rbp|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction r13|DWORD = ROL x: r8|DWORD y: 30 size: DWORD <|@ <|@
      nr  150  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.95 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B23 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B10" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction r14|DWORD = LEA address: [rdi|DWORD + 2] size: DWORD <|@ <|@
      nr  170  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B10 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B11" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction r10|DWORD = MOVE input: int[78|0x4e] <|@ <|@
      nr  208  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  210  <|@ instruction r10|QWORD = MOVSXD value: r10|DWORD size: QWORD <|@ <|@
      nr  212  <|@ instruction r8|QWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  216  <|@ instruction r10|QWORD = DEC value: r10|QWORD size: QWORD <|@ <|@
      nr  218  <|@ instruction r8|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction CMPBRANCH (x: r8|QWORD, y: r10|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B7" 
    successors "B12" "B22" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction r10|DWORD = ROL x: rax|DWORD y: 5 size: DWORD <|@ <|@
      nr  296  <|@ instruction r8|DWORD = XOR (x: r13|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction r8|DWORD = XOR (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  300  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  302  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  304  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, ~y: [rdx|QWORD[.] + rbp|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  306  <|@ instruction r10|DWORD = LEA address: [r10|DWORD - 899497514] size: DWORD <|@ <|@
      nr  308  <|@ instruction r8|DWORD = LEA address: [rdi|DWORD + 3] size: DWORD <|@ <|@
      nr  310  <|@ instruction CMP x: r8|DWORD y: 80 size: DWORD <|@ <|@
      nr  312  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[80|0x50], ~trueValue: r8|DWORD) condition: < <|@ <|@
      nr  314  <|@ instruction r11|DWORD = ROL x: r11|DWORD y: 30 size: DWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606406907175871839
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r14|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576421901864634511
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction r8|DWORD = ROL x: r10|DWORD y: 5 size: DWORD <|@ <|@
      nr  362  <|@ instruction rbx|DWORD = XOR (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  364  <|@ instruction rbx|DWORD = XOR (x: rbx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  366  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  368  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  370  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, ~y: [rdx|QWORD[.] + r14|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  372  <|@ instruction r8|DWORD = LEA address: [r8|DWORD - 899497514] size: DWORD <|@ <|@
      nr  374  <|@ instruction r14|DWORD = INC value: r14|DWORD size: DWORD <|@ <|@
      nr  376  <|@ instruction rax|DWORD = ROL x: rax|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: r13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  378  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606324590299565885
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:3|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // LSRAOptimizeSpillPos: optimize spill pos <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: r13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: r14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  388  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" 
    successors "B17" "B18" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4612021107685376776
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.5789473684210522 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 72 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4608281511566220913
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction rdi|DWORD = MOV input: [rdx|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  630  <|@ instruction rsi|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  632  <|@ instruction rsi|DWORD = MOV input: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  634  <|@ instruction rax|DWORD = LEA address: [r10|DWORD + 2] size: DWORD <|@ <|@
      nr  636  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  638  <|@ instruction rbp|DWORD = LEA address: [r10|DWORD + 3] size: DWORD <|@ <|@
      nr  640  <|@ instruction rbp|DWORD = MOV input: [rdx|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  642  <|@ instruction r13|DWORD = LEA address: [r10|DWORD + 4] size: DWORD <|@ <|@
      nr  644  <|@ instruction r13|DWORD = MOV input: [rdx|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  646  <|@ instruction r14|DWORD = LEA address: [r10|DWORD + 5] size: DWORD <|@ <|@
      nr  648  <|@ instruction r14|DWORD = MOV input: [rdx|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE input: r14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  650  <|@ instruction r14|DWORD = LEA address: [r10|DWORD + 6] size: DWORD <|@ <|@
      nr  652  <|@ instruction r14|DWORD = MOV input: [rdx|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  654  <|@ instruction rdx|DWORD = LEA address: [r10|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  656  <|@ instruction r10|DWORD = ROL x: rbx|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  658  <|@ instruction rdx|DWORD = XOR (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  660  <|@ instruction rdx|DWORD = XOR (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  662  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  664  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  666  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  668  <|@ instruction r10|DWORD = LEA address: [r10|DWORD - 899497514] size: DWORD <|@ <|@
      nr  670  <|@ instruction r11|DWORD = ROL x: r10|DWORD y: 5 size: DWORD <|@ <|@
      nr  672  <|@ instruction rcx|DWORD = ROL x: rcx|DWORD y: 30 size: DWORD <|@ <|@
      nr  674  <|@ instruction rdi|DWORD = XOR (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  676  <|@ instruction rdi|DWORD = XOR (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  678  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  680  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  682  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  684  <|@ instruction r11|DWORD = LEA address: [r11|DWORD - 899497514] size: DWORD <|@ <|@
      nr  686  <|@ instruction r8|DWORD = ROL x: r11|DWORD y: 5 size: DWORD <|@ <|@
      nr  688  <|@ instruction rbx|DWORD = ROL x: rbx|DWORD y: 30 size: DWORD <|@ <|@
      nr  690  <|@ instruction rdi|DWORD = XOR (x: r10|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  692  <|@ instruction rdi|DWORD = XOR (x: rcx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  694  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  696  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  698  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  700  <|@ instruction r8|DWORD = LEA address: [r8|DWORD - 899497514] size: DWORD <|@ <|@
      nr  702  <|@ instruction r9|DWORD = ROL x: r8|DWORD y: 30 size: DWORD <|@ <|@
      nr  704  <|@ instruction rdi|DWORD = ROL x: r11|DWORD y: 30 size: DWORD <|@ <|@
      nr  706  <|@ instruction r10|DWORD = ROL x: r10|DWORD y: 30 size: DWORD <|@ <|@
      nr  708  <|@ instruction rdx|DWORD = ROL x: r8|DWORD y: 5 size: DWORD <|@ <|@
      nr  710  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  712  <|@ instruction r11|DWORD = XOR (x: rbx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  714  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  716  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  718  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  720  <|@ instruction r11|DWORD = LEA address: [rdx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  722  <|@ instruction rcx|DWORD = ROL x: r11|DWORD y: 5 size: DWORD <|@ <|@
      nr  724  <|@ instruction r8|DWORD = XOR (x: r8|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  726  <|@ instruction r8|DWORD = XOR (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  728  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  730  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  734  <|@ instruction r8|DWORD = LEA address: [rcx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  736  <|@ instruction rcx|DWORD = ROL x: r8|DWORD y: 5 size: DWORD <|@ <|@
      nr  738  <|@ instruction rbx|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  740  <|@ instruction rbx|DWORD = XOR (x: rdi|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  742  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  744  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  746  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: vstack:2|DWORD) size: DWORD <|@ <|@
      nr  748  <|@ instruction r10|DWORD = LEA address: [rcx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  750  <|@ instruction rcx|DWORD = ROL x: r10|DWORD y: 5 size: DWORD <|@ <|@
      nr  752  <|@ instruction r11|DWORD = ROL x: r11|DWORD y: 30 size: DWORD <|@ <|@
      nr  754  <|@ instruction rbx|DWORD = XOR (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  756  <|@ instruction rbx|DWORD = XOR (x: r9|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  758  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  760  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  762  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  764  <|@ instruction rcx|DWORD = LEA address: [rcx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  766  <|@ instruction rbx|DWORD = ROL x: rcx|DWORD y: 5 size: DWORD <|@ <|@
      nr  768  <|@ instruction r8|DWORD = ROL x: r8|DWORD y: 30 size: DWORD <|@ <|@
      nr  770  <|@ instruction rdi|DWORD = XOR (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  772  <|@ instruction rdi|DWORD = XOR (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  774  <|@ instruction rbx|DWORD = ADD (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  776  <|@ instruction rbx|DWORD = ADD (x: rbx|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  778  <|@ instruction rbx|DWORD = ADD (x: rbx|DWORD, ~y: [rdi|QWORD[.] + rdx|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  780  <|@ instruction rbx|DWORD = LEA address: [rbx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  782  <|@ instruction r10|DWORD = ROL x: r10|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  784  <|@ instruction r9|DWORD = LEA address: [rdx|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  786  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606324590299565886
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606406907175871841
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576421901864634512
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction rdx|DWORD = ROL x: rbx|DWORD y: 5 size: DWORD <|@ <|@
      nr  842  <|@ instruction rsi|DWORD = XOR (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  844  <|@ instruction rsi|DWORD = XOR (x: rsi|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  846  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  848  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  850  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rdi|QWORD[.] + r10|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  852  <|@ instruction r11|DWORD = LEA address: [rdx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  854  <|@ instruction rcx|DWORD = ROL x: rcx|DWORD y: 30 size: DWORD <|@ <|@
      nr  856  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  858  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606324590299565887
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  868  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B26" 
    xhandlers
    flags 
    probability 4587023449039406624
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:9|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  878  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B26" 
    xhandlers
    flags 
    probability 4587023449039406622
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: r13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  888  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B25" "B23" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL alignment: 0 numbPhis: 5 label: ? <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  904  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
locals: r10|QWORD[.] - - rbx|DWORD rcx|DWORD r9|DWORD r8|DWORD r11|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH x: [rdi|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 5 size: DWORD inlinedY: null state [bci:423] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  934  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 20], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  936  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 24], y: r9|DWORD) size: DWORD <|@ <|@
      nr  938  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 28], y: r8|DWORD) size: DWORD <|@ <|@
      nr  940  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 32], y: r11|DWORD) size: DWORD <|@ <|@
      nr  942  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-105755|0xfffffffffffe62e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  952  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[664|0x298] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-110619|0xfffffffffffe4fe5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction MOV x: [r15|QWORD + 1156] y: -133915 size: DWORD <|@ <|@
      nr  982  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  984  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
locals: r10|QWORD[.] - - rbx|DWORD rcx|DWORD r9|DWORD r8|DWORD r11|DWORD - - 
>@ <|@ instruction DEOPT info [bci:423] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-108315|0xfffffffffffe58e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  994  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  996  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[664|0x298] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-110619|0xfffffffffffe4fe5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1004  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-102716|0xfffffffffffe6ec4] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1014  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B24" "B9" "B22" "B8" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1034  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1036  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: r10|QWORD[.] - - r11|DWORD rsi|DWORD r9|DWORD rcx|DWORD rbx|DWORD rdi|DWORD - 
>@ <|@ instruction DEOPT info [bci:357] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // W:int[]
     4: ifnonnull     15
     7: aload_0       
     8: bipush        80
    10: newarray      int
    12: putfield      #5          // W:int[]
    15: aload_1       
    16: iload_2       
    17: aload_0       
    18: getfield      #5          // W:int[]
    21: invokestatic  #19         // sun.security.provider.ByteArrayAccess.b2iBig64:(byte[], int, int[])void
    24: bipush        16
    26: istore_3      
    27: iload_3       
    28: bipush        79
    30: if_icmpgt     91
    33: aload_0       
    34: getfield      #5          // W:int[]
    37: iload_3       
    38: iconst_3      
    39: isub          
    40: iaload        
    41: aload_0       
    42: getfield      #5          // W:int[]
    45: iload_3       
    46: bipush        8
    48: isub          
    49: iaload        
    50: ixor          
    51: aload_0       
    52: getfield      #5          // W:int[]
    55: iload_3       
    56: bipush        14
    58: isub          
    59: iaload        
    60: ixor          
    61: aload_0       
    62: getfield      #5          // W:int[]
    65: iload_3       
    66: bipush        16
    68: isub          
    69: iaload        
    70: ixor          
    71: istore        4
    73: aload_0       
    74: getfield      #5          // W:int[]
    77: iload_3       
    78: iload         4
    80: iconst_1      
    81: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
    84: iastore       
    85: iinc          
    88: goto          27
    91: aload_0       
    92: getfield      #1          // state:int[]
    95: iconst_0      
    96: iaload        
    97: istore_3      
    98: aload_0       
    99: getfield      #1          // state:int[]
   102: iconst_1      
   103: iaload        
   104: istore        4
   106: aload_0       
   107: getfield      #1          // state:int[]
   110: iconst_2      
   111: iaload        
   112: istore        5
   114: aload_0       
   115: getfield      #1          // state:int[]
   118: iconst_3      
   119: iaload        
   120: istore        6
   122: aload_0       
   123: getfield      #1          // state:int[]
   126: iconst_4      
   127: iaload        
   128: istore        7
   130: iconst_0      
   131: istore        8
   133: iload         8
   135: bipush        20
   137: if_icmpge     204
   140: iload_3       
   141: iconst_5      
   142: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   145: iload         4
   147: iload         5
   149: iand          
   150: iload         4
   152: iconst_m1     
   153: ixor          
   154: iload         6
   156: iand          
   157: ior           
   158: iadd          
   159: iload         7
   161: iadd          
   162: aload_0       
   163: getfield      #5          // W:int[]
   166: iload         8
   168: iaload        
   169: iadd          
   170: ldc           #100        // 1518500249
   172: iadd          
   173: istore        9
   175: iload         6
   177: istore        7
   179: iload         5
   181: istore        6
   183: iload         4
   185: bipush        30
   187: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   190: istore        5
   192: iload_3       
   193: istore        4
   195: iload         9
   197: istore_3      
   198: iinc          
   201: goto          133
   204: bipush        20
   206: istore        8
   208: iload         8
   210: bipush        40
   212: if_icmpge     274
   215: iload_3       
   216: iconst_5      
   217: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   220: iload         4
   222: iload         5
   224: ixor          
   225: iload         6
   227: ixor          
   228: iadd          
   229: iload         7
   231: iadd          
   232: aload_0       
   233: getfield      #5          // W:int[]
   236: iload         8
   238: iaload        
   239: iadd          
   240: ldc           #101        // 1859775393
   242: iadd          
   243: istore        9
   245: iload         6
   247: istore        7
   249: iload         5
   251: istore        6
   253: iload         4
   255: bipush        30
   257: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   260: istore        5
   262: iload_3       
   263: istore        4
   265: iload         9
   267: istore_3      
   268: iinc          
   271: goto          208
   274: bipush        40
   276: istore        8
   278: iload         8
   280: bipush        60
   282: if_icmpge     353
   285: iload_3       
   286: iconst_5      
   287: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   290: iload         4
   292: iload         5
   294: iand          
   295: iload         4
   297: iload         6
   299: iand          
   300: ior           
   301: iload         5
   303: iload         6
   305: iand          
   306: ior           
   307: iadd          
   308: iload         7
   310: iadd          
   311: aload_0       
   312: getfield      #5          // W:int[]
   315: iload         8
   317: iaload        
   318: iadd          
   319: ldc           #102        // -1894007588
   321: iadd          
   322: istore        9
   324: iload         6
   326: istore        7
   328: iload         5
   330: istore        6
   332: iload         4
   334: bipush        30
   336: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   339: istore        5
   341: iload_3       
   342: istore        4
   344: iload         9
   346: istore_3      
   347: iinc          
   350: goto          278
   353: bipush        60
   355: istore        8
   357: iload         8
   359: bipush        80
   361: if_icmpge     423
   364: iload_3       
   365: iconst_5      
   366: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   369: iload         4
   371: iload         5
   373: ixor          
   374: iload         6
   376: ixor          
   377: iadd          
   378: iload         7
   380: iadd          
   381: aload_0       
   382: getfield      #5          // W:int[]
   385: iload         8
   387: iaload        
   388: iadd          
   389: ldc           #103        // -899497514
   391: iadd          
   392: istore        9
   394: iload         6
   396: istore        7
   398: iload         5
   400: istore        6
   402: iload         4
   404: bipush        30
   406: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   409: istore        5
   411: iload_3       
   412: istore        4
   414: iload         9
   416: istore_3      
   417: iinc          
   420: goto          357
   423: aload_0       
   424: getfield      #1          // state:int[]
   427: iconst_0      
   428: dup2          
   429: iaload        
   430: iload_3       
   431: iadd          
   432: iastore       
   433: aload_0       
   434: getfield      #1          // state:int[]
   437: iconst_1      
   438: dup2          
   439: iaload        
   440: iload         4
   442: iadd          
   443: iastore       
   444: aload_0       
   445: getfield      #1          // state:int[]
   448: iconst_2      
   449: dup2          
   450: iaload        
   451: iload         5
   453: iadd          
   454: iastore       
   455: aload_0       
   456: getfield      #1          // state:int[]
   459: iconst_3      
   460: dup2          
   461: iaload        
   462: iload         6
   464: iadd          
   465: iastore       
   466: aload_0       
   467: getfield      #1          // state:int[]
   470: iconst_4      
   471: dup2          
   472: iaload        
   473: iload         7
   475: iadd          
   476: iastore       
   477: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@31f9b0c2 slotKind: QWORD <|@ <|@
      nr   42  <|@ instruction r10|QWORD[.] = MOV input: [rsi|QWORD + 72] size: QWORD <|@ <|@
      nr   44  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD + 48] size: DWORD <|@ <|@
      nr   46  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD + 40] size: DWORD <|@ <|@
      nr   48  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD + 32] size: DWORD <|@ <|@
      nr   50  <|@ instruction rcx|DWORD = MOV input: [rsi|QWORD + 24] size: DWORD <|@ <|@
      nr   52  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction rdi|DWORD = MOV input: [rsi|QWORD + 8] size: DWORD <|@ <|@
      nr   58  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: r10|QWORD[.] - - r11|DWORD r8|DWORD r9|DWORD rcx|DWORD rbx|DWORD rdi|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B29 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lsun/security/provider/SHA;, resolved>;compressed} state [bci:357] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 0.9523809523809523 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B25 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B24" 
    xhandlers
    flags 
    probability 4606753504549791646
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction rdx|DWORD[_] = MOV input: [r10|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: r10|QWORD[.] - - r11|DWORD r8|DWORD r9|DWORD rcx|DWORD rbx|DWORD rdi|DWORD - 
>@ <|@ instruction rsi|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:357] <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B23" 
    xhandlers
    flags 
    probability 4606753504549791646
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3087af84 encoding: base: 0 shift: 3 <|@ <|@
      nr  132  <|@ instruction rax|DWORD = ROL x: r11|DWORD y: 5 size: DWORD <|@ <|@
      nr  134  <|@ instruction rbp|DWORD = XOR (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction rbp|DWORD = XOR (x: rbp|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  142  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [rdx|QWORD[.] + rdi|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  144  <|@ instruction rax|DWORD = LEA address: [rax|DWORD - 899497514] size: DWORD <|@ <|@
      nr  146  <|@ instruction rbp|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction r13|DWORD = ROL x: r8|DWORD y: 30 size: DWORD <|@ <|@
      nr  150  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.95 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B23 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B10" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction r14|DWORD = LEA address: [rdi|DWORD + 2] size: DWORD <|@ <|@
      nr  170  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B10 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B11" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction r10|DWORD = MOVE input: int[78|0x4e] <|@ <|@
      nr  208  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  210  <|@ instruction r10|QWORD = MOVSXD value: r10|DWORD size: QWORD <|@ <|@
      nr  212  <|@ instruction r8|QWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  216  <|@ instruction r10|QWORD = DEC value: r10|QWORD size: QWORD <|@ <|@
      nr  218  <|@ instruction r8|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction CMPBRANCH (x: r8|QWORD, y: r10|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B7" 
    successors "B12" "B22" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction r10|DWORD = ROL x: rax|DWORD y: 5 size: DWORD <|@ <|@
      nr  296  <|@ instruction r8|DWORD = XOR (x: r13|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction r8|DWORD = XOR (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  300  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  302  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  304  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, ~y: [rdx|QWORD[.] + rbp|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  306  <|@ instruction r10|DWORD = LEA address: [r10|DWORD - 899497514] size: DWORD <|@ <|@
      nr  308  <|@ instruction r8|DWORD = LEA address: [rdi|DWORD + 3] size: DWORD <|@ <|@
      nr  310  <|@ instruction CMP x: r8|DWORD y: 80 size: DWORD <|@ <|@
      nr  312  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[80|0x50], ~trueValue: r8|DWORD) condition: < <|@ <|@
      nr  314  <|@ instruction r11|DWORD = ROL x: r11|DWORD y: 30 size: DWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606406907175871839
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r14|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576421901864634511
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction r8|DWORD = ROL x: r10|DWORD y: 5 size: DWORD <|@ <|@
      nr  362  <|@ instruction rbx|DWORD = XOR (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  364  <|@ instruction rbx|DWORD = XOR (x: rbx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  366  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  368  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  370  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, ~y: [rdx|QWORD[.] + r14|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  372  <|@ instruction r8|DWORD = LEA address: [r8|DWORD - 899497514] size: DWORD <|@ <|@
      nr  374  <|@ instruction r14|DWORD = INC value: r14|DWORD size: DWORD <|@ <|@
      nr  376  <|@ instruction rax|DWORD = ROL x: rax|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: r13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  378  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606324590299565885
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:3|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // LSRAOptimizeSpillPos: optimize spill pos <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: r13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: r14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  388  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" 
    successors "B17" "B18" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4612021107685376776
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.5789473684210522 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 72 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4608281511566220913
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction rdi|DWORD = MOV input: [rdx|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  630  <|@ instruction rsi|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  632  <|@ instruction rsi|DWORD = MOV input: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  634  <|@ instruction rax|DWORD = LEA address: [r10|DWORD + 2] size: DWORD <|@ <|@
      nr  636  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  638  <|@ instruction rbp|DWORD = LEA address: [r10|DWORD + 3] size: DWORD <|@ <|@
      nr  640  <|@ instruction rbp|DWORD = MOV input: [rdx|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  642  <|@ instruction r13|DWORD = LEA address: [r10|DWORD + 4] size: DWORD <|@ <|@
      nr  644  <|@ instruction r13|DWORD = MOV input: [rdx|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  646  <|@ instruction r14|DWORD = LEA address: [r10|DWORD + 5] size: DWORD <|@ <|@
      nr  648  <|@ instruction r14|DWORD = MOV input: [rdx|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE input: r14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  650  <|@ instruction r14|DWORD = LEA address: [r10|DWORD + 6] size: DWORD <|@ <|@
      nr  652  <|@ instruction r14|DWORD = MOV input: [rdx|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  654  <|@ instruction rdx|DWORD = LEA address: [r10|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  656  <|@ instruction r10|DWORD = ROL x: rbx|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  658  <|@ instruction rdx|DWORD = XOR (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  660  <|@ instruction rdx|DWORD = XOR (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  662  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  664  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  666  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  668  <|@ instruction r10|DWORD = LEA address: [r10|DWORD - 899497514] size: DWORD <|@ <|@
      nr  670  <|@ instruction r11|DWORD = ROL x: r10|DWORD y: 5 size: DWORD <|@ <|@
      nr  672  <|@ instruction rcx|DWORD = ROL x: rcx|DWORD y: 30 size: DWORD <|@ <|@
      nr  674  <|@ instruction rdi|DWORD = XOR (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  676  <|@ instruction rdi|DWORD = XOR (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  678  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  680  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  682  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  684  <|@ instruction r11|DWORD = LEA address: [r11|DWORD - 899497514] size: DWORD <|@ <|@
      nr  686  <|@ instruction r8|DWORD = ROL x: r11|DWORD y: 5 size: DWORD <|@ <|@
      nr  688  <|@ instruction rbx|DWORD = ROL x: rbx|DWORD y: 30 size: DWORD <|@ <|@
      nr  690  <|@ instruction rdi|DWORD = XOR (x: r10|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  692  <|@ instruction rdi|DWORD = XOR (x: rcx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  694  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  696  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  698  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  700  <|@ instruction r8|DWORD = LEA address: [r8|DWORD - 899497514] size: DWORD <|@ <|@
      nr  702  <|@ instruction r9|DWORD = ROL x: r8|DWORD y: 30 size: DWORD <|@ <|@
      nr  704  <|@ instruction rdi|DWORD = ROL x: r11|DWORD y: 30 size: DWORD <|@ <|@
      nr  706  <|@ instruction r10|DWORD = ROL x: r10|DWORD y: 30 size: DWORD <|@ <|@
      nr  708  <|@ instruction rdx|DWORD = ROL x: r8|DWORD y: 5 size: DWORD <|@ <|@
      nr  710  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  712  <|@ instruction r11|DWORD = XOR (x: rbx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  714  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  716  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  718  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  720  <|@ instruction r11|DWORD = LEA address: [rdx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  722  <|@ instruction rcx|DWORD = ROL x: r11|DWORD y: 5 size: DWORD <|@ <|@
      nr  724  <|@ instruction r8|DWORD = XOR (x: r8|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  726  <|@ instruction r8|DWORD = XOR (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  728  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  730  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  734  <|@ instruction r8|DWORD = LEA address: [rcx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  736  <|@ instruction rcx|DWORD = ROL x: r8|DWORD y: 5 size: DWORD <|@ <|@
      nr  738  <|@ instruction rbx|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  740  <|@ instruction rbx|DWORD = XOR (x: rdi|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  742  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  744  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  746  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: vstack:2|DWORD) size: DWORD <|@ <|@
      nr  748  <|@ instruction r10|DWORD = LEA address: [rcx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  750  <|@ instruction rcx|DWORD = ROL x: r10|DWORD y: 5 size: DWORD <|@ <|@
      nr  752  <|@ instruction r11|DWORD = ROL x: r11|DWORD y: 30 size: DWORD <|@ <|@
      nr  754  <|@ instruction rbx|DWORD = XOR (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  756  <|@ instruction rbx|DWORD = XOR (x: r9|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  758  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  760  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  762  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  764  <|@ instruction rcx|DWORD = LEA address: [rcx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  766  <|@ instruction rbx|DWORD = ROL x: rcx|DWORD y: 5 size: DWORD <|@ <|@
      nr  768  <|@ instruction r8|DWORD = ROL x: r8|DWORD y: 30 size: DWORD <|@ <|@
      nr  770  <|@ instruction rdi|DWORD = XOR (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  772  <|@ instruction rdi|DWORD = XOR (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  774  <|@ instruction rbx|DWORD = ADD (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  776  <|@ instruction rbx|DWORD = ADD (x: rbx|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  778  <|@ instruction rbx|DWORD = ADD (x: rbx|DWORD, ~y: [rdi|QWORD[.] + rdx|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  780  <|@ instruction rbx|DWORD = LEA address: [rbx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  782  <|@ instruction r10|DWORD = ROL x: r10|DWORD y: 30 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  784  <|@ instruction r9|DWORD = LEA address: [rdx|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  786  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606324590299565886
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606406907175871841
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576421901864634512
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction rdx|DWORD = ROL x: rbx|DWORD y: 5 size: DWORD <|@ <|@
      nr  842  <|@ instruction rsi|DWORD = XOR (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  844  <|@ instruction rsi|DWORD = XOR (x: rsi|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  846  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  848  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  850  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rdi|QWORD[.] + r10|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  852  <|@ instruction r11|DWORD = LEA address: [rdx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  854  <|@ instruction rcx|DWORD = ROL x: rcx|DWORD y: 30 size: DWORD <|@ <|@
      nr  856  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  858  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606324590299565887
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  868  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B26" 
    xhandlers
    flags 
    probability 4587023449039406624
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:9|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  878  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B26" 
    xhandlers
    flags 
    probability 4587023449039406622
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: r13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  888  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B25" "B23" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL alignment: 0 numbPhis: 5 label: ? <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  904  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
locals: r10|QWORD[.] - - rbx|DWORD rcx|DWORD r9|DWORD r8|DWORD r11|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH x: [rdi|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 5 size: DWORD inlinedY: null state [bci:423] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  934  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 20], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  936  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 24], y: r9|DWORD) size: DWORD <|@ <|@
      nr  938  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 28], y: r8|DWORD) size: DWORD <|@ <|@
      nr  940  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 32], y: r11|DWORD) size: DWORD <|@ <|@
      nr  942  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-105755|0xfffffffffffe62e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  952  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[664|0x298] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-110619|0xfffffffffffe4fe5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction MOV x: [r15|QWORD + 1156] y: -133915 size: DWORD <|@ <|@
      nr  982  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  984  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
locals: r10|QWORD[.] - - rbx|DWORD rcx|DWORD r9|DWORD r8|DWORD r11|DWORD - - 
>@ <|@ instruction DEOPT info [bci:423] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-108315|0xfffffffffffe58e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  994  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  996  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[664|0x298] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-110619|0xfffffffffffe4fe5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1004  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-102716|0xfffffffffffe6ec4] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1014  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B24" "B9" "B22" "B8" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1034  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1036  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: r10|QWORD[.] - - r11|DWORD rsi|DWORD r9|DWORD rcx|DWORD rbx|DWORD rdi|DWORD - 
>@ <|@ instruction DEOPT info [bci:357] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // W:int[]
     4: ifnonnull     15
     7: aload_0       
     8: bipush        80
    10: newarray      int
    12: putfield      #5          // W:int[]
    15: aload_1       
    16: iload_2       
    17: aload_0       
    18: getfield      #5          // W:int[]
    21: invokestatic  #19         // sun.security.provider.ByteArrayAccess.b2iBig64:(byte[], int, int[])void
    24: bipush        16
    26: istore_3      
    27: iload_3       
    28: bipush        79
    30: if_icmpgt     91
    33: aload_0       
    34: getfield      #5          // W:int[]
    37: iload_3       
    38: iconst_3      
    39: isub          
    40: iaload        
    41: aload_0       
    42: getfield      #5          // W:int[]
    45: iload_3       
    46: bipush        8
    48: isub          
    49: iaload        
    50: ixor          
    51: aload_0       
    52: getfield      #5          // W:int[]
    55: iload_3       
    56: bipush        14
    58: isub          
    59: iaload        
    60: ixor          
    61: aload_0       
    62: getfield      #5          // W:int[]
    65: iload_3       
    66: bipush        16
    68: isub          
    69: iaload        
    70: ixor          
    71: istore        4
    73: aload_0       
    74: getfield      #5          // W:int[]
    77: iload_3       
    78: iload         4
    80: iconst_1      
    81: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
    84: iastore       
    85: iinc          
    88: goto          27
    91: aload_0       
    92: getfield      #1          // state:int[]
    95: iconst_0      
    96: iaload        
    97: istore_3      
    98: aload_0       
    99: getfield      #1          // state:int[]
   102: iconst_1      
   103: iaload        
   104: istore        4
   106: aload_0       
   107: getfield      #1          // state:int[]
   110: iconst_2      
   111: iaload        
   112: istore        5
   114: aload_0       
   115: getfield      #1          // state:int[]
   118: iconst_3      
   119: iaload        
   120: istore        6
   122: aload_0       
   123: getfield      #1          // state:int[]
   126: iconst_4      
   127: iaload        
   128: istore        7
   130: iconst_0      
   131: istore        8
   133: iload         8
   135: bipush        20
   137: if_icmpge     204
   140: iload_3       
   141: iconst_5      
   142: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   145: iload         4
   147: iload         5
   149: iand          
   150: iload         4
   152: iconst_m1     
   153: ixor          
   154: iload         6
   156: iand          
   157: ior           
   158: iadd          
   159: iload         7
   161: iadd          
   162: aload_0       
   163: getfield      #5          // W:int[]
   166: iload         8
   168: iaload        
   169: iadd          
   170: ldc           #100        // 1518500249
   172: iadd          
   173: istore        9
   175: iload         6
   177: istore        7
   179: iload         5
   181: istore        6
   183: iload         4
   185: bipush        30
   187: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   190: istore        5
   192: iload_3       
   193: istore        4
   195: iload         9
   197: istore_3      
   198: iinc          
   201: goto          133
   204: bipush        20
   206: istore        8
   208: iload         8
   210: bipush        40
   212: if_icmpge     274
   215: iload_3       
   216: iconst_5      
   217: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   220: iload         4
   222: iload         5
   224: ixor          
   225: iload         6
   227: ixor          
   228: iadd          
   229: iload         7
   231: iadd          
   232: aload_0       
   233: getfield      #5          // W:int[]
   236: iload         8
   238: iaload        
   239: iadd          
   240: ldc           #101        // 1859775393
   242: iadd          
   243: istore        9
   245: iload         6
   247: istore        7
   249: iload         5
   251: istore        6
   253: iload         4
   255: bipush        30
   257: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   260: istore        5
   262: iload_3       
   263: istore        4
   265: iload         9
   267: istore_3      
   268: iinc          
   271: goto          208
   274: bipush        40
   276: istore        8
   278: iload         8
   280: bipush        60
   282: if_icmpge     353
   285: iload_3       
   286: iconst_5      
   287: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   290: iload         4
   292: iload         5
   294: iand          
   295: iload         4
   297: iload         6
   299: iand          
   300: ior           
   301: iload         5
   303: iload         6
   305: iand          
   306: ior           
   307: iadd          
   308: iload         7
   310: iadd          
   311: aload_0       
   312: getfield      #5          // W:int[]
   315: iload         8
   317: iaload        
   318: iadd          
   319: ldc           #102        // -1894007588
   321: iadd          
   322: istore        9
   324: iload         6
   326: istore        7
   328: iload         5
   330: istore        6
   332: iload         4
   334: bipush        30
   336: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   339: istore        5
   341: iload_3       
   342: istore        4
   344: iload         9
   346: istore_3      
   347: iinc          
   350: goto          278
   353: bipush        60
   355: istore        8
   357: iload         8
   359: bipush        80
   361: if_icmpge     423
   364: iload_3       
   365: iconst_5      
   366: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   369: iload         4
   371: iload         5
   373: ixor          
   374: iload         6
   376: ixor          
   377: iadd          
   378: iload         7
   380: iadd          
   381: aload_0       
   382: getfield      #5          // W:int[]
   385: iload         8
   387: iaload        
   388: iadd          
   389: ldc           #103        // -899497514
   391: iadd          
   392: istore        9
   394: iload         6
   396: istore        7
   398: iload         5
   400: istore        6
   402: iload         4
   404: bipush        30
   406: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   409: istore        5
   411: iload_3       
   412: istore        4
   414: iload         9
   416: istore_3      
   417: iinc          
   420: goto          357
   423: aload_0       
   424: getfield      #1          // state:int[]
   427: iconst_0      
   428: dup2          
   429: iaload        
   430: iload_3       
   431: iadd          
   432: iastore       
   433: aload_0       
   434: getfield      #1          // state:int[]
   437: iconst_1      
   438: dup2          
   439: iaload        
   440: iload         4
   442: iadd          
   443: iastore       
   444: aload_0       
   445: getfield      #1          // state:int[]
   448: iconst_2      
   449: dup2          
   450: iaload        
   451: iload         5
   453: iadd          
   454: iastore       
   455: aload_0       
   456: getfield      #1          // state:int[]
   459: iconst_3      
   460: dup2          
   461: iaload        
   462: iload         6
   464: iadd          
   465: iastore       
   466: aload_0       
   467: getfield      #1          // state:int[]
   470: iconst_4      
   471: dup2          
   472: iaload        
   473: iload         7
   475: iadd          
   476: iastore       
   477: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@31f9b0c2 slotKind: QWORD <|@ <|@
      nr   40  <|@ instruction r10|QWORD[.] = MOV input: [rsi|QWORD + 72] size: QWORD <|@ <|@
      nr   42  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD + 48] size: DWORD <|@ <|@
      nr   44  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD + 40] size: DWORD <|@ <|@
      nr   46  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD + 32] size: DWORD <|@ <|@
      nr   48  <|@ instruction rcx|DWORD = MOV input: [rsi|QWORD + 24] size: DWORD <|@ <|@
      nr   50  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction rdi|DWORD = MOV input: [rsi|QWORD + 8] size: DWORD <|@ <|@
      nr   54  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: r10|QWORD[.] - - r11|DWORD r8|DWORD r9|DWORD rcx|DWORD rbx|DWORD rdi|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B29 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lsun/security/provider/SHA;, resolved>;compressed} state [bci:357] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 0.9523809523809523 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B25 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B24" 
    xhandlers
    flags 
    probability 4606753504549791646
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction rdx|DWORD[_] = MOV input: [r10|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: r10|QWORD[.] - - r11|DWORD r8|DWORD r9|DWORD rcx|DWORD rbx|DWORD rdi|DWORD - 
>@ <|@ instruction rsi|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:357] <|@ <|@
      nr   88  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B23" 
    xhandlers
    flags 
    probability 4606753504549791646
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3087af84 encoding: base: 0 shift: 3 <|@ <|@
      nr  128  <|@ instruction rax|DWORD = ROL x: r11|DWORD y: 5 size: DWORD <|@ <|@
      nr  130  <|@ instruction rbp|DWORD = XOR (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction rbp|DWORD = XOR (x: rbp|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  134  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [rdx|QWORD[.] + rdi|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  140  <|@ instruction rax|DWORD = LEA address: [rax|DWORD - 899497514] size: DWORD <|@ <|@
      nr  142  <|@ instruction rbp|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  144  <|@ instruction r13|DWORD = ROL x: r8|DWORD y: 30 size: DWORD <|@ <|@
      nr  146  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.95 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B23 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B10" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction r14|DWORD = LEA address: [rdi|DWORD + 2] size: DWORD <|@ <|@
      nr  166  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B10 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B11" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction vstack:1|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  280  <|@ instruction vstack:0|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction vstack:1|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction vstack:0|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction r10|DWORD = MOVE input: int[78|0x4e] <|@ <|@
      nr  198  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction r10|QWORD = MOVSXD value: r10|DWORD size: QWORD <|@ <|@
      nr  202  <|@ instruction r8|QWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  206  <|@ instruction r10|QWORD = DEC value: r10|QWORD size: QWORD <|@ <|@
      nr  208  <|@ instruction r8|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction CMPBRANCH (x: r8|QWORD, y: r10|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B7" 
    successors "B12" "B22" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction r10|DWORD = ROL x: rax|DWORD y: 5 size: DWORD <|@ <|@
      nr  336  <|@ instruction r8|DWORD = XOR (x: r13|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  338  <|@ instruction r8|DWORD = XOR (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  340  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  344  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, ~y: [rdx|QWORD[.] + rbp|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  346  <|@ instruction r10|DWORD = LEA address: [r10|DWORD - 899497514] size: DWORD <|@ <|@
      nr  348  <|@ instruction r8|DWORD = LEA address: [rdi|DWORD + 3] size: DWORD <|@ <|@
      nr  350  <|@ instruction CMP x: r8|DWORD y: 80 size: DWORD <|@ <|@
      nr  352  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[80|0x50], ~trueValue: r8|DWORD) condition: < <|@ <|@
      nr  354  <|@ instruction r11|DWORD = ROL x: r11|DWORD y: 30 size: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606406907175871839
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r14|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576421901864634511
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction r8|DWORD = ROL x: r10|DWORD y: 5 size: DWORD <|@ <|@
      nr  402  <|@ instruction rbx|DWORD = XOR (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  404  <|@ instruction rbx|DWORD = XOR (x: rbx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  408  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  410  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, ~y: [rdx|QWORD[.] + r14|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  412  <|@ instruction r8|DWORD = LEA address: [r8|DWORD - 899497514] size: DWORD <|@ <|@
      nr  414  <|@ instruction r14|DWORD = INC value: r14|DWORD size: DWORD <|@ <|@
      nr  416  <|@ instruction rax|DWORD = ROL x: rax|DWORD y: 30 size: DWORD <|@ <|@
      nr  418  <|@ instruction r9|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction r13|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  426  <|@ instruction r10|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606324590299565885
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction vstack:3|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction rbx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  442  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  444  <|@ instruction r8|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction r10|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  448  <|@ instruction vstack:6|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  450  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction r11|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" 
    successors "B17" "B18" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4612021107685376776
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.5789473684210522 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 72 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4608281511566220913
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction rdi|DWORD = MOV input: [rdx|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  696  <|@ instruction rsi|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  698  <|@ instruction rsi|DWORD = MOV input: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  700  <|@ instruction rax|DWORD = LEA address: [r10|DWORD + 2] size: DWORD <|@ <|@
      nr  702  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  704  <|@ instruction rbp|DWORD = LEA address: [r10|DWORD + 3] size: DWORD <|@ <|@
      nr  706  <|@ instruction rbp|DWORD = MOV input: [rdx|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  708  <|@ instruction r13|DWORD = LEA address: [r10|DWORD + 4] size: DWORD <|@ <|@
      nr  710  <|@ instruction r13|DWORD = MOV input: [rdx|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  712  <|@ instruction r14|DWORD = LEA address: [r10|DWORD + 5] size: DWORD <|@ <|@
      nr  714  <|@ instruction r14|DWORD = MOV input: [rdx|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  716  <|@ instruction vstack:2|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction r14|DWORD = LEA address: [r10|DWORD + 6] size: DWORD <|@ <|@
      nr  720  <|@ instruction r14|DWORD = MOV input: [rdx|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  722  <|@ instruction rdx|DWORD = LEA address: [r10|DWORD + 7] size: DWORD <|@ <|@
      nr  724  <|@ instruction vstack:4|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  726  <|@ instruction r10|DWORD = ROL x: rbx|DWORD y: 5 size: DWORD <|@ <|@
      nr  728  <|@ instruction vstack:5|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  730  <|@ instruction rdx|DWORD = XOR (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction rdx|DWORD = XOR (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  734  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  736  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  738  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  740  <|@ instruction r10|DWORD = LEA address: [r10|DWORD - 899497514] size: DWORD <|@ <|@
      nr  742  <|@ instruction r11|DWORD = ROL x: r10|DWORD y: 5 size: DWORD <|@ <|@
      nr  744  <|@ instruction rcx|DWORD = ROL x: rcx|DWORD y: 30 size: DWORD <|@ <|@
      nr  746  <|@ instruction rdi|DWORD = XOR (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  748  <|@ instruction rdi|DWORD = XOR (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  750  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  752  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  754  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  756  <|@ instruction r11|DWORD = LEA address: [r11|DWORD - 899497514] size: DWORD <|@ <|@
      nr  758  <|@ instruction r8|DWORD = ROL x: r11|DWORD y: 5 size: DWORD <|@ <|@
      nr  760  <|@ instruction rbx|DWORD = ROL x: rbx|DWORD y: 30 size: DWORD <|@ <|@
      nr  762  <|@ instruction rdi|DWORD = XOR (x: r10|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  764  <|@ instruction rdi|DWORD = XOR (x: rcx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  766  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  768  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  770  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  772  <|@ instruction r8|DWORD = LEA address: [r8|DWORD - 899497514] size: DWORD <|@ <|@
      nr  774  <|@ instruction r9|DWORD = ROL x: r8|DWORD y: 30 size: DWORD <|@ <|@
      nr  776  <|@ instruction rdi|DWORD = ROL x: r11|DWORD y: 30 size: DWORD <|@ <|@
      nr  778  <|@ instruction r10|DWORD = ROL x: r10|DWORD y: 30 size: DWORD <|@ <|@
      nr  780  <|@ instruction rdx|DWORD = ROL x: r8|DWORD y: 5 size: DWORD <|@ <|@
      nr  782  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  784  <|@ instruction r11|DWORD = XOR (x: rbx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  786  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  788  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  790  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  792  <|@ instruction r11|DWORD = LEA address: [rdx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  794  <|@ instruction rcx|DWORD = ROL x: r11|DWORD y: 5 size: DWORD <|@ <|@
      nr  796  <|@ instruction r8|DWORD = XOR (x: r8|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  798  <|@ instruction r8|DWORD = XOR (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  800  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  804  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  806  <|@ instruction r8|DWORD = LEA address: [rcx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  808  <|@ instruction rcx|DWORD = ROL x: r8|DWORD y: 5 size: DWORD <|@ <|@
      nr  810  <|@ instruction rbx|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  812  <|@ instruction rbx|DWORD = XOR (x: rdi|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  814  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  816  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  818  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: vstack:2|DWORD) size: DWORD <|@ <|@
      nr  820  <|@ instruction r10|DWORD = LEA address: [rcx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  822  <|@ instruction rcx|DWORD = ROL x: r10|DWORD y: 5 size: DWORD <|@ <|@
      nr  824  <|@ instruction r11|DWORD = ROL x: r11|DWORD y: 30 size: DWORD <|@ <|@
      nr  826  <|@ instruction rbx|DWORD = XOR (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  828  <|@ instruction rbx|DWORD = XOR (x: r9|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  830  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  832  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  834  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  836  <|@ instruction rcx|DWORD = LEA address: [rcx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  838  <|@ instruction rbx|DWORD = ROL x: rcx|DWORD y: 5 size: DWORD <|@ <|@
      nr  840  <|@ instruction r8|DWORD = ROL x: r8|DWORD y: 30 size: DWORD <|@ <|@
      nr  842  <|@ instruction rdi|DWORD = XOR (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  844  <|@ instruction rdi|DWORD = XOR (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  846  <|@ instruction rbx|DWORD = ADD (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  848  <|@ instruction rbx|DWORD = ADD (x: rbx|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  850  <|@ instruction rdi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction rdx|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction rbx|DWORD = ADD (x: rbx|DWORD, ~y: [rdi|QWORD[.] + rdx|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  856  <|@ instruction rbx|DWORD = LEA address: [rbx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  858  <|@ instruction r10|DWORD = ROL x: r10|DWORD y: 30 size: DWORD <|@ <|@
      nr  860  <|@ instruction rdx|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction r9|DWORD = LEA address: [rdx|DWORD + 8] size: DWORD <|@ <|@
      nr  864  <|@ instruction rdx|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ instruction vstack:7|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  868  <|@ instruction r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction r10|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD <|@ <|@
      nr  872  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606324590299565886
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  876  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  878  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  888  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606406907175871841
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576421901864634512
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction rdx|DWORD = ROL x: rbx|DWORD y: 5 size: DWORD <|@ <|@
      nr  934  <|@ instruction rsi|DWORD = XOR (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  936  <|@ instruction rsi|DWORD = XOR (x: rsi|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  938  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  940  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  942  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rdi|QWORD[.] + r10|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  944  <|@ instruction r11|DWORD = LEA address: [rdx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  946  <|@ instruction rcx|DWORD = ROL x: rcx|DWORD y: 30 size: DWORD <|@ <|@
      nr  948  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  950  <|@ instruction vstack:8|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction r8|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  954  <|@ instruction r9|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  956  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ instruction rbx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  960  <|@ instruction r11|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606324590299565887
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction r10|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B26" 
    xhandlers
    flags 
    probability 4587023449039406624
    begin_IR
      LIR
      nr 1038  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1040  <|@ instruction vstack:1|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1042  <|@ instruction vstack:0|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1052  <|@ instruction rcx|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr 1054  <|@ instruction r10|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1056  <|@ instruction vstack:9|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1058  <|@ instruction rbx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1060  <|@ instruction r11|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD <|@ <|@
      nr 1062  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B26" 
    xhandlers
    flags 
    probability 4587023449039406622
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction vstack:0|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction r8|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1006  <|@ instruction r9|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr 1008  <|@ instruction rbx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1010  <|@ instruction r10|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1012  <|@ instruction vstack:10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1014  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1016  <|@ instruction r11|DWORD = MOVE input: vstack:10|DWORD moveKind: DWORD <|@ <|@
      nr 1018  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B25" "B23" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 5 label: ? <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 52] size: DWORD <|@ <|@
      nr 1078  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
locals: r10|QWORD[.] - - rbx|DWORD rcx|DWORD r9|DWORD r8|DWORD r11|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH x: [rdi|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 5 size: DWORD inlinedY: null state [bci:423] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1130  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 20], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1132  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 24], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1134  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 28], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1136  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 32], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1138  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction vstack:1|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction rdx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1032  <|@ instruction r8|DWORD = MOVE input: int[-105755|0xfffffffffffe62e5] <|@ <|@
      nr 1034  <|@ instruction rsi|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr 1036  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction r10|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction rdx|QWORD = MOVE input: long[664|0x298] <|@ <|@
      nr  246  <|@ instruction r8|DWORD = MOVE input: int[-110619|0xfffffffffffe4fe5] <|@ <|@
      nr  248  <|@ instruction rsi|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction MOV x: [r15|QWORD + 1156] y: -133915 size: DWORD <|@ <|@
      nr 1098  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1100  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
locals: r10|QWORD[.] - - rbx|DWORD rcx|DWORD r9|DWORD r8|DWORD r11|DWORD - - 
>@ <|@ instruction DEOPT info [bci:423] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  978  <|@ instruction r10|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction rdx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  988  <|@ instruction r8|DWORD = MOVE input: int[-108315|0xfffffffffffe58e5] <|@ <|@
      nr  990  <|@ instruction rsi|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr  992  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction r10|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rdx|QWORD = MOVE input: long[664|0x298] <|@ <|@
      nr  264  <|@ instruction r8|DWORD = MOVE input: int[-110619|0xfffffffffffe4fe5] <|@ <|@
      nr  266  <|@ instruction rsi|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1142  <|@ instruction vstack:1|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction rdx|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1152  <|@ instruction r8|DWORD = MOVE input: int[-102716|0xfffffffffffe6ec4] <|@ <|@
      nr 1154  <|@ instruction rsi|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr 1156  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B24" "B9" "B22" "B8" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1176  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1178  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: r10|QWORD[.] - - r11|DWORD rsi|DWORD r9|DWORD rcx|DWORD rbx|DWORD rdi|DWORD - 
>@ <|@ instruction DEOPT info [bci:357] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // W:int[]
     4: ifnonnull     15
     7: aload_0       
     8: bipush        80
    10: newarray      int
    12: putfield      #5          // W:int[]
    15: aload_1       
    16: iload_2       
    17: aload_0       
    18: getfield      #5          // W:int[]
    21: invokestatic  #19         // sun.security.provider.ByteArrayAccess.b2iBig64:(byte[], int, int[])void
    24: bipush        16
    26: istore_3      
    27: iload_3       
    28: bipush        79
    30: if_icmpgt     91
    33: aload_0       
    34: getfield      #5          // W:int[]
    37: iload_3       
    38: iconst_3      
    39: isub          
    40: iaload        
    41: aload_0       
    42: getfield      #5          // W:int[]
    45: iload_3       
    46: bipush        8
    48: isub          
    49: iaload        
    50: ixor          
    51: aload_0       
    52: getfield      #5          // W:int[]
    55: iload_3       
    56: bipush        14
    58: isub          
    59: iaload        
    60: ixor          
    61: aload_0       
    62: getfield      #5          // W:int[]
    65: iload_3       
    66: bipush        16
    68: isub          
    69: iaload        
    70: ixor          
    71: istore        4
    73: aload_0       
    74: getfield      #5          // W:int[]
    77: iload_3       
    78: iload         4
    80: iconst_1      
    81: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
    84: iastore       
    85: iinc          
    88: goto          27
    91: aload_0       
    92: getfield      #1          // state:int[]
    95: iconst_0      
    96: iaload        
    97: istore_3      
    98: aload_0       
    99: getfield      #1          // state:int[]
   102: iconst_1      
   103: iaload        
   104: istore        4
   106: aload_0       
   107: getfield      #1          // state:int[]
   110: iconst_2      
   111: iaload        
   112: istore        5
   114: aload_0       
   115: getfield      #1          // state:int[]
   118: iconst_3      
   119: iaload        
   120: istore        6
   122: aload_0       
   123: getfield      #1          // state:int[]
   126: iconst_4      
   127: iaload        
   128: istore        7
   130: iconst_0      
   131: istore        8
   133: iload         8
   135: bipush        20
   137: if_icmpge     204
   140: iload_3       
   141: iconst_5      
   142: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   145: iload         4
   147: iload         5
   149: iand          
   150: iload         4
   152: iconst_m1     
   153: ixor          
   154: iload         6
   156: iand          
   157: ior           
   158: iadd          
   159: iload         7
   161: iadd          
   162: aload_0       
   163: getfield      #5          // W:int[]
   166: iload         8
   168: iaload        
   169: iadd          
   170: ldc           #100        // 1518500249
   172: iadd          
   173: istore        9
   175: iload         6
   177: istore        7
   179: iload         5
   181: istore        6
   183: iload         4
   185: bipush        30
   187: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   190: istore        5
   192: iload_3       
   193: istore        4
   195: iload         9
   197: istore_3      
   198: iinc          
   201: goto          133
   204: bipush        20
   206: istore        8
   208: iload         8
   210: bipush        40
   212: if_icmpge     274
   215: iload_3       
   216: iconst_5      
   217: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   220: iload         4
   222: iload         5
   224: ixor          
   225: iload         6
   227: ixor          
   228: iadd          
   229: iload         7
   231: iadd          
   232: aload_0       
   233: getfield      #5          // W:int[]
   236: iload         8
   238: iaload        
   239: iadd          
   240: ldc           #101        // 1859775393
   242: iadd          
   243: istore        9
   245: iload         6
   247: istore        7
   249: iload         5
   251: istore        6
   253: iload         4
   255: bipush        30
   257: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   260: istore        5
   262: iload_3       
   263: istore        4
   265: iload         9
   267: istore_3      
   268: iinc          
   271: goto          208
   274: bipush        40
   276: istore        8
   278: iload         8
   280: bipush        60
   282: if_icmpge     353
   285: iload_3       
   286: iconst_5      
   287: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   290: iload         4
   292: iload         5
   294: iand          
   295: iload         4
   297: iload         6
   299: iand          
   300: ior           
   301: iload         5
   303: iload         6
   305: iand          
   306: ior           
   307: iadd          
   308: iload         7
   310: iadd          
   311: aload_0       
   312: getfield      #5          // W:int[]
   315: iload         8
   317: iaload        
   318: iadd          
   319: ldc           #102        // -1894007588
   321: iadd          
   322: istore        9
   324: iload         6
   326: istore        7
   328: iload         5
   330: istore        6
   332: iload         4
   334: bipush        30
   336: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   339: istore        5
   341: iload_3       
   342: istore        4
   344: iload         9
   346: istore_3      
   347: iinc          
   350: goto          278
   353: bipush        60
   355: istore        8
   357: iload         8
   359: bipush        80
   361: if_icmpge     423
   364: iload_3       
   365: iconst_5      
   366: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   369: iload         4
   371: iload         5
   373: ixor          
   374: iload         6
   376: ixor          
   377: iadd          
   378: iload         7
   380: iadd          
   381: aload_0       
   382: getfield      #5          // W:int[]
   385: iload         8
   387: iaload        
   388: iadd          
   389: ldc           #103        // -899497514
   391: iadd          
   392: istore        9
   394: iload         6
   396: istore        7
   398: iload         5
   400: istore        6
   402: iload         4
   404: bipush        30
   406: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   409: istore        5
   411: iload_3       
   412: istore        4
   414: iload         9
   416: istore_3      
   417: iinc          
   420: goto          357
   423: aload_0       
   424: getfield      #1          // state:int[]
   427: iconst_0      
   428: dup2          
   429: iaload        
   430: iload_3       
   431: iadd          
   432: iastore       
   433: aload_0       
   434: getfield      #1          // state:int[]
   437: iconst_1      
   438: dup2          
   439: iaload        
   440: iload         4
   442: iadd          
   443: iastore       
   444: aload_0       
   445: getfield      #1          // state:int[]
   448: iconst_2      
   449: dup2          
   450: iaload        
   451: iload         5
   453: iadd          
   454: iastore       
   455: aload_0       
   456: getfield      #1          // state:int[]
   459: iconst_3      
   460: dup2          
   461: iaload        
   462: iload         6
   464: iadd          
   465: iastore       
   466: aload_0       
   467: getfield      #1          // state:int[]
   470: iconst_4      
   471: dup2          
   472: iaload        
   473: iload         7
   475: iadd          
   476: iastore       
   477: return        
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|q QWORD "[vstack:0|q]" vstack:0|q -1 [172, 1054[ "NOT_SUPPORTED"
  vstack:1|d DWORD "[vstack:1|d]" vstack:1|d -1 [170, 1154[ "NOT_SUPPORTED"
  vstack:2|d DWORD "[vstack:2|d]" vstack:2|d -1 [716, 818[ "NOT_SUPPORTED"
  vstack:3|q QWORD "[vstack:3|q]" vstack:3|q -1 [432, 873[ "NOT_SUPPORTED"
  vstack:4|d DWORD "[vstack:4|d]" vstack:4|d -1 [724, 860[ "NOT_SUPPORTED"
  vstack:5|d DWORD "[vstack:5|d]" vstack:5|d -1 [728, 852[ "NOT_SUPPORTED"
  vstack:6|d DWORD "[vstack:6|d]" vstack:6|d -1 [448, 452[ "NOT_SUPPORTED"
  vstack:7|d DWORD "[vstack:7|d]" vstack:7|d -1 [866, 870[ "NOT_SUPPORTED"
  vstack:8|d DWORD "[vstack:8|d]" vstack:8|d -1 [950, 960[ "NOT_SUPPORTED"
  vstack:9|d DWORD "[vstack:9|d]" vstack:9|d -1 [1056, 1060[ "NOT_SUPPORTED"
  vstack:10|d DWORD "[vstack:10|d]" vstack:10|d -1 [1012, 1016[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|q QWORD "[stack:48|q]" vstack:0|q -1 [172, 1054[ "NOT_SUPPORTED"
  vstack:1|d DWORD "[stack:28|d]" vstack:1|d -1 [170, 1154[ "NOT_SUPPORTED"
  vstack:2|d DWORD "[stack:32|d]" vstack:2|d -1 [716, 818[ "NOT_SUPPORTED"
  vstack:3|q QWORD "[stack:56|q]" vstack:3|q -1 [432, 873[ "NOT_SUPPORTED"
  vstack:4|d DWORD "[stack:36|d]" vstack:4|d -1 [724, 860[ "NOT_SUPPORTED"
  vstack:5|d DWORD "[stack:40|d]" vstack:5|d -1 [728, 852[ "NOT_SUPPORTED"
  vstack:6|d DWORD "[stack:32|d]" vstack:6|d -1 [448, 452[ "NOT_SUPPORTED"
  vstack:7|d DWORD "[stack:36|d]" vstack:7|d -1 [866, 870[ "NOT_SUPPORTED"
  vstack:8|d DWORD "[stack:36|d]" vstack:8|d -1 [950, 960[ "NOT_SUPPORTED"
  vstack:9|d DWORD "[stack:36|d]" vstack:9|d -1 [1056, 1060[ "NOT_SUPPORTED"
  vstack:10|d DWORD "[stack:36|d]" vstack:10|d -1 [1012, 1016[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@31f9b0c2 slotKind: QWORD <|@ <|@
      nr   40  <|@ instruction r10|QWORD[.] = MOV input: [rsi|QWORD + 72] size: QWORD <|@ <|@
      nr   42  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD + 48] size: DWORD <|@ <|@
      nr   44  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD + 40] size: DWORD <|@ <|@
      nr   46  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD + 32] size: DWORD <|@ <|@
      nr   48  <|@ instruction rcx|DWORD = MOV input: [rsi|QWORD + 24] size: DWORD <|@ <|@
      nr   50  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction rdi|DWORD = MOV input: [rsi|QWORD + 8] size: DWORD <|@ <|@
      nr   54  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: r10|QWORD[.] - - r11|DWORD r8|DWORD r9|DWORD rcx|DWORD rbx|DWORD rdi|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B29 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lsun/security/provider/SHA;, resolved>;compressed} state [bci:357] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 0.9523809523809523 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B25 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B24" 
    xhandlers
    flags 
    probability 4606753504549791646
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction rdx|DWORD[_] = MOV input: [r10|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: r10|QWORD[.] - - r11|DWORD r8|DWORD r9|DWORD rcx|DWORD rbx|DWORD rdi|DWORD - 
>@ <|@ instruction rsi|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:357] <|@ <|@
      nr   88  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B23" 
    xhandlers
    flags 
    probability 4606753504549791646
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3087af84 encoding: base: 0 shift: 3 <|@ <|@
      nr  128  <|@ instruction rax|DWORD = ROL x: r11|DWORD y: 5 size: DWORD <|@ <|@
      nr  130  <|@ instruction rbp|DWORD = XOR (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction rbp|DWORD = XOR (x: rbp|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  134  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [rdx|QWORD[.] + rdi|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  140  <|@ instruction rax|DWORD = LEA address: [rax|DWORD - 899497514] size: DWORD <|@ <|@
      nr  142  <|@ instruction rbp|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  144  <|@ instruction r13|DWORD = ROL x: r8|DWORD y: 30 size: DWORD <|@ <|@
      nr  146  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.95 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B23 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B10" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction r14|DWORD = LEA address: [rdi|DWORD + 2] size: DWORD <|@ <|@
      nr  166  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B10 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B11" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  280  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction r10|DWORD = MOVE input: int[78|0x4e] <|@ <|@
      nr  198  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction r10|QWORD = MOVSXD value: r10|DWORD size: QWORD <|@ <|@
      nr  202  <|@ instruction r8|QWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  206  <|@ instruction r10|QWORD = DEC value: r10|QWORD size: QWORD <|@ <|@
      nr  208  <|@ instruction r8|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction CMPBRANCH (x: r8|QWORD, y: r10|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B7" 
    successors "B12" "B22" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction r10|DWORD = ROL x: rax|DWORD y: 5 size: DWORD <|@ <|@
      nr  336  <|@ instruction r8|DWORD = XOR (x: r13|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  338  <|@ instruction r8|DWORD = XOR (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  340  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  344  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, ~y: [rdx|QWORD[.] + rbp|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  346  <|@ instruction r10|DWORD = LEA address: [r10|DWORD - 899497514] size: DWORD <|@ <|@
      nr  348  <|@ instruction r8|DWORD = LEA address: [rdi|DWORD + 3] size: DWORD <|@ <|@
      nr  350  <|@ instruction CMP x: r8|DWORD y: 80 size: DWORD <|@ <|@
      nr  352  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[80|0x50], ~trueValue: r8|DWORD) condition: < <|@ <|@
      nr  354  <|@ instruction r11|DWORD = ROL x: r11|DWORD y: 30 size: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606406907175871839
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r14|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576421901864634511
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction r8|DWORD = ROL x: r10|DWORD y: 5 size: DWORD <|@ <|@
      nr  402  <|@ instruction rbx|DWORD = XOR (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  404  <|@ instruction rbx|DWORD = XOR (x: rbx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  408  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  410  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, ~y: [rdx|QWORD[.] + r14|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  412  <|@ instruction r8|DWORD = LEA address: [r8|DWORD - 899497514] size: DWORD <|@ <|@
      nr  414  <|@ instruction r14|DWORD = INC value: r14|DWORD size: DWORD <|@ <|@
      nr  416  <|@ instruction rax|DWORD = ROL x: rax|DWORD y: 30 size: DWORD <|@ <|@
      nr  418  <|@ instruction r9|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction r13|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  426  <|@ instruction r10|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606324590299565885
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction rbx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  442  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  444  <|@ instruction r8|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction r10|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  448  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  450  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" 
    successors "B17" "B18" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4612021107685376776
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.5789473684210522 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 72 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4608281511566220913
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction rdi|DWORD = MOV input: [rdx|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  696  <|@ instruction rsi|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  698  <|@ instruction rsi|DWORD = MOV input: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  700  <|@ instruction rax|DWORD = LEA address: [r10|DWORD + 2] size: DWORD <|@ <|@
      nr  702  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  704  <|@ instruction rbp|DWORD = LEA address: [r10|DWORD + 3] size: DWORD <|@ <|@
      nr  706  <|@ instruction rbp|DWORD = MOV input: [rdx|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  708  <|@ instruction r13|DWORD = LEA address: [r10|DWORD + 4] size: DWORD <|@ <|@
      nr  710  <|@ instruction r13|DWORD = MOV input: [rdx|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  712  <|@ instruction r14|DWORD = LEA address: [r10|DWORD + 5] size: DWORD <|@ <|@
      nr  714  <|@ instruction r14|DWORD = MOV input: [rdx|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  716  <|@ instruction stack:32|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction r14|DWORD = LEA address: [r10|DWORD + 6] size: DWORD <|@ <|@
      nr  720  <|@ instruction r14|DWORD = MOV input: [rdx|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  722  <|@ instruction rdx|DWORD = LEA address: [r10|DWORD + 7] size: DWORD <|@ <|@
      nr  724  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  726  <|@ instruction r10|DWORD = ROL x: rbx|DWORD y: 5 size: DWORD <|@ <|@
      nr  728  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  730  <|@ instruction rdx|DWORD = XOR (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction rdx|DWORD = XOR (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  734  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  736  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  738  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  740  <|@ instruction r10|DWORD = LEA address: [r10|DWORD - 899497514] size: DWORD <|@ <|@
      nr  742  <|@ instruction r11|DWORD = ROL x: r10|DWORD y: 5 size: DWORD <|@ <|@
      nr  744  <|@ instruction rcx|DWORD = ROL x: rcx|DWORD y: 30 size: DWORD <|@ <|@
      nr  746  <|@ instruction rdi|DWORD = XOR (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  748  <|@ instruction rdi|DWORD = XOR (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  750  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  752  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  754  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  756  <|@ instruction r11|DWORD = LEA address: [r11|DWORD - 899497514] size: DWORD <|@ <|@
      nr  758  <|@ instruction r8|DWORD = ROL x: r11|DWORD y: 5 size: DWORD <|@ <|@
      nr  760  <|@ instruction rbx|DWORD = ROL x: rbx|DWORD y: 30 size: DWORD <|@ <|@
      nr  762  <|@ instruction rdi|DWORD = XOR (x: r10|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  764  <|@ instruction rdi|DWORD = XOR (x: rcx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  766  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  768  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  770  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  772  <|@ instruction r8|DWORD = LEA address: [r8|DWORD - 899497514] size: DWORD <|@ <|@
      nr  774  <|@ instruction r9|DWORD = ROL x: r8|DWORD y: 30 size: DWORD <|@ <|@
      nr  776  <|@ instruction rdi|DWORD = ROL x: r11|DWORD y: 30 size: DWORD <|@ <|@
      nr  778  <|@ instruction r10|DWORD = ROL x: r10|DWORD y: 30 size: DWORD <|@ <|@
      nr  780  <|@ instruction rdx|DWORD = ROL x: r8|DWORD y: 5 size: DWORD <|@ <|@
      nr  782  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  784  <|@ instruction r11|DWORD = XOR (x: rbx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  786  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  788  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  790  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  792  <|@ instruction r11|DWORD = LEA address: [rdx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  794  <|@ instruction rcx|DWORD = ROL x: r11|DWORD y: 5 size: DWORD <|@ <|@
      nr  796  <|@ instruction r8|DWORD = XOR (x: r8|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  798  <|@ instruction r8|DWORD = XOR (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  800  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  804  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  806  <|@ instruction r8|DWORD = LEA address: [rcx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  808  <|@ instruction rcx|DWORD = ROL x: r8|DWORD y: 5 size: DWORD <|@ <|@
      nr  810  <|@ instruction rbx|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  812  <|@ instruction rbx|DWORD = XOR (x: rdi|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  814  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  816  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  818  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: stack:32|DWORD) size: DWORD <|@ <|@
      nr  820  <|@ instruction r10|DWORD = LEA address: [rcx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  822  <|@ instruction rcx|DWORD = ROL x: r10|DWORD y: 5 size: DWORD <|@ <|@
      nr  824  <|@ instruction r11|DWORD = ROL x: r11|DWORD y: 30 size: DWORD <|@ <|@
      nr  826  <|@ instruction rbx|DWORD = XOR (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  828  <|@ instruction rbx|DWORD = XOR (x: r9|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  830  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  832  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  834  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  836  <|@ instruction rcx|DWORD = LEA address: [rcx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  838  <|@ instruction rbx|DWORD = ROL x: rcx|DWORD y: 5 size: DWORD <|@ <|@
      nr  840  <|@ instruction r8|DWORD = ROL x: r8|DWORD y: 30 size: DWORD <|@ <|@
      nr  842  <|@ instruction rdi|DWORD = XOR (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  844  <|@ instruction rdi|DWORD = XOR (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  846  <|@ instruction rbx|DWORD = ADD (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  848  <|@ instruction rbx|DWORD = ADD (x: rbx|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  850  <|@ instruction rdi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction rbx|DWORD = ADD (x: rbx|DWORD, ~y: [rdi|QWORD[.] + rdx|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  856  <|@ instruction rbx|DWORD = LEA address: [rbx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  858  <|@ instruction r10|DWORD = ROL x: r10|DWORD y: 30 size: DWORD <|@ <|@
      nr  860  <|@ instruction rdx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction r9|DWORD = LEA address: [rdx|DWORD + 8] size: DWORD <|@ <|@
      nr  864  <|@ instruction rdx|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  868  <|@ instruction r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  872  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606324590299565886
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  876  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  878  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  888  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606406907175871841
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576421901864634512
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction rdx|DWORD = ROL x: rbx|DWORD y: 5 size: DWORD <|@ <|@
      nr  934  <|@ instruction rsi|DWORD = XOR (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  936  <|@ instruction rsi|DWORD = XOR (x: rsi|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  938  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  940  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  942  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rdi|QWORD[.] + r10|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  944  <|@ instruction r11|DWORD = LEA address: [rdx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  946  <|@ instruction rcx|DWORD = ROL x: rcx|DWORD y: 30 size: DWORD <|@ <|@
      nr  948  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  950  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction r8|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  954  <|@ instruction r9|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  956  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ instruction rbx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  960  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606324590299565887
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B26" 
    xhandlers
    flags 
    probability 4587023449039406624
    begin_IR
      LIR
      nr 1038  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1040  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1042  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1052  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1054  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1056  <|@ instruction stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1058  <|@ instruction rbx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1060  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1062  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B26" 
    xhandlers
    flags 
    probability 4587023449039406622
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction r8|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1006  <|@ instruction r9|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr 1008  <|@ instruction rbx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1010  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1012  <|@ instruction stack:36|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1014  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1016  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1018  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B25" "B23" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 5 label: ? <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 52] size: DWORD <|@ <|@
      nr 1078  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
locals: r10|QWORD[.] - - rbx|DWORD rcx|DWORD r9|DWORD r8|DWORD r11|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH x: [rdi|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 5 size: DWORD inlinedY: null state [bci:423] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1130  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 20], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1132  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 24], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1134  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 28], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1136  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 32], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1138  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction rdx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1032  <|@ instruction r8|DWORD = MOVE input: int[-105755|0xfffffffffffe62e5] <|@ <|@
      nr 1034  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1036  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction rdx|QWORD = MOVE input: long[664|0x298] <|@ <|@
      nr  246  <|@ instruction r8|DWORD = MOVE input: int[-110619|0xfffffffffffe4fe5] <|@ <|@
      nr  248  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction MOV x: [r15|QWORD + 1156] y: -133915 size: DWORD <|@ <|@
      nr 1098  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1100  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
locals: r10|QWORD[.] - - rbx|DWORD rcx|DWORD r9|DWORD r8|DWORD r11|DWORD - - 
>@ <|@ instruction DEOPT info [bci:423] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  978  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction rdx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  988  <|@ instruction r8|DWORD = MOVE input: int[-108315|0xfffffffffffe58e5] <|@ <|@
      nr  990  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  992  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rdx|QWORD = MOVE input: long[664|0x298] <|@ <|@
      nr  264  <|@ instruction r8|DWORD = MOVE input: int[-110619|0xfffffffffffe4fe5] <|@ <|@
      nr  266  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1142  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction rdx|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1152  <|@ instruction r8|DWORD = MOVE input: int[-102716|0xfffffffffffe6ec4] <|@ <|@
      nr 1154  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1156  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B24" "B9" "B22" "B8" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1176  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1178  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: r10|QWORD[.] - - r11|DWORD rsi|DWORD r9|DWORD rcx|DWORD rbx|DWORD rdi|DWORD - 
>@ <|@ instruction DEOPT info [bci:357] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // W:int[]
     4: ifnonnull     15
     7: aload_0       
     8: bipush        80
    10: newarray      int
    12: putfield      #5          // W:int[]
    15: aload_1       
    16: iload_2       
    17: aload_0       
    18: getfield      #5          // W:int[]
    21: invokestatic  #19         // sun.security.provider.ByteArrayAccess.b2iBig64:(byte[], int, int[])void
    24: bipush        16
    26: istore_3      
    27: iload_3       
    28: bipush        79
    30: if_icmpgt     91
    33: aload_0       
    34: getfield      #5          // W:int[]
    37: iload_3       
    38: iconst_3      
    39: isub          
    40: iaload        
    41: aload_0       
    42: getfield      #5          // W:int[]
    45: iload_3       
    46: bipush        8
    48: isub          
    49: iaload        
    50: ixor          
    51: aload_0       
    52: getfield      #5          // W:int[]
    55: iload_3       
    56: bipush        14
    58: isub          
    59: iaload        
    60: ixor          
    61: aload_0       
    62: getfield      #5          // W:int[]
    65: iload_3       
    66: bipush        16
    68: isub          
    69: iaload        
    70: ixor          
    71: istore        4
    73: aload_0       
    74: getfield      #5          // W:int[]
    77: iload_3       
    78: iload         4
    80: iconst_1      
    81: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
    84: iastore       
    85: iinc          
    88: goto          27
    91: aload_0       
    92: getfield      #1          // state:int[]
    95: iconst_0      
    96: iaload        
    97: istore_3      
    98: aload_0       
    99: getfield      #1          // state:int[]
   102: iconst_1      
   103: iaload        
   104: istore        4
   106: aload_0       
   107: getfield      #1          // state:int[]
   110: iconst_2      
   111: iaload        
   112: istore        5
   114: aload_0       
   115: getfield      #1          // state:int[]
   118: iconst_3      
   119: iaload        
   120: istore        6
   122: aload_0       
   123: getfield      #1          // state:int[]
   126: iconst_4      
   127: iaload        
   128: istore        7
   130: iconst_0      
   131: istore        8
   133: iload         8
   135: bipush        20
   137: if_icmpge     204
   140: iload_3       
   141: iconst_5      
   142: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   145: iload         4
   147: iload         5
   149: iand          
   150: iload         4
   152: iconst_m1     
   153: ixor          
   154: iload         6
   156: iand          
   157: ior           
   158: iadd          
   159: iload         7
   161: iadd          
   162: aload_0       
   163: getfield      #5          // W:int[]
   166: iload         8
   168: iaload        
   169: iadd          
   170: ldc           #100        // 1518500249
   172: iadd          
   173: istore        9
   175: iload         6
   177: istore        7
   179: iload         5
   181: istore        6
   183: iload         4
   185: bipush        30
   187: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   190: istore        5
   192: iload_3       
   193: istore        4
   195: iload         9
   197: istore_3      
   198: iinc          
   201: goto          133
   204: bipush        20
   206: istore        8
   208: iload         8
   210: bipush        40
   212: if_icmpge     274
   215: iload_3       
   216: iconst_5      
   217: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   220: iload         4
   222: iload         5
   224: ixor          
   225: iload         6
   227: ixor          
   228: iadd          
   229: iload         7
   231: iadd          
   232: aload_0       
   233: getfield      #5          // W:int[]
   236: iload         8
   238: iaload        
   239: iadd          
   240: ldc           #101        // 1859775393
   242: iadd          
   243: istore        9
   245: iload         6
   247: istore        7
   249: iload         5
   251: istore        6
   253: iload         4
   255: bipush        30
   257: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   260: istore        5
   262: iload_3       
   263: istore        4
   265: iload         9
   267: istore_3      
   268: iinc          
   271: goto          208
   274: bipush        40
   276: istore        8
   278: iload         8
   280: bipush        60
   282: if_icmpge     353
   285: iload_3       
   286: iconst_5      
   287: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   290: iload         4
   292: iload         5
   294: iand          
   295: iload         4
   297: iload         6
   299: iand          
   300: ior           
   301: iload         5
   303: iload         6
   305: iand          
   306: ior           
   307: iadd          
   308: iload         7
   310: iadd          
   311: aload_0       
   312: getfield      #5          // W:int[]
   315: iload         8
   317: iaload        
   318: iadd          
   319: ldc           #102        // -1894007588
   321: iadd          
   322: istore        9
   324: iload         6
   326: istore        7
   328: iload         5
   330: istore        6
   332: iload         4
   334: bipush        30
   336: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   339: istore        5
   341: iload_3       
   342: istore        4
   344: iload         9
   346: istore_3      
   347: iinc          
   350: goto          278
   353: bipush        60
   355: istore        8
   357: iload         8
   359: bipush        80
   361: if_icmpge     423
   364: iload_3       
   365: iconst_5      
   366: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   369: iload         4
   371: iload         5
   373: ixor          
   374: iload         6
   376: ixor          
   377: iadd          
   378: iload         7
   380: iadd          
   381: aload_0       
   382: getfield      #5          // W:int[]
   385: iload         8
   387: iaload        
   388: iadd          
   389: ldc           #103        // -899497514
   391: iadd          
   392: istore        9
   394: iload         6
   396: istore        7
   398: iload         5
   400: istore        6
   402: iload         4
   404: bipush        30
   406: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   409: istore        5
   411: iload_3       
   412: istore        4
   414: iload         9
   416: istore_3      
   417: iinc          
   420: goto          357
   423: aload_0       
   424: getfield      #1          // state:int[]
   427: iconst_0      
   428: dup2          
   429: iaload        
   430: iload_3       
   431: iadd          
   432: iastore       
   433: aload_0       
   434: getfield      #1          // state:int[]
   437: iconst_1      
   438: dup2          
   439: iaload        
   440: iload         4
   442: iadd          
   443: iastore       
   444: aload_0       
   445: getfield      #1          // state:int[]
   448: iconst_2      
   449: dup2          
   450: iaload        
   451: iload         5
   453: iadd          
   454: iastore       
   455: aload_0       
   456: getfield      #1          // state:int[]
   459: iconst_3      
   460: dup2          
   461: iaload        
   462: iload         6
   464: iadd          
   465: iastore       
   466: aload_0       
   467: getfield      #1          // state:int[]
   470: iconst_4      
   471: dup2          
   472: iaload        
   473: iload         7
   475: iadd          
   476: iastore       
   477: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@31f9b0c2 slotKind: QWORD <|@ <|@
      nr   40  <|@ instruction r10|QWORD[.] = MOV input: [rsi|QWORD + 72] size: QWORD <|@ <|@
      nr   42  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD + 48] size: DWORD <|@ <|@
      nr   44  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD + 40] size: DWORD <|@ <|@
      nr   46  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD + 32] size: DWORD <|@ <|@
      nr   48  <|@ instruction rcx|DWORD = MOV input: [rsi|QWORD + 24] size: DWORD <|@ <|@
      nr   50  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction rdi|DWORD = MOV input: [rsi|QWORD + 8] size: DWORD <|@ <|@
      nr   54  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: r10|QWORD[.] - - r11|DWORD r8|DWORD r9|DWORD rcx|DWORD rbx|DWORD rdi|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B29 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lsun/security/provider/SHA;, resolved>;compressed} state [bci:357] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 0.9523809523809523 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B25 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B24" 
    xhandlers
    flags 
    probability 4606753504549791646
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction rdx|DWORD[_] = MOV input: [r10|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: r10|QWORD[.] - - r11|DWORD r8|DWORD r9|DWORD rcx|DWORD rbx|DWORD rdi|DWORD - 
>@ <|@ instruction rsi|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:357] <|@ <|@
      nr   88  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B23" 
    xhandlers
    flags 
    probability 4606753504549791646
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3087af84 encoding: base: 0 shift: 3 <|@ <|@
      nr  128  <|@ instruction rax|DWORD = ROL x: r11|DWORD y: 5 size: DWORD <|@ <|@
      nr  130  <|@ instruction rbp|DWORD = XOR (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction rbp|DWORD = XOR (x: rbp|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  134  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [rdx|QWORD[.] + rdi|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  140  <|@ instruction rax|DWORD = LEA address: [rax|DWORD - 899497514] size: DWORD <|@ <|@
      nr  142  <|@ instruction rbp|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  144  <|@ instruction r13|DWORD = ROL x: r8|DWORD y: 30 size: DWORD <|@ <|@
      nr  146  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.95 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B23 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B10" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction r14|DWORD = LEA address: [rdi|DWORD + 2] size: DWORD <|@ <|@
      nr  166  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B10 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B11" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  280  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction r10|DWORD = MOVE input: int[78|0x4e] <|@ <|@
      nr  198  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction r10|QWORD = MOVSXD value: r10|DWORD size: QWORD <|@ <|@
      nr  202  <|@ instruction r8|QWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  206  <|@ instruction r10|QWORD = DEC value: r10|QWORD size: QWORD <|@ <|@
      nr  208  <|@ instruction r8|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction CMPBRANCH (x: r8|QWORD, y: r10|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B7" 
    successors "B12" "B22" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction r10|DWORD = ROL x: rax|DWORD y: 5 size: DWORD <|@ <|@
      nr  336  <|@ instruction r8|DWORD = XOR (x: r13|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  338  <|@ instruction r8|DWORD = XOR (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  340  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  344  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, ~y: [rdx|QWORD[.] + rbp|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  346  <|@ instruction r10|DWORD = LEA address: [r10|DWORD - 899497514] size: DWORD <|@ <|@
      nr  348  <|@ instruction r8|DWORD = LEA address: [rdi|DWORD + 3] size: DWORD <|@ <|@
      nr  350  <|@ instruction CMP x: r8|DWORD y: 80 size: DWORD <|@ <|@
      nr  352  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[80|0x50], ~trueValue: r8|DWORD) condition: < <|@ <|@
      nr  354  <|@ instruction r11|DWORD = ROL x: r11|DWORD y: 30 size: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606406907175871839
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r14|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576421901864634511
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction r8|DWORD = ROL x: r10|DWORD y: 5 size: DWORD <|@ <|@
      nr  402  <|@ instruction rbx|DWORD = XOR (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  404  <|@ instruction rbx|DWORD = XOR (x: rbx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  408  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  410  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, ~y: [rdx|QWORD[.] + r14|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  412  <|@ instruction r8|DWORD = LEA address: [r8|DWORD - 899497514] size: DWORD <|@ <|@
      nr  414  <|@ instruction r14|DWORD = INC value: r14|DWORD size: DWORD <|@ <|@
      nr  416  <|@ instruction rax|DWORD = ROL x: rax|DWORD y: 30 size: DWORD <|@ <|@
      nr  418  <|@ instruction r9|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction r13|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  426  <|@ instruction r10|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606324590299565885
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction rbx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  442  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  444  <|@ instruction r8|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction r10|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  448  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  450  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" 
    successors "B17" "B18" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4612021107685376776
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.5789473684210522 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 72 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4608281511566220913
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction rdi|DWORD = MOV input: [rdx|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  696  <|@ instruction rsi|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  698  <|@ instruction rsi|DWORD = MOV input: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  700  <|@ instruction rax|DWORD = LEA address: [r10|DWORD + 2] size: DWORD <|@ <|@
      nr  702  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  704  <|@ instruction rbp|DWORD = LEA address: [r10|DWORD + 3] size: DWORD <|@ <|@
      nr  706  <|@ instruction rbp|DWORD = MOV input: [rdx|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  708  <|@ instruction r13|DWORD = LEA address: [r10|DWORD + 4] size: DWORD <|@ <|@
      nr  710  <|@ instruction r13|DWORD = MOV input: [rdx|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  712  <|@ instruction r14|DWORD = LEA address: [r10|DWORD + 5] size: DWORD <|@ <|@
      nr  714  <|@ instruction r14|DWORD = MOV input: [rdx|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  716  <|@ instruction stack:32|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction r14|DWORD = LEA address: [r10|DWORD + 6] size: DWORD <|@ <|@
      nr  720  <|@ instruction r14|DWORD = MOV input: [rdx|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  722  <|@ instruction rdx|DWORD = LEA address: [r10|DWORD + 7] size: DWORD <|@ <|@
      nr  724  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  726  <|@ instruction r10|DWORD = ROL x: rbx|DWORD y: 5 size: DWORD <|@ <|@
      nr  728  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  730  <|@ instruction rdx|DWORD = XOR (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction rdx|DWORD = XOR (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  734  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  736  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  738  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  740  <|@ instruction r10|DWORD = LEA address: [r10|DWORD - 899497514] size: DWORD <|@ <|@
      nr  742  <|@ instruction r11|DWORD = ROL x: r10|DWORD y: 5 size: DWORD <|@ <|@
      nr  744  <|@ instruction rcx|DWORD = ROL x: rcx|DWORD y: 30 size: DWORD <|@ <|@
      nr  746  <|@ instruction rdi|DWORD = XOR (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  748  <|@ instruction rdi|DWORD = XOR (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  750  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  752  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  754  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  756  <|@ instruction r11|DWORD = LEA address: [r11|DWORD - 899497514] size: DWORD <|@ <|@
      nr  758  <|@ instruction r8|DWORD = ROL x: r11|DWORD y: 5 size: DWORD <|@ <|@
      nr  760  <|@ instruction rbx|DWORD = ROL x: rbx|DWORD y: 30 size: DWORD <|@ <|@
      nr  762  <|@ instruction rdi|DWORD = XOR (x: r10|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  764  <|@ instruction rdi|DWORD = XOR (x: rcx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  766  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  768  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  770  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  772  <|@ instruction r8|DWORD = LEA address: [r8|DWORD - 899497514] size: DWORD <|@ <|@
      nr  774  <|@ instruction r9|DWORD = ROL x: r8|DWORD y: 30 size: DWORD <|@ <|@
      nr  776  <|@ instruction rdi|DWORD = ROL x: r11|DWORD y: 30 size: DWORD <|@ <|@
      nr  778  <|@ instruction r10|DWORD = ROL x: r10|DWORD y: 30 size: DWORD <|@ <|@
      nr  780  <|@ instruction rdx|DWORD = ROL x: r8|DWORD y: 5 size: DWORD <|@ <|@
      nr  782  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  784  <|@ instruction r11|DWORD = XOR (x: rbx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  786  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  788  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  790  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  792  <|@ instruction r11|DWORD = LEA address: [rdx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  794  <|@ instruction rcx|DWORD = ROL x: r11|DWORD y: 5 size: DWORD <|@ <|@
      nr  796  <|@ instruction r8|DWORD = XOR (x: r8|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  798  <|@ instruction r8|DWORD = XOR (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  800  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  804  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  806  <|@ instruction r8|DWORD = LEA address: [rcx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  808  <|@ instruction rcx|DWORD = ROL x: r8|DWORD y: 5 size: DWORD <|@ <|@
      nr  810  <|@ instruction rbx|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  812  <|@ instruction rbx|DWORD = XOR (x: rdi|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  814  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  816  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  818  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: stack:32|DWORD) size: DWORD <|@ <|@
      nr  820  <|@ instruction r10|DWORD = LEA address: [rcx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  822  <|@ instruction rcx|DWORD = ROL x: r10|DWORD y: 5 size: DWORD <|@ <|@
      nr  824  <|@ instruction r11|DWORD = ROL x: r11|DWORD y: 30 size: DWORD <|@ <|@
      nr  826  <|@ instruction rbx|DWORD = XOR (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  828  <|@ instruction rbx|DWORD = XOR (x: r9|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  830  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  832  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  834  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  836  <|@ instruction rcx|DWORD = LEA address: [rcx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  838  <|@ instruction rbx|DWORD = ROL x: rcx|DWORD y: 5 size: DWORD <|@ <|@
      nr  840  <|@ instruction r8|DWORD = ROL x: r8|DWORD y: 30 size: DWORD <|@ <|@
      nr  842  <|@ instruction rdi|DWORD = XOR (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  844  <|@ instruction rdi|DWORD = XOR (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  846  <|@ instruction rbx|DWORD = ADD (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  848  <|@ instruction rbx|DWORD = ADD (x: rbx|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  850  <|@ instruction rdi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction rbx|DWORD = ADD (x: rbx|DWORD, ~y: [rdi|QWORD[.] + rdx|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  856  <|@ instruction rbx|DWORD = LEA address: [rbx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  858  <|@ instruction r10|DWORD = ROL x: r10|DWORD y: 30 size: DWORD <|@ <|@
      nr  860  <|@ instruction rdx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction r9|DWORD = LEA address: [rdx|DWORD + 8] size: DWORD <|@ <|@
      nr  864  <|@ instruction rdx|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  868  <|@ instruction r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  872  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606324590299565886
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  876  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  878  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  888  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606406907175871841
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576421901864634512
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction rdx|DWORD = ROL x: rbx|DWORD y: 5 size: DWORD <|@ <|@
      nr  934  <|@ instruction rsi|DWORD = XOR (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  936  <|@ instruction rsi|DWORD = XOR (x: rsi|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  938  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  940  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  942  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rdi|QWORD[.] + r10|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  944  <|@ instruction r11|DWORD = LEA address: [rdx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  946  <|@ instruction rcx|DWORD = ROL x: rcx|DWORD y: 30 size: DWORD <|@ <|@
      nr  948  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  950  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction r8|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  954  <|@ instruction r9|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  956  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ instruction rbx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  960  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606324590299565887
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B26" 
    xhandlers
    flags 
    probability 4587023449039406624
    begin_IR
      LIR
      nr 1038  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1040  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1042  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1052  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1054  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1056  <|@ instruction stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1058  <|@ instruction rbx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1060  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1062  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B26" 
    xhandlers
    flags 
    probability 4587023449039406622
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction r8|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1006  <|@ instruction r9|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr 1008  <|@ instruction rbx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1010  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1012  <|@ instruction stack:36|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1014  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1016  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1018  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B25" "B23" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 5 label: ? <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 52] size: DWORD <|@ <|@
      nr 1078  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
locals: r10|QWORD[.] - - rbx|DWORD rcx|DWORD r9|DWORD r8|DWORD r11|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH x: [rdi|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 5 size: DWORD inlinedY: null state [bci:423] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1130  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 20], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1132  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 24], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1134  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 28], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1136  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 32], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1138  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction rdx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1032  <|@ instruction r8|DWORD = MOVE input: int[-105755|0xfffffffffffe62e5] <|@ <|@
      nr 1034  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1036  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction rdx|QWORD = MOVE input: long[664|0x298] <|@ <|@
      nr  246  <|@ instruction r8|DWORD = MOVE input: int[-110619|0xfffffffffffe4fe5] <|@ <|@
      nr  248  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction MOV x: [r15|QWORD + 1156] y: -133915 size: DWORD <|@ <|@
      nr 1098  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1100  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
locals: r10|QWORD[.] - - rbx|DWORD rcx|DWORD r9|DWORD r8|DWORD r11|DWORD - - 
>@ <|@ instruction DEOPT info [bci:423] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  978  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction rdx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  988  <|@ instruction r8|DWORD = MOVE input: int[-108315|0xfffffffffffe58e5] <|@ <|@
      nr  990  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  992  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rdx|QWORD = MOVE input: long[664|0x298] <|@ <|@
      nr  264  <|@ instruction r8|DWORD = MOVE input: int[-110619|0xfffffffffffe4fe5] <|@ <|@
      nr  266  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1142  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction rdx|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1152  <|@ instruction r8|DWORD = MOVE input: int[-102716|0xfffffffffffe6ec4] <|@ <|@
      nr 1154  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1156  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B24" "B9" "B22" "B8" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1176  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1178  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: r10|QWORD[.] - - r11|DWORD rsi|DWORD r9|DWORD rcx|DWORD rbx|DWORD rdi|DWORD - 
>@ <|@ instruction DEOPT info [bci:357] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // W:int[]
     4: ifnonnull     15
     7: aload_0       
     8: bipush        80
    10: newarray      int
    12: putfield      #5          // W:int[]
    15: aload_1       
    16: iload_2       
    17: aload_0       
    18: getfield      #5          // W:int[]
    21: invokestatic  #19         // sun.security.provider.ByteArrayAccess.b2iBig64:(byte[], int, int[])void
    24: bipush        16
    26: istore_3      
    27: iload_3       
    28: bipush        79
    30: if_icmpgt     91
    33: aload_0       
    34: getfield      #5          // W:int[]
    37: iload_3       
    38: iconst_3      
    39: isub          
    40: iaload        
    41: aload_0       
    42: getfield      #5          // W:int[]
    45: iload_3       
    46: bipush        8
    48: isub          
    49: iaload        
    50: ixor          
    51: aload_0       
    52: getfield      #5          // W:int[]
    55: iload_3       
    56: bipush        14
    58: isub          
    59: iaload        
    60: ixor          
    61: aload_0       
    62: getfield      #5          // W:int[]
    65: iload_3       
    66: bipush        16
    68: isub          
    69: iaload        
    70: ixor          
    71: istore        4
    73: aload_0       
    74: getfield      #5          // W:int[]
    77: iload_3       
    78: iload         4
    80: iconst_1      
    81: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
    84: iastore       
    85: iinc          
    88: goto          27
    91: aload_0       
    92: getfield      #1          // state:int[]
    95: iconst_0      
    96: iaload        
    97: istore_3      
    98: aload_0       
    99: getfield      #1          // state:int[]
   102: iconst_1      
   103: iaload        
   104: istore        4
   106: aload_0       
   107: getfield      #1          // state:int[]
   110: iconst_2      
   111: iaload        
   112: istore        5
   114: aload_0       
   115: getfield      #1          // state:int[]
   118: iconst_3      
   119: iaload        
   120: istore        6
   122: aload_0       
   123: getfield      #1          // state:int[]
   126: iconst_4      
   127: iaload        
   128: istore        7
   130: iconst_0      
   131: istore        8
   133: iload         8
   135: bipush        20
   137: if_icmpge     204
   140: iload_3       
   141: iconst_5      
   142: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   145: iload         4
   147: iload         5
   149: iand          
   150: iload         4
   152: iconst_m1     
   153: ixor          
   154: iload         6
   156: iand          
   157: ior           
   158: iadd          
   159: iload         7
   161: iadd          
   162: aload_0       
   163: getfield      #5          // W:int[]
   166: iload         8
   168: iaload        
   169: iadd          
   170: ldc           #100        // 1518500249
   172: iadd          
   173: istore        9
   175: iload         6
   177: istore        7
   179: iload         5
   181: istore        6
   183: iload         4
   185: bipush        30
   187: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   190: istore        5
   192: iload_3       
   193: istore        4
   195: iload         9
   197: istore_3      
   198: iinc          
   201: goto          133
   204: bipush        20
   206: istore        8
   208: iload         8
   210: bipush        40
   212: if_icmpge     274
   215: iload_3       
   216: iconst_5      
   217: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   220: iload         4
   222: iload         5
   224: ixor          
   225: iload         6
   227: ixor          
   228: iadd          
   229: iload         7
   231: iadd          
   232: aload_0       
   233: getfield      #5          // W:int[]
   236: iload         8
   238: iaload        
   239: iadd          
   240: ldc           #101        // 1859775393
   242: iadd          
   243: istore        9
   245: iload         6
   247: istore        7
   249: iload         5
   251: istore        6
   253: iload         4
   255: bipush        30
   257: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   260: istore        5
   262: iload_3       
   263: istore        4
   265: iload         9
   267: istore_3      
   268: iinc          
   271: goto          208
   274: bipush        40
   276: istore        8
   278: iload         8
   280: bipush        60
   282: if_icmpge     353
   285: iload_3       
   286: iconst_5      
   287: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   290: iload         4
   292: iload         5
   294: iand          
   295: iload         4
   297: iload         6
   299: iand          
   300: ior           
   301: iload         5
   303: iload         6
   305: iand          
   306: ior           
   307: iadd          
   308: iload         7
   310: iadd          
   311: aload_0       
   312: getfield      #5          // W:int[]
   315: iload         8
   317: iaload        
   318: iadd          
   319: ldc           #102        // -1894007588
   321: iadd          
   322: istore        9
   324: iload         6
   326: istore        7
   328: iload         5
   330: istore        6
   332: iload         4
   334: bipush        30
   336: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   339: istore        5
   341: iload_3       
   342: istore        4
   344: iload         9
   346: istore_3      
   347: iinc          
   350: goto          278
   353: bipush        60
   355: istore        8
   357: iload         8
   359: bipush        80
   361: if_icmpge     423
   364: iload_3       
   365: iconst_5      
   366: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   369: iload         4
   371: iload         5
   373: ixor          
   374: iload         6
   376: ixor          
   377: iadd          
   378: iload         7
   380: iadd          
   381: aload_0       
   382: getfield      #5          // W:int[]
   385: iload         8
   387: iaload        
   388: iadd          
   389: ldc           #103        // -899497514
   391: iadd          
   392: istore        9
   394: iload         6
   396: istore        7
   398: iload         5
   400: istore        6
   402: iload         4
   404: bipush        30
   406: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   409: istore        5
   411: iload_3       
   412: istore        4
   414: iload         9
   416: istore_3      
   417: iinc          
   420: goto          357
   423: aload_0       
   424: getfield      #1          // state:int[]
   427: iconst_0      
   428: dup2          
   429: iaload        
   430: iload_3       
   431: iadd          
   432: iastore       
   433: aload_0       
   434: getfield      #1          // state:int[]
   437: iconst_1      
   438: dup2          
   439: iaload        
   440: iload         4
   442: iadd          
   443: iastore       
   444: aload_0       
   445: getfield      #1          // state:int[]
   448: iconst_2      
   449: dup2          
   450: iaload        
   451: iload         5
   453: iadd          
   454: iastore       
   455: aload_0       
   456: getfield      #1          // state:int[]
   459: iconst_3      
   460: dup2          
   461: iaload        
   462: iload         6
   464: iadd          
   465: iastore       
   466: aload_0       
   467: getfield      #1          // state:int[]
   470: iconst_4      
   471: dup2          
   472: iaload        
   473: iload         7
   475: iadd          
   476: iastore       
   477: return        
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@31f9b0c2 slotKind: QWORD <|@ <|@
      nr   40  <|@ instruction r10|QWORD[.] = MOV input: [rsi|QWORD + 72] size: QWORD <|@ <|@
      nr   42  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD + 48] size: DWORD <|@ <|@
      nr   44  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD + 40] size: DWORD <|@ <|@
      nr   46  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD + 32] size: DWORD <|@ <|@
      nr   48  <|@ instruction rcx|DWORD = MOV input: [rsi|QWORD + 24] size: DWORD <|@ <|@
      nr   50  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction rdi|DWORD = MOV input: [rsi|QWORD + 8] size: DWORD <|@ <|@
      nr   54  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: r10|QWORD[.] - - r11|DWORD r8|DWORD r9|DWORD rcx|DWORD rbx|DWORD rdi|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B29 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lsun/security/provider/SHA;, resolved>;compressed} state [bci:357] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 0.9523809523809523 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B25 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B24" 
    xhandlers
    flags 
    probability 4606753504549791646
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction rdx|DWORD[_] = MOV input: [r10|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: r10|QWORD[.] - - r11|DWORD r8|DWORD r9|DWORD rcx|DWORD rbx|DWORD rdi|DWORD - 
>@ <|@ instruction rsi|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:357] <|@ <|@
      nr   88  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B23" 
    xhandlers
    flags 
    probability 4606753504549791646
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3087af84 encoding: base: 0 shift: 3 <|@ <|@
      nr  128  <|@ instruction rax|DWORD = ROL x: r11|DWORD y: 5 size: DWORD <|@ <|@
      nr  130  <|@ instruction rbp|DWORD = XOR (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction rbp|DWORD = XOR (x: rbp|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  134  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [rdx|QWORD[.] + rdi|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  140  <|@ instruction rax|DWORD = LEA address: [rax|DWORD - 899497514] size: DWORD <|@ <|@
      nr  142  <|@ instruction rbp|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  144  <|@ instruction r13|DWORD = ROL x: r8|DWORD y: 30 size: DWORD <|@ <|@
      nr  146  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.95 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B23 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B10" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction r14|DWORD = LEA address: [rdi|DWORD + 2] size: DWORD <|@ <|@
      nr  166  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B10 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B11" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  280  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction r10|DWORD = MOVE input: int[78|0x4e] <|@ <|@
      nr  198  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction r10|QWORD = MOVSXD value: r10|DWORD size: QWORD <|@ <|@
      nr  202  <|@ instruction r8|QWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  206  <|@ instruction r10|QWORD = DEC value: r10|QWORD size: QWORD <|@ <|@
      nr  208  <|@ instruction r8|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction CMPBRANCH (x: r8|QWORD, y: r10|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B7" 
    successors "B12" "B22" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction r10|DWORD = ROL x: rax|DWORD y: 5 size: DWORD <|@ <|@
      nr  336  <|@ instruction r8|DWORD = XOR (x: r13|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  338  <|@ instruction r8|DWORD = XOR (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  340  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  344  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, ~y: [rdx|QWORD[.] + rbp|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  346  <|@ instruction r10|DWORD = LEA address: [r10|DWORD - 899497514] size: DWORD <|@ <|@
      nr  348  <|@ instruction r8|DWORD = LEA address: [rdi|DWORD + 3] size: DWORD <|@ <|@
      nr  350  <|@ instruction CMP x: r8|DWORD y: 80 size: DWORD <|@ <|@
      nr  352  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[80|0x50], ~trueValue: r8|DWORD) condition: < <|@ <|@
      nr  354  <|@ instruction r11|DWORD = ROL x: r11|DWORD y: 30 size: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606406907175871839
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r14|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576421901864634511
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction r8|DWORD = ROL x: r10|DWORD y: 5 size: DWORD <|@ <|@
      nr  402  <|@ instruction rbx|DWORD = XOR (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  404  <|@ instruction rbx|DWORD = XOR (x: rbx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  408  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  410  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, ~y: [rdx|QWORD[.] + r14|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  412  <|@ instruction r8|DWORD = LEA address: [r8|DWORD - 899497514] size: DWORD <|@ <|@
      nr  414  <|@ instruction r14|DWORD = INC value: r14|DWORD size: DWORD <|@ <|@
      nr  416  <|@ instruction rax|DWORD = ROL x: rax|DWORD y: 30 size: DWORD <|@ <|@
      nr  418  <|@ instruction r9|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction r13|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  426  <|@ instruction r10|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606324590299565885
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction rbx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  442  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  444  <|@ instruction r8|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction r10|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  448  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  450  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" 
    successors "B17" "B18" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4612021107685376776
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.5789473684210522 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 72 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4608281511566220913
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction rdi|DWORD = MOV input: [rdx|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  696  <|@ instruction rsi|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  698  <|@ instruction rsi|DWORD = MOV input: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  700  <|@ instruction rax|DWORD = LEA address: [r10|DWORD + 2] size: DWORD <|@ <|@
      nr  702  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  704  <|@ instruction rbp|DWORD = LEA address: [r10|DWORD + 3] size: DWORD <|@ <|@
      nr  706  <|@ instruction rbp|DWORD = MOV input: [rdx|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  708  <|@ instruction r13|DWORD = LEA address: [r10|DWORD + 4] size: DWORD <|@ <|@
      nr  710  <|@ instruction r13|DWORD = MOV input: [rdx|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  712  <|@ instruction r14|DWORD = LEA address: [r10|DWORD + 5] size: DWORD <|@ <|@
      nr  714  <|@ instruction r14|DWORD = MOV input: [rdx|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  716  <|@ instruction stack:32|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction r14|DWORD = LEA address: [r10|DWORD + 6] size: DWORD <|@ <|@
      nr  720  <|@ instruction r14|DWORD = MOV input: [rdx|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  722  <|@ instruction rdx|DWORD = LEA address: [r10|DWORD + 7] size: DWORD <|@ <|@
      nr  724  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  726  <|@ instruction r10|DWORD = ROL x: rbx|DWORD y: 5 size: DWORD <|@ <|@
      nr  728  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  730  <|@ instruction rdx|DWORD = XOR (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction rdx|DWORD = XOR (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  734  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  736  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  738  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  740  <|@ instruction r10|DWORD = LEA address: [r10|DWORD - 899497514] size: DWORD <|@ <|@
      nr  742  <|@ instruction r11|DWORD = ROL x: r10|DWORD y: 5 size: DWORD <|@ <|@
      nr  744  <|@ instruction rcx|DWORD = ROL x: rcx|DWORD y: 30 size: DWORD <|@ <|@
      nr  746  <|@ instruction rdi|DWORD = XOR (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  748  <|@ instruction rdi|DWORD = XOR (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  750  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  752  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  754  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  756  <|@ instruction r11|DWORD = LEA address: [r11|DWORD - 899497514] size: DWORD <|@ <|@
      nr  758  <|@ instruction r8|DWORD = ROL x: r11|DWORD y: 5 size: DWORD <|@ <|@
      nr  760  <|@ instruction rbx|DWORD = ROL x: rbx|DWORD y: 30 size: DWORD <|@ <|@
      nr  762  <|@ instruction rdi|DWORD = XOR (x: r10|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  764  <|@ instruction rdi|DWORD = XOR (x: rcx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  766  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  768  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  770  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  772  <|@ instruction r8|DWORD = LEA address: [r8|DWORD - 899497514] size: DWORD <|@ <|@
      nr  774  <|@ instruction r9|DWORD = ROL x: r8|DWORD y: 30 size: DWORD <|@ <|@
      nr  776  <|@ instruction rdi|DWORD = ROL x: r11|DWORD y: 30 size: DWORD <|@ <|@
      nr  778  <|@ instruction r10|DWORD = ROL x: r10|DWORD y: 30 size: DWORD <|@ <|@
      nr  780  <|@ instruction rdx|DWORD = ROL x: r8|DWORD y: 5 size: DWORD <|@ <|@
      nr  782  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  784  <|@ instruction r11|DWORD = XOR (x: rbx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  786  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  788  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  790  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  792  <|@ instruction r11|DWORD = LEA address: [rdx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  794  <|@ instruction rcx|DWORD = ROL x: r11|DWORD y: 5 size: DWORD <|@ <|@
      nr  796  <|@ instruction r8|DWORD = XOR (x: r8|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  798  <|@ instruction r8|DWORD = XOR (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  800  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  804  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  806  <|@ instruction r8|DWORD = LEA address: [rcx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  808  <|@ instruction rcx|DWORD = ROL x: r8|DWORD y: 5 size: DWORD <|@ <|@
      nr  810  <|@ instruction rbx|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  812  <|@ instruction rbx|DWORD = XOR (x: rdi|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  814  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  816  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  818  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: stack:32|DWORD) size: DWORD <|@ <|@
      nr  820  <|@ instruction r10|DWORD = LEA address: [rcx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  822  <|@ instruction rcx|DWORD = ROL x: r10|DWORD y: 5 size: DWORD <|@ <|@
      nr  824  <|@ instruction r11|DWORD = ROL x: r11|DWORD y: 30 size: DWORD <|@ <|@
      nr  826  <|@ instruction rbx|DWORD = XOR (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  828  <|@ instruction rbx|DWORD = XOR (x: r9|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  830  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  832  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  834  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  836  <|@ instruction rcx|DWORD = LEA address: [rcx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  838  <|@ instruction rbx|DWORD = ROL x: rcx|DWORD y: 5 size: DWORD <|@ <|@
      nr  840  <|@ instruction r8|DWORD = ROL x: r8|DWORD y: 30 size: DWORD <|@ <|@
      nr  842  <|@ instruction rdi|DWORD = XOR (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  844  <|@ instruction rdi|DWORD = XOR (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  846  <|@ instruction rbx|DWORD = ADD (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  848  <|@ instruction rbx|DWORD = ADD (x: rbx|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  850  <|@ instruction rdi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction rbx|DWORD = ADD (x: rbx|DWORD, ~y: [rdi|QWORD[.] + rdx|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  856  <|@ instruction rbx|DWORD = LEA address: [rbx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  858  <|@ instruction r10|DWORD = ROL x: r10|DWORD y: 30 size: DWORD <|@ <|@
      nr  860  <|@ instruction rdx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction r9|DWORD = LEA address: [rdx|DWORD + 8] size: DWORD <|@ <|@
      nr  864  <|@ instruction rdx|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  868  <|@ instruction r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  872  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606324590299565886
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  876  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  878  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  888  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606406907175871841
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576421901864634512
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction rdx|DWORD = ROL x: rbx|DWORD y: 5 size: DWORD <|@ <|@
      nr  934  <|@ instruction rsi|DWORD = XOR (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  936  <|@ instruction rsi|DWORD = XOR (x: rsi|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  938  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  940  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  942  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rdi|QWORD[.] + r10|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  944  <|@ instruction r11|DWORD = LEA address: [rdx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  946  <|@ instruction rcx|DWORD = ROL x: rcx|DWORD y: 30 size: DWORD <|@ <|@
      nr  948  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  950  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction r8|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  954  <|@ instruction r9|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  956  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ instruction rbx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  960  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606324590299565887
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B26" 
    xhandlers
    flags 
    probability 4587023449039406624
    begin_IR
      LIR
      nr 1038  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1040  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1042  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1052  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1054  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1056  <|@ instruction stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1058  <|@ instruction rbx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1060  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1062  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B26" 
    xhandlers
    flags 
    probability 4587023449039406622
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction r8|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1006  <|@ instruction r9|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr 1008  <|@ instruction rbx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1010  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1012  <|@ instruction stack:36|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1014  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1016  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1018  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B25" "B23" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 5 label: ? <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 52] size: DWORD <|@ <|@
      nr 1078  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
locals: r10|QWORD[.] - - rbx|DWORD rcx|DWORD r9|DWORD r8|DWORD r11|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH x: [rdi|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 5 size: DWORD inlinedY: null state [bci:423] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1130  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 20], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1132  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 24], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1134  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 28], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1136  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 32], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1138  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction rdx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1032  <|@ instruction r8|DWORD = MOVE input: int[-105755|0xfffffffffffe62e5] <|@ <|@
      nr 1036  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction rdx|QWORD = MOVE input: long[664|0x298] <|@ <|@
      nr  246  <|@ instruction r8|DWORD = MOVE input: int[-110619|0xfffffffffffe4fe5] <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction MOV x: [r15|QWORD + 1156] y: -133915 size: DWORD <|@ <|@
      nr 1098  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1100  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
locals: r10|QWORD[.] - - rbx|DWORD rcx|DWORD r9|DWORD r8|DWORD r11|DWORD - - 
>@ <|@ instruction DEOPT info [bci:423] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  978  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction rdx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  988  <|@ instruction r8|DWORD = MOVE input: int[-108315|0xfffffffffffe58e5] <|@ <|@
      nr  992  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rdx|QWORD = MOVE input: long[664|0x298] <|@ <|@
      nr  264  <|@ instruction r8|DWORD = MOVE input: int[-110619|0xfffffffffffe4fe5] <|@ <|@
      nr  268  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1142  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction rdx|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1152  <|@ instruction r8|DWORD = MOVE input: int[-102716|0xfffffffffffe6ec4] <|@ <|@
      nr 1156  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B24" "B9" "B22" "B8" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1154  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1176  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1178  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: r10|QWORD[.] - - r11|DWORD rsi|DWORD r9|DWORD rcx|DWORD rbx|DWORD rdi|DWORD - 
>@ <|@ instruction DEOPT info [bci:357] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // W:int[]
     4: ifnonnull     15
     7: aload_0       
     8: bipush        80
    10: newarray      int
    12: putfield      #5          // W:int[]
    15: aload_1       
    16: iload_2       
    17: aload_0       
    18: getfield      #5          // W:int[]
    21: invokestatic  #19         // sun.security.provider.ByteArrayAccess.b2iBig64:(byte[], int, int[])void
    24: bipush        16
    26: istore_3      
    27: iload_3       
    28: bipush        79
    30: if_icmpgt     91
    33: aload_0       
    34: getfield      #5          // W:int[]
    37: iload_3       
    38: iconst_3      
    39: isub          
    40: iaload        
    41: aload_0       
    42: getfield      #5          // W:int[]
    45: iload_3       
    46: bipush        8
    48: isub          
    49: iaload        
    50: ixor          
    51: aload_0       
    52: getfield      #5          // W:int[]
    55: iload_3       
    56: bipush        14
    58: isub          
    59: iaload        
    60: ixor          
    61: aload_0       
    62: getfield      #5          // W:int[]
    65: iload_3       
    66: bipush        16
    68: isub          
    69: iaload        
    70: ixor          
    71: istore        4
    73: aload_0       
    74: getfield      #5          // W:int[]
    77: iload_3       
    78: iload         4
    80: iconst_1      
    81: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
    84: iastore       
    85: iinc          
    88: goto          27
    91: aload_0       
    92: getfield      #1          // state:int[]
    95: iconst_0      
    96: iaload        
    97: istore_3      
    98: aload_0       
    99: getfield      #1          // state:int[]
   102: iconst_1      
   103: iaload        
   104: istore        4
   106: aload_0       
   107: getfield      #1          // state:int[]
   110: iconst_2      
   111: iaload        
   112: istore        5
   114: aload_0       
   115: getfield      #1          // state:int[]
   118: iconst_3      
   119: iaload        
   120: istore        6
   122: aload_0       
   123: getfield      #1          // state:int[]
   126: iconst_4      
   127: iaload        
   128: istore        7
   130: iconst_0      
   131: istore        8
   133: iload         8
   135: bipush        20
   137: if_icmpge     204
   140: iload_3       
   141: iconst_5      
   142: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   145: iload         4
   147: iload         5
   149: iand          
   150: iload         4
   152: iconst_m1     
   153: ixor          
   154: iload         6
   156: iand          
   157: ior           
   158: iadd          
   159: iload         7
   161: iadd          
   162: aload_0       
   163: getfield      #5          // W:int[]
   166: iload         8
   168: iaload        
   169: iadd          
   170: ldc           #100        // 1518500249
   172: iadd          
   173: istore        9
   175: iload         6
   177: istore        7
   179: iload         5
   181: istore        6
   183: iload         4
   185: bipush        30
   187: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   190: istore        5
   192: iload_3       
   193: istore        4
   195: iload         9
   197: istore_3      
   198: iinc          
   201: goto          133
   204: bipush        20
   206: istore        8
   208: iload         8
   210: bipush        40
   212: if_icmpge     274
   215: iload_3       
   216: iconst_5      
   217: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   220: iload         4
   222: iload         5
   224: ixor          
   225: iload         6
   227: ixor          
   228: iadd          
   229: iload         7
   231: iadd          
   232: aload_0       
   233: getfield      #5          // W:int[]
   236: iload         8
   238: iaload        
   239: iadd          
   240: ldc           #101        // 1859775393
   242: iadd          
   243: istore        9
   245: iload         6
   247: istore        7
   249: iload         5
   251: istore        6
   253: iload         4
   255: bipush        30
   257: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   260: istore        5
   262: iload_3       
   263: istore        4
   265: iload         9
   267: istore_3      
   268: iinc          
   271: goto          208
   274: bipush        40
   276: istore        8
   278: iload         8
   280: bipush        60
   282: if_icmpge     353
   285: iload_3       
   286: iconst_5      
   287: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   290: iload         4
   292: iload         5
   294: iand          
   295: iload         4
   297: iload         6
   299: iand          
   300: ior           
   301: iload         5
   303: iload         6
   305: iand          
   306: ior           
   307: iadd          
   308: iload         7
   310: iadd          
   311: aload_0       
   312: getfield      #5          // W:int[]
   315: iload         8
   317: iaload        
   318: iadd          
   319: ldc           #102        // -1894007588
   321: iadd          
   322: istore        9
   324: iload         6
   326: istore        7
   328: iload         5
   330: istore        6
   332: iload         4
   334: bipush        30
   336: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   339: istore        5
   341: iload_3       
   342: istore        4
   344: iload         9
   346: istore_3      
   347: iinc          
   350: goto          278
   353: bipush        60
   355: istore        8
   357: iload         8
   359: bipush        80
   361: if_icmpge     423
   364: iload_3       
   365: iconst_5      
   366: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   369: iload         4
   371: iload         5
   373: ixor          
   374: iload         6
   376: ixor          
   377: iadd          
   378: iload         7
   380: iadd          
   381: aload_0       
   382: getfield      #5          // W:int[]
   385: iload         8
   387: iaload        
   388: iadd          
   389: ldc           #103        // -899497514
   391: iadd          
   392: istore        9
   394: iload         6
   396: istore        7
   398: iload         5
   400: istore        6
   402: iload         4
   404: bipush        30
   406: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   409: istore        5
   411: iload_3       
   412: istore        4
   414: iload         9
   416: istore_3      
   417: iinc          
   420: goto          357
   423: aload_0       
   424: getfield      #1          // state:int[]
   427: iconst_0      
   428: dup2          
   429: iaload        
   430: iload_3       
   431: iadd          
   432: iastore       
   433: aload_0       
   434: getfield      #1          // state:int[]
   437: iconst_1      
   438: dup2          
   439: iaload        
   440: iload         4
   442: iadd          
   443: iastore       
   444: aload_0       
   445: getfield      #1          // state:int[]
   448: iconst_2      
   449: dup2          
   450: iaload        
   451: iload         5
   453: iadd          
   454: iastore       
   455: aload_0       
   456: getfield      #1          // state:int[]
   459: iconst_3      
   460: dup2          
   461: iaload        
   462: iload         6
   464: iadd          
   465: iastore       
   466: aload_0       
   467: getfield      #1          // state:int[]
   470: iconst_4      
   471: dup2          
   472: iaload        
   473: iload         7
   475: iadd          
   476: iastore       
   477: return        
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@31f9b0c2 slotKind: QWORD <|@ <|@
      nr   40  <|@ instruction r10|QWORD[.] = MOV input: [rsi|QWORD + 72] size: QWORD <|@ <|@
      nr   42  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD + 48] size: DWORD <|@ <|@
      nr   44  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD + 40] size: DWORD <|@ <|@
      nr   46  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD + 32] size: DWORD <|@ <|@
      nr   48  <|@ instruction rcx|DWORD = MOV input: [rsi|QWORD + 24] size: DWORD <|@ <|@
      nr   50  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction rdi|DWORD = MOV input: [rsi|QWORD + 8] size: DWORD <|@ <|@
      nr   54  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: r10|QWORD[.] - - r11|DWORD r8|DWORD r9|DWORD rcx|DWORD rbx|DWORD rdi|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B29 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lsun/security/provider/SHA;, resolved>;compressed} state [bci:357] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 0.9523809523809523 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B25 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B24" 
    xhandlers
    flags 
    probability 4606753504549791646
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction rdx|DWORD[_] = MOV input: [r10|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: r10|QWORD[.] - - r11|DWORD r8|DWORD r9|DWORD rcx|DWORD rbx|DWORD rdi|DWORD - 
>@ <|@ instruction rsi|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:357] <|@ <|@
      nr   88  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B23" 
    xhandlers
    flags 
    probability 4606753504549791646
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3087af84 encoding: base: 0 shift: 3 <|@ <|@
      nr  128  <|@ instruction rax|DWORD = ROL x: r11|DWORD y: 5 size: DWORD <|@ <|@
      nr  130  <|@ instruction rbp|DWORD = XOR (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction rbp|DWORD = XOR (x: rbp|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  134  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [rdx|QWORD[.] + rdi|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  140  <|@ instruction rax|DWORD = LEA address: [rax|DWORD - 899497514] size: DWORD <|@ <|@
      nr  142  <|@ instruction rbp|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  144  <|@ instruction r13|DWORD = ROL x: r8|DWORD y: 30 size: DWORD <|@ <|@
      nr  146  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.95 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B23 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B10" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction r14|DWORD = LEA address: [rdi|DWORD + 2] size: DWORD <|@ <|@
      nr  166  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B10 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B11" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  280  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction r10|DWORD = MOVE input: int[78|0x4e] <|@ <|@
      nr  198  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction r10|QWORD = MOVSXD value: r10|DWORD size: QWORD <|@ <|@
      nr  202  <|@ instruction r8|QWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  206  <|@ instruction r10|QWORD = DEC value: r10|QWORD size: QWORD <|@ <|@
      nr  208  <|@ instruction r8|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction CMPBRANCH (x: r8|QWORD, y: r10|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B7" 
    successors "B12" "B22" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction r10|DWORD = ROL x: rax|DWORD y: 5 size: DWORD <|@ <|@
      nr  336  <|@ instruction r8|DWORD = XOR (x: r13|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  338  <|@ instruction r8|DWORD = XOR (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  340  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  344  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, ~y: [rdx|QWORD[.] + rbp|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  346  <|@ instruction r10|DWORD = LEA address: [r10|DWORD - 899497514] size: DWORD <|@ <|@
      nr  348  <|@ instruction r8|DWORD = LEA address: [rdi|DWORD + 3] size: DWORD <|@ <|@
      nr  350  <|@ instruction CMP x: r8|DWORD y: 80 size: DWORD <|@ <|@
      nr  352  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[80|0x50], ~trueValue: r8|DWORD) condition: < <|@ <|@
      nr  354  <|@ instruction r11|DWORD = ROL x: r11|DWORD y: 30 size: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606406907175871839
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r14|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576421901864634511
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction r8|DWORD = ROL x: r10|DWORD y: 5 size: DWORD <|@ <|@
      nr  402  <|@ instruction rbx|DWORD = XOR (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  404  <|@ instruction rbx|DWORD = XOR (x: rbx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  408  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  410  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, ~y: [rdx|QWORD[.] + r14|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  412  <|@ instruction r8|DWORD = LEA address: [r8|DWORD - 899497514] size: DWORD <|@ <|@
      nr  414  <|@ instruction r14|DWORD = INC value: r14|DWORD size: DWORD <|@ <|@
      nr  416  <|@ instruction rax|DWORD = ROL x: rax|DWORD y: 30 size: DWORD <|@ <|@
      nr  418  <|@ instruction r9|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction r13|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  426  <|@ instruction r10|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606324590299565885
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction rbx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  442  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  444  <|@ instruction r8|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction r10|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  448  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  450  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" 
    successors "B17" "B18" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4612021107685376776
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.5789473684210522 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 72 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4608281511566220913
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction rdi|DWORD = MOV input: [rdx|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  696  <|@ instruction rsi|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  698  <|@ instruction rsi|DWORD = MOV input: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  700  <|@ instruction rax|DWORD = LEA address: [r10|DWORD + 2] size: DWORD <|@ <|@
      nr  702  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  704  <|@ instruction rbp|DWORD = LEA address: [r10|DWORD + 3] size: DWORD <|@ <|@
      nr  706  <|@ instruction rbp|DWORD = MOV input: [rdx|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  708  <|@ instruction r13|DWORD = LEA address: [r10|DWORD + 4] size: DWORD <|@ <|@
      nr  710  <|@ instruction r13|DWORD = MOV input: [rdx|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  712  <|@ instruction r14|DWORD = LEA address: [r10|DWORD + 5] size: DWORD <|@ <|@
      nr  714  <|@ instruction r14|DWORD = MOV input: [rdx|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  716  <|@ instruction stack:32|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction r14|DWORD = LEA address: [r10|DWORD + 6] size: DWORD <|@ <|@
      nr  720  <|@ instruction r14|DWORD = MOV input: [rdx|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  722  <|@ instruction rdx|DWORD = LEA address: [r10|DWORD + 7] size: DWORD <|@ <|@
      nr  724  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  726  <|@ instruction r10|DWORD = ROL x: rbx|DWORD y: 5 size: DWORD <|@ <|@
      nr  728  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  730  <|@ instruction rdx|DWORD = XOR (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction rdx|DWORD = XOR (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  734  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  736  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  738  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  740  <|@ instruction r10|DWORD = LEA address: [r10|DWORD - 899497514] size: DWORD <|@ <|@
      nr  742  <|@ instruction r11|DWORD = ROL x: r10|DWORD y: 5 size: DWORD <|@ <|@
      nr  744  <|@ instruction rcx|DWORD = ROL x: rcx|DWORD y: 30 size: DWORD <|@ <|@
      nr  746  <|@ instruction rdi|DWORD = XOR (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  748  <|@ instruction rdi|DWORD = XOR (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  750  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  752  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  754  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  756  <|@ instruction r11|DWORD = LEA address: [r11|DWORD - 899497514] size: DWORD <|@ <|@
      nr  758  <|@ instruction r8|DWORD = ROL x: r11|DWORD y: 5 size: DWORD <|@ <|@
      nr  760  <|@ instruction rbx|DWORD = ROL x: rbx|DWORD y: 30 size: DWORD <|@ <|@
      nr  762  <|@ instruction rdi|DWORD = XOR (x: r10|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  764  <|@ instruction rdi|DWORD = XOR (x: rcx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  766  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  768  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  770  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  772  <|@ instruction r8|DWORD = LEA address: [r8|DWORD - 899497514] size: DWORD <|@ <|@
      nr  774  <|@ instruction r9|DWORD = ROL x: r8|DWORD y: 30 size: DWORD <|@ <|@
      nr  776  <|@ instruction rdi|DWORD = ROL x: r11|DWORD y: 30 size: DWORD <|@ <|@
      nr  778  <|@ instruction r10|DWORD = ROL x: r10|DWORD y: 30 size: DWORD <|@ <|@
      nr  780  <|@ instruction rdx|DWORD = ROL x: r8|DWORD y: 5 size: DWORD <|@ <|@
      nr  782  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  784  <|@ instruction r11|DWORD = XOR (x: rbx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  786  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  788  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  790  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  792  <|@ instruction r11|DWORD = LEA address: [rdx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  794  <|@ instruction rcx|DWORD = ROL x: r11|DWORD y: 5 size: DWORD <|@ <|@
      nr  796  <|@ instruction r8|DWORD = XOR (x: r8|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  798  <|@ instruction r8|DWORD = XOR (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  800  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  804  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  806  <|@ instruction r8|DWORD = LEA address: [rcx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  808  <|@ instruction rcx|DWORD = ROL x: r8|DWORD y: 5 size: DWORD <|@ <|@
      nr  810  <|@ instruction rbx|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  812  <|@ instruction rbx|DWORD = XOR (x: rdi|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  814  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  816  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  818  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: stack:32|DWORD) size: DWORD <|@ <|@
      nr  820  <|@ instruction r10|DWORD = LEA address: [rcx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  822  <|@ instruction rcx|DWORD = ROL x: r10|DWORD y: 5 size: DWORD <|@ <|@
      nr  824  <|@ instruction r11|DWORD = ROL x: r11|DWORD y: 30 size: DWORD <|@ <|@
      nr  826  <|@ instruction rbx|DWORD = XOR (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  828  <|@ instruction rbx|DWORD = XOR (x: r9|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  830  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  832  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  834  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  836  <|@ instruction rcx|DWORD = LEA address: [rcx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  838  <|@ instruction rbx|DWORD = ROL x: rcx|DWORD y: 5 size: DWORD <|@ <|@
      nr  840  <|@ instruction r8|DWORD = ROL x: r8|DWORD y: 30 size: DWORD <|@ <|@
      nr  842  <|@ instruction rdi|DWORD = XOR (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  844  <|@ instruction rdi|DWORD = XOR (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  846  <|@ instruction rbx|DWORD = ADD (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  848  <|@ instruction rbx|DWORD = ADD (x: rbx|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  850  <|@ instruction rdi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction rbx|DWORD = ADD (x: rbx|DWORD, ~y: [rdi|QWORD[.] + rdx|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  856  <|@ instruction rbx|DWORD = LEA address: [rbx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  858  <|@ instruction r10|DWORD = ROL x: r10|DWORD y: 30 size: DWORD <|@ <|@
      nr  860  <|@ instruction rdx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction r9|DWORD = LEA address: [rdx|DWORD + 8] size: DWORD <|@ <|@
      nr  864  <|@ instruction rdx|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  868  <|@ instruction r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  872  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606324590299565886
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  876  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  878  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606406907175871841
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576421901864634512
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction rdx|DWORD = ROL x: rbx|DWORD y: 5 size: DWORD <|@ <|@
      nr  934  <|@ instruction rsi|DWORD = XOR (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  936  <|@ instruction rsi|DWORD = XOR (x: rsi|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  938  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  940  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  942  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rdi|QWORD[.] + r10|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  944  <|@ instruction r11|DWORD = LEA address: [rdx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  946  <|@ instruction rcx|DWORD = ROL x: rcx|DWORD y: 30 size: DWORD <|@ <|@
      nr  948  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  950  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction r8|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  954  <|@ instruction r9|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  956  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ instruction rbx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  960  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606324590299565887
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B26" 
    xhandlers
    flags 
    probability 4587023449039406624
    begin_IR
      LIR
      nr 1038  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1040  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1042  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1052  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1056  <|@ instruction stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1058  <|@ instruction rbx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1060  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1062  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B26" 
    xhandlers
    flags 
    probability 4587023449039406622
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction r8|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1006  <|@ instruction r9|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr 1008  <|@ instruction rbx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction stack:36|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1014  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1016  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1018  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B25" "B23" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 5 label: ? <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 52] size: DWORD <|@ <|@
      nr 1078  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
locals: r10|QWORD[.] - - rbx|DWORD rcx|DWORD r9|DWORD r8|DWORD r11|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH x: [rdi|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 5 size: DWORD inlinedY: null state [bci:423] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1130  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 20], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1132  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 24], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1134  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 28], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1136  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 32], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1138  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction rdx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1032  <|@ instruction r8|DWORD = MOVE input: int[-105755|0xfffffffffffe62e5] <|@ <|@
      nr 1036  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction rdx|QWORD = MOVE input: long[664|0x298] <|@ <|@
      nr  246  <|@ instruction r8|DWORD = MOVE input: int[-110619|0xfffffffffffe4fe5] <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction MOV x: [r15|QWORD + 1156] y: -133915 size: DWORD <|@ <|@
      nr 1098  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1100  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
locals: r10|QWORD[.] - - rbx|DWORD rcx|DWORD r9|DWORD r8|DWORD r11|DWORD - - 
>@ <|@ instruction DEOPT info [bci:423] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  978  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction rdx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  988  <|@ instruction r8|DWORD = MOVE input: int[-108315|0xfffffffffffe58e5] <|@ <|@
      nr  992  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rdx|QWORD = MOVE input: long[664|0x298] <|@ <|@
      nr  264  <|@ instruction r8|DWORD = MOVE input: int[-110619|0xfffffffffffe4fe5] <|@ <|@
      nr  268  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1142  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction rdx|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1152  <|@ instruction r8|DWORD = MOVE input: int[-102716|0xfffffffffffe6ec4] <|@ <|@
      nr 1156  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B24" "B9" "B22" "B8" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1154  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1176  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1178  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: r10|QWORD[.] - - r11|DWORD rsi|DWORD r9|DWORD rcx|DWORD rbx|DWORD rdi|DWORD - 
>@ <|@ instruction DEOPT info [bci:357] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // W:int[]
     4: ifnonnull     15
     7: aload_0       
     8: bipush        80
    10: newarray      int
    12: putfield      #5          // W:int[]
    15: aload_1       
    16: iload_2       
    17: aload_0       
    18: getfield      #5          // W:int[]
    21: invokestatic  #19         // sun.security.provider.ByteArrayAccess.b2iBig64:(byte[], int, int[])void
    24: bipush        16
    26: istore_3      
    27: iload_3       
    28: bipush        79
    30: if_icmpgt     91
    33: aload_0       
    34: getfield      #5          // W:int[]
    37: iload_3       
    38: iconst_3      
    39: isub          
    40: iaload        
    41: aload_0       
    42: getfield      #5          // W:int[]
    45: iload_3       
    46: bipush        8
    48: isub          
    49: iaload        
    50: ixor          
    51: aload_0       
    52: getfield      #5          // W:int[]
    55: iload_3       
    56: bipush        14
    58: isub          
    59: iaload        
    60: ixor          
    61: aload_0       
    62: getfield      #5          // W:int[]
    65: iload_3       
    66: bipush        16
    68: isub          
    69: iaload        
    70: ixor          
    71: istore        4
    73: aload_0       
    74: getfield      #5          // W:int[]
    77: iload_3       
    78: iload         4
    80: iconst_1      
    81: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
    84: iastore       
    85: iinc          
    88: goto          27
    91: aload_0       
    92: getfield      #1          // state:int[]
    95: iconst_0      
    96: iaload        
    97: istore_3      
    98: aload_0       
    99: getfield      #1          // state:int[]
   102: iconst_1      
   103: iaload        
   104: istore        4
   106: aload_0       
   107: getfield      #1          // state:int[]
   110: iconst_2      
   111: iaload        
   112: istore        5
   114: aload_0       
   115: getfield      #1          // state:int[]
   118: iconst_3      
   119: iaload        
   120: istore        6
   122: aload_0       
   123: getfield      #1          // state:int[]
   126: iconst_4      
   127: iaload        
   128: istore        7
   130: iconst_0      
   131: istore        8
   133: iload         8
   135: bipush        20
   137: if_icmpge     204
   140: iload_3       
   141: iconst_5      
   142: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   145: iload         4
   147: iload         5
   149: iand          
   150: iload         4
   152: iconst_m1     
   153: ixor          
   154: iload         6
   156: iand          
   157: ior           
   158: iadd          
   159: iload         7
   161: iadd          
   162: aload_0       
   163: getfield      #5          // W:int[]
   166: iload         8
   168: iaload        
   169: iadd          
   170: ldc           #100        // 1518500249
   172: iadd          
   173: istore        9
   175: iload         6
   177: istore        7
   179: iload         5
   181: istore        6
   183: iload         4
   185: bipush        30
   187: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   190: istore        5
   192: iload_3       
   193: istore        4
   195: iload         9
   197: istore_3      
   198: iinc          
   201: goto          133
   204: bipush        20
   206: istore        8
   208: iload         8
   210: bipush        40
   212: if_icmpge     274
   215: iload_3       
   216: iconst_5      
   217: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   220: iload         4
   222: iload         5
   224: ixor          
   225: iload         6
   227: ixor          
   228: iadd          
   229: iload         7
   231: iadd          
   232: aload_0       
   233: getfield      #5          // W:int[]
   236: iload         8
   238: iaload        
   239: iadd          
   240: ldc           #101        // 1859775393
   242: iadd          
   243: istore        9
   245: iload         6
   247: istore        7
   249: iload         5
   251: istore        6
   253: iload         4
   255: bipush        30
   257: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   260: istore        5
   262: iload_3       
   263: istore        4
   265: iload         9
   267: istore_3      
   268: iinc          
   271: goto          208
   274: bipush        40
   276: istore        8
   278: iload         8
   280: bipush        60
   282: if_icmpge     353
   285: iload_3       
   286: iconst_5      
   287: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   290: iload         4
   292: iload         5
   294: iand          
   295: iload         4
   297: iload         6
   299: iand          
   300: ior           
   301: iload         5
   303: iload         6
   305: iand          
   306: ior           
   307: iadd          
   308: iload         7
   310: iadd          
   311: aload_0       
   312: getfield      #5          // W:int[]
   315: iload         8
   317: iaload        
   318: iadd          
   319: ldc           #102        // -1894007588
   321: iadd          
   322: istore        9
   324: iload         6
   326: istore        7
   328: iload         5
   330: istore        6
   332: iload         4
   334: bipush        30
   336: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   339: istore        5
   341: iload_3       
   342: istore        4
   344: iload         9
   346: istore_3      
   347: iinc          
   350: goto          278
   353: bipush        60
   355: istore        8
   357: iload         8
   359: bipush        80
   361: if_icmpge     423
   364: iload_3       
   365: iconst_5      
   366: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   369: iload         4
   371: iload         5
   373: ixor          
   374: iload         6
   376: ixor          
   377: iadd          
   378: iload         7
   380: iadd          
   381: aload_0       
   382: getfield      #5          // W:int[]
   385: iload         8
   387: iaload        
   388: iadd          
   389: ldc           #103        // -899497514
   391: iadd          
   392: istore        9
   394: iload         6
   396: istore        7
   398: iload         5
   400: istore        6
   402: iload         4
   404: bipush        30
   406: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   409: istore        5
   411: iload_3       
   412: istore        4
   414: iload         9
   416: istore_3      
   417: iinc          
   420: goto          357
   423: aload_0       
   424: getfield      #1          // state:int[]
   427: iconst_0      
   428: dup2          
   429: iaload        
   430: iload_3       
   431: iadd          
   432: iastore       
   433: aload_0       
   434: getfield      #1          // state:int[]
   437: iconst_1      
   438: dup2          
   439: iaload        
   440: iload         4
   442: iadd          
   443: iastore       
   444: aload_0       
   445: getfield      #1          // state:int[]
   448: iconst_2      
   449: dup2          
   450: iaload        
   451: iload         5
   453: iadd          
   454: iastore       
   455: aload_0       
   456: getfield      #1          // state:int[]
   459: iconst_3      
   460: dup2          
   461: iaload        
   462: iload         6
   464: iadd          
   465: iastore       
   466: aload_0       
   467: getfield      #1          // state:int[]
   470: iconst_4      
   471: dup2          
   472: iaload        
   473: iload         7
   475: iadd          
   476: iastore       
   477: return        
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@31f9b0c2 slotKind: QWORD <|@ <|@
      nr   40  <|@ instruction r10|QWORD[.] = MOV input: [rsi|QWORD + 72] size: QWORD <|@ <|@
      nr   42  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD + 48] size: DWORD <|@ <|@
      nr   44  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD + 40] size: DWORD <|@ <|@
      nr   46  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD + 32] size: DWORD <|@ <|@
      nr   48  <|@ instruction rcx|DWORD = MOV input: [rsi|QWORD + 24] size: DWORD <|@ <|@
      nr   50  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction rdi|DWORD = MOV input: [rsi|QWORD + 8] size: DWORD <|@ <|@
      nr   54  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: r10|QWORD[.] - - r11|DWORD r8|DWORD r9|DWORD rcx|DWORD rbx|DWORD rdi|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B29 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lsun/security/provider/SHA;, resolved>;compressed} state [bci:357] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 0.9523809523809523 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B25 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B24" 
    xhandlers
    flags 
    probability 4606753504549791646
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction rdx|DWORD[_] = MOV input: [r10|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: r10|QWORD[.] - - r11|DWORD r8|DWORD r9|DWORD rcx|DWORD rbx|DWORD rdi|DWORD - 
>@ <|@ instruction rsi|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:357] <|@ <|@
      nr   88  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B23" 
    xhandlers
    flags 
    probability 4606753504549791646
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3087af84 encoding: base: 0 shift: 3 <|@ <|@
      nr  128  <|@ instruction rax|DWORD = ROL x: r11|DWORD y: 5 size: DWORD <|@ <|@
      nr  130  <|@ instruction rbp|DWORD = XOR (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction rbp|DWORD = XOR (x: rbp|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  134  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [rdx|QWORD[.] + rdi|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  140  <|@ instruction rax|DWORD = LEA address: [rax|DWORD - 899497514] size: DWORD <|@ <|@
      nr  142  <|@ instruction rbp|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  144  <|@ instruction r13|DWORD = ROL x: r8|DWORD y: 30 size: DWORD <|@ <|@
      nr  146  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.95 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B23 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B10" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction r14|DWORD = LEA address: [rdi|DWORD + 2] size: DWORD <|@ <|@
      nr  166  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B10 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B11" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  280  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction r10|DWORD = MOVE input: int[78|0x4e] <|@ <|@
      nr  198  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction r10|QWORD = MOVSXD value: r10|DWORD size: QWORD <|@ <|@
      nr  202  <|@ instruction r8|QWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  206  <|@ instruction r10|QWORD = DEC value: r10|QWORD size: QWORD <|@ <|@
      nr  208  <|@ instruction r8|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction CMPBRANCH (x: r8|QWORD, y: r10|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B7" 
    successors "B12" "B22" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction r10|DWORD = ROL x: rax|DWORD y: 5 size: DWORD <|@ <|@
      nr  336  <|@ instruction r8|DWORD = XOR (x: r13|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  338  <|@ instruction r8|DWORD = XOR (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  340  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  344  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, ~y: [rdx|QWORD[.] + rbp|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  346  <|@ instruction r10|DWORD = LEA address: [r10|DWORD - 899497514] size: DWORD <|@ <|@
      nr  348  <|@ instruction r8|DWORD = LEA address: [rdi|DWORD + 3] size: DWORD <|@ <|@
      nr  350  <|@ instruction CMP x: r8|DWORD y: 80 size: DWORD <|@ <|@
      nr  352  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[80|0x50], ~trueValue: r8|DWORD) condition: < <|@ <|@
      nr  354  <|@ instruction r11|DWORD = ROL x: r11|DWORD y: 30 size: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606406907175871839
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r14|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576421901864634511
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction r8|DWORD = ROL x: r10|DWORD y: 5 size: DWORD <|@ <|@
      nr  402  <|@ instruction rbx|DWORD = XOR (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  404  <|@ instruction rbx|DWORD = XOR (x: rbx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  408  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  410  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, ~y: [rdx|QWORD[.] + r14|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  412  <|@ instruction r8|DWORD = LEA address: [r8|DWORD - 899497514] size: DWORD <|@ <|@
      nr  414  <|@ instruction r14|DWORD = INC value: r14|DWORD size: DWORD <|@ <|@
      nr  416  <|@ instruction rax|DWORD = ROL x: rax|DWORD y: 30 size: DWORD <|@ <|@
      nr  418  <|@ instruction r9|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction r13|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  426  <|@ instruction r10|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606324590299565885
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction rbx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  442  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  444  <|@ instruction r8|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction r10|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  448  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  450  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" 
    successors "B17" "B18" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4612021107685376776
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.5789473684210522 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 72 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4608281511566220913
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction rdi|DWORD = MOV input: [rdx|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  696  <|@ instruction rsi|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  698  <|@ instruction rsi|DWORD = MOV input: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  700  <|@ instruction rax|DWORD = LEA address: [r10|DWORD + 2] size: DWORD <|@ <|@
      nr  702  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  704  <|@ instruction rbp|DWORD = LEA address: [r10|DWORD + 3] size: DWORD <|@ <|@
      nr  706  <|@ instruction rbp|DWORD = MOV input: [rdx|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  708  <|@ instruction r13|DWORD = LEA address: [r10|DWORD + 4] size: DWORD <|@ <|@
      nr  710  <|@ instruction r13|DWORD = MOV input: [rdx|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  712  <|@ instruction r14|DWORD = LEA address: [r10|DWORD + 5] size: DWORD <|@ <|@
      nr  714  <|@ instruction r14|DWORD = MOV input: [rdx|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  716  <|@ instruction stack:32|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction r14|DWORD = LEA address: [r10|DWORD + 6] size: DWORD <|@ <|@
      nr  720  <|@ instruction r14|DWORD = MOV input: [rdx|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  722  <|@ instruction rdx|DWORD = LEA address: [r10|DWORD + 7] size: DWORD <|@ <|@
      nr  724  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  726  <|@ instruction r10|DWORD = ROL x: rbx|DWORD y: 5 size: DWORD <|@ <|@
      nr  728  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  730  <|@ instruction rdx|DWORD = XOR (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction rdx|DWORD = XOR (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  734  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  736  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  738  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  740  <|@ instruction r10|DWORD = LEA address: [r10|DWORD - 899497514] size: DWORD <|@ <|@
      nr  742  <|@ instruction r11|DWORD = ROL x: r10|DWORD y: 5 size: DWORD <|@ <|@
      nr  744  <|@ instruction rcx|DWORD = ROL x: rcx|DWORD y: 30 size: DWORD <|@ <|@
      nr  746  <|@ instruction rdi|DWORD = XOR (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  748  <|@ instruction rdi|DWORD = XOR (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  750  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  752  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  754  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  756  <|@ instruction r11|DWORD = LEA address: [r11|DWORD - 899497514] size: DWORD <|@ <|@
      nr  758  <|@ instruction r8|DWORD = ROL x: r11|DWORD y: 5 size: DWORD <|@ <|@
      nr  760  <|@ instruction rbx|DWORD = ROL x: rbx|DWORD y: 30 size: DWORD <|@ <|@
      nr  762  <|@ instruction rdi|DWORD = XOR (x: r10|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  764  <|@ instruction rdi|DWORD = XOR (x: rcx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  766  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  768  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  770  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  772  <|@ instruction r8|DWORD = LEA address: [r8|DWORD - 899497514] size: DWORD <|@ <|@
      nr  774  <|@ instruction r9|DWORD = ROL x: r8|DWORD y: 30 size: DWORD <|@ <|@
      nr  776  <|@ instruction rdi|DWORD = ROL x: r11|DWORD y: 30 size: DWORD <|@ <|@
      nr  778  <|@ instruction r10|DWORD = ROL x: r10|DWORD y: 30 size: DWORD <|@ <|@
      nr  780  <|@ instruction rdx|DWORD = ROL x: r8|DWORD y: 5 size: DWORD <|@ <|@
      nr  782  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  784  <|@ instruction r11|DWORD = XOR (x: rbx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  786  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  788  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  790  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  792  <|@ instruction r11|DWORD = LEA address: [rdx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  794  <|@ instruction rcx|DWORD = ROL x: r11|DWORD y: 5 size: DWORD <|@ <|@
      nr  796  <|@ instruction r8|DWORD = XOR (x: r8|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  798  <|@ instruction r8|DWORD = XOR (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  800  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  804  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  806  <|@ instruction r8|DWORD = LEA address: [rcx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  808  <|@ instruction rcx|DWORD = ROL x: r8|DWORD y: 5 size: DWORD <|@ <|@
      nr  810  <|@ instruction rbx|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  812  <|@ instruction rbx|DWORD = XOR (x: rdi|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  814  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  816  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  818  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: stack:32|DWORD) size: DWORD <|@ <|@
      nr  820  <|@ instruction r10|DWORD = LEA address: [rcx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  822  <|@ instruction rcx|DWORD = ROL x: r10|DWORD y: 5 size: DWORD <|@ <|@
      nr  824  <|@ instruction r11|DWORD = ROL x: r11|DWORD y: 30 size: DWORD <|@ <|@
      nr  826  <|@ instruction rbx|DWORD = XOR (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  828  <|@ instruction rbx|DWORD = XOR (x: r9|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  830  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  832  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  834  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  836  <|@ instruction rcx|DWORD = LEA address: [rcx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  838  <|@ instruction rbx|DWORD = ROL x: rcx|DWORD y: 5 size: DWORD <|@ <|@
      nr  840  <|@ instruction r8|DWORD = ROL x: r8|DWORD y: 30 size: DWORD <|@ <|@
      nr  842  <|@ instruction rdi|DWORD = XOR (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  844  <|@ instruction rdi|DWORD = XOR (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  846  <|@ instruction rbx|DWORD = ADD (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  848  <|@ instruction rbx|DWORD = ADD (x: rbx|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  850  <|@ instruction rdi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction rbx|DWORD = ADD (x: rbx|DWORD, ~y: [rdi|QWORD[.] + rdx|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  856  <|@ instruction rbx|DWORD = LEA address: [rbx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  858  <|@ instruction r10|DWORD = ROL x: r10|DWORD y: 30 size: DWORD <|@ <|@
      nr  860  <|@ instruction rdx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction r9|DWORD = LEA address: [rdx|DWORD + 8] size: DWORD <|@ <|@
      nr  864  <|@ instruction rdx|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  868  <|@ instruction r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  872  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606324590299565886
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  876  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  878  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606406907175871841
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576421901864634512
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction rdx|DWORD = ROL x: rbx|DWORD y: 5 size: DWORD <|@ <|@
      nr  934  <|@ instruction rsi|DWORD = XOR (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  936  <|@ instruction rsi|DWORD = XOR (x: rsi|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  938  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  940  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  942  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rdi|QWORD[.] + r10|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  944  <|@ instruction r11|DWORD = LEA address: [rdx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  946  <|@ instruction rcx|DWORD = ROL x: rcx|DWORD y: 30 size: DWORD <|@ <|@
      nr  948  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  950  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction r8|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  954  <|@ instruction r9|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  956  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ instruction rbx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  960  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606324590299565887
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B26" 
    xhandlers
    flags 
    probability 4587023449039406624
    begin_IR
      LIR
      nr 1038  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1040  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1042  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1052  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1056  <|@ instruction stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1058  <|@ instruction rbx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1060  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1062  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B26" 
    xhandlers
    flags 
    probability 4587023449039406622
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction r8|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1006  <|@ instruction r9|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr 1008  <|@ instruction rbx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction stack:36|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1014  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1016  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1018  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B25" "B23" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 5 label: ? <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 52] size: DWORD <|@ <|@
      nr 1078  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
locals: r10|QWORD[.] - - rbx|DWORD rcx|DWORD r9|DWORD r8|DWORD r11|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH x: [rdi|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 5 size: DWORD inlinedY: null state [bci:423] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1130  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 20], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1132  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 24], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1134  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 28], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1136  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 32], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1138  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction rdx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1032  <|@ instruction r8|DWORD = MOVE input: int[-105755|0xfffffffffffe62e5] <|@ <|@
      nr 1036  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction rdx|QWORD = MOVE input: long[664|0x298] <|@ <|@
      nr  246  <|@ instruction r8|DWORD = MOVE input: int[-110619|0xfffffffffffe4fe5] <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction MOV x: [r15|QWORD + 1156] y: -133915 size: DWORD <|@ <|@
      nr 1098  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1100  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
locals: r10|QWORD[.] - - rbx|DWORD rcx|DWORD r9|DWORD r8|DWORD r11|DWORD - - 
>@ <|@ instruction DEOPT info [bci:423] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  978  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction rdx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  988  <|@ instruction r8|DWORD = MOVE input: int[-108315|0xfffffffffffe58e5] <|@ <|@
      nr  992  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rdx|QWORD = MOVE input: long[664|0x298] <|@ <|@
      nr  264  <|@ instruction r8|DWORD = MOVE input: int[-110619|0xfffffffffffe4fe5] <|@ <|@
      nr  268  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1142  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction rdx|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1152  <|@ instruction r8|DWORD = MOVE input: int[-102716|0xfffffffffffe6ec4] <|@ <|@
      nr 1156  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B24" "B9" "B22" "B8" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1154  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1176  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1178  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: r10|QWORD[.] - - r11|DWORD rsi|DWORD r9|DWORD rcx|DWORD rbx|DWORD rdi|DWORD - 
>@ <|@ instruction DEOPT info [bci:357] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // W:int[]
     4: ifnonnull     15
     7: aload_0       
     8: bipush        80
    10: newarray      int
    12: putfield      #5          // W:int[]
    15: aload_1       
    16: iload_2       
    17: aload_0       
    18: getfield      #5          // W:int[]
    21: invokestatic  #19         // sun.security.provider.ByteArrayAccess.b2iBig64:(byte[], int, int[])void
    24: bipush        16
    26: istore_3      
    27: iload_3       
    28: bipush        79
    30: if_icmpgt     91
    33: aload_0       
    34: getfield      #5          // W:int[]
    37: iload_3       
    38: iconst_3      
    39: isub          
    40: iaload        
    41: aload_0       
    42: getfield      #5          // W:int[]
    45: iload_3       
    46: bipush        8
    48: isub          
    49: iaload        
    50: ixor          
    51: aload_0       
    52: getfield      #5          // W:int[]
    55: iload_3       
    56: bipush        14
    58: isub          
    59: iaload        
    60: ixor          
    61: aload_0       
    62: getfield      #5          // W:int[]
    65: iload_3       
    66: bipush        16
    68: isub          
    69: iaload        
    70: ixor          
    71: istore        4
    73: aload_0       
    74: getfield      #5          // W:int[]
    77: iload_3       
    78: iload         4
    80: iconst_1      
    81: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
    84: iastore       
    85: iinc          
    88: goto          27
    91: aload_0       
    92: getfield      #1          // state:int[]
    95: iconst_0      
    96: iaload        
    97: istore_3      
    98: aload_0       
    99: getfield      #1          // state:int[]
   102: iconst_1      
   103: iaload        
   104: istore        4
   106: aload_0       
   107: getfield      #1          // state:int[]
   110: iconst_2      
   111: iaload        
   112: istore        5
   114: aload_0       
   115: getfield      #1          // state:int[]
   118: iconst_3      
   119: iaload        
   120: istore        6
   122: aload_0       
   123: getfield      #1          // state:int[]
   126: iconst_4      
   127: iaload        
   128: istore        7
   130: iconst_0      
   131: istore        8
   133: iload         8
   135: bipush        20
   137: if_icmpge     204
   140: iload_3       
   141: iconst_5      
   142: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   145: iload         4
   147: iload         5
   149: iand          
   150: iload         4
   152: iconst_m1     
   153: ixor          
   154: iload         6
   156: iand          
   157: ior           
   158: iadd          
   159: iload         7
   161: iadd          
   162: aload_0       
   163: getfield      #5          // W:int[]
   166: iload         8
   168: iaload        
   169: iadd          
   170: ldc           #100        // 1518500249
   172: iadd          
   173: istore        9
   175: iload         6
   177: istore        7
   179: iload         5
   181: istore        6
   183: iload         4
   185: bipush        30
   187: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   190: istore        5
   192: iload_3       
   193: istore        4
   195: iload         9
   197: istore_3      
   198: iinc          
   201: goto          133
   204: bipush        20
   206: istore        8
   208: iload         8
   210: bipush        40
   212: if_icmpge     274
   215: iload_3       
   216: iconst_5      
   217: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   220: iload         4
   222: iload         5
   224: ixor          
   225: iload         6
   227: ixor          
   228: iadd          
   229: iload         7
   231: iadd          
   232: aload_0       
   233: getfield      #5          // W:int[]
   236: iload         8
   238: iaload        
   239: iadd          
   240: ldc           #101        // 1859775393
   242: iadd          
   243: istore        9
   245: iload         6
   247: istore        7
   249: iload         5
   251: istore        6
   253: iload         4
   255: bipush        30
   257: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   260: istore        5
   262: iload_3       
   263: istore        4
   265: iload         9
   267: istore_3      
   268: iinc          
   271: goto          208
   274: bipush        40
   276: istore        8
   278: iload         8
   280: bipush        60
   282: if_icmpge     353
   285: iload_3       
   286: iconst_5      
   287: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   290: iload         4
   292: iload         5
   294: iand          
   295: iload         4
   297: iload         6
   299: iand          
   300: ior           
   301: iload         5
   303: iload         6
   305: iand          
   306: ior           
   307: iadd          
   308: iload         7
   310: iadd          
   311: aload_0       
   312: getfield      #5          // W:int[]
   315: iload         8
   317: iaload        
   318: iadd          
   319: ldc           #102        // -1894007588
   321: iadd          
   322: istore        9
   324: iload         6
   326: istore        7
   328: iload         5
   330: istore        6
   332: iload         4
   334: bipush        30
   336: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   339: istore        5
   341: iload_3       
   342: istore        4
   344: iload         9
   346: istore_3      
   347: iinc          
   350: goto          278
   353: bipush        60
   355: istore        8
   357: iload         8
   359: bipush        80
   361: if_icmpge     423
   364: iload_3       
   365: iconst_5      
   366: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   369: iload         4
   371: iload         5
   373: ixor          
   374: iload         6
   376: ixor          
   377: iadd          
   378: iload         7
   380: iadd          
   381: aload_0       
   382: getfield      #5          // W:int[]
   385: iload         8
   387: iaload        
   388: iadd          
   389: ldc           #103        // -899497514
   391: iadd          
   392: istore        9
   394: iload         6
   396: istore        7
   398: iload         5
   400: istore        6
   402: iload         4
   404: bipush        30
   406: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   409: istore        5
   411: iload_3       
   412: istore        4
   414: iload         9
   416: istore_3      
   417: iinc          
   420: goto          357
   423: aload_0       
   424: getfield      #1          // state:int[]
   427: iconst_0      
   428: dup2          
   429: iaload        
   430: iload_3       
   431: iadd          
   432: iastore       
   433: aload_0       
   434: getfield      #1          // state:int[]
   437: iconst_1      
   438: dup2          
   439: iaload        
   440: iload         4
   442: iadd          
   443: iastore       
   444: aload_0       
   445: getfield      #1          // state:int[]
   448: iconst_2      
   449: dup2          
   450: iaload        
   451: iload         5
   453: iadd          
   454: iastore       
   455: aload_0       
   456: getfield      #1          // state:int[]
   459: iconst_3      
   460: dup2          
   461: iaload        
   462: iload         6
   464: iadd          
   465: iastore       
   466: aload_0       
   467: getfield      #1          // state:int[]
   470: iconst_4      
   471: dup2          
   472: iaload        
   473: iload         7
   475: iadd          
   476: iastore       
   477: return        
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@31f9b0c2 slotKind: QWORD <|@ <|@
      nr   40  <|@ instruction r10|QWORD[.] = MOV input: [rsi|QWORD + 72] size: QWORD <|@ <|@
      nr   42  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD + 48] size: DWORD <|@ <|@
      nr   44  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD + 40] size: DWORD <|@ <|@
      nr   46  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD + 32] size: DWORD <|@ <|@
      nr   48  <|@ instruction rcx|DWORD = MOV input: [rsi|QWORD + 24] size: DWORD <|@ <|@
      nr   50  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction rdi|DWORD = MOV input: [rsi|QWORD + 8] size: DWORD <|@ <|@
      nr   54  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: r10|QWORD[.] - - r11|DWORD r8|DWORD r9|DWORD rcx|DWORD rbx|DWORD rdi|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B29 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lsun/security/provider/SHA;, resolved>;compressed} state [bci:357] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 0.9523809523809523 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B25 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B24" 
    xhandlers
    flags 
    probability 4606753504549791646
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction rdx|DWORD[_] = MOV input: [r10|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: r10|QWORD[.] - - r11|DWORD r8|DWORD r9|DWORD rcx|DWORD rbx|DWORD rdi|DWORD - 
>@ <|@ instruction rsi|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:357] <|@ <|@
      nr   88  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B23" 
    xhandlers
    flags 
    probability 4606753504549791646
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3087af84 encoding: base: 0 shift: 3 <|@ <|@
      nr  128  <|@ instruction rax|DWORD = ROL x: r11|DWORD y: 5 size: DWORD <|@ <|@
      nr  130  <|@ instruction rbp|DWORD = XOR (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction rbp|DWORD = XOR (x: rbp|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  134  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [rdx|QWORD[.] + rdi|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  140  <|@ instruction rax|DWORD = LEA address: [rax|DWORD - 899497514] size: DWORD <|@ <|@
      nr  142  <|@ instruction rbp|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  144  <|@ instruction r13|DWORD = ROL x: r8|DWORD y: 30 size: DWORD <|@ <|@
      nr  146  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.95 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B23 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B10" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction r14|DWORD = LEA address: [rdi|DWORD + 2] size: DWORD <|@ <|@
      nr  166  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B10 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B11" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  280  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction r10|DWORD = MOVE input: int[78|0x4e] <|@ <|@
      nr  198  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction r10|QWORD = MOVSXD value: r10|DWORD size: QWORD <|@ <|@
      nr  202  <|@ instruction r8|QWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  206  <|@ instruction r10|QWORD = DEC value: r10|QWORD size: QWORD <|@ <|@
      nr  208  <|@ instruction r8|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction CMPBRANCH (x: r8|QWORD, y: r10|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B7" 
    successors "B12" "B22" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction r10|DWORD = ROL x: rax|DWORD y: 5 size: DWORD <|@ <|@
      nr  336  <|@ instruction r8|DWORD = XOR (x: r13|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  338  <|@ instruction r8|DWORD = XOR (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  340  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  344  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, ~y: [rdx|QWORD[.] + rbp|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  346  <|@ instruction r10|DWORD = LEA address: [r10|DWORD - 899497514] size: DWORD <|@ <|@
      nr  348  <|@ instruction r8|DWORD = LEA address: [rdi|DWORD + 3] size: DWORD <|@ <|@
      nr  350  <|@ instruction CMP x: r8|DWORD y: 80 size: DWORD <|@ <|@
      nr  352  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[80|0x50], ~trueValue: r8|DWORD) condition: < <|@ <|@
      nr  354  <|@ instruction r11|DWORD = ROL x: r11|DWORD y: 30 size: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606406907175871839
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r14|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576421901864634511
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction r8|DWORD = ROL x: r10|DWORD y: 5 size: DWORD <|@ <|@
      nr  402  <|@ instruction rbx|DWORD = XOR (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  404  <|@ instruction rbx|DWORD = XOR (x: rbx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  408  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  410  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, ~y: [rdx|QWORD[.] + r14|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  412  <|@ instruction r8|DWORD = LEA address: [r8|DWORD - 899497514] size: DWORD <|@ <|@
      nr  414  <|@ instruction r14|DWORD = INC value: r14|DWORD size: DWORD <|@ <|@
      nr  416  <|@ instruction rax|DWORD = ROL x: rax|DWORD y: 30 size: DWORD <|@ <|@
      nr  418  <|@ instruction r9|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction r13|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  426  <|@ instruction r10|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606324590299565885
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction rbx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  442  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  444  <|@ instruction r8|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction r10|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  448  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  450  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" 
    successors "B17" "B18" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4612021107685376776
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.5789473684210522 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 72 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4608281511566220913
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction rdi|DWORD = MOV input: [rdx|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  696  <|@ instruction rsi|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  698  <|@ instruction rsi|DWORD = MOV input: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  700  <|@ instruction rax|DWORD = LEA address: [r10|DWORD + 2] size: DWORD <|@ <|@
      nr  702  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  704  <|@ instruction rbp|DWORD = LEA address: [r10|DWORD + 3] size: DWORD <|@ <|@
      nr  706  <|@ instruction rbp|DWORD = MOV input: [rdx|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  708  <|@ instruction r13|DWORD = LEA address: [r10|DWORD + 4] size: DWORD <|@ <|@
      nr  710  <|@ instruction r13|DWORD = MOV input: [rdx|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  712  <|@ instruction r14|DWORD = LEA address: [r10|DWORD + 5] size: DWORD <|@ <|@
      nr  714  <|@ instruction r14|DWORD = MOV input: [rdx|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  716  <|@ instruction stack:32|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction r14|DWORD = LEA address: [r10|DWORD + 6] size: DWORD <|@ <|@
      nr  720  <|@ instruction r14|DWORD = MOV input: [rdx|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  722  <|@ instruction rdx|DWORD = LEA address: [r10|DWORD + 7] size: DWORD <|@ <|@
      nr  724  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  726  <|@ instruction r10|DWORD = ROL x: rbx|DWORD y: 5 size: DWORD <|@ <|@
      nr  728  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  730  <|@ instruction rdx|DWORD = XOR (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction rdx|DWORD = XOR (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  734  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  736  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  738  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  740  <|@ instruction r10|DWORD = LEA address: [r10|DWORD - 899497514] size: DWORD <|@ <|@
      nr  742  <|@ instruction r11|DWORD = ROL x: r10|DWORD y: 5 size: DWORD <|@ <|@
      nr  744  <|@ instruction rcx|DWORD = ROL x: rcx|DWORD y: 30 size: DWORD <|@ <|@
      nr  746  <|@ instruction rdi|DWORD = XOR (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  748  <|@ instruction rdi|DWORD = XOR (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  750  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  752  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  754  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  756  <|@ instruction r11|DWORD = LEA address: [r11|DWORD - 899497514] size: DWORD <|@ <|@
      nr  758  <|@ instruction r8|DWORD = ROL x: r11|DWORD y: 5 size: DWORD <|@ <|@
      nr  760  <|@ instruction rbx|DWORD = ROL x: rbx|DWORD y: 30 size: DWORD <|@ <|@
      nr  762  <|@ instruction rdi|DWORD = XOR (x: r10|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  764  <|@ instruction rdi|DWORD = XOR (x: rcx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  766  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  768  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  770  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  772  <|@ instruction r8|DWORD = LEA address: [r8|DWORD - 899497514] size: DWORD <|@ <|@
      nr  774  <|@ instruction r9|DWORD = ROL x: r8|DWORD y: 30 size: DWORD <|@ <|@
      nr  776  <|@ instruction rdi|DWORD = ROL x: r11|DWORD y: 30 size: DWORD <|@ <|@
      nr  778  <|@ instruction r10|DWORD = ROL x: r10|DWORD y: 30 size: DWORD <|@ <|@
      nr  780  <|@ instruction rdx|DWORD = ROL x: r8|DWORD y: 5 size: DWORD <|@ <|@
      nr  782  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  784  <|@ instruction r11|DWORD = XOR (x: rbx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  786  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  788  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  790  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  792  <|@ instruction r11|DWORD = LEA address: [rdx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  794  <|@ instruction rcx|DWORD = ROL x: r11|DWORD y: 5 size: DWORD <|@ <|@
      nr  796  <|@ instruction r8|DWORD = XOR (x: r8|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  798  <|@ instruction r8|DWORD = XOR (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  800  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  804  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  806  <|@ instruction r8|DWORD = LEA address: [rcx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  808  <|@ instruction rcx|DWORD = ROL x: r8|DWORD y: 5 size: DWORD <|@ <|@
      nr  810  <|@ instruction rbx|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  812  <|@ instruction rbx|DWORD = XOR (x: rdi|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  814  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  816  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  818  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: stack:32|DWORD) size: DWORD <|@ <|@
      nr  820  <|@ instruction r10|DWORD = LEA address: [rcx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  822  <|@ instruction rcx|DWORD = ROL x: r10|DWORD y: 5 size: DWORD <|@ <|@
      nr  824  <|@ instruction r11|DWORD = ROL x: r11|DWORD y: 30 size: DWORD <|@ <|@
      nr  826  <|@ instruction rbx|DWORD = XOR (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  828  <|@ instruction rbx|DWORD = XOR (x: r9|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  830  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  832  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  834  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  836  <|@ instruction rcx|DWORD = LEA address: [rcx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  838  <|@ instruction rbx|DWORD = ROL x: rcx|DWORD y: 5 size: DWORD <|@ <|@
      nr  840  <|@ instruction r8|DWORD = ROL x: r8|DWORD y: 30 size: DWORD <|@ <|@
      nr  842  <|@ instruction rdi|DWORD = XOR (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  844  <|@ instruction rdi|DWORD = XOR (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  846  <|@ instruction rbx|DWORD = ADD (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  848  <|@ instruction rbx|DWORD = ADD (x: rbx|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  850  <|@ instruction rdi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction rbx|DWORD = ADD (x: rbx|DWORD, ~y: [rdi|QWORD[.] + rdx|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  856  <|@ instruction rbx|DWORD = LEA address: [rbx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  858  <|@ instruction r10|DWORD = ROL x: r10|DWORD y: 30 size: DWORD <|@ <|@
      nr  860  <|@ instruction rdx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction r9|DWORD = LEA address: [rdx|DWORD + 8] size: DWORD <|@ <|@
      nr  864  <|@ instruction rdx|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  868  <|@ instruction r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  872  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606324590299565886
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  876  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  878  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606406907175871841
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576421901864634512
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction rdx|DWORD = ROL x: rbx|DWORD y: 5 size: DWORD <|@ <|@
      nr  934  <|@ instruction rsi|DWORD = XOR (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  936  <|@ instruction rsi|DWORD = XOR (x: rsi|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  938  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  940  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  942  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rdi|QWORD[.] + r10|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  944  <|@ instruction r11|DWORD = LEA address: [rdx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  946  <|@ instruction rcx|DWORD = ROL x: rcx|DWORD y: 30 size: DWORD <|@ <|@
      nr  948  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  950  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction r8|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  954  <|@ instruction r9|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  956  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ instruction rbx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  960  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606324590299565887
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B26" 
    xhandlers
    flags 
    probability 4587023449039406624
    begin_IR
      LIR
      nr 1038  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1040  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1042  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1052  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1056  <|@ instruction stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1058  <|@ instruction rbx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1060  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1062  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B26" 
    xhandlers
    flags 
    probability 4587023449039406622
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction r8|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1006  <|@ instruction r9|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr 1008  <|@ instruction rbx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction stack:36|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1014  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1016  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1018  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B25" "B23" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 5 label: ? <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 52] size: DWORD <|@ <|@
      nr 1078  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
locals: r10|QWORD[.] - - rbx|DWORD rcx|DWORD r9|DWORD r8|DWORD r11|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH x: [rdi|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 5 size: DWORD inlinedY: null state [bci:423] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1130  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 20], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1132  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 24], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1134  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 28], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1136  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 32], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1138  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction rdx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1032  <|@ instruction r8|DWORD = MOVE input: int[-105755|0xfffffffffffe62e5] <|@ <|@
      nr 1036  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction rdx|QWORD = MOVE input: long[664|0x298] <|@ <|@
      nr  246  <|@ instruction r8|DWORD = MOVE input: int[-110619|0xfffffffffffe4fe5] <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction MOV x: [r15|QWORD + 1156] y: -133915 size: DWORD <|@ <|@
      nr 1098  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1100  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
locals: r10|QWORD[.] - - rbx|DWORD rcx|DWORD r9|DWORD r8|DWORD r11|DWORD - - 
>@ <|@ instruction DEOPT info [bci:423] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  978  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction rdx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  988  <|@ instruction r8|DWORD = MOVE input: int[-108315|0xfffffffffffe58e5] <|@ <|@
      nr  992  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rdx|QWORD = MOVE input: long[664|0x298] <|@ <|@
      nr  264  <|@ instruction r8|DWORD = MOVE input: int[-110619|0xfffffffffffe4fe5] <|@ <|@
      nr  268  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1142  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction rdx|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1152  <|@ instruction r8|DWORD = MOVE input: int[-102716|0xfffffffffffe6ec4] <|@ <|@
      nr 1156  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B24" "B9" "B22" "B8" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1154  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1176  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1178  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: r10|QWORD[.] - - r11|DWORD rsi|DWORD r9|DWORD rcx|DWORD rbx|DWORD rdi|DWORD - 
>@ <|@ instruction DEOPT info [bci:357] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // W:int[]
     4: ifnonnull     15
     7: aload_0       
     8: bipush        80
    10: newarray      int
    12: putfield      #5          // W:int[]
    15: aload_1       
    16: iload_2       
    17: aload_0       
    18: getfield      #5          // W:int[]
    21: invokestatic  #19         // sun.security.provider.ByteArrayAccess.b2iBig64:(byte[], int, int[])void
    24: bipush        16
    26: istore_3      
    27: iload_3       
    28: bipush        79
    30: if_icmpgt     91
    33: aload_0       
    34: getfield      #5          // W:int[]
    37: iload_3       
    38: iconst_3      
    39: isub          
    40: iaload        
    41: aload_0       
    42: getfield      #5          // W:int[]
    45: iload_3       
    46: bipush        8
    48: isub          
    49: iaload        
    50: ixor          
    51: aload_0       
    52: getfield      #5          // W:int[]
    55: iload_3       
    56: bipush        14
    58: isub          
    59: iaload        
    60: ixor          
    61: aload_0       
    62: getfield      #5          // W:int[]
    65: iload_3       
    66: bipush        16
    68: isub          
    69: iaload        
    70: ixor          
    71: istore        4
    73: aload_0       
    74: getfield      #5          // W:int[]
    77: iload_3       
    78: iload         4
    80: iconst_1      
    81: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
    84: iastore       
    85: iinc          
    88: goto          27
    91: aload_0       
    92: getfield      #1          // state:int[]
    95: iconst_0      
    96: iaload        
    97: istore_3      
    98: aload_0       
    99: getfield      #1          // state:int[]
   102: iconst_1      
   103: iaload        
   104: istore        4
   106: aload_0       
   107: getfield      #1          // state:int[]
   110: iconst_2      
   111: iaload        
   112: istore        5
   114: aload_0       
   115: getfield      #1          // state:int[]
   118: iconst_3      
   119: iaload        
   120: istore        6
   122: aload_0       
   123: getfield      #1          // state:int[]
   126: iconst_4      
   127: iaload        
   128: istore        7
   130: iconst_0      
   131: istore        8
   133: iload         8
   135: bipush        20
   137: if_icmpge     204
   140: iload_3       
   141: iconst_5      
   142: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   145: iload         4
   147: iload         5
   149: iand          
   150: iload         4
   152: iconst_m1     
   153: ixor          
   154: iload         6
   156: iand          
   157: ior           
   158: iadd          
   159: iload         7
   161: iadd          
   162: aload_0       
   163: getfield      #5          // W:int[]
   166: iload         8
   168: iaload        
   169: iadd          
   170: ldc           #100        // 1518500249
   172: iadd          
   173: istore        9
   175: iload         6
   177: istore        7
   179: iload         5
   181: istore        6
   183: iload         4
   185: bipush        30
   187: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   190: istore        5
   192: iload_3       
   193: istore        4
   195: iload         9
   197: istore_3      
   198: iinc          
   201: goto          133
   204: bipush        20
   206: istore        8
   208: iload         8
   210: bipush        40
   212: if_icmpge     274
   215: iload_3       
   216: iconst_5      
   217: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   220: iload         4
   222: iload         5
   224: ixor          
   225: iload         6
   227: ixor          
   228: iadd          
   229: iload         7
   231: iadd          
   232: aload_0       
   233: getfield      #5          // W:int[]
   236: iload         8
   238: iaload        
   239: iadd          
   240: ldc           #101        // 1859775393
   242: iadd          
   243: istore        9
   245: iload         6
   247: istore        7
   249: iload         5
   251: istore        6
   253: iload         4
   255: bipush        30
   257: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   260: istore        5
   262: iload_3       
   263: istore        4
   265: iload         9
   267: istore_3      
   268: iinc          
   271: goto          208
   274: bipush        40
   276: istore        8
   278: iload         8
   280: bipush        60
   282: if_icmpge     353
   285: iload_3       
   286: iconst_5      
   287: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   290: iload         4
   292: iload         5
   294: iand          
   295: iload         4
   297: iload         6
   299: iand          
   300: ior           
   301: iload         5
   303: iload         6
   305: iand          
   306: ior           
   307: iadd          
   308: iload         7
   310: iadd          
   311: aload_0       
   312: getfield      #5          // W:int[]
   315: iload         8
   317: iaload        
   318: iadd          
   319: ldc           #102        // -1894007588
   321: iadd          
   322: istore        9
   324: iload         6
   326: istore        7
   328: iload         5
   330: istore        6
   332: iload         4
   334: bipush        30
   336: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   339: istore        5
   341: iload_3       
   342: istore        4
   344: iload         9
   346: istore_3      
   347: iinc          
   350: goto          278
   353: bipush        60
   355: istore        8
   357: iload         8
   359: bipush        80
   361: if_icmpge     423
   364: iload_3       
   365: iconst_5      
   366: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   369: iload         4
   371: iload         5
   373: ixor          
   374: iload         6
   376: ixor          
   377: iadd          
   378: iload         7
   380: iadd          
   381: aload_0       
   382: getfield      #5          // W:int[]
   385: iload         8
   387: iaload        
   388: iadd          
   389: ldc           #103        // -899497514
   391: iadd          
   392: istore        9
   394: iload         6
   396: istore        7
   398: iload         5
   400: istore        6
   402: iload         4
   404: bipush        30
   406: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   409: istore        5
   411: iload_3       
   412: istore        4
   414: iload         9
   416: istore_3      
   417: iinc          
   420: goto          357
   423: aload_0       
   424: getfield      #1          // state:int[]
   427: iconst_0      
   428: dup2          
   429: iaload        
   430: iload_3       
   431: iadd          
   432: iastore       
   433: aload_0       
   434: getfield      #1          // state:int[]
   437: iconst_1      
   438: dup2          
   439: iaload        
   440: iload         4
   442: iadd          
   443: iastore       
   444: aload_0       
   445: getfield      #1          // state:int[]
   448: iconst_2      
   449: dup2          
   450: iaload        
   451: iload         5
   453: iadd          
   454: iastore       
   455: aload_0       
   456: getfield      #1          // state:int[]
   459: iconst_3      
   460: dup2          
   461: iaload        
   462: iload         6
   464: iadd          
   465: iastore       
   466: aload_0       
   467: getfield      #1          // state:int[]
   470: iconst_4      
   471: dup2          
   472: iaload        
   473: iload         7
   475: iadd          
   476: iastore       
   477: return        
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@31f9b0c2 slotKind: QWORD <|@ <|@
      nr   40  <|@ instruction r10|QWORD[.] = MOV input: [rsi|QWORD + 72] size: QWORD <|@ <|@
      nr   42  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD + 48] size: DWORD <|@ <|@
      nr   44  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD + 40] size: DWORD <|@ <|@
      nr   46  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD + 32] size: DWORD <|@ <|@
      nr   48  <|@ instruction rcx|DWORD = MOV input: [rsi|QWORD + 24] size: DWORD <|@ <|@
      nr   50  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction rdi|DWORD = MOV input: [rsi|QWORD + 8] size: DWORD <|@ <|@
      nr   54  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: r10|QWORD[.] - - r11|DWORD r8|DWORD r9|DWORD rcx|DWORD rbx|DWORD rdi|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B29 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lsun/security/provider/SHA;, resolved>;compressed} state [bci:357] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 0.9523809523809523 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B25 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B24" 
    xhandlers
    flags 
    probability 4606753504549791646
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction rdx|DWORD[_] = MOV input: [r10|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: r10|QWORD[.] - - r11|DWORD r8|DWORD r9|DWORD rcx|DWORD rbx|DWORD rdi|DWORD - 
>@ <|@ instruction rsi|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:357] <|@ <|@
      nr   88  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B23" 
    xhandlers
    flags 
    probability 4606753504549791646
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3087af84 encoding: base: 0 shift: 3 <|@ <|@
      nr  128  <|@ instruction rax|DWORD = ROL x: r11|DWORD y: 5 size: DWORD <|@ <|@
      nr  130  <|@ instruction rbp|DWORD = XOR (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction rbp|DWORD = XOR (x: rbp|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  134  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [rdx|QWORD[.] + rdi|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  140  <|@ instruction rax|DWORD = LEA address: [rax|DWORD - 899497514] size: DWORD <|@ <|@
      nr  142  <|@ instruction rbp|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  144  <|@ instruction r13|DWORD = ROL x: r8|DWORD y: 30 size: DWORD <|@ <|@
      nr  146  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.95 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B23 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B10" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction r14|DWORD = LEA address: [rdi|DWORD + 2] size: DWORD <|@ <|@
      nr  166  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B10 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B11" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  280  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B7" 
    successors "B12" "B22" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction r10|DWORD = ROL x: rax|DWORD y: 5 size: DWORD <|@ <|@
      nr  336  <|@ instruction r8|DWORD = XOR (x: r13|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  338  <|@ instruction r8|DWORD = XOR (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  340  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  344  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, ~y: [rdx|QWORD[.] + rbp|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  346  <|@ instruction r10|DWORD = LEA address: [r10|DWORD - 899497514] size: DWORD <|@ <|@
      nr  348  <|@ instruction r8|DWORD = LEA address: [rdi|DWORD + 3] size: DWORD <|@ <|@
      nr  350  <|@ instruction CMP x: r8|DWORD y: 80 size: DWORD <|@ <|@
      nr  352  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[80|0x50], ~trueValue: r8|DWORD) condition: < <|@ <|@
      nr  354  <|@ instruction r11|DWORD = ROL x: r11|DWORD y: 30 size: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576421901864634511
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction r8|DWORD = ROL x: r10|DWORD y: 5 size: DWORD <|@ <|@
      nr  402  <|@ instruction rbx|DWORD = XOR (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  404  <|@ instruction rbx|DWORD = XOR (x: rbx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  408  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  410  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, ~y: [rdx|QWORD[.] + r14|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  412  <|@ instruction r8|DWORD = LEA address: [r8|DWORD - 899497514] size: DWORD <|@ <|@
      nr  414  <|@ instruction r14|DWORD = INC value: r14|DWORD size: DWORD <|@ <|@
      nr  416  <|@ instruction rax|DWORD = ROL x: rax|DWORD y: 30 size: DWORD <|@ <|@
      nr  418  <|@ instruction r9|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction r13|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  426  <|@ instruction r10|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606406907175871839
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r14|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606324590299565885
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction rbx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  442  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  444  <|@ instruction r8|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction r10|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  448  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  450  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4608281511566220913
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction rdi|DWORD = MOV input: [rdx|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  696  <|@ instruction rsi|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  698  <|@ instruction rsi|DWORD = MOV input: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  700  <|@ instruction rax|DWORD = LEA address: [r10|DWORD + 2] size: DWORD <|@ <|@
      nr  702  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  704  <|@ instruction rbp|DWORD = LEA address: [r10|DWORD + 3] size: DWORD <|@ <|@
      nr  706  <|@ instruction rbp|DWORD = MOV input: [rdx|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  708  <|@ instruction r13|DWORD = LEA address: [r10|DWORD + 4] size: DWORD <|@ <|@
      nr  710  <|@ instruction r13|DWORD = MOV input: [rdx|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  712  <|@ instruction r14|DWORD = LEA address: [r10|DWORD + 5] size: DWORD <|@ <|@
      nr  714  <|@ instruction r14|DWORD = MOV input: [rdx|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  716  <|@ instruction stack:32|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction r14|DWORD = LEA address: [r10|DWORD + 6] size: DWORD <|@ <|@
      nr  720  <|@ instruction r14|DWORD = MOV input: [rdx|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  722  <|@ instruction rdx|DWORD = LEA address: [r10|DWORD + 7] size: DWORD <|@ <|@
      nr  724  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  726  <|@ instruction r10|DWORD = ROL x: rbx|DWORD y: 5 size: DWORD <|@ <|@
      nr  728  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  730  <|@ instruction rdx|DWORD = XOR (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction rdx|DWORD = XOR (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  734  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  736  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  738  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  740  <|@ instruction r10|DWORD = LEA address: [r10|DWORD - 899497514] size: DWORD <|@ <|@
      nr  742  <|@ instruction r11|DWORD = ROL x: r10|DWORD y: 5 size: DWORD <|@ <|@
      nr  744  <|@ instruction rcx|DWORD = ROL x: rcx|DWORD y: 30 size: DWORD <|@ <|@
      nr  746  <|@ instruction rdi|DWORD = XOR (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  748  <|@ instruction rdi|DWORD = XOR (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  750  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  752  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  754  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  756  <|@ instruction r11|DWORD = LEA address: [r11|DWORD - 899497514] size: DWORD <|@ <|@
      nr  758  <|@ instruction r8|DWORD = ROL x: r11|DWORD y: 5 size: DWORD <|@ <|@
      nr  760  <|@ instruction rbx|DWORD = ROL x: rbx|DWORD y: 30 size: DWORD <|@ <|@
      nr  762  <|@ instruction rdi|DWORD = XOR (x: r10|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  764  <|@ instruction rdi|DWORD = XOR (x: rcx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  766  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  768  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  770  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  772  <|@ instruction r8|DWORD = LEA address: [r8|DWORD - 899497514] size: DWORD <|@ <|@
      nr  774  <|@ instruction r9|DWORD = ROL x: r8|DWORD y: 30 size: DWORD <|@ <|@
      nr  776  <|@ instruction rdi|DWORD = ROL x: r11|DWORD y: 30 size: DWORD <|@ <|@
      nr  778  <|@ instruction r10|DWORD = ROL x: r10|DWORD y: 30 size: DWORD <|@ <|@
      nr  780  <|@ instruction rdx|DWORD = ROL x: r8|DWORD y: 5 size: DWORD <|@ <|@
      nr  782  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  784  <|@ instruction r11|DWORD = XOR (x: rbx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  786  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  788  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  790  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  792  <|@ instruction r11|DWORD = LEA address: [rdx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  794  <|@ instruction rcx|DWORD = ROL x: r11|DWORD y: 5 size: DWORD <|@ <|@
      nr  796  <|@ instruction r8|DWORD = XOR (x: r8|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  798  <|@ instruction r8|DWORD = XOR (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  800  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  804  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  806  <|@ instruction r8|DWORD = LEA address: [rcx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  808  <|@ instruction rcx|DWORD = ROL x: r8|DWORD y: 5 size: DWORD <|@ <|@
      nr  810  <|@ instruction rbx|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  812  <|@ instruction rbx|DWORD = XOR (x: rdi|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  814  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  816  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  818  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: stack:32|DWORD) size: DWORD <|@ <|@
      nr  820  <|@ instruction r10|DWORD = LEA address: [rcx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  822  <|@ instruction rcx|DWORD = ROL x: r10|DWORD y: 5 size: DWORD <|@ <|@
      nr  824  <|@ instruction r11|DWORD = ROL x: r11|DWORD y: 30 size: DWORD <|@ <|@
      nr  826  <|@ instruction rbx|DWORD = XOR (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  828  <|@ instruction rbx|DWORD = XOR (x: r9|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  830  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  832  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  834  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  836  <|@ instruction rcx|DWORD = LEA address: [rcx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  838  <|@ instruction rbx|DWORD = ROL x: rcx|DWORD y: 5 size: DWORD <|@ <|@
      nr  840  <|@ instruction r8|DWORD = ROL x: r8|DWORD y: 30 size: DWORD <|@ <|@
      nr  842  <|@ instruction rdi|DWORD = XOR (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  844  <|@ instruction rdi|DWORD = XOR (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  846  <|@ instruction rbx|DWORD = ADD (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  848  <|@ instruction rbx|DWORD = ADD (x: rbx|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  850  <|@ instruction rdi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction rbx|DWORD = ADD (x: rbx|DWORD, ~y: [rdi|QWORD[.] + rdx|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  856  <|@ instruction rbx|DWORD = LEA address: [rbx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  858  <|@ instruction r10|DWORD = ROL x: r10|DWORD y: 30 size: DWORD <|@ <|@
      nr  860  <|@ instruction rdx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction r9|DWORD = LEA address: [rdx|DWORD + 8] size: DWORD <|@ <|@
      nr  864  <|@ instruction rdx|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  868  <|@ instruction r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  872  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" 
    successors "B17" "B18" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4612021107685376776
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.5789473684210522 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 72 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606324590299565886
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  876  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  878  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576421901864634512
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction rdx|DWORD = ROL x: rbx|DWORD y: 5 size: DWORD <|@ <|@
      nr  934  <|@ instruction rsi|DWORD = XOR (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  936  <|@ instruction rsi|DWORD = XOR (x: rsi|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  938  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  940  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  942  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rdi|QWORD[.] + r10|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  944  <|@ instruction r11|DWORD = LEA address: [rdx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  946  <|@ instruction rcx|DWORD = ROL x: rcx|DWORD y: 30 size: DWORD <|@ <|@
      nr  948  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  950  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction r8|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  954  <|@ instruction r9|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  956  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ instruction rbx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  960  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606406907175871841
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606324590299565887
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B25" "B23" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 5 label: ? <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 52] size: DWORD <|@ <|@
      nr 1078  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
locals: r10|QWORD[.] - - rbx|DWORD rcx|DWORD r9|DWORD r8|DWORD r11|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH x: [rdi|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 5 size: DWORD inlinedY: null state [bci:423] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1130  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 20], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1132  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 24], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1134  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 28], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1136  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 32], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1138  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction r10|DWORD = MOVE input: int[78|0x4e] <|@ <|@
      nr  198  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction r10|QWORD = MOVSXD value: r10|DWORD size: QWORD <|@ <|@
      nr  202  <|@ instruction r8|QWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  206  <|@ instruction r10|QWORD = DEC value: r10|QWORD size: QWORD <|@ <|@
      nr  208  <|@ instruction r8|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction CMPBRANCH (x: r8|QWORD, y: r10|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B26" 
    xhandlers
    flags 
    probability 4587023449039406624
    begin_IR
      LIR
      nr 1038  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1040  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1042  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1052  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1056  <|@ instruction stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1058  <|@ instruction rbx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1060  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1062  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B26" 
    xhandlers
    flags 
    probability 4587023449039406622
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction r8|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1006  <|@ instruction r9|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr 1008  <|@ instruction rbx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction stack:36|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1014  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1016  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1018  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  978  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction rdx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  988  <|@ instruction r8|DWORD = MOVE input: int[-108315|0xfffffffffffe58e5] <|@ <|@
      nr  992  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B24" "B9" "B22" "B8" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1154  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1176  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1178  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: r10|QWORD[.] - - r11|DWORD rsi|DWORD r9|DWORD rcx|DWORD rbx|DWORD rdi|DWORD - 
>@ <|@ instruction DEOPT info [bci:357] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction rdx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1032  <|@ instruction r8|DWORD = MOVE input: int[-105755|0xfffffffffffe62e5] <|@ <|@
      nr 1036  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rdx|QWORD = MOVE input: long[664|0x298] <|@ <|@
      nr  264  <|@ instruction r8|DWORD = MOVE input: int[-110619|0xfffffffffffe4fe5] <|@ <|@
      nr  268  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction rdx|QWORD = MOVE input: long[664|0x298] <|@ <|@
      nr  246  <|@ instruction r8|DWORD = MOVE input: int[-110619|0xfffffffffffe4fe5] <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction MOV x: [r15|QWORD + 1156] y: -133915 size: DWORD <|@ <|@
      nr 1098  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1100  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
locals: r10|QWORD[.] - - rbx|DWORD rcx|DWORD r9|DWORD r8|DWORD r11|DWORD - - 
>@ <|@ instruction DEOPT info [bci:423] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1142  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction rdx|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1152  <|@ instruction r8|DWORD = MOVE input: int[-102716|0xfffffffffffe6ec4] <|@ <|@
      nr 1156  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // W:int[]
     4: ifnonnull     15
     7: aload_0       
     8: bipush        80
    10: newarray      int
    12: putfield      #5          // W:int[]
    15: aload_1       
    16: iload_2       
    17: aload_0       
    18: getfield      #5          // W:int[]
    21: invokestatic  #19         // sun.security.provider.ByteArrayAccess.b2iBig64:(byte[], int, int[])void
    24: bipush        16
    26: istore_3      
    27: iload_3       
    28: bipush        79
    30: if_icmpgt     91
    33: aload_0       
    34: getfield      #5          // W:int[]
    37: iload_3       
    38: iconst_3      
    39: isub          
    40: iaload        
    41: aload_0       
    42: getfield      #5          // W:int[]
    45: iload_3       
    46: bipush        8
    48: isub          
    49: iaload        
    50: ixor          
    51: aload_0       
    52: getfield      #5          // W:int[]
    55: iload_3       
    56: bipush        14
    58: isub          
    59: iaload        
    60: ixor          
    61: aload_0       
    62: getfield      #5          // W:int[]
    65: iload_3       
    66: bipush        16
    68: isub          
    69: iaload        
    70: ixor          
    71: istore        4
    73: aload_0       
    74: getfield      #5          // W:int[]
    77: iload_3       
    78: iload         4
    80: iconst_1      
    81: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
    84: iastore       
    85: iinc          
    88: goto          27
    91: aload_0       
    92: getfield      #1          // state:int[]
    95: iconst_0      
    96: iaload        
    97: istore_3      
    98: aload_0       
    99: getfield      #1          // state:int[]
   102: iconst_1      
   103: iaload        
   104: istore        4
   106: aload_0       
   107: getfield      #1          // state:int[]
   110: iconst_2      
   111: iaload        
   112: istore        5
   114: aload_0       
   115: getfield      #1          // state:int[]
   118: iconst_3      
   119: iaload        
   120: istore        6
   122: aload_0       
   123: getfield      #1          // state:int[]
   126: iconst_4      
   127: iaload        
   128: istore        7
   130: iconst_0      
   131: istore        8
   133: iload         8
   135: bipush        20
   137: if_icmpge     204
   140: iload_3       
   141: iconst_5      
   142: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   145: iload         4
   147: iload         5
   149: iand          
   150: iload         4
   152: iconst_m1     
   153: ixor          
   154: iload         6
   156: iand          
   157: ior           
   158: iadd          
   159: iload         7
   161: iadd          
   162: aload_0       
   163: getfield      #5          // W:int[]
   166: iload         8
   168: iaload        
   169: iadd          
   170: ldc           #100        // 1518500249
   172: iadd          
   173: istore        9
   175: iload         6
   177: istore        7
   179: iload         5
   181: istore        6
   183: iload         4
   185: bipush        30
   187: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   190: istore        5
   192: iload_3       
   193: istore        4
   195: iload         9
   197: istore_3      
   198: iinc          
   201: goto          133
   204: bipush        20
   206: istore        8
   208: iload         8
   210: bipush        40
   212: if_icmpge     274
   215: iload_3       
   216: iconst_5      
   217: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   220: iload         4
   222: iload         5
   224: ixor          
   225: iload         6
   227: ixor          
   228: iadd          
   229: iload         7
   231: iadd          
   232: aload_0       
   233: getfield      #5          // W:int[]
   236: iload         8
   238: iaload        
   239: iadd          
   240: ldc           #101        // 1859775393
   242: iadd          
   243: istore        9
   245: iload         6
   247: istore        7
   249: iload         5
   251: istore        6
   253: iload         4
   255: bipush        30
   257: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   260: istore        5
   262: iload_3       
   263: istore        4
   265: iload         9
   267: istore_3      
   268: iinc          
   271: goto          208
   274: bipush        40
   276: istore        8
   278: iload         8
   280: bipush        60
   282: if_icmpge     353
   285: iload_3       
   286: iconst_5      
   287: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   290: iload         4
   292: iload         5
   294: iand          
   295: iload         4
   297: iload         6
   299: iand          
   300: ior           
   301: iload         5
   303: iload         6
   305: iand          
   306: ior           
   307: iadd          
   308: iload         7
   310: iadd          
   311: aload_0       
   312: getfield      #5          // W:int[]
   315: iload         8
   317: iaload        
   318: iadd          
   319: ldc           #102        // -1894007588
   321: iadd          
   322: istore        9
   324: iload         6
   326: istore        7
   328: iload         5
   330: istore        6
   332: iload         4
   334: bipush        30
   336: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   339: istore        5
   341: iload_3       
   342: istore        4
   344: iload         9
   346: istore_3      
   347: iinc          
   350: goto          278
   353: bipush        60
   355: istore        8
   357: iload         8
   359: bipush        80
   361: if_icmpge     423
   364: iload_3       
   365: iconst_5      
   366: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   369: iload         4
   371: iload         5
   373: ixor          
   374: iload         6
   376: ixor          
   377: iadd          
   378: iload         7
   380: iadd          
   381: aload_0       
   382: getfield      #5          // W:int[]
   385: iload         8
   387: iaload        
   388: iadd          
   389: ldc           #103        // -899497514
   391: iadd          
   392: istore        9
   394: iload         6
   396: istore        7
   398: iload         5
   400: istore        6
   402: iload         4
   404: bipush        30
   406: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   409: istore        5
   411: iload_3       
   412: istore        4
   414: iload         9
   416: istore_3      
   417: iinc          
   420: goto          357
   423: aload_0       
   424: getfield      #1          // state:int[]
   427: iconst_0      
   428: dup2          
   429: iaload        
   430: iload_3       
   431: iadd          
   432: iastore       
   433: aload_0       
   434: getfield      #1          // state:int[]
   437: iconst_1      
   438: dup2          
   439: iaload        
   440: iload         4
   442: iadd          
   443: iastore       
   444: aload_0       
   445: getfield      #1          // state:int[]
   448: iconst_2      
   449: dup2          
   450: iaload        
   451: iload         5
   453: iadd          
   454: iastore       
   455: aload_0       
   456: getfield      #1          // state:int[]
   459: iconst_3      
   460: dup2          
   461: iaload        
   462: iload         6
   464: iadd          
   465: iastore       
   466: aload_0       
   467: getfield      #1          // state:int[]
   470: iconst_4      
   471: dup2          
   472: iaload        
   473: iload         7
   475: iadd          
   476: iastore       
   477: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@31f9b0c2 slotKind: QWORD <|@ <|@
      nr   40  <|@ instruction r10|QWORD[.] = MOV input: [rsi|QWORD + 72] size: QWORD <|@ <|@
      nr   42  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD + 48] size: DWORD <|@ <|@
      nr   44  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD + 40] size: DWORD <|@ <|@
      nr   46  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD + 32] size: DWORD <|@ <|@
      nr   48  <|@ instruction rcx|DWORD = MOV input: [rsi|QWORD + 24] size: DWORD <|@ <|@
      nr   50  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction rdi|DWORD = MOV input: [rsi|QWORD + 8] size: DWORD <|@ <|@
      nr   54  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: r10|QWORD[.] - - r11|DWORD r8|DWORD r9|DWORD rcx|DWORD rbx|DWORD rdi|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B29 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lsun/security/provider/SHA;, resolved>;compressed} state [bci:357] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 0.9523809523809523 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B25 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B24" 
    xhandlers
    flags 
    probability 4606753504549791646
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction rdx|DWORD[_] = MOV input: [r10|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: r10|QWORD[.] - - r11|DWORD r8|DWORD r9|DWORD rcx|DWORD rbx|DWORD rdi|DWORD - 
>@ <|@ instruction rsi|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:357] <|@ <|@
      nr   88  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B23" 
    xhandlers
    flags 
    probability 4606753504549791646
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3087af84 encoding: base: 0 shift: 3 <|@ <|@
      nr  128  <|@ instruction rax|DWORD = ROL x: r11|DWORD y: 5 size: DWORD <|@ <|@
      nr  130  <|@ instruction rbp|DWORD = XOR (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction rbp|DWORD = XOR (x: rbp|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  134  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [rdx|QWORD[.] + rdi|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  140  <|@ instruction rax|DWORD = LEA address: [rax|DWORD - 899497514] size: DWORD <|@ <|@
      nr  142  <|@ instruction rbp|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  144  <|@ instruction r13|DWORD = ROL x: r8|DWORD y: 30 size: DWORD <|@ <|@
      nr  146  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.95 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B23 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B10" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction r14|DWORD = LEA address: [rdi|DWORD + 2] size: DWORD <|@ <|@
      nr  166  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B10 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B11" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  280  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B7" 
    successors "B12" "B22" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction r10|DWORD = ROL x: rax|DWORD y: 5 size: DWORD <|@ <|@
      nr  336  <|@ instruction r8|DWORD = XOR (x: r13|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  338  <|@ instruction r8|DWORD = XOR (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  340  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  344  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, ~y: [rdx|QWORD[.] + rbp|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  346  <|@ instruction r10|DWORD = LEA address: [r10|DWORD - 899497514] size: DWORD <|@ <|@
      nr  348  <|@ instruction r8|DWORD = LEA address: [rdi|DWORD + 3] size: DWORD <|@ <|@
      nr  350  <|@ instruction CMP x: r8|DWORD y: 80 size: DWORD <|@ <|@
      nr  352  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[80|0x50], ~trueValue: r8|DWORD) condition: < <|@ <|@
      nr  354  <|@ instruction r11|DWORD = ROL x: r11|DWORD y: 30 size: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576421901864634511
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction r8|DWORD = ROL x: r10|DWORD y: 5 size: DWORD <|@ <|@
      nr  402  <|@ instruction rbx|DWORD = XOR (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  404  <|@ instruction rbx|DWORD = XOR (x: rbx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  408  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  410  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, ~y: [rdx|QWORD[.] + r14|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  412  <|@ instruction r8|DWORD = LEA address: [r8|DWORD - 899497514] size: DWORD <|@ <|@
      nr  414  <|@ instruction r14|DWORD = INC value: r14|DWORD size: DWORD <|@ <|@
      nr  416  <|@ instruction rax|DWORD = ROL x: rax|DWORD y: 30 size: DWORD <|@ <|@
      nr  418  <|@ instruction r9|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction r13|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  426  <|@ instruction r10|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606406907175871839
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r14|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606324590299565885
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction rbx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  442  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  444  <|@ instruction r8|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction r10|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  448  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  450  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4608281511566220913
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction rdi|DWORD = MOV input: [rdx|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  696  <|@ instruction rsi|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  698  <|@ instruction rsi|DWORD = MOV input: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  700  <|@ instruction rax|DWORD = LEA address: [r10|DWORD + 2] size: DWORD <|@ <|@
      nr  702  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  704  <|@ instruction rbp|DWORD = LEA address: [r10|DWORD + 3] size: DWORD <|@ <|@
      nr  706  <|@ instruction rbp|DWORD = MOV input: [rdx|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  708  <|@ instruction r13|DWORD = LEA address: [r10|DWORD + 4] size: DWORD <|@ <|@
      nr  710  <|@ instruction r13|DWORD = MOV input: [rdx|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  712  <|@ instruction r14|DWORD = LEA address: [r10|DWORD + 5] size: DWORD <|@ <|@
      nr  714  <|@ instruction r14|DWORD = MOV input: [rdx|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  716  <|@ instruction stack:32|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction r14|DWORD = LEA address: [r10|DWORD + 6] size: DWORD <|@ <|@
      nr  720  <|@ instruction r14|DWORD = MOV input: [rdx|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  722  <|@ instruction rdx|DWORD = LEA address: [r10|DWORD + 7] size: DWORD <|@ <|@
      nr  724  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  726  <|@ instruction r10|DWORD = ROL x: rbx|DWORD y: 5 size: DWORD <|@ <|@
      nr  728  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  730  <|@ instruction rdx|DWORD = XOR (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction rdx|DWORD = XOR (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  734  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  736  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  738  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  740  <|@ instruction r10|DWORD = LEA address: [r10|DWORD - 899497514] size: DWORD <|@ <|@
      nr  742  <|@ instruction r11|DWORD = ROL x: r10|DWORD y: 5 size: DWORD <|@ <|@
      nr  744  <|@ instruction rcx|DWORD = ROL x: rcx|DWORD y: 30 size: DWORD <|@ <|@
      nr  746  <|@ instruction rdi|DWORD = XOR (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  748  <|@ instruction rdi|DWORD = XOR (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  750  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  752  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  754  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  756  <|@ instruction r11|DWORD = LEA address: [r11|DWORD - 899497514] size: DWORD <|@ <|@
      nr  758  <|@ instruction r8|DWORD = ROL x: r11|DWORD y: 5 size: DWORD <|@ <|@
      nr  760  <|@ instruction rbx|DWORD = ROL x: rbx|DWORD y: 30 size: DWORD <|@ <|@
      nr  762  <|@ instruction rdi|DWORD = XOR (x: r10|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  764  <|@ instruction rdi|DWORD = XOR (x: rcx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  766  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  768  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  770  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  772  <|@ instruction r8|DWORD = LEA address: [r8|DWORD - 899497514] size: DWORD <|@ <|@
      nr  774  <|@ instruction r9|DWORD = ROL x: r8|DWORD y: 30 size: DWORD <|@ <|@
      nr  776  <|@ instruction rdi|DWORD = ROL x: r11|DWORD y: 30 size: DWORD <|@ <|@
      nr  778  <|@ instruction r10|DWORD = ROL x: r10|DWORD y: 30 size: DWORD <|@ <|@
      nr  780  <|@ instruction rdx|DWORD = ROL x: r8|DWORD y: 5 size: DWORD <|@ <|@
      nr  782  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  784  <|@ instruction r11|DWORD = XOR (x: rbx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  786  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  788  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  790  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  792  <|@ instruction r11|DWORD = LEA address: [rdx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  794  <|@ instruction rcx|DWORD = ROL x: r11|DWORD y: 5 size: DWORD <|@ <|@
      nr  796  <|@ instruction r8|DWORD = XOR (x: r8|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  798  <|@ instruction r8|DWORD = XOR (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  800  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  804  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  806  <|@ instruction r8|DWORD = LEA address: [rcx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  808  <|@ instruction rcx|DWORD = ROL x: r8|DWORD y: 5 size: DWORD <|@ <|@
      nr  810  <|@ instruction rbx|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  812  <|@ instruction rbx|DWORD = XOR (x: rdi|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  814  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  816  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  818  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: stack:32|DWORD) size: DWORD <|@ <|@
      nr  820  <|@ instruction r10|DWORD = LEA address: [rcx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  822  <|@ instruction rcx|DWORD = ROL x: r10|DWORD y: 5 size: DWORD <|@ <|@
      nr  824  <|@ instruction r11|DWORD = ROL x: r11|DWORD y: 30 size: DWORD <|@ <|@
      nr  826  <|@ instruction rbx|DWORD = XOR (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  828  <|@ instruction rbx|DWORD = XOR (x: r9|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  830  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  832  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  834  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  836  <|@ instruction rcx|DWORD = LEA address: [rcx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  838  <|@ instruction rbx|DWORD = ROL x: rcx|DWORD y: 5 size: DWORD <|@ <|@
      nr  840  <|@ instruction r8|DWORD = ROL x: r8|DWORD y: 30 size: DWORD <|@ <|@
      nr  842  <|@ instruction rdi|DWORD = XOR (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  844  <|@ instruction rdi|DWORD = XOR (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  846  <|@ instruction rbx|DWORD = ADD (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  848  <|@ instruction rbx|DWORD = ADD (x: rbx|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  850  <|@ instruction rdi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction rbx|DWORD = ADD (x: rbx|DWORD, ~y: [rdi|QWORD[.] + rdx|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  856  <|@ instruction rbx|DWORD = LEA address: [rbx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  858  <|@ instruction r10|DWORD = ROL x: r10|DWORD y: 30 size: DWORD <|@ <|@
      nr  860  <|@ instruction rdx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction r9|DWORD = LEA address: [rdx|DWORD + 8] size: DWORD <|@ <|@
      nr  864  <|@ instruction rdx|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  868  <|@ instruction r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  872  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" 
    successors "B17" "B18" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4612021107685376776
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.5789473684210522 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 72 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606324590299565886
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  876  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  878  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576421901864634512
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction rdx|DWORD = ROL x: rbx|DWORD y: 5 size: DWORD <|@ <|@
      nr  934  <|@ instruction rsi|DWORD = XOR (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  936  <|@ instruction rsi|DWORD = XOR (x: rsi|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  938  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  940  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  942  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rdi|QWORD[.] + r10|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  944  <|@ instruction r11|DWORD = LEA address: [rdx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  946  <|@ instruction rcx|DWORD = ROL x: rcx|DWORD y: 30 size: DWORD <|@ <|@
      nr  948  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  950  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction r8|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  954  <|@ instruction r9|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  956  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ instruction rbx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  960  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606406907175871841
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606324590299565887
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B25" "B23" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 5 label: ? <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 52] size: DWORD <|@ <|@
      nr 1078  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
locals: r10|QWORD[.] - - rbx|DWORD rcx|DWORD r9|DWORD r8|DWORD r11|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH x: [rdi|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 5 size: DWORD inlinedY: null state [bci:423] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1130  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 20], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1132  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 24], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1134  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 28], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1136  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 32], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1138  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction r10|DWORD = MOVE input: int[78|0x4e] <|@ <|@
      nr  198  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction r10|QWORD = MOVSXD value: r10|DWORD size: QWORD <|@ <|@
      nr  202  <|@ instruction r8|QWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  206  <|@ instruction r10|QWORD = DEC value: r10|QWORD size: QWORD <|@ <|@
      nr  208  <|@ instruction r8|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction CMPBRANCH (x: r8|QWORD, y: r10|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B26" 
    xhandlers
    flags 
    probability 4587023449039406624
    begin_IR
      LIR
      nr 1038  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1040  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1042  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1052  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1056  <|@ instruction stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1058  <|@ instruction rbx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1060  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1062  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B26" 
    xhandlers
    flags 
    probability 4587023449039406622
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction r8|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1006  <|@ instruction r9|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr 1008  <|@ instruction rbx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction stack:36|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1014  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1016  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1018  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  978  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction rdx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  988  <|@ instruction r8|DWORD = MOVE input: int[-108315|0xfffffffffffe58e5] <|@ <|@
      nr  992  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B24" "B9" "B22" "B8" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1154  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1176  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1178  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: r10|QWORD[.] - - r11|DWORD rsi|DWORD r9|DWORD rcx|DWORD rbx|DWORD rdi|DWORD - 
>@ <|@ instruction DEOPT info [bci:357] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction rdx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1032  <|@ instruction r8|DWORD = MOVE input: int[-105755|0xfffffffffffe62e5] <|@ <|@
      nr 1036  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rdx|QWORD = MOVE input: long[664|0x298] <|@ <|@
      nr  264  <|@ instruction r8|DWORD = MOVE input: int[-110619|0xfffffffffffe4fe5] <|@ <|@
      nr  268  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction rdx|QWORD = MOVE input: long[664|0x298] <|@ <|@
      nr  246  <|@ instruction r8|DWORD = MOVE input: int[-110619|0xfffffffffffe4fe5] <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction MOV x: [r15|QWORD + 1156] y: -133915 size: DWORD <|@ <|@
      nr 1098  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1100  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
locals: r10|QWORD[.] - - rbx|DWORD rcx|DWORD r9|DWORD r8|DWORD r11|DWORD - - 
>@ <|@ instruction DEOPT info [bci:423] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1142  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction rdx|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1152  <|@ instruction r8|DWORD = MOVE input: int[-102716|0xfffffffffffe6ec4] <|@ <|@
      nr 1156  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // W:int[]
     4: ifnonnull     15
     7: aload_0       
     8: bipush        80
    10: newarray      int
    12: putfield      #5          // W:int[]
    15: aload_1       
    16: iload_2       
    17: aload_0       
    18: getfield      #5          // W:int[]
    21: invokestatic  #19         // sun.security.provider.ByteArrayAccess.b2iBig64:(byte[], int, int[])void
    24: bipush        16
    26: istore_3      
    27: iload_3       
    28: bipush        79
    30: if_icmpgt     91
    33: aload_0       
    34: getfield      #5          // W:int[]
    37: iload_3       
    38: iconst_3      
    39: isub          
    40: iaload        
    41: aload_0       
    42: getfield      #5          // W:int[]
    45: iload_3       
    46: bipush        8
    48: isub          
    49: iaload        
    50: ixor          
    51: aload_0       
    52: getfield      #5          // W:int[]
    55: iload_3       
    56: bipush        14
    58: isub          
    59: iaload        
    60: ixor          
    61: aload_0       
    62: getfield      #5          // W:int[]
    65: iload_3       
    66: bipush        16
    68: isub          
    69: iaload        
    70: ixor          
    71: istore        4
    73: aload_0       
    74: getfield      #5          // W:int[]
    77: iload_3       
    78: iload         4
    80: iconst_1      
    81: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
    84: iastore       
    85: iinc          
    88: goto          27
    91: aload_0       
    92: getfield      #1          // state:int[]
    95: iconst_0      
    96: iaload        
    97: istore_3      
    98: aload_0       
    99: getfield      #1          // state:int[]
   102: iconst_1      
   103: iaload        
   104: istore        4
   106: aload_0       
   107: getfield      #1          // state:int[]
   110: iconst_2      
   111: iaload        
   112: istore        5
   114: aload_0       
   115: getfield      #1          // state:int[]
   118: iconst_3      
   119: iaload        
   120: istore        6
   122: aload_0       
   123: getfield      #1          // state:int[]
   126: iconst_4      
   127: iaload        
   128: istore        7
   130: iconst_0      
   131: istore        8
   133: iload         8
   135: bipush        20
   137: if_icmpge     204
   140: iload_3       
   141: iconst_5      
   142: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   145: iload         4
   147: iload         5
   149: iand          
   150: iload         4
   152: iconst_m1     
   153: ixor          
   154: iload         6
   156: iand          
   157: ior           
   158: iadd          
   159: iload         7
   161: iadd          
   162: aload_0       
   163: getfield      #5          // W:int[]
   166: iload         8
   168: iaload        
   169: iadd          
   170: ldc           #100        // 1518500249
   172: iadd          
   173: istore        9
   175: iload         6
   177: istore        7
   179: iload         5
   181: istore        6
   183: iload         4
   185: bipush        30
   187: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   190: istore        5
   192: iload_3       
   193: istore        4
   195: iload         9
   197: istore_3      
   198: iinc          
   201: goto          133
   204: bipush        20
   206: istore        8
   208: iload         8
   210: bipush        40
   212: if_icmpge     274
   215: iload_3       
   216: iconst_5      
   217: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   220: iload         4
   222: iload         5
   224: ixor          
   225: iload         6
   227: ixor          
   228: iadd          
   229: iload         7
   231: iadd          
   232: aload_0       
   233: getfield      #5          // W:int[]
   236: iload         8
   238: iaload        
   239: iadd          
   240: ldc           #101        // 1859775393
   242: iadd          
   243: istore        9
   245: iload         6
   247: istore        7
   249: iload         5
   251: istore        6
   253: iload         4
   255: bipush        30
   257: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   260: istore        5
   262: iload_3       
   263: istore        4
   265: iload         9
   267: istore_3      
   268: iinc          
   271: goto          208
   274: bipush        40
   276: istore        8
   278: iload         8
   280: bipush        60
   282: if_icmpge     353
   285: iload_3       
   286: iconst_5      
   287: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   290: iload         4
   292: iload         5
   294: iand          
   295: iload         4
   297: iload         6
   299: iand          
   300: ior           
   301: iload         5
   303: iload         6
   305: iand          
   306: ior           
   307: iadd          
   308: iload         7
   310: iadd          
   311: aload_0       
   312: getfield      #5          // W:int[]
   315: iload         8
   317: iaload        
   318: iadd          
   319: ldc           #102        // -1894007588
   321: iadd          
   322: istore        9
   324: iload         6
   326: istore        7
   328: iload         5
   330: istore        6
   332: iload         4
   334: bipush        30
   336: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   339: istore        5
   341: iload_3       
   342: istore        4
   344: iload         9
   346: istore_3      
   347: iinc          
   350: goto          278
   353: bipush        60
   355: istore        8
   357: iload         8
   359: bipush        80
   361: if_icmpge     423
   364: iload_3       
   365: iconst_5      
   366: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   369: iload         4
   371: iload         5
   373: ixor          
   374: iload         6
   376: ixor          
   377: iadd          
   378: iload         7
   380: iadd          
   381: aload_0       
   382: getfield      #5          // W:int[]
   385: iload         8
   387: iaload        
   388: iadd          
   389: ldc           #103        // -899497514
   391: iadd          
   392: istore        9
   394: iload         6
   396: istore        7
   398: iload         5
   400: istore        6
   402: iload         4
   404: bipush        30
   406: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   409: istore        5
   411: iload_3       
   412: istore        4
   414: iload         9
   416: istore_3      
   417: iinc          
   420: goto          357
   423: aload_0       
   424: getfield      #1          // state:int[]
   427: iconst_0      
   428: dup2          
   429: iaload        
   430: iload_3       
   431: iadd          
   432: iastore       
   433: aload_0       
   434: getfield      #1          // state:int[]
   437: iconst_1      
   438: dup2          
   439: iaload        
   440: iload         4
   442: iadd          
   443: iastore       
   444: aload_0       
   445: getfield      #1          // state:int[]
   448: iconst_2      
   449: dup2          
   450: iaload        
   451: iload         5
   453: iadd          
   454: iastore       
   455: aload_0       
   456: getfield      #1          // state:int[]
   459: iconst_3      
   460: dup2          
   461: iaload        
   462: iload         6
   464: iadd          
   465: iastore       
   466: aload_0       
   467: getfield      #1          // state:int[]
   470: iconst_4      
   471: dup2          
   472: iaload        
   473: iload         7
   475: iadd          
   476: iastore       
   477: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@31f9b0c2 slotKind: QWORD <|@ <|@
      nr   40  <|@ instruction r10|QWORD[.] = MOV input: [rsi|QWORD + 72] size: QWORD <|@ <|@
      nr   42  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD + 48] size: DWORD <|@ <|@
      nr   44  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD + 40] size: DWORD <|@ <|@
      nr   46  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD + 32] size: DWORD <|@ <|@
      nr   48  <|@ instruction rcx|DWORD = MOV input: [rsi|QWORD + 24] size: DWORD <|@ <|@
      nr   50  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction rdi|DWORD = MOV input: [rsi|QWORD + 8] size: DWORD <|@ <|@
      nr   54  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: r10|QWORD[.] - - r11|DWORD r8|DWORD r9|DWORD rcx|DWORD rbx|DWORD rdi|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B29 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lsun/security/provider/SHA;, resolved>;compressed} state [bci:357] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 0.9523809523809523 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B25 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B24" 
    xhandlers
    flags 
    probability 4606753504549791646
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction rdx|DWORD[_] = MOV input: [r10|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: r10|QWORD[.] - - r11|DWORD r8|DWORD r9|DWORD rcx|DWORD rbx|DWORD rdi|DWORD - 
>@ <|@ instruction rsi|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:357] <|@ <|@
      nr   88  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B23" 
    xhandlers
    flags 
    probability 4606753504549791646
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3087af84 encoding: base: 0 shift: 3 <|@ <|@
      nr  128  <|@ instruction rax|DWORD = ROL x: r11|DWORD y: 5 size: DWORD <|@ <|@
      nr  130  <|@ instruction rbp|DWORD = XOR (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction rbp|DWORD = XOR (x: rbp|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  134  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [rdx|QWORD[.] + rdi|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  140  <|@ instruction rax|DWORD = LEA address: [rax|DWORD - 899497514] size: DWORD <|@ <|@
      nr  142  <|@ instruction rbp|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  144  <|@ instruction r13|DWORD = ROL x: r8|DWORD y: 30 size: DWORD <|@ <|@
      nr  146  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.95 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B23 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B10" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction r14|DWORD = LEA address: [rdi|DWORD + 2] size: DWORD <|@ <|@
      nr  166  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B10 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B11" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  280  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B7" 
    successors "B12" "B22" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction r10|DWORD = ROL x: rax|DWORD y: 5 size: DWORD <|@ <|@
      nr  336  <|@ instruction r8|DWORD = XOR (x: r13|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  338  <|@ instruction r8|DWORD = XOR (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  340  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  344  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, ~y: [rdx|QWORD[.] + rbp|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  346  <|@ instruction r10|DWORD = LEA address: [r10|DWORD - 899497514] size: DWORD <|@ <|@
      nr  348  <|@ instruction r8|DWORD = LEA address: [rdi|DWORD + 3] size: DWORD <|@ <|@
      nr  350  <|@ instruction CMP x: r8|DWORD y: 80 size: DWORD <|@ <|@
      nr  352  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[80|0x50], ~trueValue: r8|DWORD) condition: < <|@ <|@
      nr  354  <|@ instruction r11|DWORD = ROL x: r11|DWORD y: 30 size: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576421901864634511
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction r8|DWORD = ROL x: r10|DWORD y: 5 size: DWORD <|@ <|@
      nr  402  <|@ instruction rbx|DWORD = XOR (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  404  <|@ instruction rbx|DWORD = XOR (x: rbx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  408  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  410  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, ~y: [rdx|QWORD[.] + r14|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  412  <|@ instruction r8|DWORD = LEA address: [r8|DWORD - 899497514] size: DWORD <|@ <|@
      nr  414  <|@ instruction r14|DWORD = INC value: r14|DWORD size: DWORD <|@ <|@
      nr  416  <|@ instruction rax|DWORD = ROL x: rax|DWORD y: 30 size: DWORD <|@ <|@
      nr  418  <|@ instruction r9|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction r13|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  426  <|@ instruction r10|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606406907175871839
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r14|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606324590299565885
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction rbx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  442  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  444  <|@ instruction r8|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction r10|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  448  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  450  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4608281511566220913
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction rdi|DWORD = MOV input: [rdx|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  696  <|@ instruction rsi|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  698  <|@ instruction rsi|DWORD = MOV input: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  700  <|@ instruction rax|DWORD = LEA address: [r10|DWORD + 2] size: DWORD <|@ <|@
      nr  702  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  704  <|@ instruction rbp|DWORD = LEA address: [r10|DWORD + 3] size: DWORD <|@ <|@
      nr  706  <|@ instruction rbp|DWORD = MOV input: [rdx|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  708  <|@ instruction r13|DWORD = LEA address: [r10|DWORD + 4] size: DWORD <|@ <|@
      nr  710  <|@ instruction r13|DWORD = MOV input: [rdx|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  712  <|@ instruction r14|DWORD = LEA address: [r10|DWORD + 5] size: DWORD <|@ <|@
      nr  714  <|@ instruction r14|DWORD = MOV input: [rdx|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  716  <|@ instruction stack:32|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction r14|DWORD = LEA address: [r10|DWORD + 6] size: DWORD <|@ <|@
      nr  720  <|@ instruction r14|DWORD = MOV input: [rdx|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  722  <|@ instruction rdx|DWORD = LEA address: [r10|DWORD + 7] size: DWORD <|@ <|@
      nr  724  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  726  <|@ instruction r10|DWORD = ROL x: rbx|DWORD y: 5 size: DWORD <|@ <|@
      nr  728  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  730  <|@ instruction rdx|DWORD = XOR (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction rdx|DWORD = XOR (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  734  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  736  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  738  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  740  <|@ instruction r10|DWORD = LEA address: [r10|DWORD - 899497514] size: DWORD <|@ <|@
      nr  742  <|@ instruction r11|DWORD = ROL x: r10|DWORD y: 5 size: DWORD <|@ <|@
      nr  744  <|@ instruction rcx|DWORD = ROL x: rcx|DWORD y: 30 size: DWORD <|@ <|@
      nr  746  <|@ instruction rdi|DWORD = XOR (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  748  <|@ instruction rdi|DWORD = XOR (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  750  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  752  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  754  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  756  <|@ instruction r11|DWORD = LEA address: [r11|DWORD - 899497514] size: DWORD <|@ <|@
      nr  758  <|@ instruction r8|DWORD = ROL x: r11|DWORD y: 5 size: DWORD <|@ <|@
      nr  760  <|@ instruction rbx|DWORD = ROL x: rbx|DWORD y: 30 size: DWORD <|@ <|@
      nr  762  <|@ instruction rdi|DWORD = XOR (x: r10|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  764  <|@ instruction rdi|DWORD = XOR (x: rcx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  766  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  768  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  770  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  772  <|@ instruction r8|DWORD = LEA address: [r8|DWORD - 899497514] size: DWORD <|@ <|@
      nr  774  <|@ instruction r9|DWORD = ROL x: r8|DWORD y: 30 size: DWORD <|@ <|@
      nr  776  <|@ instruction rdi|DWORD = ROL x: r11|DWORD y: 30 size: DWORD <|@ <|@
      nr  778  <|@ instruction r10|DWORD = ROL x: r10|DWORD y: 30 size: DWORD <|@ <|@
      nr  780  <|@ instruction rdx|DWORD = ROL x: r8|DWORD y: 5 size: DWORD <|@ <|@
      nr  782  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  784  <|@ instruction r11|DWORD = XOR (x: rbx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  786  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  788  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  790  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  792  <|@ instruction r11|DWORD = LEA address: [rdx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  794  <|@ instruction rcx|DWORD = ROL x: r11|DWORD y: 5 size: DWORD <|@ <|@
      nr  796  <|@ instruction r8|DWORD = XOR (x: r8|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  798  <|@ instruction r8|DWORD = XOR (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  800  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  804  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  806  <|@ instruction r8|DWORD = LEA address: [rcx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  808  <|@ instruction rcx|DWORD = ROL x: r8|DWORD y: 5 size: DWORD <|@ <|@
      nr  810  <|@ instruction rbx|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  812  <|@ instruction rbx|DWORD = XOR (x: rdi|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  814  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  816  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  818  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: stack:32|DWORD) size: DWORD <|@ <|@
      nr  820  <|@ instruction r10|DWORD = LEA address: [rcx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  822  <|@ instruction rcx|DWORD = ROL x: r10|DWORD y: 5 size: DWORD <|@ <|@
      nr  824  <|@ instruction r11|DWORD = ROL x: r11|DWORD y: 30 size: DWORD <|@ <|@
      nr  826  <|@ instruction rbx|DWORD = XOR (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  828  <|@ instruction rbx|DWORD = XOR (x: r9|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  830  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  832  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  834  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  836  <|@ instruction rcx|DWORD = LEA address: [rcx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  838  <|@ instruction rbx|DWORD = ROL x: rcx|DWORD y: 5 size: DWORD <|@ <|@
      nr  840  <|@ instruction r8|DWORD = ROL x: r8|DWORD y: 30 size: DWORD <|@ <|@
      nr  842  <|@ instruction rdi|DWORD = XOR (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  844  <|@ instruction rdi|DWORD = XOR (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  846  <|@ instruction rbx|DWORD = ADD (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  848  <|@ instruction rbx|DWORD = ADD (x: rbx|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  850  <|@ instruction rdi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction rbx|DWORD = ADD (x: rbx|DWORD, ~y: [rdi|QWORD[.] + rdx|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  856  <|@ instruction rbx|DWORD = LEA address: [rbx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  858  <|@ instruction r10|DWORD = ROL x: r10|DWORD y: 30 size: DWORD <|@ <|@
      nr  860  <|@ instruction rdx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction r9|DWORD = LEA address: [rdx|DWORD + 8] size: DWORD <|@ <|@
      nr  864  <|@ instruction rdx|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  868  <|@ instruction r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  872  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" 
    successors "B17" "B18" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4612021107685376776
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.5789473684210522 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 72 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606324590299565886
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  876  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  878  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576421901864634512
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction rdx|DWORD = ROL x: rbx|DWORD y: 5 size: DWORD <|@ <|@
      nr  934  <|@ instruction rsi|DWORD = XOR (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  936  <|@ instruction rsi|DWORD = XOR (x: rsi|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  938  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  940  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  942  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rdi|QWORD[.] + r10|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  944  <|@ instruction r11|DWORD = LEA address: [rdx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  946  <|@ instruction rcx|DWORD = ROL x: rcx|DWORD y: 30 size: DWORD <|@ <|@
      nr  948  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  950  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction r8|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  954  <|@ instruction r9|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  956  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ instruction rbx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  960  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606406907175871841
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606324590299565887
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B25" "B23" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 5 label: ? <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 52] size: DWORD <|@ <|@
      nr 1078  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
locals: r10|QWORD[.] - - rbx|DWORD rcx|DWORD r9|DWORD r8|DWORD r11|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH x: [rdi|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 5 size: DWORD inlinedY: null state [bci:423] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1130  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 20], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1132  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 24], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1134  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 28], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1136  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 32], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1138  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction r10|DWORD = MOVE input: int[78|0x4e] <|@ <|@
      nr  198  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction r10|QWORD = MOVSXD value: r10|DWORD size: QWORD <|@ <|@
      nr  202  <|@ instruction r8|QWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  206  <|@ instruction r10|QWORD = DEC value: r10|QWORD size: QWORD <|@ <|@
      nr  208  <|@ instruction r8|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction CMPBRANCH (x: r8|QWORD, y: r10|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B26" 
    xhandlers
    flags 
    probability 4587023449039406624
    begin_IR
      LIR
      nr 1038  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1040  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1042  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1052  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1056  <|@ instruction stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1058  <|@ instruction rbx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1060  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1062  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B26" 
    xhandlers
    flags 
    probability 4587023449039406622
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction r8|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1006  <|@ instruction r9|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr 1008  <|@ instruction rbx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction stack:36|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1014  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1016  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1018  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  978  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction rdx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  988  <|@ instruction r8|DWORD = MOVE input: int[-108315|0xfffffffffffe58e5] <|@ <|@
      nr  992  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B24" "B9" "B22" "B8" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1154  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1176  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1178  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: r10|QWORD[.] - - r11|DWORD rsi|DWORD r9|DWORD rcx|DWORD rbx|DWORD rdi|DWORD - 
>@ <|@ instruction DEOPT info [bci:357] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction rdx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1032  <|@ instruction r8|DWORD = MOVE input: int[-105755|0xfffffffffffe62e5] <|@ <|@
      nr 1036  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rdx|QWORD = MOVE input: long[664|0x298] <|@ <|@
      nr  264  <|@ instruction r8|DWORD = MOVE input: int[-110619|0xfffffffffffe4fe5] <|@ <|@
      nr  268  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction rdx|QWORD = MOVE input: long[664|0x298] <|@ <|@
      nr  246  <|@ instruction r8|DWORD = MOVE input: int[-110619|0xfffffffffffe4fe5] <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction MOV x: [r15|QWORD + 1156] y: -133915 size: DWORD <|@ <|@
      nr 1098  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1100  <|@ st <@st|@live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
locals: r10|QWORD[.] - - rbx|DWORD rcx|DWORD r9|DWORD r8|DWORD r11|DWORD - - 
>@ <|@ instruction DEOPT info [bci:423] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1142  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction rdx|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1152  <|@ instruction r8|DWORD = MOVE input: int[-102716|0xfffffffffffe6ec4] <|@ <|@
      nr 1156  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // W:int[]
     4: ifnonnull     15
     7: aload_0       
     8: bipush        80
    10: newarray      int
    12: putfield      #5          // W:int[]
    15: aload_1       
    16: iload_2       
    17: aload_0       
    18: getfield      #5          // W:int[]
    21: invokestatic  #19         // sun.security.provider.ByteArrayAccess.b2iBig64:(byte[], int, int[])void
    24: bipush        16
    26: istore_3      
    27: iload_3       
    28: bipush        79
    30: if_icmpgt     91
    33: aload_0       
    34: getfield      #5          // W:int[]
    37: iload_3       
    38: iconst_3      
    39: isub          
    40: iaload        
    41: aload_0       
    42: getfield      #5          // W:int[]
    45: iload_3       
    46: bipush        8
    48: isub          
    49: iaload        
    50: ixor          
    51: aload_0       
    52: getfield      #5          // W:int[]
    55: iload_3       
    56: bipush        14
    58: isub          
    59: iaload        
    60: ixor          
    61: aload_0       
    62: getfield      #5          // W:int[]
    65: iload_3       
    66: bipush        16
    68: isub          
    69: iaload        
    70: ixor          
    71: istore        4
    73: aload_0       
    74: getfield      #5          // W:int[]
    77: iload_3       
    78: iload         4
    80: iconst_1      
    81: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
    84: iastore       
    85: iinc          
    88: goto          27
    91: aload_0       
    92: getfield      #1          // state:int[]
    95: iconst_0      
    96: iaload        
    97: istore_3      
    98: aload_0       
    99: getfield      #1          // state:int[]
   102: iconst_1      
   103: iaload        
   104: istore        4
   106: aload_0       
   107: getfield      #1          // state:int[]
   110: iconst_2      
   111: iaload        
   112: istore        5
   114: aload_0       
   115: getfield      #1          // state:int[]
   118: iconst_3      
   119: iaload        
   120: istore        6
   122: aload_0       
   123: getfield      #1          // state:int[]
   126: iconst_4      
   127: iaload        
   128: istore        7
   130: iconst_0      
   131: istore        8
   133: iload         8
   135: bipush        20
   137: if_icmpge     204
   140: iload_3       
   141: iconst_5      
   142: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   145: iload         4
   147: iload         5
   149: iand          
   150: iload         4
   152: iconst_m1     
   153: ixor          
   154: iload         6
   156: iand          
   157: ior           
   158: iadd          
   159: iload         7
   161: iadd          
   162: aload_0       
   163: getfield      #5          // W:int[]
   166: iload         8
   168: iaload        
   169: iadd          
   170: ldc           #100        // 1518500249
   172: iadd          
   173: istore        9
   175: iload         6
   177: istore        7
   179: iload         5
   181: istore        6
   183: iload         4
   185: bipush        30
   187: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   190: istore        5
   192: iload_3       
   193: istore        4
   195: iload         9
   197: istore_3      
   198: iinc          
   201: goto          133
   204: bipush        20
   206: istore        8
   208: iload         8
   210: bipush        40
   212: if_icmpge     274
   215: iload_3       
   216: iconst_5      
   217: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   220: iload         4
   222: iload         5
   224: ixor          
   225: iload         6
   227: ixor          
   228: iadd          
   229: iload         7
   231: iadd          
   232: aload_0       
   233: getfield      #5          // W:int[]
   236: iload         8
   238: iaload        
   239: iadd          
   240: ldc           #101        // 1859775393
   242: iadd          
   243: istore        9
   245: iload         6
   247: istore        7
   249: iload         5
   251: istore        6
   253: iload         4
   255: bipush        30
   257: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   260: istore        5
   262: iload_3       
   263: istore        4
   265: iload         9
   267: istore_3      
   268: iinc          
   271: goto          208
   274: bipush        40
   276: istore        8
   278: iload         8
   280: bipush        60
   282: if_icmpge     353
   285: iload_3       
   286: iconst_5      
   287: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   290: iload         4
   292: iload         5
   294: iand          
   295: iload         4
   297: iload         6
   299: iand          
   300: ior           
   301: iload         5
   303: iload         6
   305: iand          
   306: ior           
   307: iadd          
   308: iload         7
   310: iadd          
   311: aload_0       
   312: getfield      #5          // W:int[]
   315: iload         8
   317: iaload        
   318: iadd          
   319: ldc           #102        // -1894007588
   321: iadd          
   322: istore        9
   324: iload         6
   326: istore        7
   328: iload         5
   330: istore        6
   332: iload         4
   334: bipush        30
   336: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   339: istore        5
   341: iload_3       
   342: istore        4
   344: iload         9
   346: istore_3      
   347: iinc          
   350: goto          278
   353: bipush        60
   355: istore        8
   357: iload         8
   359: bipush        80
   361: if_icmpge     423
   364: iload_3       
   365: iconst_5      
   366: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   369: iload         4
   371: iload         5
   373: ixor          
   374: iload         6
   376: ixor          
   377: iadd          
   378: iload         7
   380: iadd          
   381: aload_0       
   382: getfield      #5          // W:int[]
   385: iload         8
   387: iaload        
   388: iadd          
   389: ldc           #103        // -899497514
   391: iadd          
   392: istore        9
   394: iload         6
   396: istore        7
   398: iload         5
   400: istore        6
   402: iload         4
   404: bipush        30
   406: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   409: istore        5
   411: iload_3       
   412: istore        4
   414: iload         9
   416: istore_3      
   417: iinc          
   420: goto          357
   423: aload_0       
   424: getfield      #1          // state:int[]
   427: iconst_0      
   428: dup2          
   429: iaload        
   430: iload_3       
   431: iadd          
   432: iastore       
   433: aload_0       
   434: getfield      #1          // state:int[]
   437: iconst_1      
   438: dup2          
   439: iaload        
   440: iload         4
   442: iadd          
   443: iastore       
   444: aload_0       
   445: getfield      #1          // state:int[]
   448: iconst_2      
   449: dup2          
   450: iaload        
   451: iload         5
   453: iadd          
   454: iastore       
   455: aload_0       
   456: getfield      #1          // state:int[]
   459: iconst_3      
   460: dup2          
   461: iaload        
   462: iload         6
   464: iadd          
   465: iastore       
   466: aload_0       
   467: getfield      #1          // state:int[]
   470: iconst_4      
   471: dup2          
   472: iaload        
   473: iload         7
   475: iadd          
   476: iastore       
   477: return        
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@31f9b0c2 slotKind: QWORD <|@ <|@
      nr   40  <|@ instruction r10|QWORD[.] = MOV input: [rsi|QWORD + 72] size: QWORD <|@ <|@
      nr   42  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD + 48] size: DWORD <|@ <|@
      nr   44  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD + 40] size: DWORD <|@ <|@
      nr   46  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD + 32] size: DWORD <|@ <|@
      nr   48  <|@ instruction rcx|DWORD = MOV input: [rsi|QWORD + 24] size: DWORD <|@ <|@
      nr   50  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction rdi|DWORD = MOV input: [rsi|QWORD + 8] size: DWORD <|@ <|@
      nr   54  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   56  <|@ st <@st|@reference-map: [r10:0]
live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: r10|QWORD[.] - - r11|DWORD r8|DWORD r9|DWORD rcx|DWORD rbx|DWORD rdi|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B29 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lsun/security/provider/SHA;, resolved>;compressed} state [bci:357] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 0.9523809523809523 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B25 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B24" 
    xhandlers
    flags 
    probability 4606753504549791646
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction rdx|DWORD[_] = MOV input: [r10|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   86  <|@ st <@st|@reference-map: [rdx:0, r10:0]
live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: r10|QWORD[.] - - r11|DWORD r8|DWORD r9|DWORD rcx|DWORD rbx|DWORD rdi|DWORD - 
>@ <|@ instruction rsi|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:357] <|@ <|@
      nr   88  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B23" 
    xhandlers
    flags 
    probability 4606753504549791646
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3087af84 encoding: base: 0 shift: 3 <|@ <|@
      nr  128  <|@ instruction rax|DWORD = ROL x: r11|DWORD y: 5 size: DWORD <|@ <|@
      nr  130  <|@ instruction rbp|DWORD = XOR (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction rbp|DWORD = XOR (x: rbp|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  134  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [rdx|QWORD[.] + rdi|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  140  <|@ instruction rax|DWORD = LEA address: [rax|DWORD - 899497514] size: DWORD <|@ <|@
      nr  142  <|@ instruction rbp|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  144  <|@ instruction r13|DWORD = ROL x: r8|DWORD y: 30 size: DWORD <|@ <|@
      nr  146  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.95 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B23 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B10" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction r14|DWORD = LEA address: [rdi|DWORD + 2] size: DWORD <|@ <|@
      nr  166  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B10 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B11" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  280  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B7" 
    successors "B12" "B22" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction r10|DWORD = ROL x: rax|DWORD y: 5 size: DWORD <|@ <|@
      nr  336  <|@ instruction r8|DWORD = XOR (x: r13|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  338  <|@ instruction r8|DWORD = XOR (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  340  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  344  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, ~y: [rdx|QWORD[.] + rbp|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  346  <|@ instruction r10|DWORD = LEA address: [r10|DWORD - 899497514] size: DWORD <|@ <|@
      nr  348  <|@ instruction r8|DWORD = LEA address: [rdi|DWORD + 3] size: DWORD <|@ <|@
      nr  350  <|@ instruction CMP x: r8|DWORD y: 80 size: DWORD <|@ <|@
      nr  352  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[80|0x50], ~trueValue: r8|DWORD) condition: < <|@ <|@
      nr  354  <|@ instruction r11|DWORD = ROL x: r11|DWORD y: 30 size: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576421901864634511
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction r8|DWORD = ROL x: r10|DWORD y: 5 size: DWORD <|@ <|@
      nr  402  <|@ instruction rbx|DWORD = XOR (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  404  <|@ instruction rbx|DWORD = XOR (x: rbx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  408  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  410  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, ~y: [rdx|QWORD[.] + r14|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  412  <|@ instruction r8|DWORD = LEA address: [r8|DWORD - 899497514] size: DWORD <|@ <|@
      nr  414  <|@ instruction r14|DWORD = INC value: r14|DWORD size: DWORD <|@ <|@
      nr  416  <|@ instruction rax|DWORD = ROL x: rax|DWORD y: 30 size: DWORD <|@ <|@
      nr  418  <|@ instruction r9|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction r13|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  426  <|@ instruction r10|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606406907175871839
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r14|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606324590299565885
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction rbx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  442  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  444  <|@ instruction r8|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction r10|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  448  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  450  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4608281511566220913
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction rdi|DWORD = MOV input: [rdx|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  696  <|@ instruction rsi|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  698  <|@ instruction rsi|DWORD = MOV input: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  700  <|@ instruction rax|DWORD = LEA address: [r10|DWORD + 2] size: DWORD <|@ <|@
      nr  702  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  704  <|@ instruction rbp|DWORD = LEA address: [r10|DWORD + 3] size: DWORD <|@ <|@
      nr  706  <|@ instruction rbp|DWORD = MOV input: [rdx|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  708  <|@ instruction r13|DWORD = LEA address: [r10|DWORD + 4] size: DWORD <|@ <|@
      nr  710  <|@ instruction r13|DWORD = MOV input: [rdx|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  712  <|@ instruction r14|DWORD = LEA address: [r10|DWORD + 5] size: DWORD <|@ <|@
      nr  714  <|@ instruction r14|DWORD = MOV input: [rdx|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  716  <|@ instruction stack:32|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction r14|DWORD = LEA address: [r10|DWORD + 6] size: DWORD <|@ <|@
      nr  720  <|@ instruction r14|DWORD = MOV input: [rdx|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  722  <|@ instruction rdx|DWORD = LEA address: [r10|DWORD + 7] size: DWORD <|@ <|@
      nr  724  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  726  <|@ instruction r10|DWORD = ROL x: rbx|DWORD y: 5 size: DWORD <|@ <|@
      nr  728  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  730  <|@ instruction rdx|DWORD = XOR (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction rdx|DWORD = XOR (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  734  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  736  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  738  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  740  <|@ instruction r10|DWORD = LEA address: [r10|DWORD - 899497514] size: DWORD <|@ <|@
      nr  742  <|@ instruction r11|DWORD = ROL x: r10|DWORD y: 5 size: DWORD <|@ <|@
      nr  744  <|@ instruction rcx|DWORD = ROL x: rcx|DWORD y: 30 size: DWORD <|@ <|@
      nr  746  <|@ instruction rdi|DWORD = XOR (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  748  <|@ instruction rdi|DWORD = XOR (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  750  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  752  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  754  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  756  <|@ instruction r11|DWORD = LEA address: [r11|DWORD - 899497514] size: DWORD <|@ <|@
      nr  758  <|@ instruction r8|DWORD = ROL x: r11|DWORD y: 5 size: DWORD <|@ <|@
      nr  760  <|@ instruction rbx|DWORD = ROL x: rbx|DWORD y: 30 size: DWORD <|@ <|@
      nr  762  <|@ instruction rdi|DWORD = XOR (x: r10|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  764  <|@ instruction rdi|DWORD = XOR (x: rcx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  766  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  768  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  770  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  772  <|@ instruction r8|DWORD = LEA address: [r8|DWORD - 899497514] size: DWORD <|@ <|@
      nr  774  <|@ instruction r9|DWORD = ROL x: r8|DWORD y: 30 size: DWORD <|@ <|@
      nr  776  <|@ instruction rdi|DWORD = ROL x: r11|DWORD y: 30 size: DWORD <|@ <|@
      nr  778  <|@ instruction r10|DWORD = ROL x: r10|DWORD y: 30 size: DWORD <|@ <|@
      nr  780  <|@ instruction rdx|DWORD = ROL x: r8|DWORD y: 5 size: DWORD <|@ <|@
      nr  782  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  784  <|@ instruction r11|DWORD = XOR (x: rbx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  786  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  788  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  790  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  792  <|@ instruction r11|DWORD = LEA address: [rdx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  794  <|@ instruction rcx|DWORD = ROL x: r11|DWORD y: 5 size: DWORD <|@ <|@
      nr  796  <|@ instruction r8|DWORD = XOR (x: r8|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  798  <|@ instruction r8|DWORD = XOR (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  800  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  804  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  806  <|@ instruction r8|DWORD = LEA address: [rcx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  808  <|@ instruction rcx|DWORD = ROL x: r8|DWORD y: 5 size: DWORD <|@ <|@
      nr  810  <|@ instruction rbx|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  812  <|@ instruction rbx|DWORD = XOR (x: rdi|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  814  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  816  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  818  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: stack:32|DWORD) size: DWORD <|@ <|@
      nr  820  <|@ instruction r10|DWORD = LEA address: [rcx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  822  <|@ instruction rcx|DWORD = ROL x: r10|DWORD y: 5 size: DWORD <|@ <|@
      nr  824  <|@ instruction r11|DWORD = ROL x: r11|DWORD y: 30 size: DWORD <|@ <|@
      nr  826  <|@ instruction rbx|DWORD = XOR (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  828  <|@ instruction rbx|DWORD = XOR (x: r9|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  830  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  832  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  834  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  836  <|@ instruction rcx|DWORD = LEA address: [rcx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  838  <|@ instruction rbx|DWORD = ROL x: rcx|DWORD y: 5 size: DWORD <|@ <|@
      nr  840  <|@ instruction r8|DWORD = ROL x: r8|DWORD y: 30 size: DWORD <|@ <|@
      nr  842  <|@ instruction rdi|DWORD = XOR (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  844  <|@ instruction rdi|DWORD = XOR (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  846  <|@ instruction rbx|DWORD = ADD (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  848  <|@ instruction rbx|DWORD = ADD (x: rbx|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  850  <|@ instruction rdi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction rbx|DWORD = ADD (x: rbx|DWORD, ~y: [rdi|QWORD[.] + rdx|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  856  <|@ instruction rbx|DWORD = LEA address: [rbx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  858  <|@ instruction r10|DWORD = ROL x: r10|DWORD y: 30 size: DWORD <|@ <|@
      nr  860  <|@ instruction rdx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction r9|DWORD = LEA address: [rdx|DWORD + 8] size: DWORD <|@ <|@
      nr  864  <|@ instruction rdx|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  868  <|@ instruction r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  872  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" 
    successors "B17" "B18" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4612021107685376776
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.5789473684210522 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 72 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606324590299565886
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  876  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  878  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576421901864634512
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction rdx|DWORD = ROL x: rbx|DWORD y: 5 size: DWORD <|@ <|@
      nr  934  <|@ instruction rsi|DWORD = XOR (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  936  <|@ instruction rsi|DWORD = XOR (x: rsi|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  938  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  940  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  942  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rdi|QWORD[.] + r10|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  944  <|@ instruction r11|DWORD = LEA address: [rdx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  946  <|@ instruction rcx|DWORD = ROL x: rcx|DWORD y: 30 size: DWORD <|@ <|@
      nr  948  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  950  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction r8|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  954  <|@ instruction r9|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  956  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ instruction rbx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  960  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606406907175871841
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606324590299565887
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B25" "B23" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 5 label: ? <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 52] size: DWORD <|@ <|@
      nr 1078  <|@ st <@st|@reference-map: [rdi:0, r10:0]
live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
locals: r10|QWORD[.] - - rbx|DWORD rcx|DWORD r9|DWORD r8|DWORD r11|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH x: [rdi|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 5 size: DWORD inlinedY: null state [bci:423] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1130  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 20], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1132  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 24], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1134  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 28], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1136  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 32], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1138  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction r10|DWORD = MOVE input: int[78|0x4e] <|@ <|@
      nr  198  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction r10|QWORD = MOVSXD value: r10|DWORD size: QWORD <|@ <|@
      nr  202  <|@ instruction r8|QWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  206  <|@ instruction r10|QWORD = DEC value: r10|QWORD size: QWORD <|@ <|@
      nr  208  <|@ instruction r8|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction CMPBRANCH (x: r8|QWORD, y: r10|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B26" 
    xhandlers
    flags 
    probability 4587023449039406624
    begin_IR
      LIR
      nr 1038  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1040  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1042  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1052  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1056  <|@ instruction stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1058  <|@ instruction rbx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1060  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1062  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B26" 
    xhandlers
    flags 
    probability 4587023449039406622
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction r8|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1006  <|@ instruction r9|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr 1008  <|@ instruction rbx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction stack:36|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1014  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1016  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1018  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  978  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction rdx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  988  <|@ instruction r8|DWORD = MOVE input: int[-108315|0xfffffffffffe58e5] <|@ <|@
      nr  992  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B24" "B9" "B22" "B8" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1154  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1176  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1178  <|@ st <@st|@reference-map: [r10:0]
live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: r10|QWORD[.] - - r11|DWORD rsi|DWORD r9|DWORD rcx|DWORD rbx|DWORD rdi|DWORD - 
>@ <|@ instruction DEOPT info [bci:357] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction rdx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1032  <|@ instruction r8|DWORD = MOVE input: int[-105755|0xfffffffffffe62e5] <|@ <|@
      nr 1036  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rdx|QWORD = MOVE input: long[664|0x298] <|@ <|@
      nr  264  <|@ instruction r8|DWORD = MOVE input: int[-110619|0xfffffffffffe4fe5] <|@ <|@
      nr  268  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction rdx|QWORD = MOVE input: long[664|0x298] <|@ <|@
      nr  246  <|@ instruction r8|DWORD = MOVE input: int[-110619|0xfffffffffffe4fe5] <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction MOV x: [r15|QWORD + 1156] y: -133915 size: DWORD <|@ <|@
      nr 1098  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1100  <|@ st <@st|@reference-map: [r10:0]
live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
locals: r10|QWORD[.] - - rbx|DWORD rcx|DWORD r9|DWORD r8|DWORD r11|DWORD - - 
>@ <|@ instruction DEOPT info [bci:423] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1142  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction rdx|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1152  <|@ instruction r8|DWORD = MOVE input: int[-102716|0xfffffffffffe6ec4] <|@ <|@
      nr 1156  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // W:int[]
     4: ifnonnull     15
     7: aload_0       
     8: bipush        80
    10: newarray      int
    12: putfield      #5          // W:int[]
    15: aload_1       
    16: iload_2       
    17: aload_0       
    18: getfield      #5          // W:int[]
    21: invokestatic  #19         // sun.security.provider.ByteArrayAccess.b2iBig64:(byte[], int, int[])void
    24: bipush        16
    26: istore_3      
    27: iload_3       
    28: bipush        79
    30: if_icmpgt     91
    33: aload_0       
    34: getfield      #5          // W:int[]
    37: iload_3       
    38: iconst_3      
    39: isub          
    40: iaload        
    41: aload_0       
    42: getfield      #5          // W:int[]
    45: iload_3       
    46: bipush        8
    48: isub          
    49: iaload        
    50: ixor          
    51: aload_0       
    52: getfield      #5          // W:int[]
    55: iload_3       
    56: bipush        14
    58: isub          
    59: iaload        
    60: ixor          
    61: aload_0       
    62: getfield      #5          // W:int[]
    65: iload_3       
    66: bipush        16
    68: isub          
    69: iaload        
    70: ixor          
    71: istore        4
    73: aload_0       
    74: getfield      #5          // W:int[]
    77: iload_3       
    78: iload         4
    80: iconst_1      
    81: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
    84: iastore       
    85: iinc          
    88: goto          27
    91: aload_0       
    92: getfield      #1          // state:int[]
    95: iconst_0      
    96: iaload        
    97: istore_3      
    98: aload_0       
    99: getfield      #1          // state:int[]
   102: iconst_1      
   103: iaload        
   104: istore        4
   106: aload_0       
   107: getfield      #1          // state:int[]
   110: iconst_2      
   111: iaload        
   112: istore        5
   114: aload_0       
   115: getfield      #1          // state:int[]
   118: iconst_3      
   119: iaload        
   120: istore        6
   122: aload_0       
   123: getfield      #1          // state:int[]
   126: iconst_4      
   127: iaload        
   128: istore        7
   130: iconst_0      
   131: istore        8
   133: iload         8
   135: bipush        20
   137: if_icmpge     204
   140: iload_3       
   141: iconst_5      
   142: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   145: iload         4
   147: iload         5
   149: iand          
   150: iload         4
   152: iconst_m1     
   153: ixor          
   154: iload         6
   156: iand          
   157: ior           
   158: iadd          
   159: iload         7
   161: iadd          
   162: aload_0       
   163: getfield      #5          // W:int[]
   166: iload         8
   168: iaload        
   169: iadd          
   170: ldc           #100        // 1518500249
   172: iadd          
   173: istore        9
   175: iload         6
   177: istore        7
   179: iload         5
   181: istore        6
   183: iload         4
   185: bipush        30
   187: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   190: istore        5
   192: iload_3       
   193: istore        4
   195: iload         9
   197: istore_3      
   198: iinc          
   201: goto          133
   204: bipush        20
   206: istore        8
   208: iload         8
   210: bipush        40
   212: if_icmpge     274
   215: iload_3       
   216: iconst_5      
   217: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   220: iload         4
   222: iload         5
   224: ixor          
   225: iload         6
   227: ixor          
   228: iadd          
   229: iload         7
   231: iadd          
   232: aload_0       
   233: getfield      #5          // W:int[]
   236: iload         8
   238: iaload        
   239: iadd          
   240: ldc           #101        // 1859775393
   242: iadd          
   243: istore        9
   245: iload         6
   247: istore        7
   249: iload         5
   251: istore        6
   253: iload         4
   255: bipush        30
   257: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   260: istore        5
   262: iload_3       
   263: istore        4
   265: iload         9
   267: istore_3      
   268: iinc          
   271: goto          208
   274: bipush        40
   276: istore        8
   278: iload         8
   280: bipush        60
   282: if_icmpge     353
   285: iload_3       
   286: iconst_5      
   287: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   290: iload         4
   292: iload         5
   294: iand          
   295: iload         4
   297: iload         6
   299: iand          
   300: ior           
   301: iload         5
   303: iload         6
   305: iand          
   306: ior           
   307: iadd          
   308: iload         7
   310: iadd          
   311: aload_0       
   312: getfield      #5          // W:int[]
   315: iload         8
   317: iaload        
   318: iadd          
   319: ldc           #102        // -1894007588
   321: iadd          
   322: istore        9
   324: iload         6
   326: istore        7
   328: iload         5
   330: istore        6
   332: iload         4
   334: bipush        30
   336: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   339: istore        5
   341: iload_3       
   342: istore        4
   344: iload         9
   346: istore_3      
   347: iinc          
   350: goto          278
   353: bipush        60
   355: istore        8
   357: iload         8
   359: bipush        80
   361: if_icmpge     423
   364: iload_3       
   365: iconst_5      
   366: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   369: iload         4
   371: iload         5
   373: ixor          
   374: iload         6
   376: ixor          
   377: iadd          
   378: iload         7
   380: iadd          
   381: aload_0       
   382: getfield      #5          // W:int[]
   385: iload         8
   387: iaload        
   388: iadd          
   389: ldc           #103        // -899497514
   391: iadd          
   392: istore        9
   394: iload         6
   396: istore        7
   398: iload         5
   400: istore        6
   402: iload         4
   404: bipush        30
   406: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   409: istore        5
   411: iload_3       
   412: istore        4
   414: iload         9
   416: istore_3      
   417: iinc          
   420: goto          357
   423: aload_0       
   424: getfield      #1          // state:int[]
   427: iconst_0      
   428: dup2          
   429: iaload        
   430: iload_3       
   431: iadd          
   432: iastore       
   433: aload_0       
   434: getfield      #1          // state:int[]
   437: iconst_1      
   438: dup2          
   439: iaload        
   440: iload         4
   442: iadd          
   443: iastore       
   444: aload_0       
   445: getfield      #1          // state:int[]
   448: iconst_2      
   449: dup2          
   450: iaload        
   451: iload         5
   453: iadd          
   454: iastore       
   455: aload_0       
   456: getfield      #1          // state:int[]
   459: iconst_3      
   460: dup2          
   461: iaload        
   462: iload         6
   464: iadd          
   465: iastore       
   466: aload_0       
   467: getfield      #1          // state:int[]
   470: iconst_4      
   471: dup2          
   472: iaload        
   473: iload         7
   475: iadd          
   476: iastore       
   477: return        
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@31f9b0c2 slotKind: QWORD <|@ <|@
      nr   40  <|@ instruction r10|QWORD[.] = MOV input: [rsi|QWORD + 72] size: QWORD <|@ <|@
      nr   42  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD + 48] size: DWORD <|@ <|@
      nr   44  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD + 40] size: DWORD <|@ <|@
      nr   46  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD + 32] size: DWORD <|@ <|@
      nr   48  <|@ instruction rcx|DWORD = MOV input: [rsi|QWORD + 24] size: DWORD <|@ <|@
      nr   50  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction rdi|DWORD = MOV input: [rsi|QWORD + 8] size: DWORD <|@ <|@
      nr   54  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   56  <|@ st <@st|@reference-map: [r10:0]
live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: r10|QWORD[.] - - r11|DWORD r8|DWORD r9|DWORD rcx|DWORD rbx|DWORD rdi|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B29 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lsun/security/provider/SHA;, resolved>;compressed} state [bci:357] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 0.9523809523809523 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B25 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B24" 
    xhandlers
    flags 
    probability 4606753504549791646
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction rdx|DWORD[_] = MOV input: [r10|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   86  <|@ st <@st|@reference-map: [rdx:0, r10:0]
live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: r10|QWORD[.] - - r11|DWORD r8|DWORD r9|DWORD rcx|DWORD rbx|DWORD rdi|DWORD - 
>@ <|@ instruction rsi|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:357] <|@ <|@
      nr   88  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B23" 
    xhandlers
    flags 
    probability 4606753504549791646
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3087af84 encoding: base: 0 shift: 3 <|@ <|@
      nr  128  <|@ instruction rax|DWORD = ROL x: r11|DWORD y: 5 size: DWORD <|@ <|@
      nr  130  <|@ instruction rbp|DWORD = XOR (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction rbp|DWORD = XOR (x: rbp|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  134  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [rdx|QWORD[.] + rdi|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  140  <|@ instruction rax|DWORD = LEA address: [rax|DWORD - 899497514] size: DWORD <|@ <|@
      nr  142  <|@ instruction rbp|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  144  <|@ instruction r13|DWORD = ROL x: r8|DWORD y: 30 size: DWORD <|@ <|@
      nr  146  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.95 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B23 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B10" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction r14|DWORD = LEA address: [rdi|DWORD + 2] size: DWORD <|@ <|@
      nr  166  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B10 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B11" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  280  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B7" 
    successors "B12" "B22" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606324590299565884
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction r10|DWORD = ROL x: rax|DWORD y: 5 size: DWORD <|@ <|@
      nr  336  <|@ instruction r8|DWORD = XOR (x: r13|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  338  <|@ instruction r8|DWORD = XOR (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  340  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  344  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, ~y: [rdx|QWORD[.] + rbp|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  346  <|@ instruction r10|DWORD = LEA address: [r10|DWORD - 899497514] size: DWORD <|@ <|@
      nr  348  <|@ instruction r8|DWORD = LEA address: [rdi|DWORD + 3] size: DWORD <|@ <|@
      nr  350  <|@ instruction CMP x: r8|DWORD y: 80 size: DWORD <|@ <|@
      nr  352  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[80|0x50], ~trueValue: r8|DWORD) condition: < <|@ <|@
      nr  354  <|@ instruction r11|DWORD = ROL x: r11|DWORD y: 30 size: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576421901864634511
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction r8|DWORD = ROL x: r10|DWORD y: 5 size: DWORD <|@ <|@
      nr  402  <|@ instruction rbx|DWORD = XOR (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  404  <|@ instruction rbx|DWORD = XOR (x: rbx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  408  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  410  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, ~y: [rdx|QWORD[.] + r14|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  412  <|@ instruction r8|DWORD = LEA address: [r8|DWORD - 899497514] size: DWORD <|@ <|@
      nr  414  <|@ instruction r14|DWORD = INC value: r14|DWORD size: DWORD <|@ <|@
      nr  416  <|@ instruction rax|DWORD = ROL x: rax|DWORD y: 30 size: DWORD <|@ <|@
      nr  418  <|@ instruction r9|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction r13|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  426  <|@ instruction r10|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606406907175871839
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r14|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606324590299565885
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction rbx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  442  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  444  <|@ instruction r8|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction r10|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  448  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  450  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4608281511566220913
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction rdi|DWORD = MOV input: [rdx|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  696  <|@ instruction rsi|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  698  <|@ instruction rsi|DWORD = MOV input: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  700  <|@ instruction rax|DWORD = LEA address: [r10|DWORD + 2] size: DWORD <|@ <|@
      nr  702  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  704  <|@ instruction rbp|DWORD = LEA address: [r10|DWORD + 3] size: DWORD <|@ <|@
      nr  706  <|@ instruction rbp|DWORD = MOV input: [rdx|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  708  <|@ instruction r13|DWORD = LEA address: [r10|DWORD + 4] size: DWORD <|@ <|@
      nr  710  <|@ instruction r13|DWORD = MOV input: [rdx|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  712  <|@ instruction r14|DWORD = LEA address: [r10|DWORD + 5] size: DWORD <|@ <|@
      nr  714  <|@ instruction r14|DWORD = MOV input: [rdx|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  716  <|@ instruction stack:32|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction r14|DWORD = LEA address: [r10|DWORD + 6] size: DWORD <|@ <|@
      nr  720  <|@ instruction r14|DWORD = MOV input: [rdx|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  722  <|@ instruction rdx|DWORD = LEA address: [r10|DWORD + 7] size: DWORD <|@ <|@
      nr  724  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  726  <|@ instruction r10|DWORD = ROL x: rbx|DWORD y: 5 size: DWORD <|@ <|@
      nr  728  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  730  <|@ instruction rdx|DWORD = XOR (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction rdx|DWORD = XOR (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  734  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  736  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  738  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  740  <|@ instruction r10|DWORD = LEA address: [r10|DWORD - 899497514] size: DWORD <|@ <|@
      nr  742  <|@ instruction r11|DWORD = ROL x: r10|DWORD y: 5 size: DWORD <|@ <|@
      nr  744  <|@ instruction rcx|DWORD = ROL x: rcx|DWORD y: 30 size: DWORD <|@ <|@
      nr  746  <|@ instruction rdi|DWORD = XOR (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  748  <|@ instruction rdi|DWORD = XOR (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  750  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  752  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  754  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  756  <|@ instruction r11|DWORD = LEA address: [r11|DWORD - 899497514] size: DWORD <|@ <|@
      nr  758  <|@ instruction r8|DWORD = ROL x: r11|DWORD y: 5 size: DWORD <|@ <|@
      nr  760  <|@ instruction rbx|DWORD = ROL x: rbx|DWORD y: 30 size: DWORD <|@ <|@
      nr  762  <|@ instruction rdi|DWORD = XOR (x: r10|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  764  <|@ instruction rdi|DWORD = XOR (x: rcx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  766  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  768  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  770  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  772  <|@ instruction r8|DWORD = LEA address: [r8|DWORD - 899497514] size: DWORD <|@ <|@
      nr  774  <|@ instruction r9|DWORD = ROL x: r8|DWORD y: 30 size: DWORD <|@ <|@
      nr  776  <|@ instruction rdi|DWORD = ROL x: r11|DWORD y: 30 size: DWORD <|@ <|@
      nr  778  <|@ instruction r10|DWORD = ROL x: r10|DWORD y: 30 size: DWORD <|@ <|@
      nr  780  <|@ instruction rdx|DWORD = ROL x: r8|DWORD y: 5 size: DWORD <|@ <|@
      nr  782  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  784  <|@ instruction r11|DWORD = XOR (x: rbx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  786  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  788  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  790  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  792  <|@ instruction r11|DWORD = LEA address: [rdx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  794  <|@ instruction rcx|DWORD = ROL x: r11|DWORD y: 5 size: DWORD <|@ <|@
      nr  796  <|@ instruction r8|DWORD = XOR (x: r8|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  798  <|@ instruction r8|DWORD = XOR (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  800  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  804  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  806  <|@ instruction r8|DWORD = LEA address: [rcx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  808  <|@ instruction rcx|DWORD = ROL x: r8|DWORD y: 5 size: DWORD <|@ <|@
      nr  810  <|@ instruction rbx|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  812  <|@ instruction rbx|DWORD = XOR (x: rdi|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  814  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  816  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  818  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: stack:32|DWORD) size: DWORD <|@ <|@
      nr  820  <|@ instruction r10|DWORD = LEA address: [rcx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  822  <|@ instruction rcx|DWORD = ROL x: r10|DWORD y: 5 size: DWORD <|@ <|@
      nr  824  <|@ instruction r11|DWORD = ROL x: r11|DWORD y: 30 size: DWORD <|@ <|@
      nr  826  <|@ instruction rbx|DWORD = XOR (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  828  <|@ instruction rbx|DWORD = XOR (x: r9|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  830  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  832  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  834  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  836  <|@ instruction rcx|DWORD = LEA address: [rcx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  838  <|@ instruction rbx|DWORD = ROL x: rcx|DWORD y: 5 size: DWORD <|@ <|@
      nr  840  <|@ instruction r8|DWORD = ROL x: r8|DWORD y: 30 size: DWORD <|@ <|@
      nr  842  <|@ instruction rdi|DWORD = XOR (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  844  <|@ instruction rdi|DWORD = XOR (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  846  <|@ instruction rbx|DWORD = ADD (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  848  <|@ instruction rbx|DWORD = ADD (x: rbx|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  850  <|@ instruction rdi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction rbx|DWORD = ADD (x: rbx|DWORD, ~y: [rdi|QWORD[.] + rdx|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  856  <|@ instruction rbx|DWORD = LEA address: [rbx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  858  <|@ instruction r10|DWORD = ROL x: r10|DWORD y: 30 size: DWORD <|@ <|@
      nr  860  <|@ instruction rdx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction r9|DWORD = LEA address: [rdx|DWORD + 8] size: DWORD <|@ <|@
      nr  864  <|@ instruction rdx|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  868  <|@ instruction r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  872  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" 
    successors "B17" "B18" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4612021107685376776
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.5789473684210522 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 72 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606324590299565886
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  876  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  878  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576421901864634512
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction rdx|DWORD = ROL x: rbx|DWORD y: 5 size: DWORD <|@ <|@
      nr  934  <|@ instruction rsi|DWORD = XOR (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  936  <|@ instruction rsi|DWORD = XOR (x: rsi|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  938  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  940  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  942  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rdi|QWORD[.] + r10|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  944  <|@ instruction r11|DWORD = LEA address: [rdx|DWORD - 899497514] size: DWORD <|@ <|@
      nr  946  <|@ instruction rcx|DWORD = ROL x: rcx|DWORD y: 30 size: DWORD <|@ <|@
      nr  948  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  950  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction r8|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  954  <|@ instruction r9|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  956  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ instruction rbx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  960  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606406907175871841
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606324590299565887
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B25" "B23" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 5 label: ? <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 52] size: DWORD <|@ <|@
      nr 1078  <|@ st <@st|@reference-map: [rdi:0, r10:0]
live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
locals: r10|QWORD[.] - - rbx|DWORD rcx|DWORD r9|DWORD r8|DWORD r11|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH x: [rdi|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 5 size: DWORD inlinedY: null state [bci:423] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1130  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 20], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1132  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 24], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1134  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 28], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1136  <|@ instruction ADD (x: [rdi|DWORD[_] * 8 + 32], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1138  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction r10|DWORD = MOVE input: int[78|0x4e] <|@ <|@
      nr  198  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction r10|QWORD = MOVSXD value: r10|DWORD size: QWORD <|@ <|@
      nr  202  <|@ instruction r8|QWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  206  <|@ instruction r10|QWORD = DEC value: r10|QWORD size: QWORD <|@ <|@
      nr  208  <|@ instruction r8|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction CMPBRANCH (x: r8|QWORD, y: r10|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4601820990672195388
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B26" 
    xhandlers
    flags 
    probability 4587023449039406624
    begin_IR
      LIR
      nr 1038  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1040  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1042  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1052  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1056  <|@ instruction stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1058  <|@ instruction rbx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1060  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1062  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B26" 
    xhandlers
    flags 
    probability 4587023449039406622
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction r8|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1006  <|@ instruction r9|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr 1008  <|@ instruction rbx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction stack:36|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1014  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1016  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1018  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  978  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction rdx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  988  <|@ instruction r8|DWORD = MOVE input: int[-108315|0xfffffffffffe58e5] <|@ <|@
      nr  992  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B24" "B9" "B22" "B8" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1154  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1176  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1178  <|@ st <@st|@reference-map: [r10:0]
live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357]
locals: r10|QWORD[.] - - r11|DWORD rsi|DWORD r9|DWORD rcx|DWORD rbx|DWORD rdi|DWORD - 
>@ <|@ instruction DEOPT info [bci:357] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction rdx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1032  <|@ instruction r8|DWORD = MOVE input: int[-105755|0xfffffffffffe62e5] <|@ <|@
      nr 1036  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rdx|QWORD = MOVE input: long[664|0x298] <|@ <|@
      nr  264  <|@ instruction r8|DWORD = MOVE input: int[-110619|0xfffffffffffe4fe5] <|@ <|@
      nr  268  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction rdx|QWORD = MOVE input: long[664|0x298] <|@ <|@
      nr  246  <|@ instruction r8|DWORD = MOVE input: int[-110619|0xfffffffffffe4fe5] <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction MOV x: [r15|QWORD + 1156] y: -133915 size: DWORD <|@ <|@
      nr 1098  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1100  <|@ st <@st|@reference-map: [r10:0]
live-base-pointers: []
sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423]
locals: r10|QWORD[.] - - rbx|DWORD rcx|DWORD r9|DWORD r8|DWORD r11|DWORD - - 
>@ <|@ instruction DEOPT info [bci:423] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1142  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction rdx|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1152  <|@ instruction r8|DWORD = MOVE input: int[-102716|0xfffffffffffe6ec4] <|@ <|@
      nr 1156  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // W:int[]
     4: ifnonnull     15
     7: aload_0       
     8: bipush        80
    10: newarray      int
    12: putfield      #5          // W:int[]
    15: aload_1       
    16: iload_2       
    17: aload_0       
    18: getfield      #5          // W:int[]
    21: invokestatic  #19         // sun.security.provider.ByteArrayAccess.b2iBig64:(byte[], int, int[])void
    24: bipush        16
    26: istore_3      
    27: iload_3       
    28: bipush        79
    30: if_icmpgt     91
    33: aload_0       
    34: getfield      #5          // W:int[]
    37: iload_3       
    38: iconst_3      
    39: isub          
    40: iaload        
    41: aload_0       
    42: getfield      #5          // W:int[]
    45: iload_3       
    46: bipush        8
    48: isub          
    49: iaload        
    50: ixor          
    51: aload_0       
    52: getfield      #5          // W:int[]
    55: iload_3       
    56: bipush        14
    58: isub          
    59: iaload        
    60: ixor          
    61: aload_0       
    62: getfield      #5          // W:int[]
    65: iload_3       
    66: bipush        16
    68: isub          
    69: iaload        
    70: ixor          
    71: istore        4
    73: aload_0       
    74: getfield      #5          // W:int[]
    77: iload_3       
    78: iload         4
    80: iconst_1      
    81: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
    84: iastore       
    85: iinc          
    88: goto          27
    91: aload_0       
    92: getfield      #1          // state:int[]
    95: iconst_0      
    96: iaload        
    97: istore_3      
    98: aload_0       
    99: getfield      #1          // state:int[]
   102: iconst_1      
   103: iaload        
   104: istore        4
   106: aload_0       
   107: getfield      #1          // state:int[]
   110: iconst_2      
   111: iaload        
   112: istore        5
   114: aload_0       
   115: getfield      #1          // state:int[]
   118: iconst_3      
   119: iaload        
   120: istore        6
   122: aload_0       
   123: getfield      #1          // state:int[]
   126: iconst_4      
   127: iaload        
   128: istore        7
   130: iconst_0      
   131: istore        8
   133: iload         8
   135: bipush        20
   137: if_icmpge     204
   140: iload_3       
   141: iconst_5      
   142: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   145: iload         4
   147: iload         5
   149: iand          
   150: iload         4
   152: iconst_m1     
   153: ixor          
   154: iload         6
   156: iand          
   157: ior           
   158: iadd          
   159: iload         7
   161: iadd          
   162: aload_0       
   163: getfield      #5          // W:int[]
   166: iload         8
   168: iaload        
   169: iadd          
   170: ldc           #100        // 1518500249
   172: iadd          
   173: istore        9
   175: iload         6
   177: istore        7
   179: iload         5
   181: istore        6
   183: iload         4
   185: bipush        30
   187: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   190: istore        5
   192: iload_3       
   193: istore        4
   195: iload         9
   197: istore_3      
   198: iinc          
   201: goto          133
   204: bipush        20
   206: istore        8
   208: iload         8
   210: bipush        40
   212: if_icmpge     274
   215: iload_3       
   216: iconst_5      
   217: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   220: iload         4
   222: iload         5
   224: ixor          
   225: iload         6
   227: ixor          
   228: iadd          
   229: iload         7
   231: iadd          
   232: aload_0       
   233: getfield      #5          // W:int[]
   236: iload         8
   238: iaload        
   239: iadd          
   240: ldc           #101        // 1859775393
   242: iadd          
   243: istore        9
   245: iload         6
   247: istore        7
   249: iload         5
   251: istore        6
   253: iload         4
   255: bipush        30
   257: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   260: istore        5
   262: iload_3       
   263: istore        4
   265: iload         9
   267: istore_3      
   268: iinc          
   271: goto          208
   274: bipush        40
   276: istore        8
   278: iload         8
   280: bipush        60
   282: if_icmpge     353
   285: iload_3       
   286: iconst_5      
   287: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   290: iload         4
   292: iload         5
   294: iand          
   295: iload         4
   297: iload         6
   299: iand          
   300: ior           
   301: iload         5
   303: iload         6
   305: iand          
   306: ior           
   307: iadd          
   308: iload         7
   310: iadd          
   311: aload_0       
   312: getfield      #5          // W:int[]
   315: iload         8
   317: iaload        
   318: iadd          
   319: ldc           #102        // -1894007588
   321: iadd          
   322: istore        9
   324: iload         6
   326: istore        7
   328: iload         5
   330: istore        6
   332: iload         4
   334: bipush        30
   336: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   339: istore        5
   341: iload_3       
   342: istore        4
   344: iload         9
   346: istore_3      
   347: iinc          
   350: goto          278
   353: bipush        60
   355: istore        8
   357: iload         8
   359: bipush        80
   361: if_icmpge     423
   364: iload_3       
   365: iconst_5      
   366: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   369: iload         4
   371: iload         5
   373: ixor          
   374: iload         6
   376: ixor          
   377: iadd          
   378: iload         7
   380: iadd          
   381: aload_0       
   382: getfield      #5          // W:int[]
   385: iload         8
   387: iaload        
   388: iadd          
   389: ldc           #103        // -899497514
   391: iadd          
   392: istore        9
   394: iload         6
   396: istore        7
   398: iload         5
   400: istore        6
   402: iload         4
   404: bipush        30
   406: invokestatic  #20         // java.lang.Integer.rotateLeft:(int, int)int
   409: istore        5
   411: iload_3       
   412: istore        4
   414: iload         9
   416: istore_3      
   417: iinc          
   420: goto          357
   423: aload_0       
   424: getfield      #1          // state:int[]
   427: iconst_0      
   428: dup2          
   429: iaload        
   430: iload_3       
   431: iadd          
   432: iastore       
   433: aload_0       
   434: getfield      #1          // state:int[]
   437: iconst_1      
   438: dup2          
   439: iaload        
   440: iload         4
   442: iadd          
   443: iastore       
   444: aload_0       
   445: getfield      #1          // state:int[]
   448: iconst_2      
   449: dup2          
   450: iaload        
   451: iload         5
   453: iadd          
   454: iastore       
   455: aload_0       
   456: getfield      #1          // state:int[]
   459: iconst_3      
   460: dup2          
   461: iaload        
   462: iload         6
   464: iadd          
   465: iastore       
   466: aload_0       
   467: getfield      #1          // state:int[]
   470: iconst_4      
   471: dup2          
   472: iaload        
   473: iload         7
   475: iadd          
   476: iastore       
   477: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec389041817f20000000000f85f4050000909090909090909090909090909090909048896c24304c8b5648448b5e30448b4628448b4e208b4e188b5e108b7e08e80000000041817a08addeadde0f85980500009090909083ff500f8d9b040000909090909090418b52308b34d50c0000003bf70f8603050000909090909090909090909090909090909048c1e203418bc3c1c005418be84133e933e903c503c30344ba108d80d6c162ca8befffc5458be841c1c51e83fd500f8d6204000090909090909090448d77024183fe500f8cdd03000090909044894424244c89542410909090903bf50f8655040000909090909090909090909090909090909090448bd041c1c205458bc54533c34533c14503d04403d1440354aa10458d92d6c162ca448d47034183f850b950000000410f4cc841c1c31ee9610000006666660f1f8400000000006666669066660f1f840000000000666666909090909090909090909090909090458bc241c1c005418bdb33d84133dd4403c34503c1460344b210458d80d6c162ca41ffc6c1c01e458bcd458beb448bd8418bc2458bd090909090413bce7fb34889542408909090418bda8bc8458bc5458bd644894c2420458bcb448b5c2420e9f401000066660f1f8400000000006666669090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090428b7c9210418bf2ffc68b74b210418d42028b448210418d6a038b6caa10458d6a04468b6caa10458d7205468b74b2104489742420458d7206468b74b210418d5207448954241c448bd341c1c20589542418418bd133d14133d04403d24503d34403d7458d92d6c162ca458bda41c1c305c1c11e8bf933fb4133f94403df4503d84403de458d9bd6c162ca458bc341c1c005c1c31e418bfa33fb33f94403c74503c14403c0458d80d6c162ca458bc841c1c11e418bfbc1c71e41c1c21e418bd0c1c2054533da4433db4103d303d103d5448d9ad6c162ca418bcbc1c1054433c74533c24103c803cb4103cd448d81d6c162ca418bc8c1c105418bdb4133d933df03cb4103ca034c2420448d91d6c162ca418bcac1c10541c1c31e418bd84133db4133d903cb03cf4103ce8d89d6c162ca8bd9c1c30541c1c01e418bfa4133f84133fb03df4103d9488b7c24088b542418035c97108d9bd6c162ca41c1c21e8b54241c448d4a08488bd744894c241c458bca448b54241c909090904183fa480f8c0cfeffff488bfa418bd2909090e9650000006666660f1f840000000000666666906666660f1f8400000000006666669090909090909090909090909090908bd3c1c205418bf133f14133f003d64103d34203549710448d9ad6c162cac1c11e41ffc2448944241c458bc1448bc98bcb418bdb448b5c241c909090904183fa507caf9090904c8b5424109090909090418b7a34833cfd0c000000050f825a010000909090909090909090909090011cfd10000000010cfd1400000044010cfd18000000440104fd1c00000044011cfd20000000488b6c24304883c438493ba7500400000f8766010000c344894424244c89542410909090909090909090909041ba4e000000442bd74d63d2458bc64d03d049ffca448bc64d3bc20f86ad00000090909090413bf60f86b7000000909090e9e5fbffff44894424244c89542410909090448bc18b4c2424895c241c418bdb448b5c241ce930ffffff4c89542410909090458bc1458bcd8bd8894c241c418bcb448b5c241ce90fffffff4c8b54241090909048c7c20000000041b8e558feff8b742424909090909090904589878404000049899790040000e8000000000f1f840000000000448944242490909048c7c20000000041b8e562feffebc34c8b54241090909048c7c29802000041b8e54ffeffebac4c8b54241090909048c7c29802000041b8e54ffeffeb959090909090909041c78784040000e5f4fdff49c7879004000000000000e8000000000f1f840000000000448944242490909048c7c21400000041b8c46efeffe951ffffff48896c2430e800000000e9fdf9fffff4488d0d86feffff49898f68040000e9aff9fffff441c78784040000c46efeff49c7879004000014000000e8000000000f1f84000000000041c78784040000f568feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f542feff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 OSR_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 NOP  <||@
  Comment 72 30 NOP  <||@
  Comment 73 32 NOP  <||@
  Comment 74 34 NOP  <||@
  Comment 75 36 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 80 38 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@31f9b0c2 slotKind: QWORD  <||@
  Comment 80 40 r10|QWORD[.] = MOV input: [rsi|QWORD + 72] size: QWORD  <||@
  Comment 84 42 r11|DWORD = MOV input: [rsi|QWORD + 48] size: DWORD  <||@
  Comment 88 44 r8|DWORD = MOV input: [rsi|QWORD + 40] size: DWORD  <||@
  Comment 92 46 r9|DWORD = MOV input: [rsi|QWORD + 32] size: DWORD  <||@
  Comment 96 48 rcx|DWORD = MOV input: [rsi|QWORD + 24] size: DWORD  <||@
  Comment 99 50 rbx|DWORD = MOV input: [rsi|QWORD + 16] size: DWORD  <||@
  Comment 102 52 rdi|DWORD = MOV input: [rsi|QWORD + 8] size: DWORD  <||@
  Comment 105 54 - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 105 {Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 110 56 CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B29 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lsun/security/provider/SHA;, resolved>;compressed} state [bci:357]  <||@
  Comment 110 [r10:0]at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357, duringCall: false, rethrow: false]
              |0             |1  |2  |3          |4         |5         |6          |7          |8          |9 
     locals:  |r10|QWORD[.]  |-  |-  |r11|DWORD  |r8|DWORD  |r9|DWORD  |rcx|DWORD  |rbx|DWORD  |rdi|DWORD  |-   <||@
  Comment 110 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 110 {meta{HotSpotType<Lsun/security/provider/SHA;, resolved>;compressed}}  <||@
  Comment 124 block B1 null  <||@
  Comment 124 58 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 124 60 NOP  <||@
  Comment 125 62 NOP  <||@
  Comment 126 64 NOP  <||@
  Comment 127 66 NOP  <||@
  Comment 128 68 CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 0.9523809523809523 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B25 y: 80 size: DWORD inlinedY: null  <||@
  Comment 137 block B2 null  <||@
  Comment 137 70 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 137 72 NOP  <||@
  Comment 138 74 NOP  <||@
  Comment 139 76 NOP  <||@
  Comment 140 78 NOP  <||@
  Comment 141 80 NOP  <||@
  Comment 142 82 NOP  <||@
  Comment 143 84 rdx|DWORD[_] = MOV input: [r10|QWORD[.] + 48] size: DWORD  <||@
  Comment 147 86 rsi|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:357]  <||@
  Comment 147 [rdx:0, r10:0]at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357, duringCall: false, rethrow: false]
              |0             |1  |2  |3          |4         |5         |6          |7          |8          |9 
     locals:  |r10|QWORD[.]  |-  |-  |r11|DWORD  |r8|DWORD  |r9|DWORD  |rcx|DWORD  |rbx|DWORD  |rdi|DWORD  |-   <||@
  Comment 147 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 154 88 CMPBRANCH (x: rsi|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B24 size: DWORD  <||@
  Comment 162 block B3 null  <||@
  Comment 162 90 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 162 92 NOP  <||@
  Comment 163 94 NOP  <||@
  Comment 164 96 NOP  <||@
  Comment 165 98 NOP  <||@
  Comment 166 100 NOP  <||@
  Comment 167 102 NOP  <||@
  Comment 168 104 NOP  <||@
  Comment 169 106 NOP  <||@
  Comment 170 108 NOP  <||@
  Comment 171 110 NOP  <||@
  Comment 172 112 NOP  <||@
  Comment 173 114 NOP  <||@
  Comment 174 116 NOP  <||@
  Comment 175 118 NOP  <||@
  Comment 176 120 NOP  <||@
  Comment 177 122 NOP  <||@
  Comment 178 124 NOP  <||@
  Comment 179 126 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3087af84 encoding: base: 0 shift: 3  <||@
  Comment 183 128 rax|DWORD = ROL x: r11|DWORD y: 5 size: DWORD  <||@
  Comment 189 130 rbp|DWORD = XOR (x: r8|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 195 132 rbp|DWORD = XOR (x: rbp|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 197 134 rax|DWORD = ADD (x: rax|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 199 136 rax|DWORD = ADD (x: rax|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 201 138 rax|DWORD = ADD (x: rax|DWORD, ~y: [rdx|QWORD[.] + rdi|DWORD * 4 + 16]) size: DWORD  <||@
  Comment 205 140 rax|DWORD = LEA address: [rax|DWORD - 899497514] size: DWORD  <||@
  Comment 211 142 rbp|DWORD = INC value: rdi|DWORD size: DWORD  <||@
  Comment 215 144 r13|DWORD = ROL x: r8|DWORD y: 30 size: DWORD  <||@
  Comment 222 146 CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.95 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B23 y: 80 size: DWORD inlinedY: null  <||@
  Comment 231 block B4 null  <||@
  Comment 231 148 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 231 150 NOP  <||@
  Comment 232 152 NOP  <||@
  Comment 233 154 NOP  <||@
  Comment 234 156 NOP  <||@
  Comment 235 158 NOP  <||@
  Comment 236 160 NOP  <||@
  Comment 237 162 NOP  <||@
  Comment 238 164 r14|DWORD = LEA address: [rdi|DWORD + 2] size: DWORD  <||@
  Comment 242 166 CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B10 y: 80 size: DWORD inlinedY: null  <||@
  Comment 252 block B10 null  <||@
  Comment 252 270 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 252 272 NOP  <||@
  Comment 253 274 NOP  <||@
  Comment 254 276 NOP  <||@
  Comment 255 278 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 260 280 stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 265 282 JUMP ~outgoingValues: [] destination: B10 -> B11  <||@
  Comment 265 block B11 null  <||@
  Comment 265 284 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 265 286 NOP  <||@
  Comment 266 288 NOP  <||@
  Comment 267 290 NOP  <||@
  Comment 268 292 NOP  <||@
  Comment 269 294 CMPBRANCH (x: rsi|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B22 size: DWORD  <||@
  Comment 277 block B12 null  <||@
  Comment 277 296 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 277 298 NOP  <||@
  Comment 278 300 NOP  <||@
  Comment 279 302 NOP  <||@
  Comment 280 304 NOP  <||@
  Comment 281 306 NOP  <||@
  Comment 282 308 NOP  <||@
  Comment 283 310 NOP  <||@
  Comment 284 312 NOP  <||@
  Comment 285 314 NOP  <||@
  Comment 286 316 NOP  <||@
  Comment 287 318 NOP  <||@
  Comment 288 320 NOP  <||@
  Comment 289 322 NOP  <||@
  Comment 290 324 NOP  <||@
  Comment 291 326 NOP  <||@
  Comment 292 328 NOP  <||@
  Comment 293 330 NOP  <||@
  Comment 294 332 NOP  <||@
  Comment 295 334 r10|DWORD = ROL x: rax|DWORD y: 5 size: DWORD  <||@
  Comment 302 336 r8|DWORD = XOR (x: r13|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 308 338 r8|DWORD = XOR (x: r8|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 311 340 r10|DWORD = ADD (x: r10|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 314 342 r10|DWORD = ADD (x: r10|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 317 344 r10|DWORD = ADD (x: r10|DWORD, ~y: [rdx|QWORD[.] + rbp|DWORD * 4 + 16]) size: DWORD  <||@
  Comment 322 346 r10|DWORD = LEA address: [r10|DWORD - 899497514] size: DWORD  <||@
  Comment 329 348 r8|DWORD = LEA address: [rdi|DWORD + 3] size: DWORD  <||@
  Comment 333 350 CMP x: r8|DWORD y: 80 size: DWORD  <||@
  Comment 337 352 rcx|DWORD = CMOVE (falseValue: int[80|0x50], ~trueValue: r8|DWORD) condition: <  <||@
  Comment 346 354 r11|DWORD = ROL x: r11|DWORD y: 30 size: DWORD  <||@
  Comment 350 356 JUMP ~outgoingValues: [] destination: B12 -> B13  <||@
  Comment 355 block B14 loop 0 depth 1 header:226|LoopBegin  <||@
  Comment 355 370 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 384 372 NOP  <||@
  Comment 385 374 NOP  <||@
  Comment 386 376 NOP  <||@
  Comment 387 378 NOP  <||@
  Comment 388 380 NOP  <||@
  Comment 389 382 NOP  <||@
  Comment 390 384 NOP  <||@
  Comment 391 386 NOP  <||@
  Comment 392 388 NOP  <||@
  Comment 393 390 NOP  <||@
  Comment 394 392 NOP  <||@
  Comment 395 394 NOP  <||@
  Comment 396 396 NOP  <||@
  Comment 397 398 NOP  <||@
  Comment 398 400 r8|DWORD = ROL x: r10|DWORD y: 5 size: DWORD  <||@
  Comment 405 402 rbx|DWORD = XOR (x: r11|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 410 404 rbx|DWORD = XOR (x: rbx|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 413 406 r8|DWORD = ADD (x: r8|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 416 408 r8|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 419 410 r8|DWORD = ADD (x: r8|DWORD, ~y: [rdx|QWORD[.] + r14|DWORD * 4 + 16]) size: DWORD  <||@
  Comment 424 412 r8|DWORD = LEA address: [r8|DWORD - 899497514] size: DWORD  <||@
  Comment 431 414 r14|DWORD = INC value: r14|DWORD size: DWORD  <||@
  Comment 434 416 rax|DWORD = ROL x: rax|DWORD y: 30 size: DWORD  <||@
  Comment 437 418 r9|DWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 440 420 r13|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 443 422 r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 446 424 rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 449 426 r10|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 452 428 JUMP ~outgoingValues: [] destination: B14 -> B13  <||@
  Comment 452 block B13 loop 0 depth 1 header:226|LoopBegin  <||@
  Comment 452 358 [] = LABEL alignment: 0 numbPhis: 6 label: ?  <||@
  Comment 452 360 NOP  <||@
  Comment 453 362 NOP  <||@
  Comment 454 364 NOP  <||@
  Comment 455 366 NOP  <||@
  Comment 456 368 CMPBRANCH (x: rcx|DWORD, y: r14|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD  <||@
  Comment 461 block B15 null  <||@
  Comment 461 430 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 461 432 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 466 434 NOP  <||@
  Comment 467 436 NOP  <||@
  Comment 468 438 NOP  <||@
  Comment 469 440 rbx|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 472 442 rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 474 444 r8|DWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 477 446 r10|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 480 448 stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 485 450 r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 488 452 r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 493 454 JUMP ~outgoingValues: [] destination: B15 -> B16  <||@
  Comment 498 block B17 loop 1 depth 1 header:643|LoopBegin  <||@
  Comment 498 468 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 512 470 NOP  <||@
  Comment 513 472 NOP  <||@
  Comment 514 474 NOP  <||@
  Comment 515 476 NOP  <||@
  Comment 516 478 NOP  <||@
  Comment 517 480 NOP  <||@
  Comment 518 482 NOP  <||@
  Comment 519 484 NOP  <||@
  Comment 520 486 NOP  <||@
  Comment 521 488 NOP  <||@
  Comment 522 490 NOP  <||@
  Comment 523 492 NOP  <||@
  Comment 524 494 NOP  <||@
  Comment 525 496 NOP  <||@
  Comment 526 498 NOP  <||@
  Comment 527 500 NOP  <||@
  Comment 528 502 NOP  <||@
  Comment 529 504 NOP  <||@
  Comment 530 506 NOP  <||@
  Comment 531 508 NOP  <||@
  Comment 532 510 NOP  <||@
  Comment 533 512 NOP  <||@
  Comment 534 514 NOP  <||@
  Comment 535 516 NOP  <||@
  Comment 536 518 NOP  <||@
  Comment 537 520 NOP  <||@
  Comment 538 522 NOP  <||@
  Comment 539 524 NOP  <||@
  Comment 540 526 NOP  <||@
  Comment 541 528 NOP  <||@
  Comment 542 530 NOP  <||@
  Comment 543 532 NOP  <||@
  Comment 544 534 NOP  <||@
  Comment 545 536 NOP  <||@
  Comment 546 538 NOP  <||@
  Comment 547 540 NOP  <||@
  Comment 548 542 NOP  <||@
  Comment 549 544 NOP  <||@
  Comment 550 546 NOP  <||@
  Comment 551 548 NOP  <||@
  Comment 552 550 NOP  <||@
  Comment 553 552 NOP  <||@
  Comment 554 554 NOP  <||@
  Comment 555 556 NOP  <||@
  Comment 556 558 NOP  <||@
  Comment 557 560 NOP  <||@
  Comment 558 562 NOP  <||@
  Comment 559 564 NOP  <||@
  Comment 560 566 NOP  <||@
  Comment 561 568 NOP  <||@
  Comment 562 570 NOP  <||@
  Comment 563 572 NOP  <||@
  Comment 564 574 NOP  <||@
  Comment 565 576 NOP  <||@
  Comment 566 578 NOP  <||@
  Comment 567 580 NOP  <||@
  Comment 568 582 NOP  <||@
  Comment 569 584 NOP  <||@
  Comment 570 586 NOP  <||@
  Comment 571 588 NOP  <||@
  Comment 572 590 NOP  <||@
  Comment 573 592 NOP  <||@
  Comment 574 594 NOP  <||@
  Comment 575 596 NOP  <||@
  Comment 576 598 NOP  <||@
  Comment 577 600 NOP  <||@
  Comment 578 602 NOP  <||@
  Comment 579 604 NOP  <||@
  Comment 580 606 NOP  <||@
  Comment 581 608 NOP  <||@
  Comment 582 610 NOP  <||@
  Comment 583 612 NOP  <||@
  Comment 584 614 NOP  <||@
  Comment 585 616 NOP  <||@
  Comment 586 618 NOP  <||@
  Comment 587 620 NOP  <||@
  Comment 588 622 NOP  <||@
  Comment 589 624 NOP  <||@
  Comment 590 626 NOP  <||@
  Comment 591 628 NOP  <||@
  Comment 592 630 NOP  <||@
  Comment 593 632 NOP  <||@
  Comment 594 634 NOP  <||@
  Comment 595 636 NOP  <||@
  Comment 596 638 NOP  <||@
  Comment 597 640 NOP  <||@
  Comment 598 642 NOP  <||@
  Comment 599 644 NOP  <||@
  Comment 600 646 NOP  <||@
  Comment 601 648 NOP  <||@
  Comment 602 650 NOP  <||@
  Comment 603 652 NOP  <||@
  Comment 604 654 NOP  <||@
  Comment 605 656 NOP  <||@
  Comment 606 658 NOP  <||@
  Comment 607 660 NOP  <||@
  Comment 608 662 NOP  <||@
  Comment 609 664 NOP  <||@
  Comment 610 666 NOP  <||@
  Comment 611 668 NOP  <||@
  Comment 612 670 NOP  <||@
  Comment 613 672 NOP  <||@
  Comment 614 674 NOP  <||@
  Comment 615 676 NOP  <||@
  Comment 616 678 NOP  <||@
  Comment 617 680 NOP  <||@
  Comment 618 682 NOP  <||@
  Comment 619 684 NOP  <||@
  Comment 620 686 NOP  <||@
  Comment 621 688 NOP  <||@
  Comment 622 690 NOP  <||@
  Comment 623 692 NOP  <||@
  Comment 624 694 rdi|DWORD = MOV input: [rdx|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD  <||@
  Comment 629 696 rsi|DWORD = INC value: r10|DWORD size: DWORD  <||@
  Comment 634 698 rsi|DWORD = MOV input: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 638 700 rax|DWORD = LEA address: [r10|DWORD + 2] size: DWORD  <||@
  Comment 642 702 rax|DWORD = MOV input: [rdx|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD  <||@
  Comment 646 704 rbp|DWORD = LEA address: [r10|DWORD + 3] size: DWORD  <||@
  Comment 650 706 rbp|DWORD = MOV input: [rdx|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD  <||@
  Comment 654 708 r13|DWORD = LEA address: [r10|DWORD + 4] size: DWORD  <||@
  Comment 658 710 r13|DWORD = MOV input: [rdx|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD  <||@
  Comment 663 712 r14|DWORD = LEA address: [r10|DWORD + 5] size: DWORD  <||@
  Comment 667 714 r14|DWORD = MOV input: [rdx|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD  <||@
  Comment 672 716 stack:32|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 677 718 r14|DWORD = LEA address: [r10|DWORD + 6] size: DWORD  <||@
  Comment 681 720 r14|DWORD = MOV input: [rdx|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD  <||@
  Comment 686 722 rdx|DWORD = LEA address: [r10|DWORD + 7] size: DWORD  <||@
  Comment 690 724 stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 695 726 r10|DWORD = ROL x: rbx|DWORD y: 5 size: DWORD  <||@
  Comment 702 728 stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 706 730 rdx|DWORD = XOR (x: r9|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 711 732 rdx|DWORD = XOR (x: rdx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 714 734 r10|DWORD = ADD (x: r10|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 717 736 r10|DWORD = ADD (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 720 738 r10|DWORD = ADD (x: r10|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 723 740 r10|DWORD = LEA address: [r10|DWORD - 899497514] size: DWORD  <||@
  Comment 730 742 r11|DWORD = ROL x: r10|DWORD y: 5 size: DWORD  <||@
  Comment 737 744 rcx|DWORD = ROL x: rcx|DWORD y: 30 size: DWORD  <||@
  Comment 740 746 rdi|DWORD = XOR (x: rcx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 744 748 rdi|DWORD = XOR (x: r9|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 747 750 r11|DWORD = ADD (x: r11|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 750 752 r11|DWORD = ADD (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 753 754 r11|DWORD = ADD (x: r11|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 756 756 r11|DWORD = LEA address: [r11|DWORD - 899497514] size: DWORD  <||@
  Comment 763 758 r8|DWORD = ROL x: r11|DWORD y: 5 size: DWORD  <||@
  Comment 770 760 rbx|DWORD = ROL x: rbx|DWORD y: 30 size: DWORD  <||@
  Comment 773 762 rdi|DWORD = XOR (x: r10|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 778 764 rdi|DWORD = XOR (x: rcx|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 780 766 r8|DWORD = ADD (x: r8|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 783 768 r8|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 786 770 r8|DWORD = ADD (x: r8|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 789 772 r8|DWORD = LEA address: [r8|DWORD - 899497514] size: DWORD  <||@
  Comment 796 774 r9|DWORD = ROL x: r8|DWORD y: 30 size: DWORD  <||@
  Comment 803 776 rdi|DWORD = ROL x: r11|DWORD y: 30 size: DWORD  <||@
  Comment 809 778 r10|DWORD = ROL x: r10|DWORD y: 30 size: DWORD  <||@
  Comment 813 780 rdx|DWORD = ROL x: r8|DWORD y: 5 size: DWORD  <||@
  Comment 819 782 r11|DWORD = XOR (x: r11|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 822 784 r11|DWORD = XOR (x: rbx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 825 786 rdx|DWORD = ADD (x: rdx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 828 788 rdx|DWORD = ADD (x: rdx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 830 790 rdx|DWORD = ADD (x: rdx|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 832 792 r11|DWORD = LEA address: [rdx|DWORD - 899497514] size: DWORD  <||@
  Comment 839 794 rcx|DWORD = ROL x: r11|DWORD y: 5 size: DWORD  <||@
  Comment 845 796 r8|DWORD = XOR (x: r8|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 848 798 r8|DWORD = XOR (x: r10|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 851 800 rcx|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 854 802 rcx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 856 804 rcx|DWORD = ADD (x: rcx|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 859 806 r8|DWORD = LEA address: [rcx|DWORD - 899497514] size: DWORD  <||@
  Comment 866 808 rcx|DWORD = ROL x: r8|DWORD y: 5 size: DWORD  <||@
  Comment 872 810 rbx|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 878 812 rbx|DWORD = XOR (x: rdi|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 880 814 rcx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 882 816 rcx|DWORD = ADD (x: rcx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 885 818 rcx|DWORD = ADD (x: rcx|DWORD, y: stack:32|DWORD) size: DWORD  <||@
  Comment 889 820 r10|DWORD = LEA address: [rcx|DWORD - 899497514] size: DWORD  <||@
  Comment 896 822 rcx|DWORD = ROL x: r10|DWORD y: 5 size: DWORD  <||@
  Comment 902 824 r11|DWORD = ROL x: r11|DWORD y: 30 size: DWORD  <||@
  Comment 906 826 rbx|DWORD = XOR (x: r8|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 912 828 rbx|DWORD = XOR (x: r9|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 915 830 rcx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 917 832 rcx|DWORD = ADD (x: rcx|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 919 834 rcx|DWORD = ADD (x: rcx|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 922 836 rcx|DWORD = LEA address: [rcx|DWORD - 899497514] size: DWORD  <||@
  Comment 928 838 rbx|DWORD = ROL x: rcx|DWORD y: 5 size: DWORD  <||@
  Comment 933 840 r8|DWORD = ROL x: r8|DWORD y: 30 size: DWORD  <||@
  Comment 937 842 rdi|DWORD = XOR (x: r10|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 943 844 rdi|DWORD = XOR (x: r11|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 946 846 rbx|DWORD = ADD (x: rbx|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 948 848 rbx|DWORD = ADD (x: rbx|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 951 850 rdi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 956 852 rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 960 854 rbx|DWORD = ADD (x: rbx|DWORD, ~y: [rdi|QWORD[.] + rdx|DWORD * 4 + 16]) size: DWORD  <||@
  Comment 964 856 rbx|DWORD = LEA address: [rbx|DWORD - 899497514] size: DWORD  <||@
  Comment 970 858 r10|DWORD = ROL x: r10|DWORD y: 30 size: DWORD  <||@
  Comment 974 860 rdx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 978 862 r9|DWORD = LEA address: [rdx|DWORD + 8] size: DWORD  <||@
  Comment 982 864 rdx|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 985 866 stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 990 868 r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 993 870 r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 998 872 JUMP ~outgoingValues: [] destination: B17 -> B16  <||@
  Comment 998 block B16 loop 1 depth 1 header:643|LoopBegin  <||@
  Comment 998 456 [] = LABEL alignment: 0 numbPhis: 6 label: ?  <||@
  Comment 998 458 NOP  <||@
  Comment 999 460 NOP  <||@
  Comment 1000 462 NOP  <||@
  Comment 1001 464 NOP  <||@
  Comment 1002 466 CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.5789473684210522 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 72 size: DWORD inlinedY: null  <||@
  Comment 1012 block B18 null  <||@
  Comment 1012 874 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1012 876 rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1015 878 rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 1018 880 NOP  <||@
  Comment 1019 882 NOP  <||@
  Comment 1020 884 NOP  <||@
  Comment 1021 888 JUMP ~outgoingValues: [] destination: B18 -> B19  <||@
  Comment 1026 block B20 loop 2 depth 1 header:679|LoopBegin  <||@
  Comment 1026 902 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 1056 904 NOP  <||@
  Comment 1057 906 NOP  <||@
  Comment 1058 908 NOP  <||@
  Comment 1059 910 NOP  <||@
  Comment 1060 912 NOP  <||@
  Comment 1061 914 NOP  <||@
  Comment 1062 916 NOP  <||@
  Comment 1063 918 NOP  <||@
  Comment 1064 920 NOP  <||@
  Comment 1065 922 NOP  <||@
  Comment 1066 924 NOP  <||@
  Comment 1067 926 NOP  <||@
  Comment 1068 928 NOP  <||@
  Comment 1069 930 NOP  <||@
  Comment 1070 932 rdx|DWORD = ROL x: rbx|DWORD y: 5 size: DWORD  <||@
  Comment 1075 934 rsi|DWORD = XOR (x: r9|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1080 936 rsi|DWORD = XOR (x: rsi|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1083 938 rdx|DWORD = ADD (x: rdx|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1085 940 rdx|DWORD = ADD (x: rdx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 1088 942 rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rdi|QWORD[.] + r10|DWORD * 4 + 16]) size: DWORD  <||@
  Comment 1093 944 r11|DWORD = LEA address: [rdx|DWORD - 899497514] size: DWORD  <||@
  Comment 1100 946 rcx|DWORD = ROL x: rcx|DWORD y: 30 size: DWORD  <||@
  Comment 1103 948 r10|DWORD = INC value: r10|DWORD size: DWORD  <||@
  Comment 1106 950 stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1111 952 r8|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1114 954 r9|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1117 956 rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 1119 958 rbx|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1122 960 r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 1127 962 JUMP ~outgoingValues: [] destination: B20 -> B19  <||@
  Comment 1127 block B19 loop 2 depth 1 header:679|LoopBegin  <||@
  Comment 1127 890 [] = LABEL alignment: 0 numbPhis: 6 label: ?  <||@
  Comment 1127 892 NOP  <||@
  Comment 1128 894 NOP  <||@
  Comment 1129 896 NOP  <||@
  Comment 1130 898 NOP  <||@
  Comment 1131 900 CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 80 size: DWORD inlinedY: null  <||@
  Comment 1137 block B21 null  <||@
  Comment 1137 964 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1137 966 NOP  <||@
  Comment 1138 968 NOP  <||@
  Comment 1139 970 NOP  <||@
  Comment 1140 972 r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1145 974 JUMP ~outgoingValues: [] destination: B21 -> B26  <||@
  Comment 1145 block B26 null  <||@
  Comment 1145 1064 [] = LABEL alignment: 0 numbPhis: 5 label: ?  <||@
  Comment 1145 1066 NOP  <||@
  Comment 1146 1068 NOP  <||@
  Comment 1147 1070 NOP  <||@
  Comment 1148 1072 NOP  <||@
  Comment 1149 1074 NOP  <||@
  Comment 1150 1076 rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 52] size: DWORD  <||@
  Comment 1154 1078 CMPCONSTBRANCH x: [rdi|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 5 size: DWORD inlinedY: null state [bci:423]  <||@
  Comment 1154 [rdi:0, r10:0]at sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423, duringCall: false, rethrow: false]
              |0             |1  |2  |3          |4          |5         |6         |7          |8  |9 
     locals:  |r10|QWORD[.]  |-  |-  |rbx|DWORD  |rcx|DWORD  |r9|DWORD  |r8|DWORD  |r11|DWORD  |-  |-   <||@
  Comment 1154 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1168 block B28 null  <||@
  Comment 1168 1102 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1168 1104 NOP  <||@
  Comment 1169 1106 NOP  <||@
  Comment 1170 1108 NOP  <||@
  Comment 1171 1110 NOP  <||@
  Comment 1172 1112 NOP  <||@
  Comment 1173 1114 NOP  <||@
  Comment 1174 1116 NOP  <||@
  Comment 1175 1118 NOP  <||@
  Comment 1176 1120 NOP  <||@
  Comment 1177 1122 NOP  <||@
  Comment 1178 1124 NOP  <||@
  Comment 1179 1126 NOP  <||@
  Comment 1180 1128 ADD (x: [rdi|DWORD[_] * 8 + 16], y: rbx|DWORD) size: DWORD  <||@
  Comment 1187 1130 ADD (x: [rdi|DWORD[_] * 8 + 20], y: rcx|DWORD) size: DWORD  <||@
  Comment 1194 1132 ADD (x: [rdi|DWORD[_] * 8 + 24], y: r9|DWORD) size: DWORD  <||@
  Comment 1202 1134 ADD (x: [rdi|DWORD[_] * 8 + 28], y: r8|DWORD) size: DWORD  <||@
  Comment 1210 1136 ADD (x: [rdi|DWORD[_] * 8 + 32], y: r11|DWORD) size: DWORD  <||@
  Comment 1218 1138 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 1227 POLL_RETURN_FAR  <||@
  Comment 1241 block B5 null  <||@
  Comment 1241 168 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1241 170 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1246 172 stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1251 174 NOP  <||@
  Comment 1252 176 NOP  <||@
  Comment 1253 178 NOP  <||@
  Comment 1254 180 NOP  <||@
  Comment 1255 182 NOP  <||@
  Comment 1256 184 NOP  <||@
  Comment 1257 186 NOP  <||@
  Comment 1258 188 NOP  <||@
  Comment 1259 190 NOP  <||@
  Comment 1260 192 NOP  <||@
  Comment 1261 194 NOP  <||@
  Comment 1262 196 r10|DWORD = MOVE input: int[78|0x4e]  <||@
  Comment 1268 198 r10|DWORD = SUB (x: r10|DWORD, ~y: rdi|DWORD) size: DWORD  <||@
  Comment 1271 200 r10|QWORD = MOVSXD value: r10|DWORD size: QWORD  <||@
  Comment 1274 202 r8|QWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 1277 204 r10|QWORD = ADD (x: r10|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 1280 206 r10|QWORD = DEC value: r10|QWORD size: QWORD  <||@
  Comment 1283 208 r8|QWORD = MOVE input: rsi|DWORD moveKind: DWORD  <||@
  Comment 1286 210 CMPBRANCH (x: r8|QWORD, y: r10|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B9 size: QWORD  <||@
  Comment 1295 block B6 null  <||@
  Comment 1295 212 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1295 214 NOP  <||@
  Comment 1296 216 NOP  <||@
  Comment 1297 218 NOP  <||@
  Comment 1298 220 NOP  <||@
  Comment 1299 222 CMPBRANCH (x: rsi|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD  <||@
  Comment 1308 block B7 null  <||@
  Comment 1308 224 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1308 226 NOP  <||@
  Comment 1309 228 NOP  <||@
  Comment 1310 230 NOP  <||@
  Comment 1311 232 JUMP ~outgoingValues: [] destination: B7 -> B11  <||@
  Comment 1316 block B25 null  <||@
  Comment 1316 1038 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1316 1040 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1321 1042 stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1326 1044 NOP  <||@
  Comment 1327 1046 NOP  <||@
  Comment 1328 1048 NOP  <||@
  Comment 1329 1050 r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1332 1052 rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1336 1056 stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 1340 1058 rbx|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1343 1060 r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 1348 1062 JUMP ~outgoingValues: [] destination: B25 -> B26  <||@
  Comment 1353 block B23 null  <||@
  Comment 1353 994 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1353 996 stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1358 998 NOP  <||@
  Comment 1359 1000 NOP  <||@
  Comment 1360 1002 NOP  <||@
  Comment 1361 1004 r8|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1364 1006 r9|DWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 1367 1008 rbx|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 1369 1012 stack:36|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1373 1014 rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1376 1016 r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 1381 1018 JUMP ~outgoingValues: [] destination: B23 -> B26  <||@
  Comment 1386 block B22 null  <||@
  Comment 1386 976 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1386 978 r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1391 980 NOP  <||@
  Comment 1392 982 NOP  <||@
  Comment 1393 984 NOP  <||@
  Comment 1394 986 rdx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1401 988 r8|DWORD = MOVE input: int[-108315|0xfffffffffffe58e5]  <||@
  Comment 1407 992 JUMP ~outgoingValues: [] destination: B22 -> B30  <||@
  Comment 1407 block B30 null  <||@
  Comment 1407 1158 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1407 1154 rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1411 1160 NOP  <||@
  Comment 1412 1162 NOP  <||@
  Comment 1413 1164 NOP  <||@
  Comment 1414 1166 NOP  <||@
  Comment 1415 1168 NOP  <||@
  Comment 1416 1170 NOP  <||@
  Comment 1417 1172 NOP  <||@
  Comment 1418 1174 MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD  <||@
  Comment 1425 1176 MOV (x: [r15|QWORD + 1168], y: rdx|QWORD) size: QWORD  <||@
  Comment 1432 1178 DEOPT info [bci:357]  <||@
  Comment 1432 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1437 [r10:0]at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357, duringCall: false, rethrow: false]
              |0             |1  |2  |3          |4          |5         |6          |7          |8          |9 
     locals:  |r10|QWORD[.]  |-  |-  |r11|DWORD  |rsi|DWORD  |r9|DWORD  |rcx|DWORD  |rbx|DWORD  |rdi|DWORD  |-   <||@
  Comment 1445 block B24 null  <||@
  Comment 1445 1020 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1445 1022 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1450 1024 NOP  <||@
  Comment 1451 1026 NOP  <||@
  Comment 1452 1028 NOP  <||@
  Comment 1453 1030 rdx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1460 1032 r8|DWORD = MOVE input: int[-105755|0xfffffffffffe62e5]  <||@
  Comment 1466 1036 JUMP ~outgoingValues: [] destination: B24 -> B30  <||@
  Comment 1468 block B9 null  <||@
  Comment 1468 252 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1468 254 r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1473 256 NOP  <||@
  Comment 1474 258 NOP  <||@
  Comment 1475 260 NOP  <||@
  Comment 1476 262 rdx|QWORD = MOVE input: long[664|0x298]  <||@
  Comment 1483 264 r8|DWORD = MOVE input: int[-110619|0xfffffffffffe4fe5]  <||@
  Comment 1489 268 JUMP ~outgoingValues: [] destination: B9 -> B30  <||@
  Comment 1491 block B8 null  <||@
  Comment 1491 234 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1491 236 r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1496 238 NOP  <||@
  Comment 1497 240 NOP  <||@
  Comment 1498 242 NOP  <||@
  Comment 1499 244 rdx|QWORD = MOVE input: long[664|0x298]  <||@
  Comment 1506 246 r8|DWORD = MOVE input: int[-110619|0xfffffffffffe4fe5]  <||@
  Comment 1512 250 JUMP ~outgoingValues: [] destination: B8 -> B30  <||@
  Comment 1514 block B27 null  <||@
  Comment 1514 1080 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1514 1082 NOP  <||@
  Comment 1515 1084 NOP  <||@
  Comment 1516 1086 NOP  <||@
  Comment 1517 1088 NOP  <||@
  Comment 1518 1090 NOP  <||@
  Comment 1519 1092 NOP  <||@
  Comment 1520 1094 NOP  <||@
  Comment 1521 1096 MOV x: [r15|QWORD + 1156] y: -133915 size: DWORD  <||@
  Comment 1532 1098 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 1543 1100 DEOPT info [bci:423]  <||@
  Comment 1543 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1548 [r10:0]at sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423, duringCall: false, rethrow: false]
              |0             |1  |2  |3          |4          |5         |6         |7          |8  |9 
     locals:  |r10|QWORD[.]  |-  |-  |rbx|DWORD  |rcx|DWORD  |r9|DWORD  |r8|DWORD  |r11|DWORD  |-  |-   <||@
  Comment 1556 block B29 null  <||@
  Comment 1556 1140 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1556 1142 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1561 1144 NOP  <||@
  Comment 1562 1146 NOP  <||@
  Comment 1563 1148 NOP  <||@
  Comment 1564 1150 rdx|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 1571 1152 r8|DWORD = MOVE input: int[-102716|0xfffffffffffe6ec4]  <||@
  Comment 1577 1156 JUMP ~outgoingValues: [] destination: B29 -> B30  <||@
  Comment 1587 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 1612 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 1640 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1645 [r10:0]at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357, duringCall: false, rethrow: false]
              |0             |1  |2  |3          |4         |5         |6          |7          |8          |9 
     locals:  |r10|QWORD[.]  |-  |-  |r11|DWORD  |r8|DWORD  |r9|DWORD  |rcx|DWORD  |rbx|DWORD  |rdi|DWORD  |-   <||@
  Comment 1675 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1680 [rdx:0, r10:0]at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357, duringCall: false, rethrow: false]
              |0             |1  |2  |3          |4         |5         |6          |7          |8          |9 
     locals:  |r10|QWORD[.]  |-  |-  |r11|DWORD  |r8|DWORD  |r9|DWORD  |rcx|DWORD  |rbx|DWORD  |rdi|DWORD  |-   <||@
  Comment 1710 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1715 [rdi:0, r10:0]at sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423, duringCall: false, rethrow: false]
              |0             |1  |2  |3          |4          |5         |6         |7          |8  |9 
     locals:  |r10|QWORD[.]  |-  |-  |rbx|DWORD  |rcx|DWORD  |r9|DWORD  |r8|DWORD  |r11|DWORD  |-  |-   <||@
  Comment 1723 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1723 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1729 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 1729 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotOSRCompilation-11528[sun.security.provider.SHA.implCompress0(byte[], int)@357]"
  method "HotSpotOSRCompilation-11528[sun.security.provider.SHA.implCompress0(byte[], int)@357]"
  date 1724269757134
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789af170a0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85c3df86fe66669089842400c0feff4883ec389041817f20000000000f85f4050000909090909090909090909090909090909048896c24304c8b5648448b5e30448b4628448b4e208b4e188b5e108b7e08e8f2779bfe41817a08e07b1d010f85980500009090909083ff500f8d9b040000909090909090418b52308b34d50c0000003bf70f8603050000909090909090909090909090909090909048c1e203418bc3c1c005418be84133e933e903c503c30344ba108d80d6c162ca8befffc5458be841c1c51e83fd500f8d6204000090909090909090448d77024183fe500f8cdd03000090909044894424244c89542410909090903bf50f8655040000909090909090909090909090909090909090448bd041c1c205458bc54533c34533c14503d04403d1440354aa10458d92d6c162ca448d47034183f850b950000000410f4cc841c1c31ee9610000006666660f1f8400000000006666669066660f1f840000000000666666909090909090909090909090909090458bc241c1c005418bdb33d84133dd4403c34503c1460344b210458d80d6c162ca41ffc6c1c01e458bcd458beb448bd8418bc2458bd090909090413bce7fb34889542408909090418bda8bc8458bc5458bd644894c2420458bcb448b5c2420e9f401000066660f1f8400000000006666669090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090428b7c9210418bf2ffc68b74b210418d42028b448210418d6a038b6caa10458d6a04468b6caa10458d7205468b74b2104489742420458d7206468b74b210418d5207448954241c448bd341c1c20589542418418bd133d14133d04403d24503d34403d7458d92d6c162ca458bda41c1c305c1c11e8bf933fb4133f94403df4503d84403de458d9bd6c162ca458bc341c1c005c1c31e418bfa33fb33f94403c74503c14403c0458d80d6c162ca458bc841c1c11e418bfbc1c71e41c1c21e418bd0c1c2054533da4433db4103d303d103d5448d9ad6c162ca418bcbc1c1054433c74533c24103c803cb4103cd448d81d6c162ca418bc8c1c105418bdb4133d933df03cb4103ca034c2420448d91d6c162ca418bcac1c10541c1c31e418bd84133db4133d903cb03cf4103ce8d89d6c162ca8bd9c1c30541c1c01e418bfa4133f84133fb03df4103d9488b7c24088b542418035c97108d9bd6c162ca41c1c21e8b54241c448d4a08488bd744894c241c458bca448b54241c909090904183fa480f8c0cfeffff488bfa418bd2909090e9650000006666660f1f840000000000666666906666660f1f8400000000006666669090909090909090909090909090908bd3c1c205418bf133f14133f003d64103d34203549710448d9ad6c162cac1c11e41ffc2448944241c458bc1448bc98bcb418bdb448b5c241c909090904183fa507caf9090904c8b5424109090909090418b7a34833cfd0c000000050f825a010000909090909090909090909090011cfd10000000010cfd1400000044010cfd18000000440104fd1c00000044011cfd20000000488b6c24304883c438493ba7500400000f8766010000c344894424244c89542410909090909090909090909041ba4e000000442bd74d63d2458bc64d03d049ffca448bc64d3bc20f86ad00000090909090413bf60f86b7000000909090e9e5fbffff44894424244c89542410909090448bc18b4c2424895c241c418bdb448b5c241ce930ffffff4c89542410909090458bc1458bcd8bd8894c241c418bcb448b5c241ce90fffffff4c8b54241090909048c7c20000000041b8e558feff8b742424909090909090904589878404000049899790040000e83d3b87fe0f1f840000000000448944242490909048c7c20000000041b8e562feffebc34c8b54241090909048c7c29802000041b8e54ffeffebac4c8b54241090909048c7c29802000041b8e54ffeffeb959090909090909041c78784040000e5f4fdff49c7879004000000000000e8ce3a87fe0f1f840000000000448944242490909048c7c21400000041b8c46efeffe951ffffff48896c2430e8483b85fee9fdf9fffff4488d0d86feffff49898f68040000e90f4987fef441c78784040000c46efeff49c7879004000014000000e86d3a87fe0f1f84000000000041c78784040000f568feff49c7879004000000000000e84a3a87fe0f1f84000000000041c78784040000f542feff49c7879004000000000000e8273a87fe0f1f840000000000e8a0db9afef4e8ba3787fef4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 OSR_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 NOP  <||@
  Comment 72 30 NOP  <||@
  Comment 73 32 NOP  <||@
  Comment 74 34 NOP  <||@
  Comment 75 36 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 80 38 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@31f9b0c2 slotKind: QWORD  <||@
  Comment 80 40 r10|QWORD[.] = MOV input: [rsi|QWORD + 72] size: QWORD  <||@
  Comment 84 42 r11|DWORD = MOV input: [rsi|QWORD + 48] size: DWORD  <||@
  Comment 88 44 r8|DWORD = MOV input: [rsi|QWORD + 40] size: DWORD  <||@
  Comment 92 46 r9|DWORD = MOV input: [rsi|QWORD + 32] size: DWORD  <||@
  Comment 96 48 rcx|DWORD = MOV input: [rsi|QWORD + 24] size: DWORD  <||@
  Comment 99 50 rbx|DWORD = MOV input: [rsi|QWORD + 16] size: DWORD  <||@
  Comment 102 52 rdi|DWORD = MOV input: [rsi|QWORD + 8] size: DWORD  <||@
  Comment 105 54 - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 105 {Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 110 56 CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B29 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lsun/security/provider/SHA;, resolved>;compressed} state [bci:357]  <||@
  Comment 110 [r10:0]at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357, duringCall: false, rethrow: false]
              |0             |1  |2  |3          |4         |5         |6          |7          |8          |9 
     locals:  |r10|QWORD[.]  |-  |-  |r11|DWORD  |r8|DWORD  |r9|DWORD  |rcx|DWORD  |rbx|DWORD  |rdi|DWORD  |-   <||@
  Comment 110 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 110 {meta{HotSpotType<Lsun/security/provider/SHA;, resolved>;compressed}}  <||@
  Comment 124 block B1 null  <||@
  Comment 124 58 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 124 60 NOP  <||@
  Comment 125 62 NOP  <||@
  Comment 126 64 NOP  <||@
  Comment 127 66 NOP  <||@
  Comment 128 68 CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 0.9523809523809523 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B25 y: 80 size: DWORD inlinedY: null  <||@
  Comment 137 block B2 null  <||@
  Comment 137 70 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 137 72 NOP  <||@
  Comment 138 74 NOP  <||@
  Comment 139 76 NOP  <||@
  Comment 140 78 NOP  <||@
  Comment 141 80 NOP  <||@
  Comment 142 82 NOP  <||@
  Comment 143 84 rdx|DWORD[_] = MOV input: [r10|QWORD[.] + 48] size: DWORD  <||@
  Comment 147 86 rsi|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:357]  <||@
  Comment 147 [rdx:0, r10:0]at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357, duringCall: false, rethrow: false]
              |0             |1  |2  |3          |4         |5         |6          |7          |8          |9 
     locals:  |r10|QWORD[.]  |-  |-  |r11|DWORD  |r8|DWORD  |r9|DWORD  |rcx|DWORD  |rbx|DWORD  |rdi|DWORD  |-   <||@
  Comment 147 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 154 88 CMPBRANCH (x: rsi|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B24 size: DWORD  <||@
  Comment 162 block B3 null  <||@
  Comment 162 90 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 162 92 NOP  <||@
  Comment 163 94 NOP  <||@
  Comment 164 96 NOP  <||@
  Comment 165 98 NOP  <||@
  Comment 166 100 NOP  <||@
  Comment 167 102 NOP  <||@
  Comment 168 104 NOP  <||@
  Comment 169 106 NOP  <||@
  Comment 170 108 NOP  <||@
  Comment 171 110 NOP  <||@
  Comment 172 112 NOP  <||@
  Comment 173 114 NOP  <||@
  Comment 174 116 NOP  <||@
  Comment 175 118 NOP  <||@
  Comment 176 120 NOP  <||@
  Comment 177 122 NOP  <||@
  Comment 178 124 NOP  <||@
  Comment 179 126 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3087af84 encoding: base: 0 shift: 3  <||@
  Comment 183 128 rax|DWORD = ROL x: r11|DWORD y: 5 size: DWORD  <||@
  Comment 189 130 rbp|DWORD = XOR (x: r8|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 195 132 rbp|DWORD = XOR (x: rbp|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 197 134 rax|DWORD = ADD (x: rax|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 199 136 rax|DWORD = ADD (x: rax|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 201 138 rax|DWORD = ADD (x: rax|DWORD, ~y: [rdx|QWORD[.] + rdi|DWORD * 4 + 16]) size: DWORD  <||@
  Comment 205 140 rax|DWORD = LEA address: [rax|DWORD - 899497514] size: DWORD  <||@
  Comment 211 142 rbp|DWORD = INC value: rdi|DWORD size: DWORD  <||@
  Comment 215 144 r13|DWORD = ROL x: r8|DWORD y: 30 size: DWORD  <||@
  Comment 222 146 CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.95 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B23 y: 80 size: DWORD inlinedY: null  <||@
  Comment 231 block B4 null  <||@
  Comment 231 148 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 231 150 NOP  <||@
  Comment 232 152 NOP  <||@
  Comment 233 154 NOP  <||@
  Comment 234 156 NOP  <||@
  Comment 235 158 NOP  <||@
  Comment 236 160 NOP  <||@
  Comment 237 162 NOP  <||@
  Comment 238 164 r14|DWORD = LEA address: [rdi|DWORD + 2] size: DWORD  <||@
  Comment 242 166 CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B10 y: 80 size: DWORD inlinedY: null  <||@
  Comment 252 block B10 null  <||@
  Comment 252 270 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 252 272 NOP  <||@
  Comment 253 274 NOP  <||@
  Comment 254 276 NOP  <||@
  Comment 255 278 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 260 280 stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 265 282 JUMP ~outgoingValues: [] destination: B10 -> B11  <||@
  Comment 265 block B11 null  <||@
  Comment 265 284 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 265 286 NOP  <||@
  Comment 266 288 NOP  <||@
  Comment 267 290 NOP  <||@
  Comment 268 292 NOP  <||@
  Comment 269 294 CMPBRANCH (x: rsi|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B22 size: DWORD  <||@
  Comment 277 block B12 null  <||@
  Comment 277 296 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 277 298 NOP  <||@
  Comment 278 300 NOP  <||@
  Comment 279 302 NOP  <||@
  Comment 280 304 NOP  <||@
  Comment 281 306 NOP  <||@
  Comment 282 308 NOP  <||@
  Comment 283 310 NOP  <||@
  Comment 284 312 NOP  <||@
  Comment 285 314 NOP  <||@
  Comment 286 316 NOP  <||@
  Comment 287 318 NOP  <||@
  Comment 288 320 NOP  <||@
  Comment 289 322 NOP  <||@
  Comment 290 324 NOP  <||@
  Comment 291 326 NOP  <||@
  Comment 292 328 NOP  <||@
  Comment 293 330 NOP  <||@
  Comment 294 332 NOP  <||@
  Comment 295 334 r10|DWORD = ROL x: rax|DWORD y: 5 size: DWORD  <||@
  Comment 302 336 r8|DWORD = XOR (x: r13|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 308 338 r8|DWORD = XOR (x: r8|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 311 340 r10|DWORD = ADD (x: r10|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 314 342 r10|DWORD = ADD (x: r10|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 317 344 r10|DWORD = ADD (x: r10|DWORD, ~y: [rdx|QWORD[.] + rbp|DWORD * 4 + 16]) size: DWORD  <||@
  Comment 322 346 r10|DWORD = LEA address: [r10|DWORD - 899497514] size: DWORD  <||@
  Comment 329 348 r8|DWORD = LEA address: [rdi|DWORD + 3] size: DWORD  <||@
  Comment 333 350 CMP x: r8|DWORD y: 80 size: DWORD  <||@
  Comment 337 352 rcx|DWORD = CMOVE (falseValue: int[80|0x50], ~trueValue: r8|DWORD) condition: <  <||@
  Comment 346 354 r11|DWORD = ROL x: r11|DWORD y: 30 size: DWORD  <||@
  Comment 350 356 JUMP ~outgoingValues: [] destination: B12 -> B13  <||@
  Comment 355 block B14 loop 0 depth 1 header:226|LoopBegin  <||@
  Comment 355 370 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 384 372 NOP  <||@
  Comment 385 374 NOP  <||@
  Comment 386 376 NOP  <||@
  Comment 387 378 NOP  <||@
  Comment 388 380 NOP  <||@
  Comment 389 382 NOP  <||@
  Comment 390 384 NOP  <||@
  Comment 391 386 NOP  <||@
  Comment 392 388 NOP  <||@
  Comment 393 390 NOP  <||@
  Comment 394 392 NOP  <||@
  Comment 395 394 NOP  <||@
  Comment 396 396 NOP  <||@
  Comment 397 398 NOP  <||@
  Comment 398 400 r8|DWORD = ROL x: r10|DWORD y: 5 size: DWORD  <||@
  Comment 405 402 rbx|DWORD = XOR (x: r11|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 410 404 rbx|DWORD = XOR (x: rbx|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 413 406 r8|DWORD = ADD (x: r8|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 416 408 r8|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 419 410 r8|DWORD = ADD (x: r8|DWORD, ~y: [rdx|QWORD[.] + r14|DWORD * 4 + 16]) size: DWORD  <||@
  Comment 424 412 r8|DWORD = LEA address: [r8|DWORD - 899497514] size: DWORD  <||@
  Comment 431 414 r14|DWORD = INC value: r14|DWORD size: DWORD  <||@
  Comment 434 416 rax|DWORD = ROL x: rax|DWORD y: 30 size: DWORD  <||@
  Comment 437 418 r9|DWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 440 420 r13|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 443 422 r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 446 424 rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 449 426 r10|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 452 428 JUMP ~outgoingValues: [] destination: B14 -> B13  <||@
  Comment 452 block B13 loop 0 depth 1 header:226|LoopBegin  <||@
  Comment 452 358 [] = LABEL alignment: 0 numbPhis: 6 label: ?  <||@
  Comment 452 360 NOP  <||@
  Comment 453 362 NOP  <||@
  Comment 454 364 NOP  <||@
  Comment 455 366 NOP  <||@
  Comment 456 368 CMPBRANCH (x: rcx|DWORD, y: r14|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD  <||@
  Comment 461 block B15 null  <||@
  Comment 461 430 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 461 432 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 466 434 NOP  <||@
  Comment 467 436 NOP  <||@
  Comment 468 438 NOP  <||@
  Comment 469 440 rbx|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 472 442 rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 474 444 r8|DWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 477 446 r10|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 480 448 stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 485 450 r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 488 452 r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 493 454 JUMP ~outgoingValues: [] destination: B15 -> B16  <||@
  Comment 498 block B17 loop 1 depth 1 header:643|LoopBegin  <||@
  Comment 498 468 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 512 470 NOP  <||@
  Comment 513 472 NOP  <||@
  Comment 514 474 NOP  <||@
  Comment 515 476 NOP  <||@
  Comment 516 478 NOP  <||@
  Comment 517 480 NOP  <||@
  Comment 518 482 NOP  <||@
  Comment 519 484 NOP  <||@
  Comment 520 486 NOP  <||@
  Comment 521 488 NOP  <||@
  Comment 522 490 NOP  <||@
  Comment 523 492 NOP  <||@
  Comment 524 494 NOP  <||@
  Comment 525 496 NOP  <||@
  Comment 526 498 NOP  <||@
  Comment 527 500 NOP  <||@
  Comment 528 502 NOP  <||@
  Comment 529 504 NOP  <||@
  Comment 530 506 NOP  <||@
  Comment 531 508 NOP  <||@
  Comment 532 510 NOP  <||@
  Comment 533 512 NOP  <||@
  Comment 534 514 NOP  <||@
  Comment 535 516 NOP  <||@
  Comment 536 518 NOP  <||@
  Comment 537 520 NOP  <||@
  Comment 538 522 NOP  <||@
  Comment 539 524 NOP  <||@
  Comment 540 526 NOP  <||@
  Comment 541 528 NOP  <||@
  Comment 542 530 NOP  <||@
  Comment 543 532 NOP  <||@
  Comment 544 534 NOP  <||@
  Comment 545 536 NOP  <||@
  Comment 546 538 NOP  <||@
  Comment 547 540 NOP  <||@
  Comment 548 542 NOP  <||@
  Comment 549 544 NOP  <||@
  Comment 550 546 NOP  <||@
  Comment 551 548 NOP  <||@
  Comment 552 550 NOP  <||@
  Comment 553 552 NOP  <||@
  Comment 554 554 NOP  <||@
  Comment 555 556 NOP  <||@
  Comment 556 558 NOP  <||@
  Comment 557 560 NOP  <||@
  Comment 558 562 NOP  <||@
  Comment 559 564 NOP  <||@
  Comment 560 566 NOP  <||@
  Comment 561 568 NOP  <||@
  Comment 562 570 NOP  <||@
  Comment 563 572 NOP  <||@
  Comment 564 574 NOP  <||@
  Comment 565 576 NOP  <||@
  Comment 566 578 NOP  <||@
  Comment 567 580 NOP  <||@
  Comment 568 582 NOP  <||@
  Comment 569 584 NOP  <||@
  Comment 570 586 NOP  <||@
  Comment 571 588 NOP  <||@
  Comment 572 590 NOP  <||@
  Comment 573 592 NOP  <||@
  Comment 574 594 NOP  <||@
  Comment 575 596 NOP  <||@
  Comment 576 598 NOP  <||@
  Comment 577 600 NOP  <||@
  Comment 578 602 NOP  <||@
  Comment 579 604 NOP  <||@
  Comment 580 606 NOP  <||@
  Comment 581 608 NOP  <||@
  Comment 582 610 NOP  <||@
  Comment 583 612 NOP  <||@
  Comment 584 614 NOP  <||@
  Comment 585 616 NOP  <||@
  Comment 586 618 NOP  <||@
  Comment 587 620 NOP  <||@
  Comment 588 622 NOP  <||@
  Comment 589 624 NOP  <||@
  Comment 590 626 NOP  <||@
  Comment 591 628 NOP  <||@
  Comment 592 630 NOP  <||@
  Comment 593 632 NOP  <||@
  Comment 594 634 NOP  <||@
  Comment 595 636 NOP  <||@
  Comment 596 638 NOP  <||@
  Comment 597 640 NOP  <||@
  Comment 598 642 NOP  <||@
  Comment 599 644 NOP  <||@
  Comment 600 646 NOP  <||@
  Comment 601 648 NOP  <||@
  Comment 602 650 NOP  <||@
  Comment 603 652 NOP  <||@
  Comment 604 654 NOP  <||@
  Comment 605 656 NOP  <||@
  Comment 606 658 NOP  <||@
  Comment 607 660 NOP  <||@
  Comment 608 662 NOP  <||@
  Comment 609 664 NOP  <||@
  Comment 610 666 NOP  <||@
  Comment 611 668 NOP  <||@
  Comment 612 670 NOP  <||@
  Comment 613 672 NOP  <||@
  Comment 614 674 NOP  <||@
  Comment 615 676 NOP  <||@
  Comment 616 678 NOP  <||@
  Comment 617 680 NOP  <||@
  Comment 618 682 NOP  <||@
  Comment 619 684 NOP  <||@
  Comment 620 686 NOP  <||@
  Comment 621 688 NOP  <||@
  Comment 622 690 NOP  <||@
  Comment 623 692 NOP  <||@
  Comment 624 694 rdi|DWORD = MOV input: [rdx|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD  <||@
  Comment 629 696 rsi|DWORD = INC value: r10|DWORD size: DWORD  <||@
  Comment 634 698 rsi|DWORD = MOV input: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 638 700 rax|DWORD = LEA address: [r10|DWORD + 2] size: DWORD  <||@
  Comment 642 702 rax|DWORD = MOV input: [rdx|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD  <||@
  Comment 646 704 rbp|DWORD = LEA address: [r10|DWORD + 3] size: DWORD  <||@
  Comment 650 706 rbp|DWORD = MOV input: [rdx|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD  <||@
  Comment 654 708 r13|DWORD = LEA address: [r10|DWORD + 4] size: DWORD  <||@
  Comment 658 710 r13|DWORD = MOV input: [rdx|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD  <||@
  Comment 663 712 r14|DWORD = LEA address: [r10|DWORD + 5] size: DWORD  <||@
  Comment 667 714 r14|DWORD = MOV input: [rdx|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD  <||@
  Comment 672 716 stack:32|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 677 718 r14|DWORD = LEA address: [r10|DWORD + 6] size: DWORD  <||@
  Comment 681 720 r14|DWORD = MOV input: [rdx|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD  <||@
  Comment 686 722 rdx|DWORD = LEA address: [r10|DWORD + 7] size: DWORD  <||@
  Comment 690 724 stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 695 726 r10|DWORD = ROL x: rbx|DWORD y: 5 size: DWORD  <||@
  Comment 702 728 stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 706 730 rdx|DWORD = XOR (x: r9|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 711 732 rdx|DWORD = XOR (x: rdx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 714 734 r10|DWORD = ADD (x: r10|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 717 736 r10|DWORD = ADD (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 720 738 r10|DWORD = ADD (x: r10|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 723 740 r10|DWORD = LEA address: [r10|DWORD - 899497514] size: DWORD  <||@
  Comment 730 742 r11|DWORD = ROL x: r10|DWORD y: 5 size: DWORD  <||@
  Comment 737 744 rcx|DWORD = ROL x: rcx|DWORD y: 30 size: DWORD  <||@
  Comment 740 746 rdi|DWORD = XOR (x: rcx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 744 748 rdi|DWORD = XOR (x: r9|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 747 750 r11|DWORD = ADD (x: r11|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 750 752 r11|DWORD = ADD (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 753 754 r11|DWORD = ADD (x: r11|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 756 756 r11|DWORD = LEA address: [r11|DWORD - 899497514] size: DWORD  <||@
  Comment 763 758 r8|DWORD = ROL x: r11|DWORD y: 5 size: DWORD  <||@
  Comment 770 760 rbx|DWORD = ROL x: rbx|DWORD y: 30 size: DWORD  <||@
  Comment 773 762 rdi|DWORD = XOR (x: r10|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 778 764 rdi|DWORD = XOR (x: rcx|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 780 766 r8|DWORD = ADD (x: r8|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 783 768 r8|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 786 770 r8|DWORD = ADD (x: r8|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 789 772 r8|DWORD = LEA address: [r8|DWORD - 899497514] size: DWORD  <||@
  Comment 796 774 r9|DWORD = ROL x: r8|DWORD y: 30 size: DWORD  <||@
  Comment 803 776 rdi|DWORD = ROL x: r11|DWORD y: 30 size: DWORD  <||@
  Comment 809 778 r10|DWORD = ROL x: r10|DWORD y: 30 size: DWORD  <||@
  Comment 813 780 rdx|DWORD = ROL x: r8|DWORD y: 5 size: DWORD  <||@
  Comment 819 782 r11|DWORD = XOR (x: r11|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 822 784 r11|DWORD = XOR (x: rbx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 825 786 rdx|DWORD = ADD (x: rdx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 828 788 rdx|DWORD = ADD (x: rdx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 830 790 rdx|DWORD = ADD (x: rdx|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 832 792 r11|DWORD = LEA address: [rdx|DWORD - 899497514] size: DWORD  <||@
  Comment 839 794 rcx|DWORD = ROL x: r11|DWORD y: 5 size: DWORD  <||@
  Comment 845 796 r8|DWORD = XOR (x: r8|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 848 798 r8|DWORD = XOR (x: r10|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 851 800 rcx|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 854 802 rcx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 856 804 rcx|DWORD = ADD (x: rcx|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 859 806 r8|DWORD = LEA address: [rcx|DWORD - 899497514] size: DWORD  <||@
  Comment 866 808 rcx|DWORD = ROL x: r8|DWORD y: 5 size: DWORD  <||@
  Comment 872 810 rbx|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 878 812 rbx|DWORD = XOR (x: rdi|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 880 814 rcx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 882 816 rcx|DWORD = ADD (x: rcx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 885 818 rcx|DWORD = ADD (x: rcx|DWORD, y: stack:32|DWORD) size: DWORD  <||@
  Comment 889 820 r10|DWORD = LEA address: [rcx|DWORD - 899497514] size: DWORD  <||@
  Comment 896 822 rcx|DWORD = ROL x: r10|DWORD y: 5 size: DWORD  <||@
  Comment 902 824 r11|DWORD = ROL x: r11|DWORD y: 30 size: DWORD  <||@
  Comment 906 826 rbx|DWORD = XOR (x: r8|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 912 828 rbx|DWORD = XOR (x: r9|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 915 830 rcx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 917 832 rcx|DWORD = ADD (x: rcx|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 919 834 rcx|DWORD = ADD (x: rcx|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 922 836 rcx|DWORD = LEA address: [rcx|DWORD - 899497514] size: DWORD  <||@
  Comment 928 838 rbx|DWORD = ROL x: rcx|DWORD y: 5 size: DWORD  <||@
  Comment 933 840 r8|DWORD = ROL x: r8|DWORD y: 30 size: DWORD  <||@
  Comment 937 842 rdi|DWORD = XOR (x: r10|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 943 844 rdi|DWORD = XOR (x: r11|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 946 846 rbx|DWORD = ADD (x: rbx|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 948 848 rbx|DWORD = ADD (x: rbx|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 951 850 rdi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 956 852 rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 960 854 rbx|DWORD = ADD (x: rbx|DWORD, ~y: [rdi|QWORD[.] + rdx|DWORD * 4 + 16]) size: DWORD  <||@
  Comment 964 856 rbx|DWORD = LEA address: [rbx|DWORD - 899497514] size: DWORD  <||@
  Comment 970 858 r10|DWORD = ROL x: r10|DWORD y: 30 size: DWORD  <||@
  Comment 974 860 rdx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 978 862 r9|DWORD = LEA address: [rdx|DWORD + 8] size: DWORD  <||@
  Comment 982 864 rdx|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 985 866 stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 990 868 r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 993 870 r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 998 872 JUMP ~outgoingValues: [] destination: B17 -> B16  <||@
  Comment 998 block B16 loop 1 depth 1 header:643|LoopBegin  <||@
  Comment 998 456 [] = LABEL alignment: 0 numbPhis: 6 label: ?  <||@
  Comment 998 458 NOP  <||@
  Comment 999 460 NOP  <||@
  Comment 1000 462 NOP  <||@
  Comment 1001 464 NOP  <||@
  Comment 1002 466 CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.5789473684210522 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 72 size: DWORD inlinedY: null  <||@
  Comment 1012 block B18 null  <||@
  Comment 1012 874 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1012 876 rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1015 878 rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 1018 880 NOP  <||@
  Comment 1019 882 NOP  <||@
  Comment 1020 884 NOP  <||@
  Comment 1021 888 JUMP ~outgoingValues: [] destination: B18 -> B19  <||@
  Comment 1026 block B20 loop 2 depth 1 header:679|LoopBegin  <||@
  Comment 1026 902 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 1056 904 NOP  <||@
  Comment 1057 906 NOP  <||@
  Comment 1058 908 NOP  <||@
  Comment 1059 910 NOP  <||@
  Comment 1060 912 NOP  <||@
  Comment 1061 914 NOP  <||@
  Comment 1062 916 NOP  <||@
  Comment 1063 918 NOP  <||@
  Comment 1064 920 NOP  <||@
  Comment 1065 922 NOP  <||@
  Comment 1066 924 NOP  <||@
  Comment 1067 926 NOP  <||@
  Comment 1068 928 NOP  <||@
  Comment 1069 930 NOP  <||@
  Comment 1070 932 rdx|DWORD = ROL x: rbx|DWORD y: 5 size: DWORD  <||@
  Comment 1075 934 rsi|DWORD = XOR (x: r9|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1080 936 rsi|DWORD = XOR (x: rsi|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1083 938 rdx|DWORD = ADD (x: rdx|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1085 940 rdx|DWORD = ADD (x: rdx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 1088 942 rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rdi|QWORD[.] + r10|DWORD * 4 + 16]) size: DWORD  <||@
  Comment 1093 944 r11|DWORD = LEA address: [rdx|DWORD - 899497514] size: DWORD  <||@
  Comment 1100 946 rcx|DWORD = ROL x: rcx|DWORD y: 30 size: DWORD  <||@
  Comment 1103 948 r10|DWORD = INC value: r10|DWORD size: DWORD  <||@
  Comment 1106 950 stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1111 952 r8|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1114 954 r9|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1117 956 rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 1119 958 rbx|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1122 960 r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 1127 962 JUMP ~outgoingValues: [] destination: B20 -> B19  <||@
  Comment 1127 block B19 loop 2 depth 1 header:679|LoopBegin  <||@
  Comment 1127 890 [] = LABEL alignment: 0 numbPhis: 6 label: ?  <||@
  Comment 1127 892 NOP  <||@
  Comment 1128 894 NOP  <||@
  Comment 1129 896 NOP  <||@
  Comment 1130 898 NOP  <||@
  Comment 1131 900 CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 80 size: DWORD inlinedY: null  <||@
  Comment 1137 block B21 null  <||@
  Comment 1137 964 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1137 966 NOP  <||@
  Comment 1138 968 NOP  <||@
  Comment 1139 970 NOP  <||@
  Comment 1140 972 r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1145 974 JUMP ~outgoingValues: [] destination: B21 -> B26  <||@
  Comment 1145 block B26 null  <||@
  Comment 1145 1064 [] = LABEL alignment: 0 numbPhis: 5 label: ?  <||@
  Comment 1145 1066 NOP  <||@
  Comment 1146 1068 NOP  <||@
  Comment 1147 1070 NOP  <||@
  Comment 1148 1072 NOP  <||@
  Comment 1149 1074 NOP  <||@
  Comment 1150 1076 rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 52] size: DWORD  <||@
  Comment 1154 1078 CMPCONSTBRANCH x: [rdi|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 5 size: DWORD inlinedY: null state [bci:423]  <||@
  Comment 1154 [rdi:0, r10:0]at sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423, duringCall: false, rethrow: false]
              |0             |1  |2  |3          |4          |5         |6         |7          |8  |9 
     locals:  |r10|QWORD[.]  |-  |-  |rbx|DWORD  |rcx|DWORD  |r9|DWORD  |r8|DWORD  |r11|DWORD  |-  |-   <||@
  Comment 1154 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1168 block B28 null  <||@
  Comment 1168 1102 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1168 1104 NOP  <||@
  Comment 1169 1106 NOP  <||@
  Comment 1170 1108 NOP  <||@
  Comment 1171 1110 NOP  <||@
  Comment 1172 1112 NOP  <||@
  Comment 1173 1114 NOP  <||@
  Comment 1174 1116 NOP  <||@
  Comment 1175 1118 NOP  <||@
  Comment 1176 1120 NOP  <||@
  Comment 1177 1122 NOP  <||@
  Comment 1178 1124 NOP  <||@
  Comment 1179 1126 NOP  <||@
  Comment 1180 1128 ADD (x: [rdi|DWORD[_] * 8 + 16], y: rbx|DWORD) size: DWORD  <||@
  Comment 1187 1130 ADD (x: [rdi|DWORD[_] * 8 + 20], y: rcx|DWORD) size: DWORD  <||@
  Comment 1194 1132 ADD (x: [rdi|DWORD[_] * 8 + 24], y: r9|DWORD) size: DWORD  <||@
  Comment 1202 1134 ADD (x: [rdi|DWORD[_] * 8 + 28], y: r8|DWORD) size: DWORD  <||@
  Comment 1210 1136 ADD (x: [rdi|DWORD[_] * 8 + 32], y: r11|DWORD) size: DWORD  <||@
  Comment 1218 1138 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 1227 POLL_RETURN_FAR  <||@
  Comment 1241 block B5 null  <||@
  Comment 1241 168 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1241 170 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1246 172 stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1251 174 NOP  <||@
  Comment 1252 176 NOP  <||@
  Comment 1253 178 NOP  <||@
  Comment 1254 180 NOP  <||@
  Comment 1255 182 NOP  <||@
  Comment 1256 184 NOP  <||@
  Comment 1257 186 NOP  <||@
  Comment 1258 188 NOP  <||@
  Comment 1259 190 NOP  <||@
  Comment 1260 192 NOP  <||@
  Comment 1261 194 NOP  <||@
  Comment 1262 196 r10|DWORD = MOVE input: int[78|0x4e]  <||@
  Comment 1268 198 r10|DWORD = SUB (x: r10|DWORD, ~y: rdi|DWORD) size: DWORD  <||@
  Comment 1271 200 r10|QWORD = MOVSXD value: r10|DWORD size: QWORD  <||@
  Comment 1274 202 r8|QWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 1277 204 r10|QWORD = ADD (x: r10|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 1280 206 r10|QWORD = DEC value: r10|QWORD size: QWORD  <||@
  Comment 1283 208 r8|QWORD = MOVE input: rsi|DWORD moveKind: DWORD  <||@
  Comment 1286 210 CMPBRANCH (x: r8|QWORD, y: r10|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B9 size: QWORD  <||@
  Comment 1295 block B6 null  <||@
  Comment 1295 212 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1295 214 NOP  <||@
  Comment 1296 216 NOP  <||@
  Comment 1297 218 NOP  <||@
  Comment 1298 220 NOP  <||@
  Comment 1299 222 CMPBRANCH (x: rsi|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD  <||@
  Comment 1308 block B7 null  <||@
  Comment 1308 224 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1308 226 NOP  <||@
  Comment 1309 228 NOP  <||@
  Comment 1310 230 NOP  <||@
  Comment 1311 232 JUMP ~outgoingValues: [] destination: B7 -> B11  <||@
  Comment 1316 block B25 null  <||@
  Comment 1316 1038 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1316 1040 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1321 1042 stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1326 1044 NOP  <||@
  Comment 1327 1046 NOP  <||@
  Comment 1328 1048 NOP  <||@
  Comment 1329 1050 r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1332 1052 rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1336 1056 stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 1340 1058 rbx|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1343 1060 r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 1348 1062 JUMP ~outgoingValues: [] destination: B25 -> B26  <||@
  Comment 1353 block B23 null  <||@
  Comment 1353 994 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1353 996 stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1358 998 NOP  <||@
  Comment 1359 1000 NOP  <||@
  Comment 1360 1002 NOP  <||@
  Comment 1361 1004 r8|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1364 1006 r9|DWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 1367 1008 rbx|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 1369 1012 stack:36|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1373 1014 rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1376 1016 r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 1381 1018 JUMP ~outgoingValues: [] destination: B23 -> B26  <||@
  Comment 1386 block B22 null  <||@
  Comment 1386 976 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1386 978 r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1391 980 NOP  <||@
  Comment 1392 982 NOP  <||@
  Comment 1393 984 NOP  <||@
  Comment 1394 986 rdx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1401 988 r8|DWORD = MOVE input: int[-108315|0xfffffffffffe58e5]  <||@
  Comment 1407 992 JUMP ~outgoingValues: [] destination: B22 -> B30  <||@
  Comment 1407 block B30 null  <||@
  Comment 1407 1158 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1407 1154 rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1411 1160 NOP  <||@
  Comment 1412 1162 NOP  <||@
  Comment 1413 1164 NOP  <||@
  Comment 1414 1166 NOP  <||@
  Comment 1415 1168 NOP  <||@
  Comment 1416 1170 NOP  <||@
  Comment 1417 1172 NOP  <||@
  Comment 1418 1174 MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD  <||@
  Comment 1425 1176 MOV (x: [r15|QWORD + 1168], y: rdx|QWORD) size: QWORD  <||@
  Comment 1432 1178 DEOPT info [bci:357]  <||@
  Comment 1432 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1437 [r10:0]at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357, duringCall: false, rethrow: false]
              |0             |1  |2  |3          |4          |5         |6          |7          |8          |9 
     locals:  |r10|QWORD[.]  |-  |-  |r11|DWORD  |rsi|DWORD  |r9|DWORD  |rcx|DWORD  |rbx|DWORD  |rdi|DWORD  |-   <||@
  Comment 1445 block B24 null  <||@
  Comment 1445 1020 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1445 1022 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1450 1024 NOP  <||@
  Comment 1451 1026 NOP  <||@
  Comment 1452 1028 NOP  <||@
  Comment 1453 1030 rdx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1460 1032 r8|DWORD = MOVE input: int[-105755|0xfffffffffffe62e5]  <||@
  Comment 1466 1036 JUMP ~outgoingValues: [] destination: B24 -> B30  <||@
  Comment 1468 block B9 null  <||@
  Comment 1468 252 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1468 254 r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1473 256 NOP  <||@
  Comment 1474 258 NOP  <||@
  Comment 1475 260 NOP  <||@
  Comment 1476 262 rdx|QWORD = MOVE input: long[664|0x298]  <||@
  Comment 1483 264 r8|DWORD = MOVE input: int[-110619|0xfffffffffffe4fe5]  <||@
  Comment 1489 268 JUMP ~outgoingValues: [] destination: B9 -> B30  <||@
  Comment 1491 block B8 null  <||@
  Comment 1491 234 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1491 236 r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1496 238 NOP  <||@
  Comment 1497 240 NOP  <||@
  Comment 1498 242 NOP  <||@
  Comment 1499 244 rdx|QWORD = MOVE input: long[664|0x298]  <||@
  Comment 1506 246 r8|DWORD = MOVE input: int[-110619|0xfffffffffffe4fe5]  <||@
  Comment 1512 250 JUMP ~outgoingValues: [] destination: B8 -> B30  <||@
  Comment 1514 block B27 null  <||@
  Comment 1514 1080 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1514 1082 NOP  <||@
  Comment 1515 1084 NOP  <||@
  Comment 1516 1086 NOP  <||@
  Comment 1517 1088 NOP  <||@
  Comment 1518 1090 NOP  <||@
  Comment 1519 1092 NOP  <||@
  Comment 1520 1094 NOP  <||@
  Comment 1521 1096 MOV x: [r15|QWORD + 1156] y: -133915 size: DWORD  <||@
  Comment 1532 1098 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 1543 1100 DEOPT info [bci:423]  <||@
  Comment 1543 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1548 [r10:0]at sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423, duringCall: false, rethrow: false]
              |0             |1  |2  |3          |4          |5         |6         |7          |8  |9 
     locals:  |r10|QWORD[.]  |-  |-  |rbx|DWORD  |rcx|DWORD  |r9|DWORD  |r8|DWORD  |r11|DWORD  |-  |-   <||@
  Comment 1556 block B29 null  <||@
  Comment 1556 1140 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1556 1142 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1561 1144 NOP  <||@
  Comment 1562 1146 NOP  <||@
  Comment 1563 1148 NOP  <||@
  Comment 1564 1150 rdx|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 1571 1152 r8|DWORD = MOVE input: int[-102716|0xfffffffffffe6ec4]  <||@
  Comment 1577 1156 JUMP ~outgoingValues: [] destination: B29 -> B30  <||@
  Comment 1587 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 1612 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 1640 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1645 [r10:0]at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357, duringCall: false, rethrow: false]
              |0             |1  |2  |3          |4         |5         |6          |7          |8          |9 
     locals:  |r10|QWORD[.]  |-  |-  |r11|DWORD  |r8|DWORD  |r9|DWORD  |rcx|DWORD  |rbx|DWORD  |rdi|DWORD  |-   <||@
  Comment 1675 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1680 [rdx:0, r10:0]at sun.security.provider.SHA.implCompress0(SHA.java:202) [bci: 357, duringCall: false, rethrow: false]
              |0             |1  |2  |3          |4         |5         |6          |7          |8          |9 
     locals:  |r10|QWORD[.]  |-  |-  |r11|DWORD  |r8|DWORD  |r9|DWORD  |rcx|DWORD  |rbx|DWORD  |rdi|DWORD  |-   <||@
  Comment 1710 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1715 [rdi:0, r10:0]at sun.security.provider.SHA.implCompress0(SHA.java:211) [bci: 423, duringCall: false, rethrow: false]
              |0             |1  |2  |3          |4          |5         |6         |7          |8  |9 
     locals:  |r10|QWORD[.]  |-  |-  |rbx|DWORD  |rcx|DWORD  |r9|DWORD  |r8|DWORD  |r11|DWORD  |-  |-   <||@
  Comment 1723 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1723 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1729 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 1729 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
