begin_compilation
  name " HotSpotCompilation-8277[java.io.ByteArrayOutputStream.ensureCapacity(int)]"
  method "HotSpotCompilation-8277[java.io.ByteArrayOutputStream.ensureCapacity(int)]"
  date 1724269754842
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a55 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a55  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! java.io.ByteArrayOutputStream
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v59 ?50 ?51 v54 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a55 v41 v52 v54 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a55 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ByteArrayOutputStream.buf
memoryOrder: PLAIN
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 1]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v59 
lastLocationAccess: - 
=== Succesors ===
next: i56 
=== Usages ===
a31 v60 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v59 lastLocationAccess: - #next: i56  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 i6 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<ByteArrayOutputStream.ensureCapacity(int)>
localsSize: 4
locksSize: 0
sourceFile: ByteArrayOutputStream.java
sourceLine: 97
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
i56 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@~|@floating>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a55 
=== Succesors ===
=== Usages ===
i56 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a55  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i56 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-8459|0xffffffffffffdef5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 4]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v60 
lastLocationAccess: - 
=== Succesors ===
next: v12 
=== Usages ===
i6 v38 v38 
=== Predecessor ===
a55 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v60 lastLocationAccess: - #next: v12  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:98) [bci: 8]
stamp: i32
=== Inputs ===
x: i2 
y: i56 
=== Succesors ===
=== Usages ===
v9 v38 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i2 y: i56  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:99) [bci: 11]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v9 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:99) [bci: 11]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6 
y: i8 
=== Succesors ===
=== Usages ===
v12 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i6 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:99) [bci: 11]
profileData: PROFILED designatedSuccessorProbability: 0.9936006007051323
stamp: void
=== Inputs ===
condition: v9 
=== Succesors ===
trueSuccessor: v11 
falseSuccessor: v10 
=== Usages ===
=== Predecessor ===
i56 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v9 #trueSuccessor: v11 #falseSuccessor: v10  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607124778135457886
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v22 
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v22  <|@  <|@
f <@*|@fixed>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
v11 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4574028027217301760
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: i15 
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i15  <|@  <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
referencedType: [null]
returnStamp: i32
signature: [HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<ArraysSupport.newLength(int, int, int)>
=== Inputs ===
arguments: i56 i6 i56 
=== Succesors ===
=== Usages ===
i15 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: i56 i6 i56  <|@  <|@
f <@~|@floating>@ <|@
tid a31 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 1]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a55 
=== Succesors ===
=== Usages ===
v39 ?50 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a55  <|@  <|@
tid ?50 <|@
d <@d|@=== Debug Properties ===
bci: 22
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<ByteArrayOutputStream.ensureCapacity(int)>
localsSize: 4
locksSize: 0
sourceFile: ByteArrayOutputStream.java
sourceLine: 100
stackSize: 2
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a31 
=== Succesors ===
=== Usages ===
i15 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a31  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i15 <|@
d <@d|@=== Debug Properties ===
bci: 22
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
polymorphic: false
stamp: i32
targetMethod: Direct#ArraysSupport.newLength
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v38 
stateDuring: ?50 
=== Succesors ===
next: a18 
=== Usages ===
v39 
=== Predecessor ===
v10 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v38 stateDuring: ?50 #next: a18  <|@  <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
referencedType: [null]
returnStamp: a# byte[]
signature: [UnresolvedJavaType<[B>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<Arrays.copyOf(byte[], int)>
=== Inputs ===
arguments: a31 i15 
=== Succesors ===
=== Usages ===
a18 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a31 i15  <|@  <|@
tid ?51 <|@
d <@d|@=== Debug Properties ===
bci: 25
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<ByteArrayOutputStream.ensureCapacity(int)>
localsSize: 4
locksSize: 0
sourceFile: ByteArrayOutputStream.java
sourceLine: 100
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
a18 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a18 <|@
d <@d|@=== Debug Properties ===
bci: 25
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
polymorphic: false
stamp: a# byte[]
targetMethod: Direct#Arrays.copyOf
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v39 
stateDuring: ?51 
=== Succesors ===
next: v52 
=== Usages ===
a40 v54 
=== Predecessor ===
i15 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v39 stateDuring: ?51 #next: v52  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 28]
precise: true
stamp: void
=== Inputs ===
address: v59 
value: - 
stateBefore: - 
=== Succesors ===
next: v41 
=== Usages ===
=== Predecessor ===
a18 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v59 value: - stateBefore: - #next: v41  <|@  <|@
f <@~|@floating>@ <|@
tid a40 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 28]
op: Compress
stamp: n# byte[]
=== Inputs ===
value: a18 
=== Succesors ===
=== Usages ===
v41 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a18  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: ByteArrayOutputStream.buf
location: ByteArrayOutputStream.buf
memoryOrder: PLAIN
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 28]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v59 
lastLocationAccess: - 
value: a40 
stateAfter: - 
=== Succesors ===
next: v54 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v59 lastLocationAccess: - value: a40 stateAfter: - #next: v54  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 28]
precise: false
stamp: void
=== Inputs ===
address: v59 
value: a18 
object: a1 
=== Succesors ===
next: v24 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v59 value: a18 object: a1 #next: v24  <|@  <|@
f <@*|@fixed>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
v54 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v22 v24 
=== Succesors ===
next: v26 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v22 v24 #next: v26  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@60b3ad63 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = SUB (x: v1|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.9936006007051323 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607124778135457886
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4574028027217301760
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7d07c705 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
stack: v0|QWORD[.] v5|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:22] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
stack: v0|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v8|QWORD, temp2: v9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@396cea7e <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = COMPRESSPOINTER (input: v7|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7d07c705 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v10|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v7|QWORD[.]) {temp: v11|QWORD, temp2: v12|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@396cea7e <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #7          // buf:byte[]
     4: arraylength   
     5: istore_2      
     6: iload_1       
     7: iload_2       
     8: isub          
     9: istore_3      
    10: iload_3       
    11: ifle          31
    14: aload_0       
    15: aload_0       
    16: getfield      #7          // buf:byte[]
    19: iload_2       
    20: iload_3       
    21: iload_2       
    22: invokestatic  #8          // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    25: invokestatic  #9          // java.util.Arrays.copyOf:(byte[], int)byte[]
    28: putfield      #7          // buf:byte[]
    31: return        
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a55 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a55  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! java.io.ByteArrayOutputStream
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v59 ?50 ?51 v54 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v59 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a55 v41 v52 v54 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a55 <|@
result v2|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ByteArrayOutputStream.buf
memoryOrder: PLAIN
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 1]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v59 
lastLocationAccess: - 
=== Succesors ===
next: i56 
=== Usages ===
a31 v60 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v59 lastLocationAccess: - #next: i56  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 i6 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<ByteArrayOutputStream.ensureCapacity(int)>
localsSize: 4
locksSize: 0
sourceFile: ByteArrayOutputStream.java
sourceLine: 97
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
i56 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@~|@floating>@ <|@
tid v60 <|@
result [v2|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a55 
=== Succesors ===
=== Usages ===
i56 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a55  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i56 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-8459|0xffffffffffffdef5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 4]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v60 
lastLocationAccess: - 
=== Succesors ===
next: v12 
=== Usages ===
i6 v38 v38 
=== Predecessor ===
a55 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v60 lastLocationAccess: - #next: v12  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:98) [bci: 8]
stamp: i32
=== Inputs ===
x: i2 
y: i56 
=== Succesors ===
=== Usages ===
v9 v38 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i2 y: i56  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:99) [bci: 11]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v9 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:99) [bci: 11]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6 
y: i8 
=== Succesors ===
=== Usages ===
v12 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i6 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:99) [bci: 11]
profileData: PROFILED designatedSuccessorProbability: 0.9936006007051323
stamp: void
=== Inputs ===
condition: v9 
=== Succesors ===
trueSuccessor: v11 
falseSuccessor: v10 
=== Usages ===
=== Predecessor ===
i56 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v9 #trueSuccessor: v11 #falseSuccessor: v10  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@60b3ad63 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = SUB (x: v1|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.9936006007051323 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607124778135457886
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v22 
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v22  <|@  <|@
f <@*|@fixed>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
v11 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4574028027217301760
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: i15 
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i15  <|@  <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
referencedType: [null]
returnStamp: i32
signature: [HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<ArraysSupport.newLength(int, int, int)>
=== Inputs ===
arguments: i56 i6 i56 
=== Succesors ===
=== Usages ===
i15 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: i56 i6 i56  <|@  <|@
f <@~|@floating>@ <|@
tid a31 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 1]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a55 
=== Succesors ===
=== Usages ===
v39 ?50 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a55  <|@  <|@
tid ?50 <|@
d <@d|@=== Debug Properties ===
bci: 22
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<ByteArrayOutputStream.ensureCapacity(int)>
localsSize: 4
locksSize: 0
sourceFile: ByteArrayOutputStream.java
sourceLine: 100
stackSize: 2
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a31 
=== Succesors ===
=== Usages ===
i15 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a31  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i15 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 22
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
polymorphic: false
stamp: i32
targetMethod: Direct#ArraysSupport.newLength
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v38 
stateDuring: ?50 
=== Succesors ===
next: a18 
=== Usages ===
v39 
=== Predecessor ===
v10 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v38 stateDuring: ?50 #next: a18  <|@  <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
referencedType: [null]
returnStamp: a# byte[]
signature: [UnresolvedJavaType<[B>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<Arrays.copyOf(byte[], int)>
=== Inputs ===
arguments: a31 i15 
=== Succesors ===
=== Usages ===
a18 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a31 i15  <|@  <|@
tid ?51 <|@
d <@d|@=== Debug Properties ===
bci: 25
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<ByteArrayOutputStream.ensureCapacity(int)>
localsSize: 4
locksSize: 0
sourceFile: ByteArrayOutputStream.java
sourceLine: 100
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
a18 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a18 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 25
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
polymorphic: false
stamp: a# byte[]
targetMethod: Direct#Arrays.copyOf
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v39 
stateDuring: ?51 
=== Succesors ===
next: v52 
=== Usages ===
a40 v54 
=== Predecessor ===
i15 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v39 stateDuring: ?51 #next: v52  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 28]
precise: true
stamp: void
=== Inputs ===
address: v59 
value: - 
stateBefore: - 
=== Succesors ===
next: v41 
=== Usages ===
=== Predecessor ===
a18 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v59 value: - stateBefore: - #next: v41  <|@  <|@
f <@~|@floating>@ <|@
tid a40 <|@
result v10|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 28]
op: Compress
stamp: n# byte[]
=== Inputs ===
value: a18 
=== Succesors ===
=== Usages ===
v41 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a18  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: ByteArrayOutputStream.buf
location: ByteArrayOutputStream.buf
memoryOrder: PLAIN
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 28]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v59 
lastLocationAccess: - 
value: a40 
stateAfter: - 
=== Succesors ===
next: v54 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v59 lastLocationAccess: - value: a40 stateAfter: - #next: v54  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 28]
precise: false
stamp: void
=== Inputs ===
address: v59 
value: a18 
object: a1 
=== Succesors ===
next: v24 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v59 value: a18 object: a1 #next: v24  <|@  <|@
f <@*|@fixed>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
v54 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7d07c705 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
stack: v0|QWORD[.] v5|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:22] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
stack: v0|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v8|QWORD, temp2: v9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@396cea7e <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = COMPRESSPOINTER (input: v7|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7d07c705 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v10|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v7|QWORD[.]) {temp: v11|QWORD, temp2: v12|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@396cea7e <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v22 v24 
=== Succesors ===
next: v26 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v22 v24 #next: v26  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@60b3ad63 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = SUB (x: v1|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.9936006007051323 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607124778135457886
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4574028027217301760
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7d07c705 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
stack: v0|QWORD[.] v5|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:22] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
stack: v0|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v8|QWORD, temp2: v9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@396cea7e <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = COMPRESSPOINTER (input: v7|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7d07c705 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v10|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v7|QWORD[.]) {temp: v11|QWORD, temp2: v12|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@396cea7e <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #7          // buf:byte[]
     4: arraylength   
     5: istore_2      
     6: iload_1       
     7: iload_2       
     8: isub          
     9: istore_3      
    10: iload_3       
    11: ifle          31
    14: aload_0       
    15: aload_0       
    16: getfield      #7          // buf:byte[]
    19: iload_2       
    20: iload_3       
    21: iload_2       
    22: invokestatic  #8          // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    25: invokestatic  #9          // java.util.Arrays.copyOf:(byte[], int)byte[]
    28: putfield      #7          // buf:byte[]
    31: return        
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@60b3ad63 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = SUB (x: v1|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.9936006007051323 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607124778135457886
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4574028027217301760
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7d07c705 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
stack: v0|QWORD[.] v5|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:22] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
stack: v0|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v8|QWORD, temp2: v9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@396cea7e <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = COMPRESSPOINTER (input: v7|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7d07c705 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v10|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v7|QWORD[.]) {temp: v11|QWORD, temp2: v12|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@396cea7e <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #7          // buf:byte[]
     4: arraylength   
     5: istore_2      
     6: iload_1       
     7: iload_2       
     8: isub          
     9: istore_3      
    10: iload_3       
    11: ifle          31
    14: aload_0       
    15: aload_0       
    16: getfield      #7          // buf:byte[]
    19: iload_2       
    20: iload_3       
    21: iload_2       
    22: invokestatic  #8          // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    25: invokestatic  #9          // java.util.Arrays.copyOf:(byte[], int)byte[]
    28: putfield      #7          // buf:byte[]
    31: return        
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@60b3ad63 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = SUB (x: v1|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.9936006007051323 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607124778135457886
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4574028027217301760
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7d07c705 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
stack: v0|QWORD[.] v5|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:22] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
stack: v0|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v8|QWORD, temp2: v9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@396cea7e <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = COMPRESSPOINTER (input: v7|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7d07c705 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v10|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v7|QWORD[.]) {temp: v11|QWORD, temp2: v12|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@396cea7e <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #7          // buf:byte[]
     4: arraylength   
     5: istore_2      
     6: iload_1       
     7: iload_2       
     8: isub          
     9: istore_3      
    10: iload_3       
    11: ifle          31
    14: aload_0       
    15: aload_0       
    16: getfield      #7          // buf:byte[]
    19: iload_2       
    20: iload_3       
    21: iload_2       
    22: invokestatic  #8          // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    25: invokestatic  #9          // java.util.Arrays.copyOf:(byte[], int)byte[]
    28: putfield      #7          // buf:byte[]
    31: return        
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@60b3ad63 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = SUB (x: v1|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.9936006007051323 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607124778135457886
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4574028027217301760
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7d07c705 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
stack: v0|QWORD[.] v5|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:22] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
stack: v0|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v8|QWORD, temp2: v9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@396cea7e <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = COMPRESSPOINTER (input: v7|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7d07c705 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v10|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v7|QWORD[.]) {temp: v11|QWORD, temp2: v12|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@396cea7e <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #7          // buf:byte[]
     4: arraylength   
     5: istore_2      
     6: iload_1       
     7: iload_2       
     8: isub          
     9: istore_3      
    10: iload_3       
    11: ifle          31
    14: aload_0       
    15: aload_0       
    16: getfield      #7          // buf:byte[]
    19: iload_2       
    20: iload_3       
    21: iload_2       
    22: invokestatic  #8          // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    25: invokestatic  #9          // java.util.Arrays.copyOf:(byte[], int)byte[]
    28: putfield      #7          // buf:byte[]
    31: return        
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@60b3ad63 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = SUB (x: v1|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.9936006007051323 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607124778135457886
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4574028027217301760
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7d07c705 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
stack: v0|QWORD[.] v5|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:22] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
stack: v0|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v8|QWORD, temp2: v9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@396cea7e <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = COMPRESSPOINTER (input: v7|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7d07c705 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v10|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v7|QWORD[.]) {temp: v11|QWORD, temp2: v12|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@396cea7e <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #7          // buf:byte[]
     4: arraylength   
     5: istore_2      
     6: iload_1       
     7: iload_2       
     8: isub          
     9: istore_3      
    10: iload_3       
    11: ifle          31
    14: aload_0       
    15: aload_0       
    16: getfield      #7          // buf:byte[]
    19: iload_2       
    20: iload_3       
    21: iload_2       
    22: invokestatic  #8          // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    25: invokestatic  #9          // java.util.Arrays.copyOf:(byte[], int)byte[]
    28: putfield      #7          // buf:byte[]
    31: return        
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@60b3ad63 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction v4|DWORD = SUB (x: v1|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.9936006007051323 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607124778135457886
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4574028027217301760
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7d07c705 encoding: base: 0 shift: 3 <|@ <|@
      nr  214  <|@ instruction rsi|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr  216  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
stack: v0|QWORD[.] v5|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:22] <|@ <|@
      nr  222  <|@ instruction v6|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction rdx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
stack: v0|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25] <|@ <|@
      nr  230  <|@ instruction v7|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v8|QWORD, temp2: v9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@396cea7e <|@ <|@
      nr  234  <|@ instruction v10|DWORD[_] = COMPRESSPOINTER (input: v7|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7d07c705 encoding: base: 0 shift: 3 <|@ <|@
      nr  236  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v10|DWORD[_]) size: DWORD <|@ <|@
      nr  238  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v7|QWORD[.]) {temp: v11|QWORD, temp2: v12|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@396cea7e <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #7          // buf:byte[]
     4: arraylength   
     5: istore_2      
     6: iload_1       
     7: iload_2       
     8: isub          
     9: istore_3      
    10: iload_3       
    11: ifle          31
    14: aload_0       
    15: aload_0       
    16: getfield      #7          // buf:byte[]
    19: iload_2       
    20: iload_3       
    21: iload_2       
    22: invokestatic  #8          // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    25: invokestatic  #9          // java.util.Arrays.copyOf:(byte[], int)byte[]
    28: putfield      #7          // buf:byte[]
    31: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@60b3ad63 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction v4|DWORD = SUB (x: v1|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.9936006007051323 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607124778135457886
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4574028027217301760
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7d07c705 encoding: base: 0 shift: 3 <|@ <|@
      nr  214  <|@ instruction rsi|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr  216  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
stack: v0|QWORD[.] v5|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:22] <|@ <|@
      nr  222  <|@ instruction v6|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction rdx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
stack: v0|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25] <|@ <|@
      nr  230  <|@ instruction v7|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v8|QWORD, temp2: v9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@396cea7e <|@ <|@
      nr  234  <|@ instruction v10|DWORD[_] = COMPRESSPOINTER (input: v7|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7d07c705 encoding: base: 0 shift: 3 <|@ <|@
      nr  236  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v10|DWORD[_]) size: DWORD <|@ <|@
      nr  238  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v7|QWORD[.]) {temp: v11|QWORD, temp2: v12|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@396cea7e <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #7          // buf:byte[]
     4: arraylength   
     5: istore_2      
     6: iload_1       
     7: iload_2       
     8: isub          
     9: istore_3      
    10: iload_3       
    11: ifle          31
    14: aload_0       
    15: aload_0       
    16: getfield      #7          // buf:byte[]
    19: iload_2       
    20: iload_3       
    21: iload_2       
    22: invokestatic  #8          // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    25: invokestatic  #9          // java.util.Arrays.copyOf:(byte[], int)byte[]
    28: putfield      #7          // buf:byte[]
    31: return        
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[220, 222[[228, 230[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v3|d [0, 1[[218, 221[[228, 229[ "NoSpillStore"
  rdx|- fixed "[rdx|-]" rdx|- v4|d [0, 30[[216, 221[[226, 229[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 24[[220, 221[[228, 229[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v3|d [0, 28[[214, 221[[224, 229[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|- [28, 40[[68, 239[28 MustHaveRegister 32 MustHaveRegister 232 MustHaveRegister 236 MustHaveRegister 238 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d rdx|- [30, 36[30 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [32, 40[[68, 212[32 MustHaveRegister 34 MustHaveRegister 212 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [34, 40[[68, 218[34 MustHaveRegister 36 ShouldHaveRegister 214 ShouldHaveRegister 218 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d v1|d [36, 40[[68, 216[36 MustHaveRegister 38 ShouldHaveRegister 216 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q v2|d [212, 224[212 MustHaveRegister 224 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d rax|q [222, 226[222 MustHaveRegister 226 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q rax|q [230, 239[230 MustHaveRegister 234 MustHaveRegister 238 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q -1 [232, 233[232 MustHaveRegister  "NoDefinitionFound"
  v9|q QWORD "[v9|q]" v9|q -1 [232, 233[232 MustHaveRegister  "NoDefinitionFound"
  v10|d DWORD "[v10|d]" v10|d v7|q [234, 236[234 MustHaveRegister 236 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[v11|q]" v11|q -1 [238, 239[238 MustHaveRegister  "NoDefinitionFound"
  v12|q QWORD "[v12|q]" v12|q -1 [238, 239[238 MustHaveRegister  "NoDefinitionFound"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[220, 222[[228, 230[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v3|d [0, 1[[218, 221[[228, 229[ "NoSpillStore"
  rdx|- fixed "[rdx|-]" rdx|- v4|d [0, 30[[216, 221[[226, 229[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 24[[220, 221[[228, 229[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v3|d [0, 28[[214, 221[[224, 229[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [28, 40[28 MustHaveRegister 32 MustHaveRegister  "OneSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|- [30, 36[30 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rcx|d]" v2|d -1 [32, 40[[68, 212[32 MustHaveRegister 34 MustHaveRegister 212 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d -1 [34, 40[[68, 218[34 MustHaveRegister 36 ShouldHaveRegister 214 ShouldHaveRegister 218 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[rdx|d]" v4|d v1|d [36, 40[[68, 216[36 MustHaveRegister 38 ShouldHaveRegister 216 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[rcx|q]" v5|q v2|d [212, 217[212 MustHaveRegister  "OneSpillStore"
  v6|d DWORD "[rax|d]" v6|d rax|q [222, 226[222 MustHaveRegister 226 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q rax|q [230, 239[230 MustHaveRegister 234 MustHaveRegister 238 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[r10|q]" v8|q -1 [232, 233[232 MustHaveRegister  "NoDefinitionFound"
  v9|q QWORD "[r11|q]" v9|q -1 [232, 233[232 MustHaveRegister  "NoDefinitionFound"
  v10|d DWORD "[r10|d]" v10|d v7|q [234, 236[234 MustHaveRegister 236 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[r10|q]" v11|q -1 [238, 239[238 MustHaveRegister  "NoDefinitionFound"
  v12|q QWORD "[r11|q]" v12|q -1 [238, 239[238 MustHaveRegister  "NoDefinitionFound"
  v13|q QWORD "[vstack:1|q]" v0|q v0|q [68, 213[ "OneSpillStore"
  v14|q QWORD "[vstack:1|q]" v0|q v0|q [213, 219[ "OneSpillStore"
  v15|q QWORD "[vstack:0|q]" v5|q v5|q [217, 224[224 ShouldHaveRegister  "OneSpillStore"
  v16|q QWORD "[vstack:1|q]" v0|q v0|q [219, 231[ "OneSpillStore"
  v17|q QWORD "[rsi|q]" v0|q v0|q [231, 239[232 MustHaveRegister 236 MustHaveRegister 238 MustHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@60b3ad63 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction v4|DWORD = SUB (x: v1|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.9936006007051323 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607124778135457886
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4574028027217301760
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7d07c705 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction rsi|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr  216  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  218  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = STACKMOVE (input: v14|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
stack: v0|QWORD[.] v5|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:22] <|@ <|@
      nr  222  <|@ instruction v6|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction rdx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
stack: v0|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25] <|@ <|@
      nr  230  <|@ instruction v7|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: v16|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  232  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v8|QWORD, temp2: v9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@396cea7e <|@ <|@
      nr  234  <|@ instruction v10|DWORD[_] = COMPRESSPOINTER (input: v7|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7d07c705 encoding: base: 0 shift: 3 <|@ <|@
      nr  236  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v10|DWORD[_]) size: DWORD <|@ <|@
      nr  238  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v7|QWORD[.]) {temp: v11|QWORD, temp2: v12|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@396cea7e <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #7          // buf:byte[]
     4: arraylength   
     5: istore_2      
     6: iload_1       
     7: iload_2       
     8: isub          
     9: istore_3      
    10: iload_3       
    11: ifle          31
    14: aload_0       
    15: aload_0       
    16: getfield      #7          // buf:byte[]
    19: iload_2       
    20: iload_3       
    21: iload_2       
    22: invokestatic  #8          // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    25: invokestatic  #9          // java.util.Arrays.copyOf:(byte[], int)byte[]
    28: putfield      #7          // buf:byte[]
    31: return        
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[220, 222[[228, 230[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v3|d [0, 1[[218, 221[[228, 229[ "NoSpillStore"
  rdx|- fixed "[rdx|-]" rdx|- v4|d [0, 30[[216, 221[[226, 229[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 24[[220, 221[[228, 229[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v3|d [0, 28[[214, 221[[224, 229[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [28, 40[28 MustHaveRegister 32 MustHaveRegister  "OneSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|- [30, 36[30 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rcx|d]" v2|d -1 [32, 40[[68, 212[32 MustHaveRegister 34 MustHaveRegister 212 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d -1 [34, 40[[68, 218[34 MustHaveRegister 36 ShouldHaveRegister 214 ShouldHaveRegister 218 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[rdx|d]" v4|d v1|d [36, 40[[68, 216[36 MustHaveRegister 38 ShouldHaveRegister 216 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[rcx|q]" v5|q v2|d [212, 217[212 MustHaveRegister  "OneSpillStore"
  v6|d DWORD "[rax|d]" v6|d rax|q [222, 226[222 MustHaveRegister 226 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q rax|q [230, 239[230 MustHaveRegister 234 MustHaveRegister 238 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[r10|q]" v8|q -1 [232, 233[232 MustHaveRegister  "NoDefinitionFound"
  v9|q QWORD "[r11|q]" v9|q -1 [232, 233[232 MustHaveRegister  "NoDefinitionFound"
  v10|d DWORD "[r10|d]" v10|d v7|q [234, 236[234 MustHaveRegister 236 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[r10|q]" v11|q -1 [238, 239[238 MustHaveRegister  "NoDefinitionFound"
  v12|q QWORD "[r11|q]" v12|q -1 [238, 239[238 MustHaveRegister  "NoDefinitionFound"
  v13|q QWORD "[vstack:1|q]" v0|q v0|q [68, 213[ "OneSpillStore"
  v14|q QWORD "[vstack:1|q]" v0|q v0|q [213, 219[ "OneSpillStore"
  v15|q QWORD "[vstack:0|q]" v5|q v5|q [217, 224[224 ShouldHaveRegister  "OneSpillStore"
  v16|q QWORD "[vstack:1|q]" v0|q v0|q [219, 231[ "OneSpillStore"
  v17|q QWORD "[rsi|q]" v0|q v0|q [231, 239[232 MustHaveRegister 236 MustHaveRegister 238 MustHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@60b3ad63 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction v4|DWORD = SUB (x: v1|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.9936006007051323 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607124778135457886
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4574028027217301760
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7d07c705 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction rsi|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr  216  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  218  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = STACKMOVE (input: v14|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
stack: v0|QWORD[.] v5|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:22] <|@ <|@
      nr  222  <|@ instruction v6|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction rdx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
stack: v0|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25] <|@ <|@
      nr  230  <|@ instruction v7|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: v16|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  232  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v8|QWORD, temp2: v9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@396cea7e <|@ <|@
      nr  234  <|@ instruction v10|DWORD[_] = COMPRESSPOINTER (input: v7|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7d07c705 encoding: base: 0 shift: 3 <|@ <|@
      nr  236  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v10|DWORD[_]) size: DWORD <|@ <|@
      nr  238  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v7|QWORD[.]) {temp: v11|QWORD, temp2: v12|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@396cea7e <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #7          // buf:byte[]
     4: arraylength   
     5: istore_2      
     6: iload_1       
     7: iload_2       
     8: isub          
     9: istore_3      
    10: iload_3       
    11: ifle          31
    14: aload_0       
    15: aload_0       
    16: getfield      #7          // buf:byte[]
    19: iload_2       
    20: iload_3       
    21: iload_2       
    22: invokestatic  #8          // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    25: invokestatic  #9          // java.util.Arrays.copyOf:(byte[], int)byte[]
    28: putfield      #7          // buf:byte[]
    31: return        
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[220, 222[[228, 230[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v3|d [0, 1[[218, 221[[228, 229[ "NoSpillStore"
  rdx|- fixed "[rdx|-]" rdx|- v4|d [0, 30[[216, 221[[226, 229[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 24[[220, 221[[228, 229[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v3|d [0, 28[[214, 221[[224, 229[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[220, 221[[228, 229[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [28, 40[28 MustHaveRegister 32 MustHaveRegister  "OneSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|- [30, 36[30 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rcx|d]" v2|d -1 [32, 40[[68, 212[32 MustHaveRegister 34 MustHaveRegister 212 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d -1 [34, 40[[68, 218[34 MustHaveRegister 36 ShouldHaveRegister 214 ShouldHaveRegister 218 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[rdx|d]" v4|d v1|d [36, 40[[68, 216[36 MustHaveRegister 38 ShouldHaveRegister 216 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[rcx|q]" v5|q v2|d [212, 217[212 MustHaveRegister  "OneSpillStore"
  v6|d DWORD "[rax|d]" v6|d rax|q [222, 226[222 MustHaveRegister 226 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q rax|q [230, 239[230 MustHaveRegister 234 MustHaveRegister 238 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[r10|q]" v8|q -1 [232, 233[232 MustHaveRegister  "NoDefinitionFound"
  v9|q QWORD "[r11|q]" v9|q -1 [232, 233[232 MustHaveRegister  "NoDefinitionFound"
  v10|d DWORD "[r10|d]" v10|d v7|q [234, 236[234 MustHaveRegister 236 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[r10|q]" v11|q -1 [238, 239[238 MustHaveRegister  "NoDefinitionFound"
  v12|q QWORD "[r11|q]" v12|q -1 [238, 239[238 MustHaveRegister  "NoDefinitionFound"
  v13|q QWORD "[vstack:1|q]" v0|q v0|q [68, 213[ "OneSpillStore"
  v14|q QWORD "[vstack:1|q]" v0|q v0|q [213, 219[ "OneSpillStore"
  v15|q QWORD "[vstack:0|q]" v5|q v5|q [217, 224[224 ShouldHaveRegister  "OneSpillStore"
  v16|q QWORD "[vstack:1|q]" v0|q v0|q [219, 231[ "OneSpillStore"
  v17|q QWORD "[rsi|q]" v0|q v0|q [231, 239[232 MustHaveRegister 236 MustHaveRegister 238 MustHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@60b3ad63 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction v4|DWORD = SUB (x: v1|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.9936006007051323 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607124778135457886
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4574028027217301760
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7d07c705 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction rsi|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr  216  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  218  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = STACKMOVE (input: v14|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
stack: v0|QWORD[.] v5|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:22] <|@ <|@
      nr  222  <|@ instruction v6|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction rdx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
stack: v0|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25] <|@ <|@
      nr  230  <|@ instruction v7|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: v16|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  232  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v8|QWORD, temp2: v9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@396cea7e <|@ <|@
      nr  234  <|@ instruction v10|DWORD[_] = COMPRESSPOINTER (input: v7|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7d07c705 encoding: base: 0 shift: 3 <|@ <|@
      nr  236  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v10|DWORD[_]) size: DWORD <|@ <|@
      nr  238  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v7|QWORD[.]) {temp: v11|QWORD, temp2: v12|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@396cea7e <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #7          // buf:byte[]
     4: arraylength   
     5: istore_2      
     6: iload_1       
     7: iload_2       
     8: isub          
     9: istore_3      
    10: iload_3       
    11: ifle          31
    14: aload_0       
    15: aload_0       
    16: getfield      #7          // buf:byte[]
    19: iload_2       
    20: iload_3       
    21: iload_2       
    22: invokestatic  #8          // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    25: invokestatic  #9          // java.util.Arrays.copyOf:(byte[], int)byte[]
    28: putfield      #7          // buf:byte[]
    31: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@60b3ad63 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction v4|DWORD = SUB (x: v1|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.9936006007051323 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607124778135457886
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4574028027217301760
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7d07c705 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction rsi|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr  216  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  218  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = STACKMOVE (input: v14|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
stack: v0|QWORD[.] v5|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:22] <|@ <|@
      nr  222  <|@ instruction v6|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction rdx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
stack: v0|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25] <|@ <|@
      nr  230  <|@ instruction v7|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: v16|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  232  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v8|QWORD, temp2: v9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@396cea7e <|@ <|@
      nr  234  <|@ instruction v10|DWORD[_] = COMPRESSPOINTER (input: v7|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7d07c705 encoding: base: 0 shift: 3 <|@ <|@
      nr  236  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v10|DWORD[_]) size: DWORD <|@ <|@
      nr  238  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v7|QWORD[.]) {temp: v11|QWORD, temp2: v12|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@396cea7e <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #7          // buf:byte[]
     4: arraylength   
     5: istore_2      
     6: iload_1       
     7: iload_2       
     8: isub          
     9: istore_3      
    10: iload_3       
    11: ifle          31
    14: aload_0       
    15: aload_0       
    16: getfield      #7          // buf:byte[]
    19: iload_2       
    20: iload_3       
    21: iload_2       
    22: invokestatic  #8          // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    25: invokestatic  #9          // java.util.Arrays.copyOf:(byte[], int)byte[]
    28: putfield      #7          // buf:byte[]
    31: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@60b3ad63 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9936006007051323 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607124778135457886
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4574028027217301760
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7d07c705 encoding: base: 0 shift: 3 <|@ <|@
      nr  214  <|@ instruction rsi|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  218  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
stack: vstack:1|QWORD[.] vstack:0|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:22] <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
stack: vstack:1|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  232  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 16], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@396cea7e <|@ <|@
      nr  234  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7d07c705 encoding: base: 0 shift: 3 <|@ <|@
      nr  236  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  238  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@396cea7e <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #7          // buf:byte[]
     4: arraylength   
     5: istore_2      
     6: iload_1       
     7: iload_2       
     8: isub          
     9: istore_3      
    10: iload_3       
    11: ifle          31
    14: aload_0       
    15: aload_0       
    16: getfield      #7          // buf:byte[]
    19: iload_2       
    20: iload_3       
    21: iload_2       
    22: invokestatic  #8          // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    25: invokestatic  #9          // java.util.Arrays.copyOf:(byte[], int)byte[]
    28: putfield      #7          // buf:byte[]
    31: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@60b3ad63 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9936006007051323 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607124778135457886
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4574028027217301760
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7d07c705 encoding: base: 0 shift: 3 <|@ <|@
      nr  214  <|@ instruction rsi|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  218  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
stack: vstack:1|QWORD[.] vstack:0|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:22] <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
stack: vstack:1|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  232  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 16], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@396cea7e <|@ <|@
      nr  234  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7d07c705 encoding: base: 0 shift: 3 <|@ <|@
      nr  236  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  238  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@396cea7e <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #7          // buf:byte[]
     4: arraylength   
     5: istore_2      
     6: iload_1       
     7: iload_2       
     8: isub          
     9: istore_3      
    10: iload_3       
    11: ifle          31
    14: aload_0       
    15: aload_0       
    16: getfield      #7          // buf:byte[]
    19: iload_2       
    20: iload_3       
    21: iload_2       
    22: invokestatic  #8          // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    25: invokestatic  #9          // java.util.Arrays.copyOf:(byte[], int)byte[]
    28: putfield      #7          // buf:byte[]
    31: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@60b3ad63 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9936006007051323 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607124778135457886
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4574028027217301760
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction vstack:1|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7d07c705 encoding: base: 0 shift: 3 <|@ <|@
      nr  194  <|@ instruction rsi|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction vstack:0|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  198  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
stack: vstack:1|QWORD[.] vstack:0|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:22] <|@ <|@
      nr  202  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
stack: vstack:1|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25] <|@ <|@
      nr  208  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  210  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 16], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@396cea7e <|@ <|@
      nr  212  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7d07c705 encoding: base: 0 shift: 3 <|@ <|@
      nr  214  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  216  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@396cea7e <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #7          // buf:byte[]
     4: arraylength   
     5: istore_2      
     6: iload_1       
     7: iload_2       
     8: isub          
     9: istore_3      
    10: iload_3       
    11: ifle          31
    14: aload_0       
    15: aload_0       
    16: getfield      #7          // buf:byte[]
    19: iload_2       
    20: iload_3       
    21: iload_2       
    22: invokestatic  #8          // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    25: invokestatic  #9          // java.util.Arrays.copyOf:(byte[], int)byte[]
    28: putfield      #7          // buf:byte[]
    31: return        
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|q QWORD "[vstack:0|q]" vstack:0|q -1 [196, 202[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[vstack:1|q]" vstack:1|q -1 [48, 208[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|q QWORD "[stack:40|q]" vstack:0|q -1 [196, 202[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[stack:32|q]" vstack:1|q -1 [48, 208[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@60b3ad63 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9936006007051323 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607124778135457886
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4574028027217301760
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7d07c705 encoding: base: 0 shift: 3 <|@ <|@
      nr  194  <|@ instruction rsi|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction stack:40|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  198  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
stack: stack:32|QWORD[.] stack:40|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:22] <|@ <|@
      nr  202  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
stack: stack:32|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25] <|@ <|@
      nr  208  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  210  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 16], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@396cea7e <|@ <|@
      nr  212  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7d07c705 encoding: base: 0 shift: 3 <|@ <|@
      nr  214  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  216  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@396cea7e <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #7          // buf:byte[]
     4: arraylength   
     5: istore_2      
     6: iload_1       
     7: iload_2       
     8: isub          
     9: istore_3      
    10: iload_3       
    11: ifle          31
    14: aload_0       
    15: aload_0       
    16: getfield      #7          // buf:byte[]
    19: iload_2       
    20: iload_3       
    21: iload_2       
    22: invokestatic  #8          // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    25: invokestatic  #9          // java.util.Arrays.copyOf:(byte[], int)byte[]
    28: putfield      #7          // buf:byte[]
    31: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@60b3ad63 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9936006007051323 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607124778135457886
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4574028027217301760
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7d07c705 encoding: base: 0 shift: 3 <|@ <|@
      nr  194  <|@ instruction rsi|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction stack:40|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  198  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
stack: stack:32|QWORD[.] stack:40|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:22] <|@ <|@
      nr  202  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
stack: stack:32|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25] <|@ <|@
      nr  208  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  210  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 16], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@396cea7e <|@ <|@
      nr  212  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7d07c705 encoding: base: 0 shift: 3 <|@ <|@
      nr  214  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  216  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@396cea7e <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #7          // buf:byte[]
     4: arraylength   
     5: istore_2      
     6: iload_1       
     7: iload_2       
     8: isub          
     9: istore_3      
    10: iload_3       
    11: ifle          31
    14: aload_0       
    15: aload_0       
    16: getfield      #7          // buf:byte[]
    19: iload_2       
    20: iload_3       
    21: iload_2       
    22: invokestatic  #8          // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    25: invokestatic  #9          // java.util.Arrays.copyOf:(byte[], int)byte[]
    28: putfield      #7          // buf:byte[]
    31: return        
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@60b3ad63 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9936006007051323 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607124778135457886
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4574028027217301760
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7d07c705 encoding: base: 0 shift: 3 <|@ <|@
      nr  194  <|@ instruction rsi|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction stack:40|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  198  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
stack: stack:32|QWORD[.] stack:40|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:22] <|@ <|@
      nr  202  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
stack: stack:32|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25] <|@ <|@
      nr  208  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  210  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 16], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@396cea7e <|@ <|@
      nr  212  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7d07c705 encoding: base: 0 shift: 3 <|@ <|@
      nr  214  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  216  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@396cea7e <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #7          // buf:byte[]
     4: arraylength   
     5: istore_2      
     6: iload_1       
     7: iload_2       
     8: isub          
     9: istore_3      
    10: iload_3       
    11: ifle          31
    14: aload_0       
    15: aload_0       
    16: getfield      #7          // buf:byte[]
    19: iload_2       
    20: iload_3       
    21: iload_2       
    22: invokestatic  #8          // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    25: invokestatic  #9          // java.util.Arrays.copyOf:(byte[], int)byte[]
    28: putfield      #7          // buf:byte[]
    31: return        
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@60b3ad63 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9936006007051323 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607124778135457886
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4574028027217301760
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7d07c705 encoding: base: 0 shift: 3 <|@ <|@
      nr  194  <|@ instruction rsi|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction stack:40|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  198  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
stack: stack:32|QWORD[.] stack:40|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:22] <|@ <|@
      nr  202  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
stack: stack:32|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25] <|@ <|@
      nr  208  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  210  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 16], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@396cea7e <|@ <|@
      nr  212  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7d07c705 encoding: base: 0 shift: 3 <|@ <|@
      nr  214  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  216  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@396cea7e <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #7          // buf:byte[]
     4: arraylength   
     5: istore_2      
     6: iload_1       
     7: iload_2       
     8: isub          
     9: istore_3      
    10: iload_3       
    11: ifle          31
    14: aload_0       
    15: aload_0       
    16: getfield      #7          // buf:byte[]
    19: iload_2       
    20: iload_3       
    21: iload_2       
    22: invokestatic  #8          // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    25: invokestatic  #9          // java.util.Arrays.copyOf:(byte[], int)byte[]
    28: putfield      #7          // buf:byte[]
    31: return        
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@60b3ad63 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9936006007051323 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607124778135457886
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4574028027217301760
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7d07c705 encoding: base: 0 shift: 3 <|@ <|@
      nr  194  <|@ instruction rsi|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction stack:40|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  198  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
stack: stack:32|QWORD[.] stack:40|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:22] <|@ <|@
      nr  202  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
stack: stack:32|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25] <|@ <|@
      nr  208  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  210  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 16], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@396cea7e <|@ <|@
      nr  212  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7d07c705 encoding: base: 0 shift: 3 <|@ <|@
      nr  214  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  216  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@396cea7e <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #7          // buf:byte[]
     4: arraylength   
     5: istore_2      
     6: iload_1       
     7: iload_2       
     8: isub          
     9: istore_3      
    10: iload_3       
    11: ifle          31
    14: aload_0       
    15: aload_0       
    16: getfield      #7          // buf:byte[]
    19: iload_2       
    20: iload_3       
    21: iload_2       
    22: invokestatic  #8          // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    25: invokestatic  #9          // java.util.Arrays.copyOf:(byte[], int)byte[]
    28: putfield      #7          // buf:byte[]
    31: return        
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@60b3ad63 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9936006007051323 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607124778135457886
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4574028027217301760
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7d07c705 encoding: base: 0 shift: 3 <|@ <|@
      nr  194  <|@ instruction rsi|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction stack:40|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  198  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
stack: stack:32|QWORD[.] stack:40|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:22] <|@ <|@
      nr  202  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
stack: stack:32|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25] <|@ <|@
      nr  208  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  210  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 16], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@396cea7e <|@ <|@
      nr  212  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7d07c705 encoding: base: 0 shift: 3 <|@ <|@
      nr  214  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  216  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@396cea7e <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #7          // buf:byte[]
     4: arraylength   
     5: istore_2      
     6: iload_1       
     7: iload_2       
     8: isub          
     9: istore_3      
    10: iload_3       
    11: ifle          31
    14: aload_0       
    15: aload_0       
    16: getfield      #7          // buf:byte[]
    19: iload_2       
    20: iload_3       
    21: iload_2       
    22: invokestatic  #8          // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    25: invokestatic  #9          // java.util.Arrays.copyOf:(byte[], int)byte[]
    28: putfield      #7          // buf:byte[]
    31: return        
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@60b3ad63 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9936006007051323 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607124778135457886
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4574028027217301760
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7d07c705 encoding: base: 0 shift: 3 <|@ <|@
      nr  194  <|@ instruction rsi|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction stack:40|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  198  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
stack: stack:32|QWORD[.] stack:40|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:22] <|@ <|@
      nr  202  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
stack: stack:32|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25] <|@ <|@
      nr  208  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  210  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 16], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@396cea7e <|@ <|@
      nr  212  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7d07c705 encoding: base: 0 shift: 3 <|@ <|@
      nr  214  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  216  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@396cea7e <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #7          // buf:byte[]
     4: arraylength   
     5: istore_2      
     6: iload_1       
     7: iload_2       
     8: isub          
     9: istore_3      
    10: iload_3       
    11: ifle          31
    14: aload_0       
    15: aload_0       
    16: getfield      #7          // buf:byte[]
    19: iload_2       
    20: iload_3       
    21: iload_2       
    22: invokestatic  #8          // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    25: invokestatic  #9          // java.util.Arrays.copyOf:(byte[], int)byte[]
    28: putfield      #7          // buf:byte[]
    31: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@60b3ad63 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9936006007051323 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607124778135457886
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4574028027217301760
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7d07c705 encoding: base: 0 shift: 3 <|@ <|@
      nr  194  <|@ instruction rsi|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction stack:40|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  198  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
stack: stack:32|QWORD[.] stack:40|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:22] <|@ <|@
      nr  202  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
stack: stack:32|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25] <|@ <|@
      nr  208  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  210  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 16], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@396cea7e <|@ <|@
      nr  212  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7d07c705 encoding: base: 0 shift: 3 <|@ <|@
      nr  214  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  216  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@396cea7e <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #7          // buf:byte[]
     4: arraylength   
     5: istore_2      
     6: iload_1       
     7: iload_2       
     8: isub          
     9: istore_3      
    10: iload_3       
    11: ifle          31
    14: aload_0       
    15: aload_0       
    16: getfield      #7          // buf:byte[]
    19: iload_2       
    20: iload_3       
    21: iload_2       
    22: invokestatic  #8          // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    25: invokestatic  #9          // java.util.Arrays.copyOf:(byte[], int)byte[]
    28: putfield      #7          // buf:byte[]
    31: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@60b3ad63 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9936006007051323 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607124778135457886
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4574028027217301760
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7d07c705 encoding: base: 0 shift: 3 <|@ <|@
      nr  194  <|@ instruction rsi|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction stack:40|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  198  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
stack: stack:32|QWORD[.] stack:40|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:22] <|@ <|@
      nr  202  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
stack: stack:32|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25] <|@ <|@
      nr  208  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  210  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 16], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@396cea7e <|@ <|@
      nr  212  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7d07c705 encoding: base: 0 shift: 3 <|@ <|@
      nr  214  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  216  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@396cea7e <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #7          // buf:byte[]
     4: arraylength   
     5: istore_2      
     6: iload_1       
     7: iload_2       
     8: isub          
     9: istore_3      
    10: iload_3       
    11: ifle          31
    14: aload_0       
    15: aload_0       
    16: getfield      #7          // buf:byte[]
    19: iload_2       
    20: iload_3       
    21: iload_2       
    22: invokestatic  #8          // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    25: invokestatic  #9          // java.util.Arrays.copyOf:(byte[], int)byte[]
    28: putfield      #7          // buf:byte[]
    31: return        
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@60b3ad63 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9936006007051323 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607124778135457886
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4574028027217301760
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7d07c705 encoding: base: 0 shift: 3 <|@ <|@
      nr  194  <|@ instruction rsi|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction stack:40|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  198  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
stack: stack:32|QWORD[.] stack:40|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:22] <|@ <|@
      nr  202  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ st <@st|@reference-map: [stack:16]
live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
stack: stack:32|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25] <|@ <|@
      nr  208  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  210  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 16], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@396cea7e <|@ <|@
      nr  212  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7d07c705 encoding: base: 0 shift: 3 <|@ <|@
      nr  214  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  216  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@396cea7e <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #7          // buf:byte[]
     4: arraylength   
     5: istore_2      
     6: iload_1       
     7: iload_2       
     8: isub          
     9: istore_3      
    10: iload_3       
    11: ifle          31
    14: aload_0       
    15: aload_0       
    16: getfield      #7          // buf:byte[]
    19: iload_2       
    20: iload_3       
    21: iload_2       
    22: invokestatic  #8          // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    25: invokestatic  #9          // java.util.Arrays.copyOf:(byte[], int)byte[]
    28: putfield      #7          // buf:byte[]
    31: return        
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@60b3ad63 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9936006007051323 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607124778135457886
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4574028027217301760
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7d07c705 encoding: base: 0 shift: 3 <|@ <|@
      nr  194  <|@ instruction rsi|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction stack:40|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  198  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
stack: stack:32|QWORD[.] stack:40|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:22] <|@ <|@
      nr  202  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ st <@st|@reference-map: [stack:16]
live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
stack: stack:32|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25] <|@ <|@
      nr  208  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  210  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 16], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@396cea7e <|@ <|@
      nr  212  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7d07c705 encoding: base: 0 shift: 3 <|@ <|@
      nr  214  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  216  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@396cea7e <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #7          // buf:byte[]
     4: arraylength   
     5: istore_2      
     6: iload_1       
     7: iload_2       
     8: isub          
     9: istore_3      
    10: iload_3       
    11: ifle          31
    14: aload_0       
    15: aload_0       
    16: getfield      #7          // buf:byte[]
    19: iload_2       
    20: iload_3       
    21: iload_2       
    22: invokestatic  #8          // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    25: invokestatic  #9          // java.util.Arrays.copyOf:(byte[], int)byte[]
    28: putfield      #7          // buf:byte[]
    31: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec289041817f20000000000f8572010000909090909090909090909048896c24208b4e10448b14cd0c000000412bd283fa010f8d2100000090909090909090909090488b6c24204883c428493ba7500400000f873b010000c34889742410909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909048c1e103418bf248894c2408418bca6690e8000000000f1f840000000000488b7424088bd0e8000000000f1f840000000000488b74241041807f40000f842e000000448b5e1049c1e3034d85db0f841d0000004d8b57284983fa000f84a10000004983ea084d8957284d0357384d891a4c8bd049c1ea03448956104c8bd64c33d049c1ea160f844e0000004885c00f84450000004c8bd649c1ea0949bb00e0368d787f00004d03d341803a02742bf08304240041803a00742041c602004d8b5f484d85db0f84470000004983eb084d895f484d035f584d8913e9b8feffff48896c2420e800000000e97ffefffff4488d0db1feffff49898f68040000e931fefffff44c891c24e800000000e960fffffff44c891424e800000000ebbdf441c78784040000f5deffff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 74 26 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@60b3ad63 slotKind: QWORD  <||@
  Comment 74 28 rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 77 30 r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 77 [rcx:0, rsi:0]at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-  |-   <||@
  Comment 77 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 85 32 rdx|DWORD = SUB (x: rdx|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 88 34 CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9936006007051323 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null  <||@
  Comment 97 block B1 null  <||@
  Comment 97 36 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 97 38 NOP  <||@
  Comment 98 40 NOP  <||@
  Comment 99 42 NOP  <||@
  Comment 100 44 JUMP ~outgoingValues: [] destination: B1 -> B3  <||@
  Comment 100 block B3 null  <||@
  Comment 100 220 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 100 222 NOP  <||@
  Comment 101 224 NOP  <||@
  Comment 102 226 NOP  <||@
  Comment 103 228 NOP  <||@
  Comment 104 230 NOP  <||@
  Comment 105 232 NOP  <||@
  Comment 106 234 NOP  <||@
  Comment 107 236 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 116 POLL_RETURN_FAR  <||@
  Comment 130 block B2 null  <||@
  Comment 130 46 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 130 48 stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 135 50 NOP  <||@
  Comment 136 52 NOP  <||@
  Comment 137 54 NOP  <||@
  Comment 138 56 NOP  <||@
  Comment 139 58 NOP  <||@
  Comment 140 60 NOP  <||@
  Comment 141 62 NOP  <||@
  Comment 142 64 NOP  <||@
  Comment 143 66 NOP  <||@
  Comment 144 68 NOP  <||@
  Comment 145 70 NOP  <||@
  Comment 146 72 NOP  <||@
  Comment 147 74 NOP  <||@
  Comment 148 76 NOP  <||@
  Comment 149 78 NOP  <||@
  Comment 150 80 NOP  <||@
  Comment 151 82 NOP  <||@
  Comment 152 84 NOP  <||@
  Comment 153 86 NOP  <||@
  Comment 154 88 NOP  <||@
  Comment 155 90 NOP  <||@
  Comment 156 92 NOP  <||@
  Comment 157 94 NOP  <||@
  Comment 158 96 NOP  <||@
  Comment 159 98 NOP  <||@
  Comment 160 100 NOP  <||@
  Comment 161 102 NOP  <||@
  Comment 162 104 NOP  <||@
  Comment 163 106 NOP  <||@
  Comment 164 108 NOP  <||@
  Comment 165 110 NOP  <||@
  Comment 166 112 NOP  <||@
  Comment 167 114 NOP  <||@
  Comment 168 116 NOP  <||@
  Comment 169 118 NOP  <||@
  Comment 170 120 NOP  <||@
  Comment 171 122 NOP  <||@
  Comment 172 124 NOP  <||@
  Comment 173 126 NOP  <||@
  Comment 174 128 NOP  <||@
  Comment 175 130 NOP  <||@
  Comment 176 132 NOP  <||@
  Comment 177 134 NOP  <||@
  Comment 178 136 NOP  <||@
  Comment 179 138 NOP  <||@
  Comment 180 140 NOP  <||@
  Comment 181 142 NOP  <||@
  Comment 182 144 NOP  <||@
  Comment 183 146 NOP  <||@
  Comment 184 148 NOP  <||@
  Comment 185 150 NOP  <||@
  Comment 186 152 NOP  <||@
  Comment 187 154 NOP  <||@
  Comment 188 156 NOP  <||@
  Comment 189 158 NOP  <||@
  Comment 190 160 NOP  <||@
  Comment 191 162 NOP  <||@
  Comment 192 164 NOP  <||@
  Comment 193 166 NOP  <||@
  Comment 194 168 NOP  <||@
  Comment 195 170 NOP  <||@
  Comment 196 172 NOP  <||@
  Comment 197 174 NOP  <||@
  Comment 198 176 NOP  <||@
  Comment 199 178 NOP  <||@
  Comment 200 180 NOP  <||@
  Comment 201 182 NOP  <||@
  Comment 202 184 NOP  <||@
  Comment 203 186 NOP  <||@
  Comment 204 188 NOP  <||@
  Comment 205 190 NOP  <||@
  Comment 206 192 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7d07c705 encoding: base: 0 shift: 3  <||@
  Comment 210 194 rsi|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 213 196 stack:40|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 218 198 rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 221 200 rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:22]  <||@
  Comment 223 {HotSpotMethod<ArraysSupport.newLength(int, int, int)>}  <||@
  Comment 223 INVOKESTATIC  <||@
  Comment 228 [stack:8, stack:16]at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3 
     locals:  |-                  |-                  |-  |- 
     stack:   |stack:32|QWORD[.]  |stack:40|QWORD[.]  |   |    <||@
  Comment 236 202 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 241 204 rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 243 206 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25]  <||@
  Comment 243 {HotSpotMethod<Arrays.copyOf(byte[], int)>}  <||@
  Comment 243 INVOKESTATIC  <||@
  Comment 248 [stack:16]at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |-                  |-  |-  |- 
     stack:   |stack:32|QWORD[.]  |   |   |    <||@
  Comment 256 208 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 261 210 AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 16], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@396cea7e  <||@
  Comment 318 212 r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7d07c705 encoding: base: 0 shift: 3  <||@
  Comment 325 214 MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD  <||@
  Comment 329 216 AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@396cea7e  <||@
  Comment 423 218 JUMP ~outgoingValues: [] destination: B2 -> B3  <||@
  Comment 433 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 458 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 468 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 483 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 513 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 518 [rcx:0, rsi:0]at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-  |-   <||@
  Comment 526 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 526 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 532 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 532 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-8277[java.io.ByteArrayOutputStream.ensureCapacity(int)]"
  method "HotSpotCompilation-8277[java.io.ByteArrayOutputStream.ensureCapacity(int)]"
  date 1724269754916
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789af02320 448b560849bc0000002b787f00004d03d44d33e4493bc20f85432d88fe66669089842400c0feff4883ec289041817f20000000000f8572010000909090909090909090909048896c24208b4e10448b14cd0c000000412bd283fa010f8d2100000090909090909090909090488b6c24204883c428493ba7500400000f873b010000c34889742410909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909048c1e103418bf248894c2408418bca6690e87c3588fe0f1f840074020001488b7424088bd0e8683588fe0f1f840088020002488b74241041807f40000f842e000000448b5e1049c1e3034d85db0f841d0000004d8b57284983fa000f84a10000004983ea084d8957284d0357384d891a4c8bd049c1ea03448956104c8bd64c33d049c1ea160f844e0000004885c00f84450000004c8bd649c1ea0949bb00e0368d787f00004d03d341803a02742bf08304240041803a00742041c602004d8b5f484d85db0f84470000004983eb084d895f484d035f584d8913e9b8feffff48896c2420e84a8d86fee97ffefffff4488d0db1feffff49898f68040000e9119b88fef44c891c24e8075d9cfee960fffffff44c891424e8787e9cfeebbdf441c78784040000f5deffff49c7879004000000000000e8548c88fe0f1f840000000000e8cd2d9cfef4e8e78988fef4f4f4f4f4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 74 26 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@60b3ad63 slotKind: QWORD  <||@
  Comment 74 28 rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 77 30 r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 77 [rcx:0, rsi:0]at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-  |-   <||@
  Comment 77 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 85 32 rdx|DWORD = SUB (x: rdx|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 88 34 CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9936006007051323 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null  <||@
  Comment 97 block B1 null  <||@
  Comment 97 36 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 97 38 NOP  <||@
  Comment 98 40 NOP  <||@
  Comment 99 42 NOP  <||@
  Comment 100 44 JUMP ~outgoingValues: [] destination: B1 -> B3  <||@
  Comment 100 block B3 null  <||@
  Comment 100 220 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 100 222 NOP  <||@
  Comment 101 224 NOP  <||@
  Comment 102 226 NOP  <||@
  Comment 103 228 NOP  <||@
  Comment 104 230 NOP  <||@
  Comment 105 232 NOP  <||@
  Comment 106 234 NOP  <||@
  Comment 107 236 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 116 POLL_RETURN_FAR  <||@
  Comment 130 block B2 null  <||@
  Comment 130 46 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 130 48 stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 135 50 NOP  <||@
  Comment 136 52 NOP  <||@
  Comment 137 54 NOP  <||@
  Comment 138 56 NOP  <||@
  Comment 139 58 NOP  <||@
  Comment 140 60 NOP  <||@
  Comment 141 62 NOP  <||@
  Comment 142 64 NOP  <||@
  Comment 143 66 NOP  <||@
  Comment 144 68 NOP  <||@
  Comment 145 70 NOP  <||@
  Comment 146 72 NOP  <||@
  Comment 147 74 NOP  <||@
  Comment 148 76 NOP  <||@
  Comment 149 78 NOP  <||@
  Comment 150 80 NOP  <||@
  Comment 151 82 NOP  <||@
  Comment 152 84 NOP  <||@
  Comment 153 86 NOP  <||@
  Comment 154 88 NOP  <||@
  Comment 155 90 NOP  <||@
  Comment 156 92 NOP  <||@
  Comment 157 94 NOP  <||@
  Comment 158 96 NOP  <||@
  Comment 159 98 NOP  <||@
  Comment 160 100 NOP  <||@
  Comment 161 102 NOP  <||@
  Comment 162 104 NOP  <||@
  Comment 163 106 NOP  <||@
  Comment 164 108 NOP  <||@
  Comment 165 110 NOP  <||@
  Comment 166 112 NOP  <||@
  Comment 167 114 NOP  <||@
  Comment 168 116 NOP  <||@
  Comment 169 118 NOP  <||@
  Comment 170 120 NOP  <||@
  Comment 171 122 NOP  <||@
  Comment 172 124 NOP  <||@
  Comment 173 126 NOP  <||@
  Comment 174 128 NOP  <||@
  Comment 175 130 NOP  <||@
  Comment 176 132 NOP  <||@
  Comment 177 134 NOP  <||@
  Comment 178 136 NOP  <||@
  Comment 179 138 NOP  <||@
  Comment 180 140 NOP  <||@
  Comment 181 142 NOP  <||@
  Comment 182 144 NOP  <||@
  Comment 183 146 NOP  <||@
  Comment 184 148 NOP  <||@
  Comment 185 150 NOP  <||@
  Comment 186 152 NOP  <||@
  Comment 187 154 NOP  <||@
  Comment 188 156 NOP  <||@
  Comment 189 158 NOP  <||@
  Comment 190 160 NOP  <||@
  Comment 191 162 NOP  <||@
  Comment 192 164 NOP  <||@
  Comment 193 166 NOP  <||@
  Comment 194 168 NOP  <||@
  Comment 195 170 NOP  <||@
  Comment 196 172 NOP  <||@
  Comment 197 174 NOP  <||@
  Comment 198 176 NOP  <||@
  Comment 199 178 NOP  <||@
  Comment 200 180 NOP  <||@
  Comment 201 182 NOP  <||@
  Comment 202 184 NOP  <||@
  Comment 203 186 NOP  <||@
  Comment 204 188 NOP  <||@
  Comment 205 190 NOP  <||@
  Comment 206 192 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7d07c705 encoding: base: 0 shift: 3  <||@
  Comment 210 194 rsi|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 213 196 stack:40|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 218 198 rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 221 200 rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:22]  <||@
  Comment 223 {HotSpotMethod<ArraysSupport.newLength(int, int, int)>}  <||@
  Comment 223 INVOKESTATIC  <||@
  Comment 228 [stack:8, stack:16]at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3 
     locals:  |-                  |-                  |-  |- 
     stack:   |stack:32|QWORD[.]  |stack:40|QWORD[.]  |   |    <||@
  Comment 236 202 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 241 204 rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 243 206 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25]  <||@
  Comment 243 {HotSpotMethod<Arrays.copyOf(byte[], int)>}  <||@
  Comment 243 INVOKESTATIC  <||@
  Comment 248 [stack:16]at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |-                  |-  |-  |- 
     stack:   |stack:32|QWORD[.]  |   |   |    <||@
  Comment 256 208 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 261 210 AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 16], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@396cea7e  <||@
  Comment 318 212 r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7d07c705 encoding: base: 0 shift: 3  <||@
  Comment 325 214 MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD  <||@
  Comment 329 216 AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@396cea7e  <||@
  Comment 423 218 JUMP ~outgoingValues: [] destination: B2 -> B3  <||@
  Comment 433 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 458 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 468 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 483 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 513 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 518 [rcx:0, rsi:0]at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-  |-   <||@
  Comment 526 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 526 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 532 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 532 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
